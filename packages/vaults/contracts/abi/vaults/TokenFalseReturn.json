{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_blocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "_setBlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/GSN/Context.sol",
    "15": "contracts/test/Token.sol",
    "2": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
    "3": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/ERC20.sol",
    "4": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/IERC20.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/test/Token.sol",
    "exportedSymbols": {
      "Token": [
        3806
      ],
      "TokenFalseReturn": [
        4079
      ],
      "TokenNoReturn": [
        4039
      ]
    },
    "id": 4080,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3728,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:15"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 3729,
        "nodeType": "ImportDirective",
        "scope": 4080,
        "sourceUnit": 5028,
        "src": "58:51:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.1.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3730,
        "nodeType": "ImportDirective",
        "scope": 4080,
        "sourceUnit": 5899,
        "src": "110:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3731,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5898,
              "src": "185:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5898",
                "typeString": "contract ERC20"
              }
            },
            "id": 3732,
            "nodeType": "InheritanceSpecifier",
            "src": "185:5:15"
          }
        ],
        "contractDependencies": [
          5105,
          5898,
          6165
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3806,
        "linearizedBaseContracts": [
          3806,
          5898,
          5105,
          6165
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "13f73eaa",
            "id": 3736,
            "mutability": "mutable",
            "name": "_blocked",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3806,
            "src": "197:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3735,
              "keyType": {
                "id": 3733,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "205:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "197:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3734,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "216:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3762,
              "nodeType": "Block",
              "src": "322:101:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3746,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3738,
                        "src": "347:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3745,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "332:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 3747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "332:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3748,
                  "nodeType": "ExpressionStatement",
                  "src": "332:25:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3750,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "373:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "373:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330303030",
                          "id": 3752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "385:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30000_by_1",
                            "typeString": "int_const 30000"
                          },
                          "value": "30000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 3753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "393:2:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3756,
                                "name": "_decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3738,
                                "src": "405:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 3755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "397:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3754,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "397:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "397:18:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "393:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "385:30:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3749,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5774,
                      "src": "367:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3761,
                  "nodeType": "ExpressionStatement",
                  "src": "367:49:15"
                }
              ]
            },
            "documentation": null,
            "id": 3763,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "796561726e2e66696e616e6365207465737420746f6b656e",
                    "id": 3741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "286:26:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0e982ae517291f9be4c0e760b53c58bc4f83908ebc9fa5b20aaf33bb4670e269",
                      "typeString": "literal_string \"yearn.finance test token\""
                    },
                    "value": "yearn.finance test token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54455354",
                    "id": 3742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "314:6:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  }
                ],
                "id": 3743,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3740,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5898,
                  "src": "280:5:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$5898_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "280:41:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3738,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3763,
                  "src": "256:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3737,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "255:17:15"
            },
            "returnParameters": {
              "id": 3744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:15"
            },
            "scope": 3806,
            "src": "244:179:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3776,
              "nodeType": "Block",
              "src": "491:39:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3770,
                        "name": "_blocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3736,
                        "src": "501:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3772,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3771,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3765,
                        "src": "510:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "501:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3773,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3767,
                      "src": "518:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "501:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3775,
                  "nodeType": "ExpressionStatement",
                  "src": "501:22:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a51c68d5",
            "id": 3777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBlocked",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3765,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3777,
                  "src": "450:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3777,
                  "src": "464:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "449:26:15"
            },
            "returnParameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:15"
            },
            "scope": 3806,
            "src": "429:101:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5897
            ],
            "body": {
              "id": 3804,
              "nodeType": "Block",
              "src": "671:145:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "689:13:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3789,
                            "name": "_blocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3736,
                            "src": "690:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3791,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3790,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3781,
                            "src": "699:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "690:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e207472616e7366657220726566757365642e205265636569766572206973206f6e20626c61636b6c697374",
                        "id": 3793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "704:50:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        },
                        "value": "Token transfer refused. Receiver is on blacklist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        }
                      ],
                      "id": 3788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "681:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:74:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3795,
                  "nodeType": "ExpressionStatement",
                  "src": "681:74:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3799,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "792:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3800,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3781,
                        "src": "798:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3801,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "802:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3796,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "765:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$3806",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 3798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5897,
                      "src": "765:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3803,
                  "nodeType": "ExpressionStatement",
                  "src": "765:44:15"
                }
              ]
            },
            "documentation": null,
            "id": 3805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3786,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 3785,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5898,
                  "src": "664:5:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5898",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "655:15:15"
            },
            "parameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3779,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "575:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "597:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "617:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "565:72:15"
            },
            "returnParameters": {
              "id": 3787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:15"
            },
            "scope": 3806,
            "src": "536:280:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4080,
        "src": "167:651:15"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4039,
        "linearizedBaseContracts": [
          4039
        ],
        "name": "TokenNoReturn",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3809,
            "libraryName": {
              "contractScope": null,
              "id": 3807,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5027,
              "src": "855:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5027",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "849:27:15",
            "typeName": {
              "id": 3808,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "868:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 3811,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "882:18:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3810,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "882:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 3813,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "906:20:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3812,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "906:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 3815,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "932:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3814,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "932:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 3817,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "960:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3816,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "960:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 3821,
            "mutability": "mutable",
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "992:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3820,
              "keyType": {
                "id": 3818,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3819,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 3827,
            "mutability": "mutable",
            "name": "allowance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "1042:64:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3826,
              "keyType": {
                "id": 3822,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1050:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1042:47:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3825,
                "keyType": {
                  "id": 3823,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1069:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1061:27:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3824,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1080:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3835,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3835,
                  "src": "1128:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3831,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3835,
                  "src": "1150:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3835,
                  "src": "1170:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:57:15"
            },
            "src": "1113:72:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3843,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3837,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "1205:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3839,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "1228:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3841,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "1253:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:63:15"
            },
            "src": "1190:78:15"
          },
          {
            "constant": false,
            "functionSelector": "13f73eaa",
            "id": 3847,
            "mutability": "mutable",
            "name": "_blocked",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4039,
            "src": "1274:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3846,
              "keyType": {
                "id": 3844,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1282:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1274:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3845,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1293:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3889,
              "nodeType": "Block",
              "src": "1357:223:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3852,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3811,
                      "src": "1367:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "796561726e2e66696e616e6365207465737420746f6b656e",
                      "id": 3853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1374:26:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0e982ae517291f9be4c0e760b53c58bc4f83908ebc9fa5b20aaf33bb4670e269",
                        "typeString": "literal_string \"yearn.finance test token\""
                      },
                      "value": "yearn.finance test token"
                    },
                    "src": "1367:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3855,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3856,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3813,
                      "src": "1410:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "54455354",
                      "id": 3857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1419:6:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                        "typeString": "literal_string \"TEST\""
                      },
                      "value": "TEST"
                    },
                    "src": "1410:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3859,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:15:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3860,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3815,
                      "src": "1435:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3861,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3849,
                      "src": "1446:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1435:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3863,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:20:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3864,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "1465:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3867,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3865,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1475:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1475:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1465:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3330303030",
                        "id": 3868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1489:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1497:2:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3872,
                              "name": "_decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3849,
                              "src": "1509:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 3871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1501:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1501:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1501:18:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1497:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1489:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1465:54:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3877,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:54:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3878,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "1529:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3330303030",
                        "id": 3879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1551:2:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3883,
                              "name": "_decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3849,
                              "src": "1563:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1555:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 3881,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1555:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1555:18:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1551:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1543:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1529:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:44:15"
                }
              ]
            },
            "documentation": null,
            "id": 3890,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3849,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3890,
                  "src": "1333:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3848,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:17:15"
            },
            "returnParameters": {
              "id": 3851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:0:15"
            },
            "scope": 4039,
            "src": "1321:259:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3903,
              "nodeType": "Block",
              "src": "1648:39:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3897,
                        "name": "_blocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3847,
                        "src": "1658:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3899,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3898,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1667:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1658:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3900,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3894,
                      "src": "1675:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1658:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3902,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:22:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a51c68d5",
            "id": 3904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBlocked",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3892,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3904,
                  "src": "1607:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3894,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3904,
                  "src": "1621:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1606:26:15"
            },
            "returnParameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1648:0:15"
            },
            "scope": 4039,
            "src": "1586:101:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3950,
              "nodeType": "Block",
              "src": "1754:280:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1772:19:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3912,
                            "name": "_blocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3847,
                            "src": "1773:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3914,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3913,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3906,
                            "src": "1782:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1773:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e207472616e7366657220726566757365642e205265636569766572206973206f6e20626c61636b6c697374",
                        "id": 3916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1793:50:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        },
                        "value": "Token transfer refused. Receiver is on blacklist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        }
                      ],
                      "id": 3911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1764:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:80:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3919,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "1854:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3922,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3920,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1864:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1864:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1854:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3928,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3908,
                          "src": "1904:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3923,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "1878:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3926,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3924,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1888:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1888:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1878:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4877,
                        "src": "1878:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1878:33:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1854:57:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3931,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:57:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3932,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "1921:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3934,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3933,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "1931:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1921:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3939,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3908,
                          "src": "1967:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3935,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "1943:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3937,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3936,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3906,
                            "src": "1953:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1943:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4860,
                        "src": "1943:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1943:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1921:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3942,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:53:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1998:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1998:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3946,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "2010:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3947,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3908,
                        "src": "2020:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3943,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "1989:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3949,
                  "nodeType": "EmitStatement",
                  "src": "1984:43:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9059cbb",
            "id": 3951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3951,
                  "src": "1711:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3908,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3951,
                  "src": "1729:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1710:34:15"
            },
            "returnParameters": {
              "id": 3910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:15"
            },
            "scope": 4039,
            "src": "1693:341:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3974,
              "nodeType": "Block",
              "src": "2099:108:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3958,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3827,
                          "src": "2109:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3962,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3959,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2119:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2119:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2109:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3963,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3961,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3953,
                        "src": "2131:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2109:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3964,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3955,
                      "src": "2142:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2109:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3966,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:39:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2172:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2172:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3970,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3953,
                        "src": "2184:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3971,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "2193:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3967,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3843,
                      "src": "2163:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3973,
                  "nodeType": "EmitStatement",
                  "src": "2158:42:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "095ea7b3",
            "id": 3975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3953,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3975,
                  "src": "2057:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3955,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3975,
                  "src": "2074:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2056:33:15"
            },
            "returnParameters": {
              "id": 3957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:15"
            },
            "scope": 4039,
            "src": "2040:167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4037,
              "nodeType": "Block",
              "src": "2324:351:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2342:19:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3985,
                            "name": "_blocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3847,
                            "src": "2343:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3987,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3986,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3979,
                            "src": "2352:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2343:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e207472616e7366657220726566757365642e205265636569766572206973206f6e20626c61636b6c697374",
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2363:50:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        },
                        "value": "Token transfer refused. Receiver is on blacklist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9fbe4505fb1d44c6f86f8a521c572ab5065ad2c9fc8e116da2b08e19326627a",
                          "typeString": "literal_string \"Token transfer refused. Receiver is on blacklist\""
                        }
                      ],
                      "id": 3984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2334:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:80:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3991,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:80:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3992,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3827,
                          "src": "2424:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3996,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3993,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3977,
                          "src": "2434:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2424:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3997,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3994,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2442:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2442:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2424:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4005,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3981,
                          "src": "2490:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3998,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3827,
                              "src": "2456:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 4000,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3999,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3977,
                              "src": "2466:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2456:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4003,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4001,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2474:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2474:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2456:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4877,
                        "src": "2456:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2456:41:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2424:73:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4008,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:73:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4009,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "2507:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4011,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4010,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3977,
                        "src": "2517:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2507:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4016,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3981,
                          "src": "2549:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4012,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "2527:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4014,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4013,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3977,
                            "src": "2537:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2527:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4877,
                        "src": "2527:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2527:29:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2507:49:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:49:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4020,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3821,
                        "src": "2566:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4022,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4021,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3979,
                        "src": "2576:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2566:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4027,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3981,
                          "src": "2612:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4023,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "2588:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4025,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4024,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3979,
                            "src": "2598:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2588:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4860,
                        "src": "2588:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2588:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2566:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:53:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4032,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3977,
                        "src": "2643:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4033,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3979,
                        "src": "2651:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4034,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3981,
                        "src": "2661:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4031,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "2634:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2634:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4036,
                  "nodeType": "EmitStatement",
                  "src": "2629:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "23b872dd",
            "id": 4038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3977,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "2244:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2244:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3979,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "2268:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3981,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "2294:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2234:80:15"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:15"
            },
            "scope": 4039,
            "src": "2213:462:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4080,
        "src": "820:1857:15"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4040,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3806,
              "src": "2708:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$3806",
                "typeString": "contract Token"
              }
            },
            "id": 4041,
            "nodeType": "InheritanceSpecifier",
            "src": "2708:5:15"
          }
        ],
        "contractDependencies": [
          3806,
          5105,
          5898,
          6165
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4079,
        "linearizedBaseContracts": [
          4079,
          3806,
          5898,
          5105,
          6165
        ],
        "name": "TokenFalseReturn",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4049,
              "nodeType": "Block",
              "src": "2773:2:15",
              "statements": []
            },
            "documentation": null,
            "id": 4050,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4046,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4043,
                    "src": "2762:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 4047,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4045,
                  "name": "Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3806,
                  "src": "2756:5:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Token_$3806_$",
                    "typeString": "type(contract Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2756:16:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4043,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4050,
                  "src": "2732:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4042,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2731:17:15"
            },
            "returnParameters": {
              "id": 4048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:0:15"
            },
            "scope": 4079,
            "src": "2720:55:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5519
            ],
            "body": {
              "id": 4062,
              "nodeType": "Block",
              "src": "2872:29:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2889:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 4059,
                  "id": 4061,
                  "nodeType": "Return",
                  "src": "2882:12:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9059cbb",
            "id": 4063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4056,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2848:8:15"
            },
            "parameters": {
              "id": 4055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4052,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4063,
                  "src": "2799:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4054,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4063,
                  "src": "2817:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2798:34:15"
            },
            "returnParameters": {
              "id": 4059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4063,
                  "src": "2866:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2865:6:15"
            },
            "scope": 4079,
            "src": "2781:120:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5596
            ],
            "body": {
              "id": 4077,
              "nodeType": "Block",
              "src": "3048:29:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3065:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 4074,
                  "id": 4076,
                  "nodeType": "Return",
                  "src": "3058:12:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "23b872dd",
            "id": 4078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3024:8:15"
            },
            "parameters": {
              "id": 4070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4065,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "2938:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2938:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4067,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "2962:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4069,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "2988:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2928:80:15"
            },
            "returnParameters": {
              "id": 4074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4073,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "3042:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3042:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3041:6:15"
            },
            "scope": 4079,
            "src": "2907:170:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 4080,
        "src": "2679:400:15"
      }
    ],
    "src": "32:3048:15"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000bfc38038062000bfc833981810160405260208110156200003757600080fd5b5051604080518082018252601881527f796561726e2e66696e616e6365207465737420746f6b656e0000000000000000602082810191825283518085019094526004845263151154d560e21b9084015281518493916200009b9160039190620002e8565b508051620000b1906004906020840190620002e8565b50506005805460ff1916601217905550620000cc81620000ea565b620000e23361753060ff8416600a0a0262000100565b505062000384565b6005805460ff191660ff92909216919091179055565b6001600160a01b0382166200015c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200016a600083836200020f565b62000186816002546200028660201b620005aa1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001b9918390620005aa62000286821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821660009081526006602052604090205460ff1615620002695760405162461bcd60e51b815260040180806020018281038252603081526020018062000bcc6030913960400191505060405180910390fd5b620002818383836200028160201b6200060b1760201c565b505050565b600082820183811015620002e1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032b57805160ff19168380011785556200035b565b828001600101855582156200035b579182015b828111156200035b5782518255916020019190600101906200033e565b50620003699291506200036d565b5090565b5b808211156200036957600081556001016200036e565b61083880620003946000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461027f578063a51c68d5146102ab578063a9059cbb146102db578063dd62ed3e14610307576100cf565b8063395093511461022557806370a082311461025157806395d89b4114610277576100cf565b806306fdde03146100d4578063095ea7b31461015157806313f73eaa1461019157806318160ddd146101b757806323b872dd146101d1578063313ce56714610207575b600080fd5b6100dc610335565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b0381351690602001356103cb565b604080519115158252519081900360200190f35b61017d600480360360208110156101a757600080fd5b50356001600160a01b03166103e8565b6101bf6103fd565b60408051918252519081900360200190f35b61017d600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610403565b61020f61040c565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561023b57600080fd5b506001600160a01b038135169060200135610415565b6101bf6004803603602081101561026757600080fd5b50356001600160a01b0316610468565b6100dc610483565b61017d6004803603604081101561029557600080fd5b506001600160a01b0381351690602001356104e4565b6102d9600480360360408110156102c157600080fd5b506001600160a01b038135169060200135151561054c565b005b61017d600480360360408110156102f157600080fd5b506001600160a01b038135169060200135610577565b6101bf6004803603604081101561031d57600080fd5b506001600160a01b038135811691602001351661057f565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050905090565b60006103df6103d8610610565b8484610614565b50600192915050565b60066020526000908152604090205460ff1681565b60025490565b60009392505050565b60055460ff1690565b60006103df610422610610565b846104638560016000610433610610565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906105aa565b610614565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c15780601f10610396576101008083540402835291602001916103c1565b60006103df6104f1610610565b84610463856040518060600160405280602581526020016107de602591396001600061051b610610565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610700565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b600092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610604576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b0383166106595760405162461bcd60e51b81526004018080602001828103825260248152602001806107ba6024913960400191505060405180910390fd5b6001600160a01b03821661069e5760405162461bcd60e51b81526004018080602001828103825260228152602001806107986022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561078f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561075457818101518382015260200161073c565b50505050905090810190601f1680156107815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bd3fe3f75e6b0b9de3befb1332e0a8c67c483fa8d87caec61ba216b26755fe9864736f6c634300060c0033546f6b656e207472616e7366657220726566757365642e205265636569766572206973206f6e20626c61636b6c697374",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "TokenFalseReturn",
  "coverageMap": {
    "branches": {
      "0": {},
      "15": {},
      "2": {
        "SafeMath.add": {
          "21": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "22": [
            1859,
            1865,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "19": [
            9460,
            9479,
            true
          ],
          "20": [
            9538,
            9559,
            true
          ]
        }
      },
      "4": {},
      "6": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "13": [
            670,
            687
          ]
        }
      },
      "15": {
        "Token._setBlocked": {
          "9": [
            501,
            523
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "11": [
            978,
            1024
          ],
          "12": [
            1035,
            1043
          ]
        },
        "SafeMath.sub": {
          "18": [
            1851,
            1880
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "14": [
            9452,
            9520
          ],
          "15": [
            9530,
            9598
          ],
          "16": [
            9609,
            9645
          ],
          "17": [
            9655,
            9692
          ]
        },
        "ERC20.allowance": {
          "10": [
            4076,
            4110
          ]
        },
        "ERC20.approve": {
          "1": [
            4354,
            4393
          ],
          "2": [
            4403,
            4414
          ]
        },
        "ERC20.balanceOf": {
          "6": [
            3503,
            3528
          ]
        },
        "ERC20.decimals": {
          "4": [
            3179,
            3195
          ]
        },
        "ERC20.decreaseAllowance": {
          "8": [
            6404,
            6533
          ]
        },
        "ERC20.increaseAllowance": {
          "5": [
            5697,
            5780
          ]
        },
        "ERC20.name": {
          "0": [
            2281,
            2293
          ]
        },
        "ERC20.symbol": {
          "7": [
            2477,
            2491
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3334,
            3353
          ]
        }
      },
      "4": {},
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.1.0/SafeMath",
    "Token"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461027f578063a51c68d5146102ab578063a9059cbb146102db578063dd62ed3e14610307576100cf565b8063395093511461022557806370a082311461025157806395d89b4114610277576100cf565b806306fdde03146100d4578063095ea7b31461015157806313f73eaa1461019157806318160ddd146101b757806323b872dd146101d1578063313ce56714610207575b600080fd5b6100dc610335565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b0381351690602001356103cb565b604080519115158252519081900360200190f35b61017d600480360360208110156101a757600080fd5b50356001600160a01b03166103e8565b6101bf6103fd565b60408051918252519081900360200190f35b61017d600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610403565b61020f61040c565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561023b57600080fd5b506001600160a01b038135169060200135610415565b6101bf6004803603602081101561026757600080fd5b50356001600160a01b0316610468565b6100dc610483565b61017d6004803603604081101561029557600080fd5b506001600160a01b0381351690602001356104e4565b6102d9600480360360408110156102c157600080fd5b506001600160a01b038135169060200135151561054c565b005b61017d600480360360408110156102f157600080fd5b506001600160a01b038135169060200135610577565b6101bf6004803603604081101561031d57600080fd5b506001600160a01b038135811691602001351661057f565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050905090565b60006103df6103d8610610565b8484610614565b50600192915050565b60066020526000908152604090205460ff1681565b60025490565b60009392505050565b60055460ff1690565b60006103df610422610610565b846104638560016000610433610610565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906105aa565b610614565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c15780601f10610396576101008083540402835291602001916103c1565b60006103df6104f1610610565b84610463856040518060600160405280602581526020016107de602591396001600061051b610610565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610700565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b600092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610604576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b505050565b3390565b6001600160a01b0383166106595760405162461bcd60e51b81526004018080602001828103825260248152602001806107ba6024913960400191505060405180910390fd5b6001600160a01b03821661069e5760405162461bcd60e51b81526004018080602001828103825260228152602001806107986022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000818484111561078f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561075457818101518382015260200161073c565b50505050905090810190601f1680156107815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bd3fe3f75e6b0b9de3befb1332e0a8c67c483fa8d87caec61ba216b26755fe9864736f6c634300060c0033",
  "deployedSourceMap": "2679:400:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;197:40:15;;;;;;;;;;;;;;;;-1:-1:-1;197:40:15;-1:-1:-1;;;;;197:40:15;;:::i;3262:98:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;2907:170:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2907:170:15;;;;;;;;;;;;;;;;;:::i;3121:81:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5593:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:3;;;;;;;;:::i;3418:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:3;-1:-1:-1;;;;;3418:117:3;;:::i;2413:85::-;;;:::i;6295:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:3;;;;;;;;:::i;429:101:15:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;429:101:15;;;;;;;;;;:::i;:::-;;2781:120;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2781:120:15;;;;;;;;:::i;3968:149:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:3;;;;;;;;;;:::i;2219:81::-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:3;4255:166;;;;:::o;197:40:15:-;;;;;;;;;;;;;;;:::o;3262:98:3:-;3341:12;;3262:98;:::o;2907:170:15:-;3042:4;2907:170;;;;;:::o;3121:81:3:-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:3;;;:34;;;;;;;;;;;:38;:50::i;:::-;5697:8;:83::i;3418:117::-;-1:-1:-1;;;;;3510:18:3;3484:7;3510:18;;;;;;;;;;;;3418:117::o;2413:85::-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:3;;;:34;;;;;;;;;;;:96;:38;:96::i;429:101:15:-;-1:-1:-1;;;;;501:14:15;;;;;;;;:8;:14;;;;;:22;;-1:-1:-1;;501:22:15;;;;;;;;;;429:101::o;2781:120::-;2866:4;2781:120;;;;:::o;3968:149:3:-;-1:-1:-1;;;;;4083:18:3;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;874:176:2:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:2:o;10697:92:3:-;;;;:::o;590:104:0:-;677:10;590:104;:::o;9359:340:3:-;-1:-1:-1;;;;;9460:19:3;;9452:68;;;;-1:-1:-1;;;9452:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:21:3;;9530:68;;;;-1:-1:-1;;;9530:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9609:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9660:32;;;;;;;;;;;;;;;;;9359:340;;;:::o;1746:187:2:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:2;;;1746:187::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      }
    },
    "version": 1
  },
  "offset": [
    2679,
    3079
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xA51C68D5 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x307 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x277 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x13F73EAA EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x403 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x468 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x483 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x577 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x57F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x396 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF PUSH2 0x3D8 PUSH2 0x610 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x614 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF PUSH2 0x422 PUSH2 0x610 JUMP JUMPDEST DUP5 PUSH2 0x463 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x433 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x396 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF PUSH2 0x4F1 PUSH2 0x610 JUMP JUMPDEST DUP5 PUSH2 0x463 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7DE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x51B PUSH2 0x610 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7BA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x798 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x754 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x73C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x781 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220BD3F 0xE3 0xF7 0x5E PUSH12 0xB9DE3BEFB1332E0A8C67C48 EXTCODEHASH 0xA8 0xD8 PUSH29 0xAEC61BA216B26755FE9864736F6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27F"
    },
    "64": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA51C68D5"
    },
    "71": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AB"
    },
    "75": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DB"
    },
    "86": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x307"
    },
    "97": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMP",
      "path": "15"
    },
    "102": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "104": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x39509351"
    },
    "109": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x225"
    },
    "113": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "114": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "115": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "121": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x251"
    },
    "124": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x277"
    },
    "135": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMP",
      "path": "15"
    },
    "140": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "141": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "142": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "148": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "153": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x151"
    },
    "162": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "163": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "164": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x13F73EAA"
    },
    "169": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x191"
    },
    "173": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "174": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "175": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B7"
    },
    "184": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "185": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "186": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "192": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "195": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "EQ",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x207"
    },
    "206": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "208": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "DUP1",
      "path": "15"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2679,
        3079
      ],
      "op": "REVERT",
      "path": "15"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x335"
    },
    "219": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "223": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "230": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "231": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "232": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "235": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "243": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "244": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "245": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "246": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP6",
      "path": "3"
    },
    "247": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "248": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "249": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "252": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "255": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "256": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "257": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "LT",
      "path": "3"
    },
    "258": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "259": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x116"
    },
    "262": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "264": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "266": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "269": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "270": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "271": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "273": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "274": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE"
    },
    "277": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "278": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "279": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "280": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "281": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "286": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "287": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "288": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "291": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "AND",
      "path": "3"
    },
    "292": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "298": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "299": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "300": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "3"
    },
    "301": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "302": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "303": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "308": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "3"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "312": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "EXP",
      "path": "3"
    },
    "313": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "3"
    },
    "314": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "NOT",
      "path": "3"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "AND",
      "path": "3"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "317": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "ADD",
      "path": "3"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "323": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "324": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "325": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "POP",
      "path": "3"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "334": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SUB",
      "path": "3"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "RETURN",
      "path": "3"
    },
    "337": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D"
    },
    "341": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "345": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SUB",
      "path": "3"
    },
    "346": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "348": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "349": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "LT",
      "path": "3"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "351": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x167"
    },
    "354": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "355": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "358": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "REVERT",
      "path": "3"
    },
    "359": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "SUB"
    },
    "369": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "370": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "AND",
      "path": "3"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "373": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ADD",
      "path": "3"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CB"
    },
    "380": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "381": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "384": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "385": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "386": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP3",
      "path": "3"
    },
    "390": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "391": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "392": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "393": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "394": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SUB",
      "path": "3"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "398": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "ADD",
      "path": "3"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "RETURN",
      "path": "3"
    },
    "401": {
      "offset": [
        197,
        237
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "402": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17D"
    },
    "405": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "DUP1",
      "path": "15"
    },
    "408": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "SUB",
      "path": "15"
    },
    "410": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "412": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "LT",
      "path": "15"
    },
    "414": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A7"
    },
    "418": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "419": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "421": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "DUP1",
      "path": "15"
    },
    "422": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "REVERT",
      "path": "15"
    },
    "423": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "offset": [
        197,
        237
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "op": "SUB"
    },
    "434": {
      "offset": [
        197,
        237
      ],
      "op": "AND",
      "path": "15"
    },
    "435": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "438": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        197,
        237
      ],
      "op": "JUMP",
      "path": "15"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF"
    },
    "443": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "446": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMP",
      "path": "3"
    },
    "447": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "448": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP1",
      "path": "3"
    },
    "451": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "452": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "453": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP3",
      "path": "3"
    },
    "454": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "455": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "456": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "457": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "DUP2",
      "path": "3"
    },
    "458": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "459": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SUB",
      "path": "3"
    },
    "460": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "462": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "ADD",
      "path": "3"
    },
    "463": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "464": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "RETURN",
      "path": "3"
    },
    "465": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "466": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17D"
    },
    "469": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "471": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP1",
      "path": "15"
    },
    "472": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "473": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SUB",
      "path": "15"
    },
    "474": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "476": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP2",
      "path": "15"
    },
    "477": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "LT",
      "path": "15"
    },
    "478": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "479": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E7"
    },
    "482": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "483": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "485": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP1",
      "path": "15"
    },
    "486": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "REVERT",
      "path": "15"
    },
    "487": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP2",
      "path": "15"
    },
    "498": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "499": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP2",
      "path": "15"
    },
    "500": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "AND",
      "path": "15"
    },
    "501": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "502": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "504": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "DUP2",
      "path": "15"
    },
    "505": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "ADD",
      "path": "15"
    },
    "506": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "507": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "508": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "509": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "AND",
      "path": "15"
    },
    "510": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "511": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "513": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "ADD",
      "path": "15"
    },
    "514": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "515": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x403"
    },
    "518": {
      "fn": "TokenFalseReturn.transferFrom",
      "jump": "i",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMP",
      "path": "15"
    },
    "519": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F"
    },
    "523": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40C"
    },
    "526": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMP",
      "path": "3"
    },
    "527": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "528": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "530": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP1",
      "path": "3"
    },
    "531": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "532": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "534": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "535": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "536": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "AND",
      "path": "3"
    },
    "537": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP3",
      "path": "3"
    },
    "538": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "539": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "540": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "541": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "DUP2",
      "path": "3"
    },
    "542": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "543": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SUB",
      "path": "3"
    },
    "544": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "546": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "ADD",
      "path": "3"
    },
    "547": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "548": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "RETURN",
      "path": "3"
    },
    "549": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D"
    },
    "553": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "556": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "557": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "SUB",
      "path": "3"
    },
    "558": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "560": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "561": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "LT",
      "path": "3"
    },
    "562": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "563": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23B"
    },
    "566": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "567": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "569": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "570": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "REVERT",
      "path": "3"
    },
    "571": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "582": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "583": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "AND",
      "path": "3"
    },
    "584": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "585": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "ADD",
      "path": "3"
    },
    "588": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "589": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x415"
    },
    "592": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMP",
      "path": "3"
    },
    "593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF"
    },
    "597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "DUP1",
      "path": "3"
    },
    "600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "SUB",
      "path": "3"
    },
    "602": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "604": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "605": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "LT",
      "path": "3"
    },
    "606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267"
    },
    "610": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "613": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "DUP1",
      "path": "3"
    },
    "614": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "REVERT",
      "path": "3"
    },
    "615": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "AND",
      "path": "3"
    },
    "627": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x468"
    },
    "630": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMP",
      "path": "3"
    },
    "631": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "632": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "635": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x483"
    },
    "638": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMP",
      "path": "3"
    },
    "639": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "640": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D"
    },
    "643": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "645": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "646": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "647": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "SUB",
      "path": "3"
    },
    "648": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "651": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "LT",
      "path": "3"
    },
    "652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x295"
    },
    "656": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "660": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "REVERT",
      "path": "3"
    },
    "661": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "672": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "673": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "AND",
      "path": "3"
    },
    "674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "ADD",
      "path": "3"
    },
    "678": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "679": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E4"
    },
    "682": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMP",
      "path": "3"
    },
    "683": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "684": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D9"
    },
    "687": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "689": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "DUP1",
      "path": "15"
    },
    "690": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "691": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "SUB",
      "path": "15"
    },
    "692": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "694": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "DUP2",
      "path": "15"
    },
    "695": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "LT",
      "path": "15"
    },
    "696": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "697": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C1"
    },
    "700": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "701": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "703": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "DUP1",
      "path": "15"
    },
    "704": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "REVERT",
      "path": "15"
    },
    "705": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "DUP2",
      "path": "15"
    },
    "716": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "717": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "AND",
      "path": "15"
    },
    "718": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "719": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "721": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "ADD",
      "path": "15"
    },
    "722": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "723": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "724": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "725": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54C"
    },
    "728": {
      "fn": "Token._setBlocked",
      "jump": "i",
      "offset": [
        429,
        530
      ],
      "op": "JUMP",
      "path": "15"
    },
    "729": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "730": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "STOP",
      "path": "15"
    },
    "731": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "732": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17D"
    },
    "735": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "737": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "DUP1",
      "path": "15"
    },
    "738": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "739": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "SUB",
      "path": "15"
    },
    "740": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "742": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "DUP2",
      "path": "15"
    },
    "743": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "LT",
      "path": "15"
    },
    "744": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "745": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F1"
    },
    "748": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "749": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "751": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "DUP1",
      "path": "15"
    },
    "752": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "REVERT",
      "path": "15"
    },
    "753": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "754": {
      "op": "POP"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "DUP2",
      "path": "15"
    },
    "764": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "765": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "AND",
      "path": "15"
    },
    "766": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "767": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "769": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "ADD",
      "path": "15"
    },
    "770": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "771": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x577"
    },
    "774": {
      "fn": "TokenFalseReturn.transfer",
      "jump": "i",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMP",
      "path": "15"
    },
    "775": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "776": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF"
    },
    "779": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "781": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP1",
      "path": "3"
    },
    "782": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "783": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "SUB",
      "path": "3"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "786": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "787": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "LT",
      "path": "3"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31D"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "793": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP1",
      "path": "3"
    },
    "796": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "REVERT",
      "path": "3"
    },
    "797": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "798": {
      "op": "POP"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "805": {
      "op": "SHL"
    },
    "806": {
      "op": "SUB"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "808": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "AND",
      "path": "3"
    },
    "811": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "812": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "ADD",
      "path": "3"
    },
    "815": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "816": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "AND",
      "path": "3"
    },
    "817": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57F"
    },
    "820": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMP",
      "path": "3"
    },
    "821": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x3"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "825": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "838": {
      "op": "NOT"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP9",
      "path": "3"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "3"
    },
    "846": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "847": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "3"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "850": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "851": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "3"
    },
    "852": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "853": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "3"
    },
    "856": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP5",
      "path": "3"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "859": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "3"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "3"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        2256,
        2269
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2256,
        2269
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "3"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2288,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "LT",
      "path": "3"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x396"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "3"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DIV",
      "path": "3"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MUL",
      "path": "3"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "3"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMP",
      "path": "3"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP1",
      "path": "3"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP4",
      "path": "3"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "GT",
      "path": "3"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A4"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SUB",
      "path": "3"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "AND",
      "path": "3"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "DUP3",
      "path": "3"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "ADD",
      "path": "3"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2281,
        2293
      ],
      "op": "POP",
      "path": "3"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2219,
        2300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "970": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2219,
        2300
      ],
      "op": "JUMP",
      "path": "3"
    },
    "971": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "972": {
      "fn": "ERC20.approve",
      "offset": [
        4338,
        4342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4393
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 1,
      "value": "0x3DF"
    },
    "977": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4375
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D8"
    },
    "980": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4373
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "983": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4363,
        4375
      ],
      "op": "JUMP",
      "path": "3"
    },
    "984": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4375
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "985": {
      "fn": "ERC20.approve",
      "offset": [
        4377,
        4384
      ],
      "op": "DUP5",
      "path": "3"
    },
    "986": {
      "fn": "ERC20.approve",
      "offset": [
        4386,
        4392
      ],
      "op": "DUP5",
      "path": "3"
    },
    "987": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x614"
    },
    "990": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4354,
        4393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "991": {
      "fn": "ERC20.approve",
      "offset": [
        4354,
        4393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "fn": "ERC20.approve",
      "offset": [
        4410,
        4414
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "995": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "996": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "997": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "POP",
      "path": "3"
    },
    "998": {
      "fn": "ERC20.approve",
      "offset": [
        4255,
        4421
      ],
      "op": "POP",
      "path": "3"
    },
    "999": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4255,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1000": {
      "offset": [
        197,
        237
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1001": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1003": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1005": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1006": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1008": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1009": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1010": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1011": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1014": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1015": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1016": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1018": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "AND",
      "path": "15"
    },
    "1019": {
      "fn": "ERC20.approve",
      "offset": [
        197,
        237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1020": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        197,
        237
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1021": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1022": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3341,
        3353
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x2"
    },
    "1024": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3341,
        3353
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1025": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3262,
        3360
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1026": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3262,
        3360
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1027": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1028": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        3042,
        3046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1030": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1031": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1032": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "POP",
      "path": "15"
    },
    "1033": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "POP",
      "path": "15"
    },
    "1034": {
      "fn": "TokenFalseReturn.transferFrom",
      "offset": [
        2907,
        3077
      ],
      "op": "POP",
      "path": "15"
    },
    "1035": {
      "fn": "TokenFalseReturn.transferFrom",
      "jump": "o",
      "offset": [
        2907,
        3077
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1036": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1037": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x5"
    },
    "1039": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1040": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1042": {
      "fn": "ERC20.decimals",
      "offset": [
        3186,
        3195
      ],
      "op": "AND",
      "path": "3"
    },
    "1043": {
      "fn": "ERC20.decimals",
      "offset": [
        3121,
        3202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1044": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3121,
        3202
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1045": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5593,
        5808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1046": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5681,
        5685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1048": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5697,
        5780
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x3DF"
    },
    "1051": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5718
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "1054": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "1057": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5706,
        5718
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1058": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5718
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1059": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5720,
        5727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1060": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x463"
    },
    "1063": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5768,
        5778
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1064": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5740
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1066": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1068": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x433"
    },
    "1071": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "1074": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5741,
        5753
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1075": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5741,
        5753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "op": "SUB"
    },
    "1084": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1085": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1086": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "AND",
      "path": "3"
    },
    "1087": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1088": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1089": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1091": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1092": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1093": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1094": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1095": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1096": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1097": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1098": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1101": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1102": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1107": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5754
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1108": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1109": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1110": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "AND",
      "path": "3"
    },
    "1111": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1112": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1113": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1114": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1115": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1116": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1117": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1118": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5763
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1119": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AA"
    },
    "1122": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5729,
        5779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1123": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5729,
        5779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1124": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5697,
        5705
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x614"
    },
    "1127": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5697,
        5780
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "AND",
      "path": "3",
      "statement": 6
    },
    "1138": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3484,
        3491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1140": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1141": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1142": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1143": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1145": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1146": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1147": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1148": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1150": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1151": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1152": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3510,
        3528
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1154": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3418,
        3535
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1155": {
      "fn": "ERC20.symbol",
      "offset": [
        2413,
        2498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1156": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x4"
    },
    "1158": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1159": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1160": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1162": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1163": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1164": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1168": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1172": {
      "op": "NOT"
    },
    "1173": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1176": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1178": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1179": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "AND",
      "path": "3"
    },
    "1180": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1181": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "3"
    },
    "1182": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1183": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1184": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1185": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "AND",
      "path": "3"
    },
    "1186": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1187": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1188": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1189": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "3"
    },
    "1190": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1191": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1192": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1193": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1194": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1195": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "3"
    },
    "1196": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1197": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "3"
    },
    "1198": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1199": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1200": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1201": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1202": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1203": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1204": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1205": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1206": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1207": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1208": {
      "fn": "ERC20.symbol",
      "offset": [
        2452,
        2465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1210": {
      "fn": "ERC20.symbol",
      "offset": [
        2452,
        2465
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1211": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1212": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1213": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1214": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1215": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1216": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1217": {
      "fn": "ERC20.symbol",
      "offset": [
        2484,
        2491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1218": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1219": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1220": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1221": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "1224": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1225": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1226": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1228": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "LT",
      "path": "3"
    },
    "1229": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x396"
    },
    "1232": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1233": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1236": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1237": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1238": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1239": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DIV",
      "path": "3"
    },
    "1240": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MUL",
      "path": "3"
    },
    "1241": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1242": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1243": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1244": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1246": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "ADD",
      "path": "3"
    },
    "1247": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1248": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "1251": {
      "fn": "ERC20.symbol",
      "offset": [
        2477,
        2491
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1252": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6295,
        6561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1253": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6388,
        6392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1255": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6404,
        6533
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x3DF"
    },
    "1258": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F1"
    },
    "1261": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6423
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "1264": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6413,
        6425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1265": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6413,
        6425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1266": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6427,
        6434
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1267": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x463"
    },
    "1270": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6475,
        6490
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1275": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "ADD",
      "path": "3"
    },
    "1278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1280": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1281": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1282": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "1284": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1285": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1286": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1288": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "ADD",
      "path": "3"
    },
    "1289": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DE"
    },
    "1292": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "1294": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1295": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1296": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1300": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51B"
    },
    "1303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6458
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x610"
    },
    "1306": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6448,
        6460
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1307": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6448,
        6460
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1318": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "AND",
      "path": "3"
    },
    "1319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1320": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1321": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1323": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1324": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1325": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "ADD",
      "path": "3"
    },
    "1326": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1329": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1332": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1333": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1334": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "ADD",
      "path": "3"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1337": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1338": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1339": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6461
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1340": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "DUP14",
      "path": "3"
    },
    "1342": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "AND",
      "path": "3"
    },
    "1343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1346": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6470
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6532
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6436,
        6474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x700"
    },
    "1355": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6436,
        6532
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1356": {
      "fn": "Token._setBlocked",
      "offset": [
        429,
        530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1363": {
      "op": "SHL"
    },
    "1364": {
      "op": "SUB"
    },
    "1365": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "SWAP2",
      "path": "15",
      "statement": 9
    },
    "1366": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1367": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1368": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "AND",
      "path": "15"
    },
    "1369": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1371": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1372": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1373": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1374": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1376": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1378": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1379": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1381": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1382": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        515
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1383": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1384": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1387": {
      "op": "NOT"
    },
    "1388": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "AND",
      "path": "15"
    },
    "1389": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1390": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1391": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1392": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1393": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1394": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1395": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "OR",
      "path": "15"
    },
    "1396": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1397": {
      "fn": "Token._setBlocked",
      "offset": [
        501,
        523
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1398": {
      "fn": "Token._setBlocked",
      "jump": "o",
      "offset": [
        429,
        530
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1399": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1400": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2866,
        2870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1402": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1403": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1404": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "POP",
      "path": "15"
    },
    "1405": {
      "fn": "TokenFalseReturn.transfer",
      "offset": [
        2781,
        2901
      ],
      "op": "POP",
      "path": "15"
    },
    "1406": {
      "fn": "TokenFalseReturn.transfer",
      "jump": "o",
      "offset": [
        2781,
        2901
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1407": {
      "fn": "ERC20.allowance",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1414": {
      "op": "SHL"
    },
    "1415": {
      "op": "SUB"
    },
    "1416": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 10
    },
    "1417": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1418": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "AND",
      "path": "3"
    },
    "1419": {
      "fn": "ERC20.allowance",
      "offset": [
        4057,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1421": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1422": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1423": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1424": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1426": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1428": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1429": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1430": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1431": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1433": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1434": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1435": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4101
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1436": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1437": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1438": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1439": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "AND",
      "path": "3"
    },
    "1440": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1441": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1442": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1443": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1444": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1445": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1446": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1447": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1448": {
      "fn": "ERC20.allowance",
      "offset": [
        4083,
        4110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1449": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3968,
        4117
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1450": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1451": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1453": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1454": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1455": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "2"
    },
    "1456": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 11
    },
    "1457": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1458": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "2"
    },
    "1459": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1460": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x604"
    },
    "1463": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1464": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1466": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1467": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1476": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1477": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1479": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1481": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1482": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "2"
    },
    "1483": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "1486": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1488": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1489": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "2"
    },
    "1490": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1491": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1524": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1526": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1527": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "2"
    },
    "1528": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1529": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1530": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1531": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1532": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1533": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1534": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "2"
    },
    "1535": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1537": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "2"
    },
    "1538": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1539": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1540": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1541": {
      "fn": "SafeMath.add",
      "offset": [
        1042,
        1043
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 12
    },
    "1542": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        874,
        1050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1547": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10697,
        10789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1548": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10697,
        10789
      ],
      "op": "POP",
      "path": "3"
    },
    "1549": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10697,
        10789
      ],
      "op": "POP",
      "path": "3"
    },
    "1550": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10697,
        10789
      ],
      "op": "POP",
      "path": "3"
    },
    "1551": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10697,
        10789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1552": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1553": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 13
    },
    "1554": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1556": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "SUB"
    },
    "1565": {
      "fn": "ERC20._approve",
      "offset": [
        9460,
        9479
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 14
    },
    "1566": {
      "branch": 19,
      "fn": "ERC20._approve",
      "offset": [
        9460,
        9479
      ],
      "op": "AND",
      "path": "3"
    },
    "1567": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x659"
    },
    "1570": {
      "branch": 19,
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1571": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1573": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1580": {
      "op": "SHL"
    },
    "1581": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1582": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1583": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1585": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "3"
    },
    "1586": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1587": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1588": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1590": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "3"
    },
    "1591": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1592": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1593": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SUB",
      "path": "3"
    },
    "1594": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1595": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1596": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1598": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1599": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1600": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1602": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "3"
    },
    "1603": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1604": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BA"
    },
    "1607": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1609": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1610": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1611": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1613": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "ADD",
      "path": "3"
    },
    "1614": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1615": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "POP",
      "path": "3"
    },
    "1616": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "POP",
      "path": "3"
    },
    "1617": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1619": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1620": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1621": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1622": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SUB",
      "path": "3"
    },
    "1623": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1624": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1625": {
      "fn": "ERC20._approve",
      "offset": [
        9452,
        9520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "ERC20._approve",
      "offset": [
        9538,
        9559
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 15
    },
    "1635": {
      "branch": 20,
      "fn": "ERC20._approve",
      "offset": [
        9538,
        9559
      ],
      "op": "AND",
      "path": "3"
    },
    "1636": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69E"
    },
    "1639": {
      "branch": 20,
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1640": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1642": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1651": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1652": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1654": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "3"
    },
    "1655": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1656": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1657": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1659": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "3"
    },
    "1660": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1661": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1662": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SUB",
      "path": "3"
    },
    "1663": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1664": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1665": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1667": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1668": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1669": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1671": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "3"
    },
    "1672": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1673": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x798"
    },
    "1676": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1678": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1679": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1680": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1682": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "ADD",
      "path": "3"
    },
    "1683": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1684": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "POP",
      "path": "3"
    },
    "1685": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "POP",
      "path": "3"
    },
    "1686": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1688": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1689": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1690": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1691": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SUB",
      "path": "3"
    },
    "1692": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1693": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1694": {
      "fn": "ERC20._approve",
      "offset": [
        9530,
        9598
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1701": {
      "op": "SHL"
    },
    "1702": {
      "op": "SUB"
    },
    "1703": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 16
    },
    "1704": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1705": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "AND",
      "path": "3"
    },
    "1706": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1708": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1709": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1710": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1711": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1713": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1715": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1716": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1717": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1718": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1720": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1721": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1722": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9627
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1723": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1724": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1725": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "AND",
      "path": "3"
    },
    "1726": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1727": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1728": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1729": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1730": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1731": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1732": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1733": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1734": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1735": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9636
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1736": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1737": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1738": {
      "fn": "ERC20._approve",
      "offset": [
        9609,
        9645
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1739": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 17
    },
    "1740": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1741": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1742": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1743": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1744": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1745": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1746": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1779": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1780": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1781": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1782": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SUB",
      "path": "3"
    },
    "1783": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1784": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1785": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "ADD",
      "path": "3"
    },
    "1786": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1787": {
      "fn": "ERC20._approve",
      "offset": [
        9660,
        9692
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1788": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "3"
    },
    "1789": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "3"
    },
    "1790": {
      "fn": "ERC20._approve",
      "offset": [
        9359,
        9699
      ],
      "op": "POP",
      "path": "3"
    },
    "1791": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9359,
        9699
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1792": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1793": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1795": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 18
    },
    "1796": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1797": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1798": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "2"
    },
    "1799": {
      "branch": 22,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1800": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78F"
    },
    "1803": {
      "branch": 22,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1804": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1806": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1815": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1816": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1818": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1819": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1820": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1821": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1823": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1824": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1825": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1826": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "2"
    },
    "1827": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1828": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1829": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1830": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1831": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1832": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1833": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1834": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1835": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1837": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1838": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1839": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1840": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1841": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1842": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1843": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1845": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1846": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1847": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1848": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1849": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1850": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1852": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1853": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1854": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1855": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "LT",
      "path": "2"
    },
    "1856": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1857": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x754"
    },
    "1860": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1861": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1862": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1863": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1864": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1865": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1866": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1867": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1868": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1869": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1871": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1872": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73C"
    },
    "1875": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1876": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1877": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1878": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1879": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1880": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1881": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1882": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1883": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1884": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1885": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1886": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1889": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "2"
    },
    "1890": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1891": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1892": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x781"
    },
    "1895": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1896": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1897": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1898": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "2"
    },
    "1899": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1900": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1901": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1903": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1904": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1906": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "2"
    },
    "1907": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1910": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "2"
    },
    "1911": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "2"
    },
    "1912": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "2"
    },
    "1913": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "2"
    },
    "1914": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1915": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1916": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1918": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1919": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1920": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1921": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1922": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1923": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1924": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1925": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1926": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "2"
    },
    "1927": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1929": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1930": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1931": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1932": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "2"
    },
    "1933": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1934": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1935": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1940": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "2"
    },
    "1941": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1942": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "2"
    }
  },
  "sha1": "0b32c5a2ba7aec3498e8845814993de74bcfff57",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.12;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token is ERC20 {\n    mapping(address => bool) public _blocked;\n\n    constructor(uint8 _decimals) public ERC20(\"yearn.finance test token\", \"TEST\") {\n        _setupDecimals(_decimals);\n        _mint(msg.sender, 30000 * 10**uint256(_decimals));\n    }\n\n    function _setBlocked(address user, bool value) public virtual {\n        _blocked[user] = value;\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override(ERC20) {\n        require(!_blocked[to], \"Token transfer refused. Receiver is on blacklist\");\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n\ncontract TokenNoReturn {\n    using SafeMath for uint256;\n\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    mapping(address => bool) public _blocked;\n\n    constructor(uint8 _decimals) public {\n        name = \"yearn.finance test token\";\n        symbol = \"TEST\";\n        decimals = _decimals;\n        balanceOf[msg.sender] = 30000 * 10**uint256(_decimals);\n        totalSupply = 30000 * 10**uint256(_decimals);\n    }\n\n    function _setBlocked(address user, bool value) public virtual {\n        _blocked[user] = value;\n    }\n\n    function transfer(address receiver, uint256 amount) external {\n        require(!_blocked[receiver], \"Token transfer refused. Receiver is on blacklist\");\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(amount);\n        balanceOf[receiver] = balanceOf[receiver].add(amount);\n        emit Transfer(msg.sender, receiver, amount);\n    }\n\n    function approve(address spender, uint256 amount) external {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n    }\n\n    function transferFrom(\n        address sender,\n        address receiver,\n        uint256 amount\n    ) external {\n        require(!_blocked[receiver], \"Token transfer refused. Receiver is on blacklist\");\n        allowance[sender][msg.sender] = allowance[sender][msg.sender].sub(amount);\n        balanceOf[sender] = balanceOf[sender].sub(amount);\n        balanceOf[receiver] = balanceOf[receiver].add(amount);\n        emit Transfer(sender, receiver, amount);\n    }\n}\n\ncontract TokenFalseReturn is Token {\n    constructor(uint8 _decimals) public Token(_decimals) {}\n\n    function transfer(address receiver, uint256 amount) public virtual override returns (bool) {\n        return false;\n    }\n\n    function transferFrom(\n        address sender,\n        address receiver,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        return false;\n    }\n}\n",
  "sourceMap": "2679:400:15:-:0;;;2720:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2720:55:15;2013:141:3;;;;;;;;;;;;2720:55:15;2013:141:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:141:3;;;;2085:12;;2720:55:15;;2013:141:3;2085:12;;:5;;2013:141;2085:12;:::i;:::-;-1:-1:-1;2107:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:3;:14;;-1:-1:-1;;2133:14:3;2145:2;2133:14;;;-1:-1:-1;332:25:15::1;347:9:::0;332:14:::1;:25::i;:::-;367:49;373:10;385:5;397:18;::::0;::::1;393:2;:22;385:30;367:5;:49::i;:::-;244:179:::0;2720:55;2679:400;;10022:88:3;10082:9;:21;;-1:-1:-1;;10082:21:3;;;;;;;;;;;;10022:88::o;7835:370::-;-1:-1:-1;;;;;7918:21:3;;7910:65;;;;;-1:-1:-1;;;7910:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:3;;:9;:18;;;;;;;;;;;;:30;;8139:6;;8116:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8095:18:3;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;:9;;8161:37;;;;;;;;;;7835:370;;:::o;536:280:15:-;-1:-1:-1;;;;;690:12:15;;;;;;:8;:12;;;;;;;;689:13;681:74;;;;-1:-1:-1;;;681:74:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:44;792:4;798:2;802:6;765:26;;;;;:44;;:::i;:::-;536:280;;;:::o;874:176:2:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:2:o;2679:400:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2679:400:15;;;-1:-1:-1;2679:400:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/test/Token.sol",
  "type": "contract"
}