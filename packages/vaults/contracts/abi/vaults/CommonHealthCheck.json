{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtOutstanding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtOutstanding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "checks",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disabledCheck",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "doHealthCheck",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "enableCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lossLimitRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "management",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profitLimitRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_check",
          "type": "address"
        }
      ],
      "name": "setCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "disabled",
          "type": "bool"
        }
      ],
      "name": "setDisabledCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_management",
          "type": "address"
        }
      ],
      "name": "setManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_profitLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setProfitLimitRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profitLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lossLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setStrategyLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lossLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setlossLimitRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategiesLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profitLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lossLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/CommonHealthCheck.sol",
    "11": "contracts/interfaces/ICustomHealthCheck.sol",
    "8": "contracts/BaseStrategy.sol"
  },
  "ast": {
    "absolutePath": "contracts/CommonHealthCheck.sol",
    "exportedSymbols": {
      "CommonHealthCheck": [
        2791
      ],
      "Limits": [
        2333
      ]
    },
    "id": 2792,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2322,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:10"
      },
      {
        "absolutePath": "contracts/interfaces/ICustomHealthCheck.sol",
        "file": "./interfaces/ICustomHealthCheck.sol",
        "id": 2324,
        "nodeType": "ImportDirective",
        "scope": 2792,
        "sourceUnit": 2810,
        "src": "69:71:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2323,
              "name": "ICustomHealthCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "77:18:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseStrategy.sol",
        "file": "./BaseStrategy.sol",
        "id": 2326,
        "nodeType": "ImportDirective",
        "scope": 2792,
        "sourceUnit": 1374,
        "src": "141:47:10",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2325,
              "name": "StrategyAPI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "149:11:10",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "canonicalName": "Limits",
        "id": 2333,
        "members": [
          {
            "constant": false,
            "id": 2328,
            "mutability": "mutable",
            "name": "profitLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2333,
            "src": "210:24:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2327,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "210:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2330,
            "mutability": "mutable",
            "name": "lossLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2333,
            "src": "240:22:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2329,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2332,
            "mutability": "mutable",
            "name": "exists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2333,
            "src": "268:11:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2331,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "268:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "name": "Limits",
        "nodeType": "StructDefinition",
        "scope": 2792,
        "src": "190:92:10",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2791,
        "linearizedBaseContracts": [
          2791
        ],
        "name": "CommonHealthCheck",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2336,
            "mutability": "constant",
            "name": "MAX_BPS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "360:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31305f303030",
              "id": 2335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "387:6:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4a5d0943",
            "id": 2338,
            "mutability": "mutable",
            "name": "profitLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "399:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7d969932",
            "id": 2340,
            "mutability": "mutable",
            "name": "lossLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "436:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "436:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c9354337",
            "id": 2344,
            "mutability": "mutable",
            "name": "strategiesLimits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "471:50:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2333_storage_$",
              "typeString": "mapping(address => struct Limits)"
            },
            "typeName": {
              "id": 2343,
              "keyType": {
                "id": 2341,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:26:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2333_storage_$",
                "typeString": "mapping(address => struct Limits)"
              },
              "valueType": {
                "contractScope": null,
                "id": 2342,
                "name": "Limits",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2333,
                "src": "490:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Limits_$2333_storage_ptr",
                  "typeString": "struct Limits"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 2346,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "528:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2345,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88a8d602",
            "id": 2348,
            "mutability": "mutable",
            "name": "management",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "559:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2347,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "559:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27fff0db",
            "id": 2352,
            "mutability": "mutable",
            "name": "checks",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "591:41:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2351,
              "keyType": {
                "id": 2349,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "599:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "591:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 2350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "610:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "458add98",
            "id": 2356,
            "mutability": "mutable",
            "name": "disabledCheck",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2791,
            "src": "638:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2355,
              "keyType": {
                "id": 2353,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "646:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "638:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2354,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "657:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2367,
              "nodeType": "Block",
              "src": "716:76:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2359,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "734:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "734:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2361,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2346,
                          "src": "748:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "734:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "760:13:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 2358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "726:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2365,
                  "nodeType": "ExpressionStatement",
                  "src": "726:48:10"
                },
                {
                  "id": 2366,
                  "nodeType": "PlaceholderStatement",
                  "src": "784:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 2368,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:10"
            },
            "src": "690:102:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "824:104:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2371,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "842:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "842:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2373,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "856:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "842:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2375,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "870:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "870:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2377,
                            "name": "management",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2348,
                            "src": "884:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "870:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "842:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 2380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "896:13:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 2370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "834:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2382,
                  "nodeType": "ExpressionStatement",
                  "src": "834:76:10"
                },
                {
                  "id": 2383,
                  "nodeType": "PlaceholderStatement",
                  "src": "920:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 2385,
            "name": "onlyAuthorized",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:2:10"
            },
            "src": "798:130:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2402,
              "nodeType": "Block",
              "src": "971:95:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2390,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "989:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "989:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2393,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2387,
                                  "src": "1015:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2392,
                                "name": "StrategyAPI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "1003:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StrategyAPI_$263_$",
                                  "typeString": "type(contract StrategyAPI)"
                                }
                              },
                              "id": 2394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1003:21:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyAPI_$263",
                                "typeString": "contract StrategyAPI"
                              }
                            },
                            "id": 2395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 202,
                            "src": "1003:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1003:29:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "989:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:13:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 2389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "981:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "981:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2400,
                  "nodeType": "ExpressionStatement",
                  "src": "981:67:10"
                },
                {
                  "id": 2401,
                  "nodeType": "PlaceholderStatement",
                  "src": "1058:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 2403,
            "name": "onlyVault",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "953:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "952:18:10"
            },
            "src": "934:132:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "1093:133:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2406,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "1103:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2407,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1116:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1116:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1103:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2411,
                      "name": "management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "1136:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2412,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1149:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1149:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1136:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2415,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2416,
                      "name": "profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "1169:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 2417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1188:3:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1169:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2419,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2420,
                      "name": "lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2340,
                      "src": "1201:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1218:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1201:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2423,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:18:10"
                }
              ]
            },
            "documentation": null,
            "id": 2425,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:2:10"
            },
            "returnParameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:10"
            },
            "scope": 2791,
            "src": "1072:154:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2445,
              "nodeType": "Block",
              "src": "1300:85:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2433,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2427,
                          "src": "1318:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1341:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1333:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1333:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1333:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1318:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1310:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2440,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2441,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "1354:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2442,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
                      "src": "1367:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1354:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2444,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:24:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ab033ea9",
            "id": 2446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2430,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2429,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2368,
                  "src": "1285:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1285:14:10"
              }
            ],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2446,
                  "src": "1255:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:21:10"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:10"
            },
            "scope": 2791,
            "src": "1232:153:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "1459:85:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2454,
                          "name": "_management",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2448,
                          "src": "1477:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1500:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1492:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1492:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1492:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1477:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1469:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1469:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2462,
                      "name": "management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "1513:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2463,
                      "name": "_management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2448,
                      "src": "1526:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1513:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:24:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d4a22bde",
            "id": 2467,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2450,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2368,
                  "src": "1444:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1444:14:10"
              }
            ],
            "name": "setManagement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2448,
                  "mutability": "mutable",
                  "name": "_management",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2467,
                  "src": "1414:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1413:21:10"
            },
            "returnParameters": {
              "id": 2452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:0:10"
            },
            "scope": 2791,
            "src": "1391:153:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2484,
              "nodeType": "Block",
              "src": "1630:99:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2475,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "1648:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2476,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "1668:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1648:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1640:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2479,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2480,
                      "name": "profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "1686:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2481,
                      "name": "_profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "1705:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1686:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2483,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:36:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "950b3d73",
            "id": 2485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2472,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2471,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "1615:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1615:14:10"
              }
            ],
            "name": "setProfitLimitRatio",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2469,
                  "mutability": "mutable",
                  "name": "_profitLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2485,
                  "src": "1579:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:27:10"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:0:10"
            },
            "scope": 2791,
            "src": "1550:179:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "1811:93:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2493,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2487,
                          "src": "1829:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2494,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "1847:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1829:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1821:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2497,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2498,
                      "name": "lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2340,
                      "src": "1865:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "_lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1882:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1865:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:32:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef5ee02",
            "id": 2503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2490,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2489,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "1796:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1796:14:10"
              }
            ],
            "name": "setlossLimitRatio",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "_lossLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2503,
                  "src": "1762:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:25:10"
            },
            "returnParameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:10"
            },
            "scope": 2791,
            "src": "1735:169:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2536,
              "nodeType": "Block",
              "src": "2062:185:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2515,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "2080:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2516,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "2098:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2080:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2072:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2521,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2507,
                          "src": "2124:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2522,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2336,
                          "src": "2144:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2124:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2116:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "2116:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2526,
                        "name": "strategiesLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "2162:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2333_storage_$",
                          "typeString": "mapping(address => struct Limits storage ref)"
                        }
                      },
                      "id": 2528,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2527,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "2179:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2162:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2333_storage",
                        "typeString": "struct Limits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2530,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2507,
                          "src": "2199:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2531,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "2218:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2235:4:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2529,
                        "name": "Limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "2192:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Limits_$2333_storage_ptr_$",
                          "typeString": "type(struct Limits storage pointer)"
                        }
                      },
                      "id": 2533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2192:48:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2333_memory_ptr",
                        "typeString": "struct Limits memory"
                      }
                    },
                    "src": "2162:78:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Limits_$2333_storage",
                      "typeString": "struct Limits storage ref"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:78:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "00fd31f0",
            "id": 2537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2511,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "2047:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2047:14:10"
              }
            ],
            "name": "setStrategyLimits",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2505,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2537,
                  "src": "1946:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "mutability": "mutable",
                  "name": "_profitLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2537,
                  "src": "1973:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "mutability": "mutable",
                  "name": "_lossLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2537,
                  "src": "2008:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1936:101:10"
            },
            "returnParameters": {
              "id": 2513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2062:0:10"
            },
            "scope": 2791,
            "src": "1910:337:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2552,
              "nodeType": "Block",
              "src": "2330:43:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2546,
                        "name": "checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2352,
                        "src": "2340:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2548,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2547,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "2347:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2340:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2549,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "2360:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2340:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2551,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:26:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1afdc5a2",
            "id": 2553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2544,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2543,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "2315:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2315:14:10"
              }
            ],
            "name": "setCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2553,
                  "src": "2271:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "_check",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2553,
                  "src": "2290:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2290:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2270:35:10"
            },
            "returnParameters": {
              "id": 2545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2330:0:10"
            },
            "scope": 2791,
            "src": "2253:120:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2567,
              "nodeType": "Block",
              "src": "2449:49:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2561,
                        "name": "disabledCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "2459:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2563,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2562,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2555,
                        "src": "2473:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2459:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2486:5:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2459:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "2459:32:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "039aa250",
            "id": 2568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2558,
                    "name": "_strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2555,
                    "src": "2438:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2559,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2557,
                  "name": "onlyVault",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2403,
                  "src": "2428:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2428:20:10"
              }
            ],
            "name": "enableCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2568,
                  "src": "2400:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2399:19:10"
            },
            "returnParameters": {
              "id": 2560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2449:0:10"
            },
            "scope": 2791,
            "src": "2379:119:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "2588:52:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2577,
                        "name": "disabledCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "2598:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2579,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "2612:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2598:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2580,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2572,
                      "src": "2625:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2598:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:35:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9abf315b",
            "id": 2584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2574,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "2573:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2573:14:10"
              }
            ],
            "name": "setDisabledCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2584,
                  "src": "2530:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2572,
                  "mutability": "mutable",
                  "name": "disabled",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2584,
                  "src": "2549:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2529:34:10"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:10"
            },
            "scope": 2791,
            "src": "2504:136:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2596,
              "nodeType": "Block",
              "src": "2717:49:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2734:25:10",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2591,
                        "name": "disabledCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "2735:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2593,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2592,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "2749:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2735:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2590,
                  "id": 2595,
                  "nodeType": "Return",
                  "src": "2727:32:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6e905e17",
            "id": 2597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doHealthCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2597,
                  "src": "2669:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:19:10"
            },
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2597,
                  "src": "2711:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2710:6:10"
            },
            "scope": 2791,
            "src": "2646:120:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2626,
              "nodeType": "Block",
              "src": "2957:139:10",
              "statements": [
                {
                  "assignments": [
                    2613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2613,
                      "mutability": "mutable",
                      "name": "strategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2626,
                      "src": "2967:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2612,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2967:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2616,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2614,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2986:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2986:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2967:29:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2618,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "3025:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2619,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2599,
                        "src": "3035:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2620,
                        "name": "loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2601,
                        "src": "3043:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2621,
                        "name": "debtPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "3049:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2622,
                        "name": "debtOutstanding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2605,
                        "src": "3062:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2623,
                        "name": "totalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "3079:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2617,
                      "name": "_runChecks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2713,
                      "src": "3014:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256) view returns (bool)"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3014:75:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2611,
                  "id": 2625,
                  "nodeType": "Return",
                  "src": "3007:82:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c70fa00b",
            "id": 2627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2599,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2796:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2601,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2820:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2603,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2842:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2605,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2871:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2607,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2904:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2786:141:10"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2610,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2627,
                  "src": "2951:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:6:10"
            },
            "scope": 2791,
            "src": "2772:324:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2662,
              "nodeType": "Block",
              "src": "3313:141:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2645,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2629,
                          "src": "3331:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3351:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3343:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2646,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3343:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3343:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3331:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3323:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "3323:31:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2654,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2629,
                        "src": "3383:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2655,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "3393:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2656,
                        "name": "loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2633,
                        "src": "3401:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2657,
                        "name": "debtPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "3407:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2658,
                        "name": "debtOutstanding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3420:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2659,
                        "name": "totalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2639,
                        "src": "3437:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2653,
                      "name": "_runChecks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2713,
                      "src": "3372:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256) view returns (bool)"
                      }
                    },
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3372:75:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2643,
                  "id": 2661,
                  "nodeType": "Return",
                  "src": "3365:82:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06bfaf04",
            "id": 2663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2629,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3126:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3126:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3152:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3176:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3198:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3198:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3227:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3227:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3260:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3116:167:10"
            },
            "returnParameters": {
              "id": 2643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2663,
                  "src": "3307:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3306:6:10"
            },
            "scope": 2791,
            "src": "3102:352:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2712,
              "nodeType": "Block",
              "src": "3676:292:10",
              "statements": [
                {
                  "assignments": [
                    2681
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2681,
                      "mutability": "mutable",
                      "name": "customCheck",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2712,
                      "src": "3686:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2680,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3686:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2685,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2682,
                      "name": "checks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2352,
                      "src": "3708:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2684,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2683,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "3715:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3708:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3686:38:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2686,
                      "name": "customCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2681,
                      "src": "3739:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3762:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3754:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2687,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3754:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3754:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3739:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2700,
                  "nodeType": "IfStatement",
                  "src": "3735:118:10",
                  "trueBody": {
                    "id": 2699,
                    "nodeType": "Block",
                    "src": "3766:87:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2693,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2665,
                              "src": "3808:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2694,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2667,
                              "src": "3818:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2695,
                              "name": "loss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2669,
                              "src": "3826:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2696,
                              "name": "totalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2675,
                              "src": "3832:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2692,
                            "name": "_executeDefaultCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2790,
                            "src": "3787:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3787:55:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2679,
                        "id": 2698,
                        "nodeType": "Return",
                        "src": "3780:62:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2705,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2665,
                        "src": "3908:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2706,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "3918:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2707,
                        "name": "loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "3926:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2708,
                        "name": "debtPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "3932:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2709,
                        "name": "debtOutstanding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "3945:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2702,
                            "name": "customCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2681,
                            "src": "3889:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2701,
                          "name": "ICustomHealthCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2809,
                          "src": "3870:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICustomHealthCheck_$2809_$",
                            "typeString": "type(contract ICustomHealthCheck)"
                          }
                        },
                        "id": 2703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3870:31:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICustomHealthCheck_$2809",
                          "typeString": "contract ICustomHealthCheck"
                        }
                      },
                      "id": 2704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "check",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2808,
                      "src": "3870:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256) view external returns (bool)"
                      }
                    },
                    "id": 2710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:91:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2679,
                  "id": 2711,
                  "nodeType": "Return",
                  "src": "3863:98:10"
                }
              ]
            },
            "documentation": null,
            "id": 2713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_runChecks",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3489:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3489:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3515:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3539:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2671,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3561:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3590:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3623:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3479:167:10"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2713,
                  "src": "3670:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2677,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3670:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3669:6:10"
            },
            "scope": 2791,
            "src": "3460:508:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2789,
              "nodeType": "Block",
              "src": "4141:626:10",
              "statements": [
                {
                  "assignments": [
                    2727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2727,
                      "mutability": "mutable",
                      "name": "limits",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2789,
                      "src": "4151:20:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2333_memory_ptr",
                        "typeString": "struct Limits"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2726,
                        "name": "Limits",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2333,
                        "src": "4151:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Limits_$2333_storage_ptr",
                          "typeString": "struct Limits"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2731,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2728,
                      "name": "strategiesLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "4174:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2333_storage_$",
                        "typeString": "mapping(address => struct Limits storage ref)"
                      }
                    },
                    "id": 2730,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2729,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2715,
                      "src": "4191:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4174:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Limits_$2333_storage",
                      "typeString": "struct Limits storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4151:49:10"
                },
                {
                  "assignments": [
                    2733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2733,
                      "mutability": "mutable",
                      "name": "_profitLimitRatio",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2789,
                      "src": "4210:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4210:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2734,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4210:25:10"
                },
                {
                  "assignments": [
                    2736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2736,
                      "mutability": "mutable",
                      "name": "_lossLimitRatio",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2789,
                      "src": "4245:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4245:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2737,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4245:23:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2738,
                      "name": "limits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2727,
                      "src": "4282:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2333_memory_ptr",
                        "typeString": "struct Limits memory"
                      }
                    },
                    "id": 2739,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2332,
                    "src": "4282:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2759,
                    "nodeType": "Block",
                    "src": "4424:107:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2751,
                            "name": "_profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2733,
                            "src": "4438:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2752,
                            "name": "profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "4458:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4438:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2754,
                        "nodeType": "ExpressionStatement",
                        "src": "4438:36:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2755,
                            "name": "_lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2736,
                            "src": "4488:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2756,
                            "name": "lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "4506:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4488:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2758,
                        "nodeType": "ExpressionStatement",
                        "src": "4488:32:10"
                      }
                    ]
                  },
                  "id": 2760,
                  "nodeType": "IfStatement",
                  "src": "4278:253:10",
                  "trueBody": {
                    "id": 2750,
                    "nodeType": "Block",
                    "src": "4297:121:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2740,
                            "name": "_profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2733,
                            "src": "4311:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2741,
                              "name": "limits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2727,
                              "src": "4331:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Limits_$2333_memory_ptr",
                                "typeString": "struct Limits memory"
                              }
                            },
                            "id": 2742,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "profitLimitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2328,
                            "src": "4331:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4311:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2744,
                        "nodeType": "ExpressionStatement",
                        "src": "4311:43:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2745,
                            "name": "_lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2736,
                            "src": "4368:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2746,
                              "name": "limits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2727,
                              "src": "4386:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Limits_$2333_memory_ptr",
                                "typeString": "struct Limits memory"
                              }
                            },
                            "id": 2747,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lossLimitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2330,
                            "src": "4386:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4368:39:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2749,
                        "nodeType": "ExpressionStatement",
                        "src": "4368:39:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2761,
                      "name": "_profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2717,
                      "src": "4545:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2762,
                                  "name": "_totalDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2721,
                                  "src": "4557:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2763,
                                  "name": "_profitLimitRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2733,
                                  "src": "4570:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4557:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2765,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4556:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2766,
                            "name": "MAX_BPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "4591:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4556:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2768,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4555:44:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4545:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2773,
                  "nodeType": "IfStatement",
                  "src": "4541:97:10",
                  "trueBody": {
                    "id": 2772,
                    "nodeType": "Block",
                    "src": "4601:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4622:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2725,
                        "id": 2771,
                        "nodeType": "Return",
                        "src": "4615:12:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2774,
                      "name": "_loss",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2719,
                      "src": "4651:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2775,
                                  "name": "_totalDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2721,
                                  "src": "4661:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2776,
                                  "name": "_lossLimitRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2736,
                                  "src": "4674:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4661:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2778,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4660:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2779,
                            "name": "MAX_BPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "4693:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4660:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2781,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4659:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4651:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2786,
                  "nodeType": "IfStatement",
                  "src": "4647:93:10",
                  "trueBody": {
                    "id": 2785,
                    "nodeType": "Block",
                    "src": "4703:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4724:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2725,
                        "id": 2784,
                        "nodeType": "Return",
                        "src": "4717:12:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4756:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2725,
                  "id": 2788,
                  "nodeType": "Return",
                  "src": "4749:11:10"
                }
              ]
            },
            "documentation": null,
            "id": 2790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeDefaultCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2715,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2790,
                  "src": "4013:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2717,
                  "mutability": "mutable",
                  "name": "_profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2790,
                  "src": "4039:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "_loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2790,
                  "src": "4064:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "_totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2790,
                  "src": "4087:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4087:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4003:108:10"
            },
            "returnParameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2790,
                  "src": "4135:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4135:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4134:6:10"
            },
            "scope": 2791,
            "src": "3974:793:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2792,
        "src": "284:4485:10"
      }
    ],
    "src": "36:4734:10"
  },
  "bytecode": "608060405234801561001057600080fd5b50600380546001600160a01b031990811633908117909255600480549091169091179055606460005560018055610b628061004c6000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80636e905e17116100a25780639abf315b116100715780639abf315b146102f4578063ab033ea914610322578063c70fa00b14610348578063c93543371461037d578063d4a22bde146103c357610115565b80636e905e17146102a15780637d969932146102c757806388a8d602146102cf578063950b3d73146102d757610115565b80631afdc5a2116100e95780631afdc5a2146101e957806327fff0db14610217578063458add98146102595780634a5d09431461027f5780635aa6e6751461029957610115565b8062fd31f01461011a578063039aa2501461014e57806306bfaf04146101745780630ef5ee02146101cc575b600080fd5b61014c6004803603606081101561013057600080fd5b506001600160a01b0381351690602081013590604001356103e9565b005b61014c6004803603602081101561016457600080fd5b50356001600160a01b03166104be565b6101b8600480360360c081101561018a57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a00135610590565b604080519115158252519081900360200190f35b61014c600480360360208110156101e257600080fd5b50356105c0565b61014c600480360360408110156101ff57600080fd5b506001600160a01b0381358116916020013516610635565b61023d6004803603602081101561022d57600080fd5b50356001600160a01b03166106c5565b604080516001600160a01b039092168252519081900360200190f35b6101b86004803603602081101561026f57600080fd5b50356001600160a01b03166106e0565b6102876106f5565b60408051918252519081900360200190f35b61023d6106fb565b6101b8600480360360208110156102b757600080fd5b50356001600160a01b031661070a565b610287610729565b61023d61072f565b61014c600480360360208110156102ed57600080fd5b503561073e565b61014c6004803603604081101561030a57600080fd5b506001600160a01b03813516906020013515156107b3565b61014c6004803603602081101561033857600080fd5b50356001600160a01b0316610840565b6101b8600480360360a081101561035e57600080fd5b50803590602081013590604081013590606081013590608001356108c2565b6103a36004803603602081101561039357600080fd5b50356001600160a01b03166108de565b604080519384526020840192909252151582820152519081900360600190f35b61014c600480360360208110156103d957600080fd5b50356001600160a01b0316610901565b6003546001600160a01b031633148061040c57506004546001600160a01b031633145b61044b576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b612710811061045957600080fd5b612710821061046757600080fd5b60408051606081018252928352602080840192835260018483018181526001600160a01b03969096166000908152600292839052929092209351845591519083015591519101805460ff1916911515919091179055565b80806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d602081101561052257600080fd5b50516001600160a01b0316331461056e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b506001600160a01b03166000908152600660205260409020805460ff19169055565b60006001600160a01b0387166105a557600080fd5b6105b3878787878787610983565b90505b9695505050505050565b6003546001600160a01b03163314806105e357506004546001600160a01b031633145b610622576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b612710811061063057600080fd5b600155565b6003546001600160a01b031633148061065857506004546001600160a01b031633145b610697576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6005602052600090815260409020546001600160a01b031681565b60066020526000908152604090205460ff1681565b60005481565b6003546001600160a01b031681565b6001600160a01b031660009081526006602052604090205460ff161590565b60015481565b6004546001600160a01b031681565b6003546001600160a01b031633148061076157506004546001600160a01b031633145b6107a0576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b61271081106107ae57600080fd5b600055565b6003546001600160a01b03163314806107d657506004546001600160a01b031633145b610815576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6003546001600160a01b0316331461088d576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b0381166108a057600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000336108d3818888888888610983565b979650505050505050565b600260208190526000918252604090912080546001820154919092015460ff1683565b6003546001600160a01b0316331461094e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03811661096157600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03808716600090815260056020526040812054909116806109b9576109b188888886610a57565b9150506105b6565b6040805163022c80df60e51b81526001600160a01b038a81166004830152602482018a90526044820189905260648201889052608482018790529151918316916345901be09160a480820192602092909190829003018186803b158015610a1f57600080fd5b505afa158015610a33573d6000803e3d6000fd5b505050506040513d6020811015610a4957600080fd5b505198975050505050505050565b6000610a61610b09565b506001600160a01b03851660009081526002602081815260408084208151606081018352815481526001820154938101939093529092015460ff161580159282019290925291908190610abc57505080516020820151610ac5565b50506000546001545b61271085830204871115610adf5760009350505050610b01565b61271085820204861115610af95760009350505050610b01565b600193505050505b949350505050565b60405180606001604052806000815260200160008152602001600015158152509056fea264697066735822122090fc59dbf1b41e0de1a3e855a2f925c9c14a8e56c1846f59c38ea74474127ad064736f6c634300060c0033",
  "bytecodeSha1": "9b961f15ec8959029b35402f74df4506783e27fc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CommonHealthCheck",
  "coverageMap": {
    "branches": {
      "10": {
        "CommonHealthCheck._executeDefaultCheck": {
          "36": [
            4545,
            4599,
            false
          ],
          "37": [
            4651,
            4701,
            false
          ]
        },
        "CommonHealthCheck._runChecks": {
          "35": [
            3739,
            3764,
            false
          ]
        },
        "CommonHealthCheck.check": {
          "29": [
            3331,
            3353,
            true
          ]
        },
        "CommonHealthCheck.setDisabledCheck": {
          "32": [
            842,
            866,
            true
          ]
        },
        "CommonHealthCheck.setGovernance": {
          "33": [
            1318,
            1343,
            true
          ]
        },
        "CommonHealthCheck.setManagement": {
          "34": [
            1477,
            1502,
            true
          ]
        },
        "CommonHealthCheck.setProfitLimitRatio": {
          "31": [
            1648,
            1675,
            true
          ]
        },
        "CommonHealthCheck.setStrategyLimits": {
          "27": [
            2080,
            2105,
            true
          ],
          "28": [
            2124,
            2151,
            true
          ]
        },
        "CommonHealthCheck.setlossLimitRatio": {
          "30": [
            1829,
            1854,
            true
          ]
        }
      },
      "11": {},
      "8": {}
    },
    "statements": {
      "10": {
        "CommonHealthCheck._executeDefaultCheck": {
          "20": [
            4311,
            4354
          ],
          "21": [
            4368,
            4407
          ],
          "22": [
            4438,
            4474
          ],
          "23": [
            4488,
            4520
          ],
          "24": [
            4615,
            4627
          ],
          "25": [
            4717,
            4729
          ],
          "26": [
            4749,
            4760
          ]
        },
        "CommonHealthCheck._runChecks": {
          "18": [
            3780,
            3842
          ],
          "19": [
            3863,
            3961
          ]
        },
        "CommonHealthCheck.check": {
          "4": [
            3323,
            3354
          ],
          "5": [
            3365,
            3447
          ],
          "15": [
            3007,
            3089
          ]
        },
        "CommonHealthCheck.doHealthCheck": {
          "9": [
            2727,
            2759
          ]
        },
        "CommonHealthCheck.enableCheck": {
          "3": [
            2459,
            2491
          ]
        },
        "CommonHealthCheck.setCheck": {
          "8": [
            2340,
            2366
          ]
        },
        "CommonHealthCheck.setDisabledCheck": {
          "12": [
            2598,
            2633
          ]
        },
        "CommonHealthCheck.setGovernance": {
          "13": [
            1310,
            1344
          ],
          "14": [
            1354,
            1378
          ]
        },
        "CommonHealthCheck.setManagement": {
          "16": [
            1469,
            1503
          ],
          "17": [
            1513,
            1537
          ]
        },
        "CommonHealthCheck.setProfitLimitRatio": {
          "10": [
            1640,
            1676
          ],
          "11": [
            1686,
            1722
          ]
        },
        "CommonHealthCheck.setStrategyLimits": {
          "0": [
            2072,
            2106
          ],
          "1": [
            2116,
            2152
          ],
          "2": [
            2162,
            2240
          ]
        },
        "CommonHealthCheck.setlossLimitRatio": {
          "6": [
            1821,
            1855
          ],
          "7": [
            1865,
            1897
          ]
        }
      },
      "11": {},
      "8": {}
    }
  },
  "dependencies": [
    "ICustomHealthCheck",
    "StrategyAPI"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101155760003560e01c80636e905e17116100a25780639abf315b116100715780639abf315b146102f4578063ab033ea914610322578063c70fa00b14610348578063c93543371461037d578063d4a22bde146103c357610115565b80636e905e17146102a15780637d969932146102c757806388a8d602146102cf578063950b3d73146102d757610115565b80631afdc5a2116100e95780631afdc5a2146101e957806327fff0db14610217578063458add98146102595780634a5d09431461027f5780635aa6e6751461029957610115565b8062fd31f01461011a578063039aa2501461014e57806306bfaf04146101745780630ef5ee02146101cc575b600080fd5b61014c6004803603606081101561013057600080fd5b506001600160a01b0381351690602081013590604001356103e9565b005b61014c6004803603602081101561016457600080fd5b50356001600160a01b03166104be565b6101b8600480360360c081101561018a57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a00135610590565b604080519115158252519081900360200190f35b61014c600480360360208110156101e257600080fd5b50356105c0565b61014c600480360360408110156101ff57600080fd5b506001600160a01b0381358116916020013516610635565b61023d6004803603602081101561022d57600080fd5b50356001600160a01b03166106c5565b604080516001600160a01b039092168252519081900360200190f35b6101b86004803603602081101561026f57600080fd5b50356001600160a01b03166106e0565b6102876106f5565b60408051918252519081900360200190f35b61023d6106fb565b6101b8600480360360208110156102b757600080fd5b50356001600160a01b031661070a565b610287610729565b61023d61072f565b61014c600480360360208110156102ed57600080fd5b503561073e565b61014c6004803603604081101561030a57600080fd5b506001600160a01b03813516906020013515156107b3565b61014c6004803603602081101561033857600080fd5b50356001600160a01b0316610840565b6101b8600480360360a081101561035e57600080fd5b50803590602081013590604081013590606081013590608001356108c2565b6103a36004803603602081101561039357600080fd5b50356001600160a01b03166108de565b604080519384526020840192909252151582820152519081900360600190f35b61014c600480360360208110156103d957600080fd5b50356001600160a01b0316610901565b6003546001600160a01b031633148061040c57506004546001600160a01b031633145b61044b576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b612710811061045957600080fd5b612710821061046757600080fd5b60408051606081018252928352602080840192835260018483018181526001600160a01b03969096166000908152600292839052929092209351845591519083015591519101805460ff1916911515919091179055565b80806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d602081101561052257600080fd5b50516001600160a01b0316331461056e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b506001600160a01b03166000908152600660205260409020805460ff19169055565b60006001600160a01b0387166105a557600080fd5b6105b3878787878787610983565b90505b9695505050505050565b6003546001600160a01b03163314806105e357506004546001600160a01b031633145b610622576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b612710811061063057600080fd5b600155565b6003546001600160a01b031633148061065857506004546001600160a01b031633145b610697576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6005602052600090815260409020546001600160a01b031681565b60066020526000908152604090205460ff1681565b60005481565b6003546001600160a01b031681565b6001600160a01b031660009081526006602052604090205460ff161590565b60015481565b6004546001600160a01b031681565b6003546001600160a01b031633148061076157506004546001600160a01b031633145b6107a0576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b61271081106107ae57600080fd5b600055565b6003546001600160a01b03163314806107d657506004546001600160a01b031633145b610815576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6003546001600160a01b0316331461088d576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b0381166108a057600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000336108d3818888888888610983565b979650505050505050565b600260208190526000918252604090912080546001820154919092015460ff1683565b6003546001600160a01b0316331461094e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6001600160a01b03811661096157600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03808716600090815260056020526040812054909116806109b9576109b188888886610a57565b9150506105b6565b6040805163022c80df60e51b81526001600160a01b038a81166004830152602482018a90526044820189905260648201889052608482018790529151918316916345901be09160a480820192602092909190829003018186803b158015610a1f57600080fd5b505afa158015610a33573d6000803e3d6000fd5b505050506040513d6020811015610a4957600080fd5b505198975050505050505050565b6000610a61610b09565b506001600160a01b03851660009081526002602081815260408084208151606081018352815481526001820154938101939093529092015460ff161580159282019290925291908190610abc57505080516020820151610ac5565b50506000546001545b61271085830204871115610adf5760009350505050610b01565b61271085820204861115610af95760009350505050610b01565b600193505050505b949350505050565b60405180606001604052806000815260200160008152602001600015158152509056fea264697066735822122090fc59dbf1b41e0de1a3e855a2f925c9c14a8e56c1846f59c38ea74474127ad064736f6c634300060c0033",
  "deployedSourceMap": "284:4485:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:337;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1910:337:10;;;;;;;;;;;;;:::i;:::-;;2379:119;;;;;;;;;;;;;;;;-1:-1:-1;2379:119:10;-1:-1:-1;;;;;2379:119:10;;:::i;3102:352::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3102:352:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1735:169;;;;;;;;;;;;;;;;-1:-1:-1;1735:169:10;;:::i;2253:120::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2253:120:10;;;;;;;;;;:::i;591:41::-;;;;;;;;;;;;;;;;-1:-1:-1;591:41:10;-1:-1:-1;;;;;591:41:10;;:::i;:::-;;;;-1:-1:-1;;;;;591:41:10;;;;;;;;;;;;;;638:45;;;;;;;;;;;;;;;;-1:-1:-1;638:45:10;-1:-1:-1;;;;;638:45:10;;:::i;399:31::-;;;:::i;:::-;;;;;;;;;;;;;;;;528:25;;;:::i;2646:120::-;;;;;;;;;;;;;;;;-1:-1:-1;2646:120:10;-1:-1:-1;;;;;2646:120:10;;:::i;436:29::-;;;:::i;559:25::-;;;:::i;1550:179::-;;;;;;;;;;;;;;;;-1:-1:-1;1550:179:10;;:::i;2504:136::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2504:136:10;;;;;;;;;;:::i;1232:153::-;;;;;;;;;;;;;;;;-1:-1:-1;1232:153:10;-1:-1:-1;;;;;1232:153:10;;:::i;2772:324::-;;;;;;;;;;;;;;;;-1:-1:-1;2772:324:10;;;;;;;;;;;;;;;;;;;;;;:::i;471:50::-;;;;;;;;;;;;;;;;-1:-1:-1;471:50:10;-1:-1:-1;;;;;471:50:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:153;;;;;;;;;;;;;;;;-1:-1:-1;1391:153:10;-1:-1:-1;;;;;1391:153:10;;:::i;1910:337::-;856:10;;-1:-1:-1;;;;;856:10:10;842;:24;;:52;;-1:-1:-1;884:10:10;;-1:-1:-1;;;;;884:10:10;870;:24;842:52;834:76;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;;;;387:6:::1;2080:15;:25;2072:34;;;::::0;::::1;;387:6;2124:17;:27;2116:36;;;::::0;::::1;;2192:48;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;2235:4:::1;2192:48:::0;;;;;;-1:-1:-1;;;;;2162:27:10;;;::::1;-1:-1:-1::0;2162:27:10;;;:16:::1;:27:::0;;;;;;;;:78;;;;;;;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;2162:78:10::1;::::0;::::1;;::::0;;;::::1;::::0;;1910:337::o;2379:119::-;2438:9;1015:8;-1:-1:-1;;;;;1003:27:10;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1003:29:10;-1:-1:-1;;;;;989:43:10;:10;:43;981:67;;;;;-1:-1:-1;;;981:67:10;;;;;;;;;;;;-1:-1:-1;;;981:67:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2459:24:10::1;2486:5;2459:24:::0;;;:13:::1;:24;::::0;;;;:32;;-1:-1:-1;;2459:32:10::1;::::0;;2379:119::o;3102:352::-;3307:4;-1:-1:-1;;;;;3331:22:10;;3323:31;;;;;;3372:75;3383:8;3393:6;3401:4;3407:11;3420:15;3437:9;3372:10;:75::i;:::-;3365:82;;3102:352;;;;;;;;;:::o;1735:169::-;856:10;;-1:-1:-1;;;;;856:10:10;842;:24;;:52;;-1:-1:-1;884:10:10;;-1:-1:-1;;;;;884:10:10;870;:24;842:52;834:76;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;;;;387:6:::1;1829:15;:25;1821:34;;;::::0;::::1;;1865:14;:32:::0;1735:169::o;2253:120::-;856:10;;-1:-1:-1;;;;;856:10:10;842;:24;;:52;;-1:-1:-1;884:10:10;;-1:-1:-1;;;;;884:10:10;870;:24;842:52;834:76;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;2340:17:10;;::::1;;::::0;;;:6:::1;:17;::::0;;;;:26;;-1:-1:-1;;;;;;2340:26:10::1;::::0;;;::::1;;::::0;;2253:120::o;591:41::-;;;;;;;;;;;;-1:-1:-1;;;;;591:41:10;;:::o;638:45::-;;;;;;;;;;;;;;;:::o;399:31::-;;;;:::o;528:25::-;;;-1:-1:-1;;;;;528:25:10;;:::o;2646:120::-;-1:-1:-1;;;;;2735:24:10;2711:4;2735:24;;;:13;:24;;;;;;;;2734:25;;2646:120::o;436:29::-;;;;:::o;559:25::-;;;-1:-1:-1;;;;;559:25:10;;:::o;1550:179::-;856:10;;-1:-1:-1;;;;;856:10:10;842;:24;;:52;;-1:-1:-1;884:10:10;;-1:-1:-1;;;;;884:10:10;870;:24;842:52;834:76;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;;;;387:6:::1;1648:17;:27;1640:36;;;::::0;::::1;;1686:16;:36:::0;1550:179::o;2504:136::-;856:10;;-1:-1:-1;;;;;856:10:10;842;:24;;:52;;-1:-1:-1;884:10:10;;-1:-1:-1;;;;;884:10:10;870;:24;842:52;834:76;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;-1:-1:-1;;;834:76:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;2598:24:10;;;::::1;;::::0;;;:13:::1;:24;::::0;;;;:35;;-1:-1:-1;;2598:35:10::1;::::0;::::1;;::::0;;;::::1;::::0;;2504:136::o;1232:153::-;748:10;;-1:-1:-1;;;;;748:10:10;734;:24;726:48;;;;;-1:-1:-1;;;726:48:10;;;;;;;;;;;;-1:-1:-1;;;726:48:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;1318:25:10;::::1;1310:34;;;::::0;::::1;;1354:10;:24:::0;;-1:-1:-1;;;;;;1354:24:10::1;-1:-1:-1::0;;;;;1354:24:10;;;::::1;::::0;;;::::1;::::0;;1232:153::o;2772:324::-;2951:4;2986:10;3014:75;2986:10;3035:6;3043:4;3049:11;3062:15;3079:9;3014:10;:75::i;:::-;3007:82;2772:324;-1:-1:-1;;;;;;;2772:324:10:o;471:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1391:153::-;748:10;;-1:-1:-1;;;;;748:10:10;734;:24;726:48;;;;;-1:-1:-1;;;726:48:10;;;;;;;;;;;;-1:-1:-1;;;726:48:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;1477:25:10;::::1;1469:34;;;::::0;::::1;;1513:10;:24:::0;;-1:-1:-1;;;;;;1513:24:10::1;-1:-1:-1::0;;;;;1513:24:10;;;::::1;::::0;;;::::1;::::0;;1391:153::o;3460:508::-;-1:-1:-1;;;;;3708:16:10;;;3670:4;3708:16;;;:6;:16;;;;;;3670:4;;3708:16;3739:25;3735:118;;3787:55;3808:8;3818:6;3826:4;3832:9;3787:20;:55::i;:::-;3780:62;;;;;3735:118;3870:91;;;-1:-1:-1;;;3870:91:10;;-1:-1:-1;;;;;3870:91:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;;;:91;;;;;;;;;;;;;;;:37;:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3870:91:10;;3460:508;-1:-1:-1;;;;;;;;3460:508:10:o;3974:793::-;4135:4;4151:20;;:::i;:::-;-1:-1:-1;;;;;;4174:26:10;;;;;;:16;:26;;;;;;;;4151:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:26;;;4278:253;;-1:-1:-1;;4331:23:10;;4386:21;;;;4278:253;;;-1:-1:-1;;4458:16:10;;4506:14;;4278:253;387:6;4557:30;;;4556:42;4545:7;:54;4541:97;;;4622:5;4615:12;;;;;;;4541:97;387:6;4661:28;;;4660:40;4651:5;:50;4647:93;;;4724:5;4717:12;;;;;;;4647:93;4756:4;4749:11;;;;;3974:793;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    284,
    4769
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E905E17 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9ABF315B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9ABF315B EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC70FA00B EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xC9354337 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xD4A22BDE EQ PUSH2 0x3C3 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x6E905E17 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x7D969932 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x88A8D602 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x950B3D73 EQ PUSH2 0x2D7 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x1AFDC5A2 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x1AFDC5A2 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x27FFF0DB EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x458ADD98 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x4A5D0943 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x299 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0xFD31F0 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x39AA250 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6BFAF04 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xEF5EE02 EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BE JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x635 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x70A JUMP JUMPDEST PUSH2 0x287 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x72F JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x73E JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x901 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x40C JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x44B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 LT PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP5 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP3 DUP4 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD SWAP1 DUP4 ADD SSTORE SWAP2 MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x56E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B3 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x5E3 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x622 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x658 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x697 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x761 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x7A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x7D6 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x815 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8D3 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x983 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x94E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 PUSH2 0x9B9 JUMPI PUSH2 0x9B1 DUP9 DUP9 DUP9 DUP7 PUSH2 0xA57 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x22C80DF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x45901BE0 SWAP2 PUSH1 0xA4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 PUSH2 0xB09 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0xABC JUMPI POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xAC5 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD JUMPDEST PUSH2 0x2710 DUP6 DUP4 MUL DIV DUP8 GT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x2710 DUP6 DUP3 MUL DIV DUP7 GT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xFC MSIZE 0xDB CALL 0xB4 0x1E 0xD 0xE1 LOG3 0xE8 SSTORE LOG2 0xF9 0x25 0xC9 0xC1 0x4A DUP15 JUMP 0xC1 DUP5 PUSH16 0x59C38EA74474127AD064736F6C634300 MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "25": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6E905E17"
    },
    "38": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9ABF315B"
    },
    "49": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9ABF315B"
    },
    "60": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F4"
    },
    "64": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAB033EA9"
    },
    "71": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x322"
    },
    "75": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC70FA00B"
    },
    "82": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x348"
    },
    "86": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC9354337"
    },
    "93": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37D"
    },
    "97": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD4A22BDE"
    },
    "104": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C3"
    },
    "108": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "112": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6E905E17"
    },
    "120": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "124": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7D969932"
    },
    "131": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C7"
    },
    "135": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x88A8D602"
    },
    "142": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CF"
    },
    "146": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x950B3D73"
    },
    "153": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D7"
    },
    "157": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "161": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1AFDC5A2"
    },
    "169": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "GT",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1AFDC5A2"
    },
    "180": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E9"
    },
    "184": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x27FFF0DB"
    },
    "191": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x217"
    },
    "195": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x458ADD98"
    },
    "202": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x259"
    },
    "206": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4A5D0943"
    },
    "213": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27F"
    },
    "217": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5AA6E675"
    },
    "224": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x299"
    },
    "228": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "232": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "233": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xFD31F0"
    },
    "239": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "240": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11A"
    },
    "243": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "244": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39AA250"
    },
    "250": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "251": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14E"
    },
    "254": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "255": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "256": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6BFAF04"
    },
    "261": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "262": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x174"
    },
    "265": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "266": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "267": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEF5EE02"
    },
    "272": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "EQ",
      "path": "10"
    },
    "273": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CC"
    },
    "276": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "277": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "DUP1",
      "path": "10"
    },
    "281": {
      "first_revert": true,
      "fn": null,
      "offset": [
        284,
        4769
      ],
      "op": "REVERT",
      "path": "10"
    },
    "282": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "283": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "286": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "288": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "DUP1",
      "path": "10"
    },
    "289": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "290": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "SUB",
      "path": "10"
    },
    "291": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "293": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "DUP2",
      "path": "10"
    },
    "294": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "LT",
      "path": "10"
    },
    "295": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "296": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130"
    },
    "299": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "300": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "302": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "DUP1",
      "path": "10"
    },
    "303": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "REVERT",
      "path": "10"
    },
    "304": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "305": {
      "op": "POP"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "DUP2",
      "path": "10"
    },
    "315": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "316": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "AND",
      "path": "10"
    },
    "317": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "318": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "320": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "DUP2",
      "path": "10"
    },
    "321": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "ADD",
      "path": "10"
    },
    "322": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "323": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "324": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "326": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "ADD",
      "path": "10"
    },
    "327": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "328": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E9"
    },
    "331": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "i",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMP",
      "path": "10"
    },
    "332": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "333": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "STOP",
      "path": "10"
    },
    "334": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "335": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "338": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "340": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "341": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "342": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "SUB",
      "path": "10"
    },
    "343": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "345": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "DUP2",
      "path": "10"
    },
    "346": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "LT",
      "path": "10"
    },
    "347": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "348": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x164"
    },
    "351": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "352": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "354": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "DUP1",
      "path": "10"
    },
    "355": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "REVERT",
      "path": "10"
    },
    "356": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "SUB"
    },
    "367": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "AND",
      "path": "10"
    },
    "368": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4BE"
    },
    "371": {
      "fn": "CommonHealthCheck.enableCheck",
      "jump": "i",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMP",
      "path": "10"
    },
    "372": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "373": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "376": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "378": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP1",
      "path": "10"
    },
    "379": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "380": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SUB",
      "path": "10"
    },
    "381": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC0"
    },
    "383": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "384": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "LT",
      "path": "10"
    },
    "385": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "386": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18A"
    },
    "389": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "390": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "392": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP1",
      "path": "10"
    },
    "393": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "REVERT",
      "path": "10"
    },
    "394": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "395": {
      "op": "POP"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "405": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "406": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "AND",
      "path": "10"
    },
    "407": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "408": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "410": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "411": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "412": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "413": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "414": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "416": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "417": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "418": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "419": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "420": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "422": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "423": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "424": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "425": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "426": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "428": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "429": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "430": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "431": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "432": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "434": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "435": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "436": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x590"
    },
    "439": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMP",
      "path": "10"
    },
    "440": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "441": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "443": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP1",
      "path": "10"
    },
    "444": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "445": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "446": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "447": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "448": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP3",
      "path": "10"
    },
    "449": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "450": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "451": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "452": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "453": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "454": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SUB",
      "path": "10"
    },
    "455": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "457": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "ADD",
      "path": "10"
    },
    "458": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "459": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "RETURN",
      "path": "10"
    },
    "460": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "461": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "464": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "466": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "DUP1",
      "path": "10"
    },
    "467": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "468": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "SUB",
      "path": "10"
    },
    "469": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "471": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "DUP2",
      "path": "10"
    },
    "472": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "LT",
      "path": "10"
    },
    "473": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "474": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E2"
    },
    "477": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "478": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "480": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "DUP1",
      "path": "10"
    },
    "481": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "REVERT",
      "path": "10"
    },
    "482": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "485": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C0"
    },
    "488": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "i",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMP",
      "path": "10"
    },
    "489": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "490": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "493": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "495": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "DUP1",
      "path": "10"
    },
    "496": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "497": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "SUB",
      "path": "10"
    },
    "498": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "500": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "501": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "LT",
      "path": "10"
    },
    "502": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "503": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FF"
    },
    "506": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "507": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "509": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "DUP1",
      "path": "10"
    },
    "510": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "REVERT",
      "path": "10"
    },
    "511": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "op": "SUB"
    },
    "521": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "522": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "523": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "DUP2",
      "path": "10"
    },
    "524": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "AND",
      "path": "10"
    },
    "525": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "526": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "528": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "ADD",
      "path": "10"
    },
    "529": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "530": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "AND",
      "path": "10"
    },
    "531": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x635"
    },
    "534": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMP",
      "path": "10"
    },
    "535": {
      "offset": [
        591,
        632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "536": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D"
    },
    "539": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "541": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "542": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "543": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SUB",
      "path": "10"
    },
    "544": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "546": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "547": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "LT",
      "path": "10"
    },
    "548": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "549": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22D"
    },
    "552": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "553": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "555": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "556": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "REVERT",
      "path": "10"
    },
    "557": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "558": {
      "op": "POP"
    },
    "559": {
      "offset": [
        591,
        632
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "offset": [
        591,
        632
      ],
      "op": "AND",
      "path": "10"
    },
    "569": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C5"
    },
    "572": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        591,
        632
      ],
      "op": "JUMP",
      "path": "10"
    },
    "573": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "574": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "576": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "577": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "op": "SUB"
    },
    "586": {
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "587": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "588": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "AND",
      "path": "10"
    },
    "589": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP3",
      "path": "10"
    },
    "590": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "591": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "592": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "593": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "594": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "595": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SUB",
      "path": "10"
    },
    "596": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "598": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "ADD",
      "path": "10"
    },
    "599": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "600": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "RETURN",
      "path": "10"
    },
    "601": {
      "offset": [
        638,
        683
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "602": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "605": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "607": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "DUP1",
      "path": "10"
    },
    "608": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "609": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "SUB",
      "path": "10"
    },
    "610": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "612": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "DUP2",
      "path": "10"
    },
    "613": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "LT",
      "path": "10"
    },
    "614": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "615": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F"
    },
    "618": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "619": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "621": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "DUP1",
      "path": "10"
    },
    "622": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "REVERT",
      "path": "10"
    },
    "623": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "offset": [
        638,
        683
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "SUB"
    },
    "634": {
      "offset": [
        638,
        683
      ],
      "op": "AND",
      "path": "10"
    },
    "635": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E0"
    },
    "638": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        638,
        683
      ],
      "op": "JUMP",
      "path": "10"
    },
    "639": {
      "offset": [
        399,
        430
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "640": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x287"
    },
    "643": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F5"
    },
    "646": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        399,
        430
      ],
      "op": "JUMP",
      "path": "10"
    },
    "647": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "648": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "650": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "DUP1",
      "path": "10"
    },
    "651": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "652": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "653": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "DUP3",
      "path": "10"
    },
    "654": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "655": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "656": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "657": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "DUP2",
      "path": "10"
    },
    "658": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "659": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SUB",
      "path": "10"
    },
    "660": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "662": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "ADD",
      "path": "10"
    },
    "663": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "664": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "RETURN",
      "path": "10"
    },
    "665": {
      "offset": [
        528,
        553
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "666": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        528,
        553
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D"
    },
    "669": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        528,
        553
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "672": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        528,
        553
      ],
      "op": "JUMP",
      "path": "10"
    },
    "673": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "674": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "677": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "679": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "DUP1",
      "path": "10"
    },
    "680": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "681": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "SUB",
      "path": "10"
    },
    "682": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "684": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "DUP2",
      "path": "10"
    },
    "685": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "LT",
      "path": "10"
    },
    "686": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "687": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B7"
    },
    "690": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "691": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "693": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "DUP1",
      "path": "10"
    },
    "694": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "REVERT",
      "path": "10"
    },
    "695": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "696": {
      "op": "POP"
    },
    "697": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "AND",
      "path": "10"
    },
    "707": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70A"
    },
    "710": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "i",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "711": {
      "offset": [
        436,
        465
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "712": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        436,
        465
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x287"
    },
    "715": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        436,
        465
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x729"
    },
    "718": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "i",
      "offset": [
        436,
        465
      ],
      "op": "JUMP",
      "path": "10"
    },
    "719": {
      "offset": [
        559,
        584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "720": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        559,
        584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D"
    },
    "723": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        559,
        584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x72F"
    },
    "726": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "i",
      "offset": [
        559,
        584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "727": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "728": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "731": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "733": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "734": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "735": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "SUB",
      "path": "10"
    },
    "736": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "738": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "DUP2",
      "path": "10"
    },
    "739": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "LT",
      "path": "10"
    },
    "740": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "741": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2ED"
    },
    "744": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "745": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "747": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "DUP1",
      "path": "10"
    },
    "748": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "REVERT",
      "path": "10"
    },
    "749": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "752": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73E"
    },
    "755": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "i",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMP",
      "path": "10"
    },
    "756": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "757": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "760": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "762": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "DUP1",
      "path": "10"
    },
    "763": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "764": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "SUB",
      "path": "10"
    },
    "765": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "767": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "DUP2",
      "path": "10"
    },
    "768": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "LT",
      "path": "10"
    },
    "769": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "770": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30A"
    },
    "773": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "774": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "776": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "DUP1",
      "path": "10"
    },
    "777": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "REVERT",
      "path": "10"
    },
    "778": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "DUP2",
      "path": "10"
    },
    "789": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "790": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "AND",
      "path": "10"
    },
    "791": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "792": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "794": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "ADD",
      "path": "10"
    },
    "795": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "796": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "797": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "798": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B3"
    },
    "801": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "jump": "i",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMP",
      "path": "10"
    },
    "802": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "803": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "806": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "808": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "DUP1",
      "path": "10"
    },
    "809": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "810": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "SUB",
      "path": "10"
    },
    "811": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "813": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "DUP2",
      "path": "10"
    },
    "814": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "LT",
      "path": "10"
    },
    "815": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "816": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x338"
    },
    "819": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "820": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "822": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "DUP1",
      "path": "10"
    },
    "823": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "REVERT",
      "path": "10"
    },
    "824": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "op": "SUB"
    },
    "835": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "AND",
      "path": "10"
    },
    "836": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x840"
    },
    "839": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "i",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMP",
      "path": "10"
    },
    "840": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "841": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "844": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "846": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP1",
      "path": "10"
    },
    "847": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "848": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SUB",
      "path": "10"
    },
    "849": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "851": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP2",
      "path": "10"
    },
    "852": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "LT",
      "path": "10"
    },
    "853": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "854": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "857": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "858": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "860": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP1",
      "path": "10"
    },
    "861": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "REVERT",
      "path": "10"
    },
    "862": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP1",
      "path": "10"
    },
    "865": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "866": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "867": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "869": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP2",
      "path": "10"
    },
    "870": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "ADD",
      "path": "10"
    },
    "871": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "872": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "873": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "875": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP2",
      "path": "10"
    },
    "876": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "ADD",
      "path": "10"
    },
    "877": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "878": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "879": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "881": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "DUP2",
      "path": "10"
    },
    "882": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "ADD",
      "path": "10"
    },
    "883": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "884": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "885": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "887": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "ADD",
      "path": "10"
    },
    "888": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "889": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C2"
    },
    "892": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "893": {
      "offset": [
        471,
        521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "894": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A3"
    },
    "897": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "899": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP1",
      "path": "10"
    },
    "900": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "901": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SUB",
      "path": "10"
    },
    "902": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "904": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "905": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "LT",
      "path": "10"
    },
    "906": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "907": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x393"
    },
    "910": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "911": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "913": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP1",
      "path": "10"
    },
    "914": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "REVERT",
      "path": "10"
    },
    "915": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "offset": [
        471,
        521
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "offset": [
        471,
        521
      ],
      "op": "AND",
      "path": "10"
    },
    "927": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DE"
    },
    "930": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        471,
        521
      ],
      "op": "JUMP",
      "path": "10"
    },
    "931": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "932": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "934": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP1",
      "path": "10"
    },
    "935": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "936": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "937": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP5",
      "path": "10"
    },
    "938": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "939": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "941": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP5",
      "path": "10"
    },
    "942": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ADD",
      "path": "10"
    },
    "943": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "944": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "945": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "946": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "947": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "948": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "949": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP3",
      "path": "10"
    },
    "950": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP3",
      "path": "10"
    },
    "951": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ADD",
      "path": "10"
    },
    "952": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "953": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "954": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "955": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "956": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "957": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SUB",
      "path": "10"
    },
    "958": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "960": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ADD",
      "path": "10"
    },
    "961": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "962": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "RETURN",
      "path": "10"
    },
    "963": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "964": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "967": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "969": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "970": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "971": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "SUB",
      "path": "10"
    },
    "972": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "974": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "DUP2",
      "path": "10"
    },
    "975": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "LT",
      "path": "10"
    },
    "976": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "977": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D9"
    },
    "980": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "981": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "983": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "984": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "REVERT",
      "path": "10"
    },
    "985": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "op": "SUB"
    },
    "996": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "AND",
      "path": "10"
    },
    "997": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x901"
    },
    "1000": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "i",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1001": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1002": {
      "offset": [
        856,
        866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1004": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        856,
        866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "offset": [
        856,
        866
      ],
      "op": "AND",
      "path": "10"
    },
    "1014": {
      "offset": [
        842,
        852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1015": {
      "offset": [
        842,
        866
      ],
      "op": "EQ",
      "path": "10"
    },
    "1016": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        842,
        866
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1017": {
      "offset": [
        842,
        894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x40C"
    },
    "1020": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "offset": [
        884,
        894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1024": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        884,
        894
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "offset": [
        884,
        894
      ],
      "op": "AND",
      "path": "10"
    },
    "1034": {
      "offset": [
        870,
        880
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1035": {
      "offset": [
        870,
        894
      ],
      "op": "EQ",
      "path": "10"
    },
    "1036": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1037": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44B"
    },
    "1040": {
      "offset": [
        834,
        910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1041": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1043": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1044": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1053": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1054": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1056": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1058": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1059": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1060": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1061": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1063": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1065": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1066": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1067": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1068": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1085": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1086": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1087": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1088": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1089": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1090": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1091": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1092": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1093": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "SUB",
      "path": "10"
    },
    "1094": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1096": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1097": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1098": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1099": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        834,
        910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1100": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1103": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2080,
        2095
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 0
    },
    "1104": {
      "branch": 27,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2080,
        2105
      ],
      "op": "LT",
      "path": "10"
    },
    "1105": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x459"
    },
    "1108": {
      "branch": 27,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1109": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1111": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1112": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1113": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2072,
        2106
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1114": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1117": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2124,
        2141
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 1
    },
    "1118": {
      "branch": 28,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2124,
        2151
      ],
      "op": "LT",
      "path": "10"
    },
    "1119": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x467"
    },
    "1122": {
      "branch": 28,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1123": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1125": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1126": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1127": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2116,
        2152
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1128": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x40"
    },
    "1130": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1131": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1132": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1134": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1135": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "ADD",
      "path": "10"
    },
    "1136": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1137": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1138": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1139": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1140": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1141": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1143": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1144": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1145": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "ADD",
      "path": "10"
    },
    "1146": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1147": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1148": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1149": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2235,
        2239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1151": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1152": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1153": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "ADD",
      "path": "10"
    },
    "1154": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1155": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1156": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2192,
        2240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1163": {
      "op": "SHL"
    },
    "1164": {
      "op": "SUB"
    },
    "1165": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1166": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1167": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1168": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "AND",
      "path": "10"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1171": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1172": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1173": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1174": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2178
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1176": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1177": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1178": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1179": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1180": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1181": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1182": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1183": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2189
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1184": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1185": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1186": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1187": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1188": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1189": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1190": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1191": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1192": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "ADD",
      "path": "10"
    },
    "1193": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1194": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1195": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1196": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1197": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "ADD",
      "path": "10"
    },
    "1198": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1199": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1202": {
      "op": "NOT"
    },
    "1203": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "AND",
      "path": "10"
    },
    "1204": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1205": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1206": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1207": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1208": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1209": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1210": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "OR",
      "path": "10"
    },
    "1211": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1212": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2162,
        2240
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1213": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "o",
      "offset": [
        1910,
        2247
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1214": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1215": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2438,
        2447
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1216": {
      "offset": [
        1015,
        1023
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "offset": [
        1003,
        1030
      ],
      "op": "AND",
      "path": "10"
    },
    "1226": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1030
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFBFA77CF"
    },
    "1231": {
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1233": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1234": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1235": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1240": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "AND",
      "path": "10"
    },
    "1241": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1243": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "SHL",
      "path": "10"
    },
    "1244": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1245": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1246": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1248": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ADD",
      "path": "10"
    },
    "1249": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1251": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1253": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1254": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1255": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1256": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "SUB",
      "path": "10"
    },
    "1257": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1258": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1259": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1260": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1261": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1262": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1263": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1264": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4F8"
    },
    "1267": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1268": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1270": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1271": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1272": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1273": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "POP",
      "path": "10"
    },
    "1274": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "GAS",
      "path": "10"
    },
    "1275": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "1276": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1277": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1278": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1279": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50C"
    },
    "1282": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1283": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1284": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1286": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1287": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1288": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1289": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1291": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1292": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1293": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "POP",
      "path": "10"
    },
    "1294": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "POP",
      "path": "10"
    },
    "1295": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "POP",
      "path": "10"
    },
    "1296": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "POP",
      "path": "10"
    },
    "1297": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1299": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1300": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1301": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1303": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1304": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "LT",
      "path": "10"
    },
    "1305": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1306": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x522"
    },
    "1309": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1310": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1312": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1313": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1314": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        1003,
        1032
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "offset": [
        1003,
        1032
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "offset": [
        989,
        1032
      ],
      "op": "AND",
      "path": "10"
    },
    "1326": {
      "offset": [
        989,
        999
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1327": {
      "offset": [
        989,
        1032
      ],
      "op": "EQ",
      "path": "10"
    },
    "1328": {
      "offset": [
        981,
        1048
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x56E"
    },
    "1331": {
      "offset": [
        981,
        1048
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1332": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1334": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1335": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "offset": [
        981,
        1048
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1344": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1345": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1347": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1349": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1350": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "ADD",
      "path": "10"
    },
    "1351": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1352": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1354": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1356": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1357": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "ADD",
      "path": "10"
    },
    "1358": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1359": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1376": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1377": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "ADD",
      "path": "10"
    },
    "1378": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1379": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1380": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1381": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1382": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1383": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1384": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "SUB",
      "path": "10"
    },
    "1385": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1387": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "ADD",
      "path": "10"
    },
    "1388": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1389": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1390": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        981,
        1048
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "AND",
      "path": "10",
      "statement": 3
    },
    "1401": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2486,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1403": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1404": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1405": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1406": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2472
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1408": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1410": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1411": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1413": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1414": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2483
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1415": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1416": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2491
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1419": {
      "op": "NOT"
    },
    "1420": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2491
      ],
      "op": "AND",
      "path": "10"
    },
    "1421": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2491
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1422": {
      "fn": "CommonHealthCheck.enableCheck",
      "offset": [
        2459,
        2491
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1423": {
      "fn": "CommonHealthCheck.enableCheck",
      "jump": "o",
      "offset": [
        2379,
        2498
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1424": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1425": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3307,
        3311
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3331,
        3353
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 4
    },
    "1436": {
      "branch": 29,
      "fn": "CommonHealthCheck.check",
      "offset": [
        3331,
        3353
      ],
      "op": "AND",
      "path": "10"
    },
    "1437": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A5"
    },
    "1440": {
      "branch": 29,
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1441": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1443": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1444": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1445": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3323,
        3354
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1446": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3372,
        3447
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 5,
      "value": "0x5B3"
    },
    "1449": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3383,
        3391
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1450": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3393,
        3399
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1451": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3401,
        3405
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1452": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3407,
        3418
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1453": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3420,
        3435
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1454": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3437,
        3446
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1455": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3372,
        3382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x983"
    },
    "1458": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        3372,
        3447
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1459": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3372,
        3447
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1460": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3365,
        3447
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1461": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3365,
        3447
      ],
      "op": "POP",
      "path": "10"
    },
    "1462": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1463": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1464": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1465": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1466": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1467": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1468": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1469": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1470": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3102,
        3454
      ],
      "op": "POP",
      "path": "10"
    },
    "1471": {
      "fn": "CommonHealthCheck.check",
      "jump": "o",
      "offset": [
        3102,
        3454
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1472": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1473": {
      "offset": [
        856,
        866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1475": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        856,
        866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "offset": [
        856,
        866
      ],
      "op": "AND",
      "path": "10"
    },
    "1485": {
      "offset": [
        842,
        852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1486": {
      "offset": [
        842,
        866
      ],
      "op": "EQ",
      "path": "10"
    },
    "1487": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        842,
        866
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1488": {
      "offset": [
        842,
        894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E3"
    },
    "1491": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "offset": [
        884,
        894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1495": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        884,
        894
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "offset": [
        884,
        894
      ],
      "op": "AND",
      "path": "10"
    },
    "1505": {
      "offset": [
        870,
        880
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1506": {
      "offset": [
        870,
        894
      ],
      "op": "EQ",
      "path": "10"
    },
    "1507": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1508": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x622"
    },
    "1511": {
      "offset": [
        834,
        910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1512": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1514": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1515": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1524": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1525": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1527": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1529": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1530": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1531": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1532": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1534": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1536": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1537": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1538": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1539": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1556": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1557": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1558": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1559": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1560": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1561": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1562": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1563": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1564": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SUB",
      "path": "10"
    },
    "1565": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1567": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1568": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1569": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1570": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1571": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1574": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1829,
        1844
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 6
    },
    "1575": {
      "branch": 30,
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1829,
        1854
      ],
      "op": "LT",
      "path": "10"
    },
    "1576": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x630"
    },
    "1579": {
      "branch": 30,
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1580": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1582": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1583": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1584": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1821,
        1855
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1585": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1865,
        1879
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x1"
    },
    "1587": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1865,
        1897
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1588": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "o",
      "offset": [
        1735,
        1904
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1589": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1590": {
      "offset": [
        856,
        866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1592": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        856,
        866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "offset": [
        856,
        866
      ],
      "op": "AND",
      "path": "10"
    },
    "1602": {
      "offset": [
        842,
        852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1603": {
      "offset": [
        842,
        866
      ],
      "op": "EQ",
      "path": "10"
    },
    "1604": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        842,
        866
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1605": {
      "offset": [
        842,
        894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x658"
    },
    "1608": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "offset": [
        884,
        894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1612": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        884,
        894
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "op": "SUB"
    },
    "1621": {
      "offset": [
        884,
        894
      ],
      "op": "AND",
      "path": "10"
    },
    "1622": {
      "offset": [
        870,
        880
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1623": {
      "offset": [
        870,
        894
      ],
      "op": "EQ",
      "path": "10"
    },
    "1624": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1625": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x697"
    },
    "1628": {
      "offset": [
        834,
        910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1629": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1631": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1632": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1633": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1641": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1642": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1644": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1646": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1647": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1648": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1649": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1651": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1653": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1654": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1655": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1656": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1673": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1674": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1675": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1676": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1677": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1678": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1679": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1680": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1681": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "SUB",
      "path": "10"
    },
    "1682": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1684": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1685": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1686": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1687": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        834,
        910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 8
    },
    "1697": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1698": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "AND",
      "path": "10"
    },
    "1699": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1701": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1702": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1703": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1704": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2346
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1706": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1708": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1709": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1711": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1712": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2357
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1713": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1714": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "SUB"
    },
    "1723": {
      "op": "NOT"
    },
    "1724": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "AND",
      "path": "10"
    },
    "1725": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1726": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1727": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1728": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "AND",
      "path": "10"
    },
    "1729": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "OR",
      "path": "10"
    },
    "1730": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1731": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2340,
        2366
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1732": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        2253,
        2373
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1733": {
      "offset": [
        591,
        632
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1734": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1736": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1738": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1739": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1741": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1742": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1743": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1744": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1746": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1747": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1748": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "offset": [
        591,
        632
      ],
      "op": "AND",
      "path": "10"
    },
    "1758": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        591,
        632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1759": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        591,
        632
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1760": {
      "offset": [
        638,
        683
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1761": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1763": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1765": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1766": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1768": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1769": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1770": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1771": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1773": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1774": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1775": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1776": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1778": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "AND",
      "path": "10"
    },
    "1779": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        638,
        683
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1780": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        638,
        683
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1781": {
      "offset": [
        399,
        430
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1782": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1784": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1785": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        399,
        430
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1786": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        399,
        430
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1787": {
      "offset": [
        528,
        553
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1788": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        528,
        553
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1790": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        528,
        553
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "offset": [
        528,
        553
      ],
      "op": "AND",
      "path": "10"
    },
    "1800": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        528,
        553
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1801": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        528,
        553
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1802": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "AND",
      "path": "10",
      "statement": 9
    },
    "1812": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2711,
        2715
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1814": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1815": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1816": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1817": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1819": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1821": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1822": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1824": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1825": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1826": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1827": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1829": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2735,
        2759
      ],
      "op": "AND",
      "path": "10"
    },
    "1830": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2734,
        2759
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1831": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        2734,
        2759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1832": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "o",
      "offset": [
        2646,
        2766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1833": {
      "offset": [
        436,
        465
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1834": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        436,
        465
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1836": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        436,
        465
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1837": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        436,
        465
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1838": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "o",
      "offset": [
        436,
        465
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1839": {
      "offset": [
        559,
        584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1840": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        559,
        584
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1842": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        559,
        584
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "offset": [
        559,
        584
      ],
      "op": "AND",
      "path": "10"
    },
    "1852": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "offset": [
        559,
        584
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1853": {
      "fn": "CommonHealthCheck.doHealthCheck",
      "jump": "o",
      "offset": [
        559,
        584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1854": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1855": {
      "offset": [
        856,
        866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1857": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        856,
        866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1864": {
      "op": "SHL"
    },
    "1865": {
      "op": "SUB"
    },
    "1866": {
      "offset": [
        856,
        866
      ],
      "op": "AND",
      "path": "10"
    },
    "1867": {
      "offset": [
        842,
        852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1868": {
      "offset": [
        842,
        866
      ],
      "op": "EQ",
      "path": "10"
    },
    "1869": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        842,
        866
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1870": {
      "offset": [
        842,
        894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x761"
    },
    "1873": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "offset": [
        884,
        894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1877": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        884,
        894
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "op": "SUB"
    },
    "1886": {
      "offset": [
        884,
        894
      ],
      "op": "AND",
      "path": "10"
    },
    "1887": {
      "offset": [
        870,
        880
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1888": {
      "offset": [
        870,
        894
      ],
      "op": "EQ",
      "path": "10"
    },
    "1889": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1890": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A0"
    },
    "1893": {
      "offset": [
        834,
        910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1894": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1896": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1897": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1904": {
      "op": "SHL"
    },
    "1905": {
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1906": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1907": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1909": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1911": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1912": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1913": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1914": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1916": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1918": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1919": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1920": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1921": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1938": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1939": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1940": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1941": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1942": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1943": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1944": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1945": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1946": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SUB",
      "path": "10"
    },
    "1947": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1949": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "1950": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1951": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1952": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        834,
        910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1953": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1956": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1648,
        1665
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 10
    },
    "1957": {
      "branch": 31,
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1648,
        1675
      ],
      "op": "LT",
      "path": "10"
    },
    "1958": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7AE"
    },
    "1961": {
      "branch": 31,
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1962": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1964": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1965": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1966": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1640,
        1676
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1967": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1686,
        1702
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 11,
      "value": "0x0"
    },
    "1969": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1686,
        1722
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1970": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "o",
      "offset": [
        1550,
        1729
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1971": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1972": {
      "offset": [
        856,
        866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1974": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        856,
        866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "SUB"
    },
    "1983": {
      "offset": [
        856,
        866
      ],
      "op": "AND",
      "path": "10"
    },
    "1984": {
      "offset": [
        842,
        852
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1985": {
      "offset": [
        842,
        866
      ],
      "op": "EQ",
      "path": "10"
    },
    "1986": {
      "branch": 32,
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        842,
        866
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1987": {
      "offset": [
        842,
        894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7D6"
    },
    "1990": {
      "branch": 32,
      "offset": [
        842,
        894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "offset": [
        884,
        894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1994": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        884,
        894
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "offset": [
        884,
        894
      ],
      "op": "AND",
      "path": "10"
    },
    "2004": {
      "offset": [
        870,
        880
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2005": {
      "offset": [
        870,
        894
      ],
      "op": "EQ",
      "path": "10"
    },
    "2006": {
      "offset": [
        842,
        894
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2007": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x815"
    },
    "2010": {
      "offset": [
        834,
        910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2011": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2013": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2014": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2021": {
      "op": "SHL"
    },
    "2022": {
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2023": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2024": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2026": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2028": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2029": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "2030": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2031": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "2033": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2035": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2036": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "2037": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2038": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2055": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2056": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "2057": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2058": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2059": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2060": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2061": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2062": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2063": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "SUB",
      "path": "10"
    },
    "2064": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2066": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "ADD",
      "path": "10"
    },
    "2067": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2068": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2069": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        834,
        910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "op": "SUB"
    },
    "2078": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 12
    },
    "2079": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2080": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2081": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "AND",
      "path": "10"
    },
    "2082": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2084": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2085": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2086": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2087": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2611
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2089": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2091": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2092": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2094": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2095": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2622
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2096": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2097": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2100": {
      "op": "NOT"
    },
    "2101": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "AND",
      "path": "10"
    },
    "2102": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2103": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2104": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2105": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2106": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2107": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2108": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "OR",
      "path": "10"
    },
    "2109": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2110": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "offset": [
        2598,
        2633
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2111": {
      "fn": "CommonHealthCheck.setDisabledCheck",
      "jump": "o",
      "offset": [
        2504,
        2640
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2112": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2113": {
      "offset": [
        748,
        758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2115": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        748,
        758
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "offset": [
        748,
        758
      ],
      "op": "AND",
      "path": "10"
    },
    "2125": {
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2126": {
      "offset": [
        734,
        758
      ],
      "op": "EQ",
      "path": "10"
    },
    "2127": {
      "offset": [
        726,
        774
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x88D"
    },
    "2130": {
      "offset": [
        726,
        774
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2131": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2133": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2134": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "offset": [
        726,
        774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2143": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2144": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2146": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2148": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2149": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2150": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2151": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "2153": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2155": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2156": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2157": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2158": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2175": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2176": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2177": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2178": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2179": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2180": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2181": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2182": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2183": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "SUB",
      "path": "10"
    },
    "2184": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2186": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2187": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2188": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2189": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        726,
        774
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2196": {
      "op": "SHL"
    },
    "2197": {
      "op": "SUB"
    },
    "2198": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1318,
        1343
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 13
    },
    "2199": {
      "branch": 33,
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1318,
        1343
      ],
      "op": "AND",
      "path": "10"
    },
    "2200": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A0"
    },
    "2203": {
      "branch": 33,
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2204": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2206": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2207": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2208": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1310,
        1344
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2209": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1364
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x3"
    },
    "2211": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2212": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "op": "SUB"
    },
    "2221": {
      "op": "NOT"
    },
    "2222": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "AND",
      "path": "10"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2232": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2233": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2234": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "AND",
      "path": "10"
    },
    "2235": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2236": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2237": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2238": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "OR",
      "path": "10"
    },
    "2239": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2240": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1354,
        1378
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2241": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "o",
      "offset": [
        1232,
        1385
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2242": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2243": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2951,
        2955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2245": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2986,
        2996
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2246": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3014,
        3089
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 15,
      "value": "0x8D3"
    },
    "2249": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2986,
        2996
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2250": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3035,
        3041
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2251": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3043,
        3047
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2252": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3049,
        3060
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2253": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3062,
        3077
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2254": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3079,
        3088
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2255": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3014,
        3024
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x983"
    },
    "2258": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        3014,
        3089
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2259": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3014,
        3089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2260": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        3007,
        3089
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "2261": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2772,
        3096
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "fn": "CommonHealthCheck.check",
      "jump": "o",
      "offset": [
        2772,
        3096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2270": {
      "offset": [
        471,
        521
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2271": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2273": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2275": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2276": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2277": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2278": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2280": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2281": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2282": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2283": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2285": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2286": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2287": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2288": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2289": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2290": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2292": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2293": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ADD",
      "path": "10"
    },
    "2294": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2295": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2296": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2297": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2298": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "ADD",
      "path": "10"
    },
    "2299": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2300": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2302": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "AND",
      "path": "10"
    },
    "2303": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        471,
        521
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2304": {
      "fn": "CommonHealthCheck.check",
      "jump": "o",
      "offset": [
        471,
        521
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2305": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2306": {
      "offset": [
        748,
        758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2308": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        748,
        758
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "offset": [
        748,
        758
      ],
      "op": "AND",
      "path": "10"
    },
    "2318": {
      "offset": [
        734,
        744
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2319": {
      "offset": [
        734,
        758
      ],
      "op": "EQ",
      "path": "10"
    },
    "2320": {
      "offset": [
        726,
        774
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x94E"
    },
    "2323": {
      "offset": [
        726,
        774
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2324": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2326": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2327": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "offset": [
        726,
        774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2336": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2337": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2339": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2341": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2342": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2343": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2344": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "2346": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2348": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2349": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2350": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2351": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2368": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2369": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2370": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2371": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2372": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2373": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2374": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2375": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2376": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "SUB",
      "path": "10"
    },
    "2377": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2379": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "ADD",
      "path": "10"
    },
    "2380": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2381": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2382": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        726,
        774
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "op": "SUB"
    },
    "2391": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1477,
        1502
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 16
    },
    "2392": {
      "branch": 34,
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1477,
        1502
      ],
      "op": "AND",
      "path": "10"
    },
    "2393": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x961"
    },
    "2396": {
      "branch": 34,
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2397": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2399": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2400": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2401": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1469,
        1503
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2402": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1523
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x4"
    },
    "2404": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2405": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "op": "NOT"
    },
    "2415": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "AND",
      "path": "10"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2425": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2426": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2427": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "AND",
      "path": "10"
    },
    "2428": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2429": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2430": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2431": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "OR",
      "path": "10"
    },
    "2432": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2433": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1513,
        1537
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2434": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "o",
      "offset": [
        1391,
        1544
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2435": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3460,
        3968
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2445": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2446": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "AND",
      "path": "10"
    },
    "2447": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3670,
        3674
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2449": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2450": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2451": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2452": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2454": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2456": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2457": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2459": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2460": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2461": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2462": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3670,
        3674
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2463": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3670,
        3674
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2464": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3708,
        3724
      ],
      "op": "AND",
      "path": "10"
    },
    "2465": {
      "branch": 35,
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3739,
        3764
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2466": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3735,
        3853
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9B9"
    },
    "2469": {
      "branch": 35,
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3735,
        3853
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2470": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3787,
        3842
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x9B1"
    },
    "2473": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3808,
        3816
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2474": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3818,
        3824
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2475": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3826,
        3830
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2476": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3832,
        3841
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2477": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3787,
        3807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA57"
    },
    "2480": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "i",
      "offset": [
        3787,
        3842
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2481": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3787,
        3842
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2482": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3780,
        3842
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2483": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3780,
        3842
      ],
      "op": "POP",
      "path": "10"
    },
    "2484": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3780,
        3842
      ],
      "op": "POP",
      "path": "10"
    },
    "2485": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3780,
        3842
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B6"
    },
    "2488": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3780,
        3842
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2489": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3735,
        3853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2490": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x40"
    },
    "2492": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2493": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2494": {
      "op": "PUSH4",
      "value": "0x22C80DF"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2503": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP11",
      "path": "10"
    },
    "2513": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2514": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "AND",
      "path": "10"
    },
    "2515": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2517": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2518": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2519": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2520": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2522": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2523": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2524": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP11",
      "path": "10"
    },
    "2525": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2526": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2527": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2529": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2530": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2531": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP10",
      "path": "10"
    },
    "2532": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2533": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2534": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2536": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2537": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2538": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2539": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2540": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2541": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x84"
    },
    "2543": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2544": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2545": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2546": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2547": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2548": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2549": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2550": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2551": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2552": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "AND",
      "path": "10"
    },
    "2553": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2554": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x45901BE0"
    },
    "2559": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2560": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA4"
    },
    "2562": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2563": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2564": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2565": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2566": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2568": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2569": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2570": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2571": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2572": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2573": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2574": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SUB",
      "path": "10"
    },
    "2575": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ADD",
      "path": "10"
    },
    "2576": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2577": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3907
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2578": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2579": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "2580": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2581": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2582": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2583": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA1F"
    },
    "2586": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2587": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2589": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2590": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2591": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2592": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "POP",
      "path": "10"
    },
    "2593": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "GAS",
      "path": "10"
    },
    "2594": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2595": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2596": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2597": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2598": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA33"
    },
    "2601": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2602": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2603": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2605": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2606": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2607": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2608": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2610": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2611": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2612": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "POP",
      "path": "10"
    },
    "2613": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "POP",
      "path": "10"
    },
    "2614": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "POP",
      "path": "10"
    },
    "2615": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "POP",
      "path": "10"
    },
    "2616": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2618": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2619": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2620": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2622": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2623": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "LT",
      "path": "10"
    },
    "2624": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2625": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA49"
    },
    "2628": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2629": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2631": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2632": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2633": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2634": {
      "op": "POP"
    },
    "2635": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2636": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3870,
        3961
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "2637": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3460,
        3968
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "o",
      "offset": [
        3460,
        3968
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2647": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2648": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4135,
        4139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2650": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4171
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA61"
    },
    "2653": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4171
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB09"
    },
    "2656": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "jump": "i",
      "offset": [
        4151,
        4171
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2657": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4171
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2665": {
      "op": "SHL"
    },
    "2666": {
      "op": "SUB"
    },
    "2667": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2668": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "AND",
      "path": "10"
    },
    "2669": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2671": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2672": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2673": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2674": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4190
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2676": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2678": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2679": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2680": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2681": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2683": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2684": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2685": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2686": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2687": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2688": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2690": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2691": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ADD",
      "path": "10"
    },
    "2692": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2693": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2694": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2695": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2696": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2697": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2698": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2700": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2701": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ADD",
      "path": "10"
    },
    "2702": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2703": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2704": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2705": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ADD",
      "path": "10"
    },
    "2706": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2707": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2708": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2709": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2710": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2711": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2712": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ADD",
      "path": "10"
    },
    "2713": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2714": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2716": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "AND",
      "path": "10"
    },
    "2717": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2718": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2719": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2720": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2721": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2722": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "ADD",
      "path": "10"
    },
    "2723": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2724": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2725": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2726": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2727": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4151,
        4200
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2728": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2729": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2730": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4174,
        4200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2731": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xABC"
    },
    "2734": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4331,
        4354
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 20
    },
    "2738": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4331,
        4354
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2739": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4386,
        4407
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 21,
      "value": "0x20"
    },
    "2741": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4386,
        4407
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2742": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4386,
        4407
      ],
      "op": "ADD",
      "path": "10"
    },
    "2743": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4386,
        4407
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2744": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAC5"
    },
    "2747": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2748": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4458,
        4474
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x0"
    },
    "2753": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4458,
        4474
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2754": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4506,
        4520
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x1"
    },
    "2756": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4506,
        4520
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2757": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4278,
        4531
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2758": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "2761": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4557,
        4587
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2762": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4557,
        4587
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2763": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4557,
        4587
      ],
      "op": "MUL",
      "path": "10"
    },
    "2764": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4556,
        4598
      ],
      "op": "DIV",
      "path": "10"
    },
    "2765": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4545,
        4552
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2766": {
      "branch": 36,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4545,
        4599
      ],
      "op": "GT",
      "path": "10"
    },
    "2767": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4541,
        4638
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2768": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4541,
        4638
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xADF"
    },
    "2771": {
      "branch": 36,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4541,
        4638
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2772": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4622,
        4627
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x0"
    },
    "2774": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2775": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "POP",
      "path": "10"
    },
    "2776": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "POP",
      "path": "10"
    },
    "2777": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "POP",
      "path": "10"
    },
    "2778": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "POP",
      "path": "10"
    },
    "2779": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB01"
    },
    "2782": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4615,
        4627
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2783": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4541,
        4638
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2784": {
      "offset": [
        387,
        393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "2787": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4661,
        4689
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2788": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4661,
        4689
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2789": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4661,
        4689
      ],
      "op": "MUL",
      "path": "10"
    },
    "2790": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4660,
        4700
      ],
      "op": "DIV",
      "path": "10"
    },
    "2791": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4651,
        4656
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2792": {
      "branch": 37,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4651,
        4701
      ],
      "op": "GT",
      "path": "10"
    },
    "2793": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4647,
        4740
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2794": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4647,
        4740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF9"
    },
    "2797": {
      "branch": 37,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4647,
        4740
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2798": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4724,
        4729
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x0"
    },
    "2800": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2801": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "10"
    },
    "2802": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "10"
    },
    "2803": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "10"
    },
    "2804": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "POP",
      "path": "10"
    },
    "2805": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB01"
    },
    "2808": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4717,
        4729
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2809": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4647,
        4740
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2810": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4756,
        4760
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 26,
      "value": "0x1"
    },
    "2812": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4749,
        4760
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2813": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4749,
        4760
      ],
      "op": "POP",
      "path": "10"
    },
    "2814": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4749,
        4760
      ],
      "op": "POP",
      "path": "10"
    },
    "2815": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4749,
        4760
      ],
      "op": "POP",
      "path": "10"
    },
    "2816": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4749,
        4760
      ],
      "op": "POP",
      "path": "10"
    },
    "2817": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2818": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2819": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2820": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "POP",
      "path": "10"
    },
    "2821": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "POP",
      "path": "10"
    },
    "2822": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "POP",
      "path": "10"
    },
    "2823": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3974,
        4767
      ],
      "op": "POP",
      "path": "10"
    },
    "2824": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "jump": "o",
      "offset": [
        3974,
        4767
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2825": {
      "op": "JUMPDEST"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2828": {
      "op": "MLOAD"
    },
    "2829": {
      "op": "DUP1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "op": "DUP1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2839": {
      "op": "DUP2"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2843": {
      "op": "ADD"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2846": {
      "op": "DUP2"
    },
    "2847": {
      "op": "MSTORE"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2853": {
      "op": "ISZERO"
    },
    "2854": {
      "op": "ISZERO"
    },
    "2855": {
      "op": "DUP2"
    },
    "2856": {
      "op": "MSTORE"
    },
    "2857": {
      "op": "POP"
    },
    "2858": {
      "op": "SWAP1"
    },
    "2859": {
      "op": "JUMP"
    }
  },
  "sha1": "e6869d19a94286d99dc6ab314d1792587a1215aa",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.6.0 <0.7.0;\n\nimport {ICustomHealthCheck} from \"./interfaces/ICustomHealthCheck.sol\";\nimport {StrategyAPI} from \"./BaseStrategy.sol\";\n\nstruct Limits {\n    uint256 profitLimitRatio;\n    uint256 lossLimitRatio;\n    bool exists;\n}\n\ncontract CommonHealthCheck {\n    // Default Settings for all strategies\n    uint256 constant MAX_BPS = 10_000;\n    uint256 public profitLimitRatio;\n    uint256 public lossLimitRatio;\n    mapping(address => Limits) public strategiesLimits;\n\n    address public governance;\n    address public management;\n\n    mapping(address => address) public checks;\n    mapping(address => bool) public disabledCheck;\n\n    modifier onlyGovernance() {\n        require(msg.sender == governance, \"!authorized\");\n        _;\n    }\n\n    modifier onlyAuthorized() {\n        require(msg.sender == governance || msg.sender == management, \"!authorized\");\n        _;\n    }\n\n    modifier onlyVault(address strategy) {\n        require(msg.sender == StrategyAPI(strategy).vault(), \"!authorized\");\n        _;\n    }\n\n    constructor() public {\n        governance = msg.sender;\n        management = msg.sender;\n        profitLimitRatio = 100;\n        lossLimitRatio = 1;\n    }\n\n    function setGovernance(address _governance) external onlyGovernance {\n        require(_governance != address(0));\n        governance = _governance;\n    }\n\n    function setManagement(address _management) external onlyGovernance {\n        require(_management != address(0));\n        management = _management;\n    }\n\n    function setProfitLimitRatio(uint256 _profitLimitRatio) external onlyAuthorized {\n        require(_profitLimitRatio < MAX_BPS);\n        profitLimitRatio = _profitLimitRatio;\n    }\n\n    function setlossLimitRatio(uint256 _lossLimitRatio) external onlyAuthorized {\n        require(_lossLimitRatio < MAX_BPS);\n        lossLimitRatio = _lossLimitRatio;\n    }\n\n    function setStrategyLimits(\n        address _strategy,\n        uint256 _profitLimitRatio,\n        uint256 _lossLimitRatio\n    ) external onlyAuthorized {\n        require(_lossLimitRatio < MAX_BPS);\n        require(_profitLimitRatio < MAX_BPS);\n        strategiesLimits[_strategy] = Limits(_profitLimitRatio, _lossLimitRatio, true);\n    }\n\n    function setCheck(address _strategy, address _check) external onlyAuthorized {\n        checks[_strategy] = _check;\n    }\n\n    function enableCheck(address _strategy) external onlyVault(_strategy) {\n        disabledCheck[_strategy] = false;\n    }\n\n    function setDisabledCheck(address _strategy, bool disabled) external onlyAuthorized {\n        disabledCheck[_strategy] = disabled;\n    }\n\n    function doHealthCheck(address _strategy) external view returns (bool) {\n        return !disabledCheck[_strategy];\n    }\n\n    function check(\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        uint256 totalDebt\n    ) external view returns (bool) {\n        address strategy = msg.sender;\n\n        return _runChecks(strategy, profit, loss, debtPayment, debtOutstanding, totalDebt);\n    }\n\n    function check(\n        address strategy,\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        uint256 totalDebt\n    ) external view returns (bool) {\n        require(strategy != address(0));\n\n        return _runChecks(strategy, profit, loss, debtPayment, debtOutstanding, totalDebt);\n    }\n\n    function _runChecks(\n        address strategy,\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        uint256 totalDebt\n    ) internal view returns (bool) {\n        address customCheck = checks[strategy];\n\n        if (customCheck == address(0)) {\n            return _executeDefaultCheck(strategy, profit, loss, totalDebt);\n        }\n\n        return ICustomHealthCheck(customCheck).check(strategy, profit, loss, debtPayment, debtOutstanding);\n    }\n\n    function _executeDefaultCheck(\n        address strategy,\n        uint256 _profit,\n        uint256 _loss,\n        uint256 _totalDebt\n    ) internal view returns (bool) {\n        Limits memory limits = strategiesLimits[strategy];\n        uint256 _profitLimitRatio;\n        uint256 _lossLimitRatio;\n        if (limits.exists) {\n            _profitLimitRatio = limits.profitLimitRatio;\n            _lossLimitRatio = limits.lossLimitRatio;\n        } else {\n            _profitLimitRatio = profitLimitRatio;\n            _lossLimitRatio = lossLimitRatio;\n        }\n\n        if (_profit > ((_totalDebt * _profitLimitRatio) / MAX_BPS)) {\n            return false;\n        }\n        if (_loss > ((_totalDebt * _lossLimitRatio) / MAX_BPS)) {\n            return false;\n        }\n        return true;\n    }\n}\n",
  "sourceMap": "284:4485:10:-:0;;;1072:154;;;;;;;;;-1:-1:-1;1103:10:10;:23;;-1:-1:-1;;;;;;1103:23:10;;;1116:10;1103:23;;;;;;1136:10;:23;;;;;;;;;;1188:3;1103:10;1169:22;1103:23;1201:18;;284:4485;;;;;;",
  "sourcePath": "contracts/CommonHealthCheck.sol",
  "type": "contract"
}