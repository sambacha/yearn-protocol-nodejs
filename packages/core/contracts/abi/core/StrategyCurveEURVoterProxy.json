{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lifetimeEarned",
          "type": "uint256"
        }
      ],
      "name": "Harvested",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "eurs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_strategistReward",
          "type": "uint256"
        }
      ],
      "name": "setStrategistReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_treasuryFee",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategistReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sushiswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isUniswap",
          "type": "bool"
        }
      ],
      "name": "switchDex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "20": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "55": "interfaces/curve/Curve.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "64": "interfaces/uniswap/Uni.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "75": "interfaces/yearn/IVoterProxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveEURVoterProxy": [
        8936
      ]
    },
    "id": 8937,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7851,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:20"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 7852,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 35493,
        "src": "64:58:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 7853,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 35424,
        "src": "123:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 7854,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 35788,
        "src": "177:53:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 7855,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 35713,
        "src": "231:61:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 7856,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36182,
        "src": "294:48:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 7857,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36428,
        "src": "343:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 7858,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36436,
        "src": "386:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 7859,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36471,
        "src": "429:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 7860,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36391,
        "src": "472:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVoterProxy.sol",
        "file": "../../interfaces/yearn/IVoterProxy.sol",
        "id": 7861,
        "nodeType": "ImportDirective",
        "scope": 8937,
        "sourceUnit": 36604,
        "src": "515:48:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8936,
        "linearizedBaseContracts": [
          8936
        ],
        "name": "StrategyCurveEURVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7864,
            "libraryName": {
              "contractScope": null,
              "id": 7862,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35712,
              "src": "613:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$35712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "607:27:20",
            "typeName": {
              "contractScope": null,
              "id": 7863,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "627:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 7867,
            "libraryName": {
              "contractScope": null,
              "id": 7865,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "645:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "639:26:20",
            "typeName": {
              "id": 7866,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 7870,
            "libraryName": {
              "contractScope": null,
              "id": 7868,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "676:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "670:27:20",
            "typeName": {
              "id": 7869,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 7875,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "703:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7871,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "703:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831393465426431373346366344616345303436433533654143634539423935334632383431316431",
                  "id": 7873,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "742:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x194eBd173F6cDacE046C53eACcE9B953F28411d1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7872,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "734:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7874,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "734:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7880,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "791:81:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7876,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 7878,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "829:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7877,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "821:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "821:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7885,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "879:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "879:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307830436536613566463532313765333833313566383730333243463930363836433936363237434141",
                  "id": 7883,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "919:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x0Ce6a5fF5217e38315f87032CF90686C96627CAA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7882,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "911:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "911:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7890,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "968:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7886,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "968:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307839304262363039363439453034353145356144393532363833443634424432643166323435383430",
                  "id": 7888,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1008:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x90Bb609649E0451E5aD952683D64BD2d1f245840"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7887,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1000:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1000:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7895,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1057:83:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7891,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1057:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 7893,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1097:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7892,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1089:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7894,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1089:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7900,
            "name": "uniswap",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1147:85:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7896,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 7898,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1189:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7897,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1181:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7899,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1181:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7905,
            "name": "sushiswap",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1238:87:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7901,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1238:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864396531634531376632363431663234614538333633376162363661326363613943333738423946",
                  "id": 7903,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1282:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7902,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1274:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7904,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1274:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7910,
            "name": "eurs",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1331:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7906,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864423235663231314142303562316339374435393535313646343537393435323861383037616438",
                  "id": 7908,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1370:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdB25f211AB05b1c97D595516F45794528a807ad8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7907,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1362:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7909,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1362:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7915,
            "name": "usdc",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1419:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7911,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1419:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
                  "id": 7913,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1458:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7912,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1450:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7914,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1450:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7920,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1507:82:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7916,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1507:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 7918,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1546:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7917,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1538:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7919,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1538:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7925,
            "name": "snx",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1641:81:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7921,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1641:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303131613733656538353736466234364635453163353735316341334239466530616632613646",
                  "id": 7923,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1679:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7922,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1671:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7924,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1671:51:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7928,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1729:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7926,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1729:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 7927,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1754:4:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7931,
            "name": "treasuryFee",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1764:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7929,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1764:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 7930,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1793:4:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7934,
            "name": "strategistReward",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1803:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7932,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1803:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 7933,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1837:4:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7937,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1847:33:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7935,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1847:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 7936,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1878:2:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7940,
            "name": "FEE_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1886:47:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7938,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1886:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 7939,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1928:5:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7942,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1940:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1940:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7944,
            "name": "dex",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1966:18:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7943,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1966:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7946,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "1991:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7945,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1991:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7948,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "2022:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7947,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2022:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7950,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "2053:25:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2053:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7952,
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "2084:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7951,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2084:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7954,
            "name": "earned",
            "nodeType": "VariableDeclaration",
            "scope": 8936,
            "src": "2112:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7953,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2112:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7960,
            "name": "Harvested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7956,
                  "indexed": false,
                  "name": "wantEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7960,
                  "src": "2214:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7958,
                  "indexed": false,
                  "name": "lifetimeEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7960,
                  "src": "2234:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2213:44:20"
            },
            "src": "2198:60:20"
          },
          {
            "body": {
              "id": 7994,
              "nodeType": "Block",
              "src": "2304:265:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7965,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7946,
                      "src": "2314:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7966,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2327:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2327:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2314:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7969,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:23:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7970,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7950,
                      "src": "2347:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7971,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2360:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2360:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2347:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7974,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:23:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7975,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7952,
                      "src": "2380:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7976,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2389:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2389:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2380:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7979,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:19:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7980,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7948,
                      "src": "2409:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7981,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7962,
                      "src": "2422:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2409:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7983,
                  "nodeType": "ExpressionStatement",
                  "src": "2409:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7984,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7942,
                      "src": "2478:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307839613361303343363134646334363741434333653831323735343638653033336339386439363045",
                          "id": 7986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2494:42:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x9a3a03C614dc467ACC3e81275468e033c98d960E"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2486:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 7987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2486:51:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2478:59:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7989,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:59:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7990,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7944,
                      "src": "2547:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7991,
                      "name": "sushiswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7905,
                      "src": "2553:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2547:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7993,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:15:20"
                }
              ]
            },
            "documentation": null,
            "id": 7995,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7995,
                  "src": "2276:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2275:21:20"
            },
            "returnParameters": {
              "id": 7964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:0:20"
            },
            "scope": 8936,
            "src": "2264:305:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8002,
              "nodeType": "Block",
              "src": "2632:52:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "53747261746567794375727665455552566f74657250726f7879",
                    "id": 8000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2649:28:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6ca0c6aea37dc0c6c6010b893ec593215dcf05025a40f3cbb2e7ab80a3d64f0",
                      "typeString": "literal_string \"StrategyCurveEURVoterProxy\""
                    },
                    "value": "StrategyCurveEURVoterProxy"
                  },
                  "functionReturnParameters": 7999,
                  "id": 8001,
                  "nodeType": "Return",
                  "src": "2642:35:20"
                }
              ]
            },
            "documentation": null,
            "id": 8003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:20"
            },
            "returnParameters": {
              "id": 7999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7998,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8003,
                  "src": "2617:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7997,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2616:15:20"
            },
            "scope": 8936,
            "src": "2575:109:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8025,
              "nodeType": "Block",
              "src": "2743:127:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8009,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2761:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2761:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8011,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7950,
                            "src": "2775:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2761:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8013,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2789:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2789:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8015,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7946,
                            "src": "2803:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2789:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2761:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 8018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2815:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 8008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2753:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:76:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8020,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:76:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8021,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7950,
                      "src": "2839:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8022,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "2852:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2839:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8024,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8005,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 8026,
                  "src": "2713:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2712:21:20"
            },
            "returnParameters": {
              "id": 8007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2743:0:20"
            },
            "scope": 8936,
            "src": "2690:180:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8048,
              "nodeType": "Block",
              "src": "2921:119:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8032,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2939:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2939:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8034,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7950,
                            "src": "2953:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2939:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8036,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2967:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2967:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8038,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7946,
                            "src": "2981:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2967:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2939:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 8041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2993:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 8031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2931:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:76:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8043,
                  "nodeType": "ExpressionStatement",
                  "src": "2931:76:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8044,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7952,
                      "src": "3017:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8045,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8028,
                      "src": "3026:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3017:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8047,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:16:20"
                }
              ]
            },
            "documentation": null,
            "id": 8049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8028,
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 8049,
                  "src": "2895:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2894:17:20"
            },
            "returnParameters": {
              "id": 8030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:0:20"
            },
            "scope": 8936,
            "src": "2876:164:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8066,
              "nodeType": "Block",
              "src": "3093:93:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8055,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3111:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3111:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8057,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3125:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3111:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3137:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3103:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8061,
                  "nodeType": "ExpressionStatement",
                  "src": "3103:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8062,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7928,
                      "src": "3161:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8063,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8051,
                      "src": "3171:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3161:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8065,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:18:20"
                }
              ]
            },
            "documentation": null,
            "id": 8067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8051,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "3066:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3065:18:20"
            },
            "returnParameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3093:0:20"
            },
            "scope": 8936,
            "src": "3046:140:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8084,
              "nodeType": "Block",
              "src": "3251:105:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8073,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3269:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3269:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8075,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3283:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3269:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3261:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3261:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8079,
                  "nodeType": "ExpressionStatement",
                  "src": "3261:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8080,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7937,
                      "src": "3319:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8081,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8069,
                      "src": "3335:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3319:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8083,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:30:20"
                }
              ]
            },
            "documentation": null,
            "id": 8085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8069,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "3218:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3217:24:20"
            },
            "returnParameters": {
              "id": 8071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3251:0:20"
            },
            "scope": 8936,
            "src": "3192:164:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8102,
              "nodeType": "Block",
              "src": "3417:101:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8091,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3435:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3435:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8093,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3449:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3435:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3427:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8097,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8098,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "3485:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8099,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8087,
                      "src": "3499:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3485:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8101,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:26:20"
                }
              ]
            },
            "documentation": null,
            "id": 8103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTreasuryFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8087,
                  "name": "_treasuryFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 8103,
                  "src": "3386:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3385:22:20"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:0:20"
            },
            "scope": 8936,
            "src": "3362:156:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8120,
              "nodeType": "Block",
              "src": "3589:111:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3607:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3607:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8111,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3621:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3607:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3633:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3599:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3599:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8115,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8116,
                      "name": "strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7934,
                      "src": "3657:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8117,
                      "name": "_strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8105,
                      "src": "3676:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3657:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8119,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:36:20"
                }
              ]
            },
            "documentation": null,
            "id": 8121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategistReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8105,
                  "name": "_strategistReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 8121,
                  "src": "3553:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3552:27:20"
            },
            "returnParameters": {
              "id": 8107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3589:0:20"
            },
            "scope": 8936,
            "src": "3524:176:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8138,
              "nodeType": "Block",
              "src": "3749:89:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8127,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3767:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3767:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8129,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3781:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3767:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3759:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3759:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8133,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8134,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7942,
                      "src": "3817:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8135,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8123,
                      "src": "3825:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3817:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8137,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:14:20"
                }
              ]
            },
            "documentation": null,
            "id": 8139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8123,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 8139,
                  "src": "3724:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3724:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3723:16:20"
            },
            "returnParameters": {
              "id": 8125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3749:0:20"
            },
            "scope": 8936,
            "src": "3706:132:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8169,
              "nodeType": "Block",
              "src": "3888:201:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8145,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3906:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3906:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8147,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7950,
                            "src": "3920:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3906:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3934:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3934:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8151,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7946,
                            "src": "3948:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3934:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3906:52:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 8154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3960:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 8144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3898:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:76:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8156,
                  "nodeType": "ExpressionStatement",
                  "src": "3898:76:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 8157,
                    "name": "isUniswap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8141,
                    "src": "3988:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8167,
                    "nodeType": "Block",
                    "src": "4043:40:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8163,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7944,
                            "src": "4057:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8164,
                            "name": "sushiswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7905,
                            "src": "4063:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4057:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8166,
                        "nodeType": "ExpressionStatement",
                        "src": "4057:15:20"
                      }
                    ]
                  },
                  "id": 8168,
                  "nodeType": "IfStatement",
                  "src": "3984:99:20",
                  "trueBody": {
                    "id": 8162,
                    "nodeType": "Block",
                    "src": "3999:38:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8158,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7944,
                            "src": "4013:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8159,
                            "name": "uniswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7900,
                            "src": "4019:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4013:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8161,
                        "nodeType": "ExpressionStatement",
                        "src": "4013:13:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 8170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "switchDex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8141,
                  "name": "isUniswap",
                  "nodeType": "VariableDeclaration",
                  "scope": 8170,
                  "src": "3863:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3863:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3862:16:20"
            },
            "returnParameters": {
              "id": 8143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:0:20"
            },
            "scope": 8936,
            "src": "3844:245:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8205,
              "nodeType": "Block",
              "src": "4121:211:20",
              "statements": [
                {
                  "assignments": [
                    8174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8174,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 8205,
                      "src": "4131:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4131:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8183,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8180,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "4178:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4170:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4170:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8176,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "4154:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8175,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4147:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4147:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "4147:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4131:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8184,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8174,
                      "src": "4198:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4206:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4198:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8204,
                  "nodeType": "IfStatement",
                  "src": "4194:132:20",
                  "trueBody": {
                    "id": 8203,
                    "nodeType": "Block",
                    "src": "4209:117:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8191,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7942,
                              "src": "4249:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8192,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8174,
                              "src": "4256:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8188,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "4230:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8187,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "4223:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4223:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "4223:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4223:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8194,
                        "nodeType": "ExpressionStatement",
                        "src": "4223:39:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8199,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7890,
                              "src": "4303:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8200,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7875,
                              "src": "4310:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8196,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7942,
                                  "src": "4288:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8195,
                                "name": "IVoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36603,
                                "src": "4276:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                                  "typeString": "type(contract IVoterProxy)"
                                }
                              },
                              "id": 8197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4276:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                                "typeString": "contract IVoterProxy"
                              }
                            },
                            "id": 8198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36587,
                            "src": "4276:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 8201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4276:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8202,
                        "nodeType": "ExpressionStatement",
                        "src": "4276:39:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 8206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4111:2:20"
            },
            "returnParameters": {
              "id": 8172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4121:0:20"
            },
            "scope": 8936,
            "src": "4095:237:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8264,
              "nodeType": "Block",
              "src": "4480:314:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8214,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4498:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4498:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8216,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7948,
                          "src": "4512:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4498:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4524:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4490:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4490:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8220,
                  "nodeType": "ExpressionStatement",
                  "src": "4490:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8222,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7875,
                          "src": "4556:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8224,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8208,
                              "src": "4572:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4564:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4564:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4556:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 8227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:6:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 8221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4548:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4548:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8229,
                  "nodeType": "ExpressionStatement",
                  "src": "4548:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8231,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7880,
                          "src": "4606:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8233,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8208,
                              "src": "4621:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4613:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4613:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4606:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 8236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4630:5:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 8230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4598:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8238,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:38:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8240,
                          "name": "eurs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "4654:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8242,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8208,
                              "src": "4670:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 8241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4662:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4662:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4654:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "65757273",
                        "id": 8245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4679:6:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_959438d74ae815324385c2169e525c50a4ed000b77f0cc9c1366803012667d82",
                          "typeString": "literal_string \"eurs\""
                        },
                        "value": "eurs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_959438d74ae815324385c2169e525c50a4ed000b77f0cc9c1366803012667d82",
                          "typeString": "literal_string \"eurs\""
                        }
                      ],
                      "id": 8239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4646:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8247,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8248,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8211,
                      "src": "4696:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8252,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38020,
                              "src": "4731:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            ],
                            "id": 8251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4723:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4723:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8249,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8208,
                          "src": "4706:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "4706:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4706:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4696:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8256,
                  "nodeType": "ExpressionStatement",
                  "src": "4696:41:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8260,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7948,
                        "src": "4767:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8261,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8211,
                        "src": "4779:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8257,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8208,
                        "src": "4747:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4747:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8263,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:40:20"
                }
              ]
            },
            "documentation": null,
            "id": 8265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8208,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 8265,
                  "src": "4430:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$35492",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8207,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 35492,
                    "src": "4430:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35492",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4429:15:20"
            },
            "returnParameters": {
              "id": 8212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8211,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8265,
                  "src": "4463:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4462:17:20"
            },
            "scope": 8936,
            "src": "4412:382:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8363,
              "nodeType": "Block",
              "src": "4913:665:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8271,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4931:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4931:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8273,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7948,
                          "src": "4945:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4931:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4957:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4923:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4923:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8277,
                  "nodeType": "ExpressionStatement",
                  "src": "4923:48:20"
                },
                {
                  "assignments": [
                    8279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8279,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "4981:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4981:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8288,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "5031:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5023:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5023:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8281,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5007:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8280,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5000:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5000:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "5000:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5000:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4981:56:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8289,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8279,
                      "src": "5051:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8290,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8267,
                      "src": "5062:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5051:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8309,
                  "nodeType": "IfStatement",
                  "src": "5047:140:20",
                  "trueBody": {
                    "id": 8308,
                    "nodeType": "Block",
                    "src": "5071:116:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8292,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8267,
                            "src": "5085:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 8296,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8279,
                                    "src": "5121:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 8294,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8267,
                                    "src": "5109:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 8295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35279,
                                  "src": "5109:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 8297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5109:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 8293,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8381,
                              "src": "5095:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 8298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5095:36:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5085:46:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8300,
                        "nodeType": "ExpressionStatement",
                        "src": "5085:46:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8301,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8267,
                            "src": "5145:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8304,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8279,
                                "src": "5167:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 8302,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8267,
                                "src": "5155:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35263,
                              "src": "5155:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5155:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5145:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8307,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:31:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8311,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "5197:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5197:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8319,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8317,
                        "name": "FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7940,
                        "src": "5243:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8314,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7937,
                            "src": "5224:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8312,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8267,
                            "src": "5212:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "5212:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5212:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "5212:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5212:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5197:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8325,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7948,
                                "src": "5308:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8324,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36181,
                              "src": "5296:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 8326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5296:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$36181",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 8327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36157,
                          "src": "5296:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5296:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8329,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8311,
                        "src": "5331:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8321,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5277:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8320,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5270:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5270:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5270:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:66:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:66:20"
                },
                {
                  "assignments": [
                    8333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8333,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "5346:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8332,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5346:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8342,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8339,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5402:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5394:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5394:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8335,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7948,
                            "src": "5375:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8334,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "5363:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 8336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5363:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 8337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "5363:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 8341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5363:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5346:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8344,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8333,
                          "src": "5426:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5444:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5436:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5436:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5426:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5448:8:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 8343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5418:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5418:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8351,
                  "nodeType": "ExpressionStatement",
                  "src": "5418:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8356,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8333,
                        "src": "5545:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8359,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8311,
                            "src": "5565:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8357,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8267,
                            "src": "5553:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35279,
                          "src": "5553:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5553:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8353,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "5526:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8352,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5519:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5519:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5519:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5519:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8362,
                  "nodeType": "ExpressionStatement",
                  "src": "5519:52:20"
                }
              ]
            },
            "documentation": null,
            "id": 8364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8267,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8364,
                  "src": "4887:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4886:17:20"
            },
            "returnParameters": {
              "id": 8269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4913:0:20"
            },
            "scope": 8936,
            "src": "4869:709:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8380,
              "nodeType": "Block",
              "src": "5651:73:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8375,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "5696:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8376,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7875,
                        "src": "5703:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8366,
                        "src": "5709:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8372,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "5680:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8371,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "5668:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5668:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36564,
                      "src": "5668:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 8378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5668:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8370,
                  "id": 8379,
                  "nodeType": "Return",
                  "src": "5661:56:20"
                }
              ]
            },
            "documentation": null,
            "id": 8381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8366,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "5607:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5607:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5606:17:20"
            },
            "returnParameters": {
              "id": 8370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "5642:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5642:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5641:9:20"
            },
            "scope": 8936,
            "src": "5584:140:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8436,
              "nodeType": "Block",
              "src": "5855:373:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8387,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "5873:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5873:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8389,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7948,
                          "src": "5887:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5873:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 8391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5899:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 8386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5865:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8393,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8394,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8449,
                      "src": "5923:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5923:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8396,
                  "nodeType": "ExpressionStatement",
                  "src": "5923:14:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8397,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8384,
                      "src": "5948:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8403,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38020,
                              "src": "5989:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                "typeString": "contract StrategyCurveEURVoterProxy"
                              }
                            ],
                            "id": 8402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5981:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5981:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8399,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7875,
                              "src": "5965:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8398,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35492,
                            "src": "5958:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 8400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5958:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "5958:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5958:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5948:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8407,
                  "nodeType": "ExpressionStatement",
                  "src": "5948:47:20"
                },
                {
                  "assignments": [
                    8409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8409,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 8436,
                      "src": "6006:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8408,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6006:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8418,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8415,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "6062:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6054:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6054:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8411,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7948,
                            "src": "6035:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8410,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "6023:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 8412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6023:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 8413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "6023:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 8417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6006:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8420,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8409,
                          "src": "6086:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6104:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6096:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6096:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6086:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 8425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6108:8:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 8419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6078:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6078:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8427,
                  "nodeType": "ExpressionStatement",
                  "src": "6078:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8432,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8409,
                        "src": "6205:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8433,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "6213:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8429,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "6186:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8428,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6179:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6179:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "6179:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6179:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "6179:42:20"
                }
              ]
            },
            "documentation": null,
            "id": 8437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:2:20"
            },
            "returnParameters": {
              "id": 8385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8384,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8437,
                  "src": "5838:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5838:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5837:17:20"
            },
            "scope": 8936,
            "src": "5797:431:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8448,
              "nodeType": "Block",
              "src": "6267:60:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8444,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "6308:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8445,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7875,
                        "src": "6315:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8441,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "6289:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8440,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "6277:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6277:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36580,
                      "src": "6277:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 8446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8447,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:43:20"
                }
              ]
            },
            "documentation": null,
            "id": 8449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6255:2:20"
            },
            "returnParameters": {
              "id": 8439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6267:0:20"
            },
            "scope": 8936,
            "src": "6234:93:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8857,
              "nodeType": "Block",
              "src": "6359:2430:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 8461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 8453,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37932,
                                "src": "6377:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6377:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 8455,
                              "name": "keeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7952,
                              "src": "6391:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6377:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 8460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 8457,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37932,
                                "src": "6401:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6401:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 8459,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7950,
                              "src": "6415:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6401:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6377:48:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "6429:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6429:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 8464,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7946,
                            "src": "6443:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6429:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6377:76:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "216b656570657273",
                        "id": 8467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6455:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        },
                        "value": "!keepers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        }
                      ],
                      "id": 8452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6369:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:97:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8469,
                  "nodeType": "ExpressionStatement",
                  "src": "6369:97:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8474,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "6503:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8471,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "6488:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8470,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "6476:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6476:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36592,
                      "src": "6476:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 8475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8476,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:33:20"
                },
                {
                  "assignments": [
                    8478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8478,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 8857,
                      "src": "6519:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6519:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8487,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8484,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "6564:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6556:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6556:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8480,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7880,
                            "src": "6541:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8479,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6534:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6534:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "6534:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6534:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6519:51:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8488,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8478,
                      "src": "6584:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6591:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6584:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8579,
                  "nodeType": "IfStatement",
                  "src": "6580:524:20",
                  "trueBody": {
                    "id": 8578,
                    "nodeType": "Block",
                    "src": "6594:510:20",
                    "statements": [
                      {
                        "assignments": [
                          8492
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8492,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 8578,
                            "src": "6608:16:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8491,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6608:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8500,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8498,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7940,
                              "src": "6649:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8495,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7928,
                                  "src": "6636:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8493,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8478,
                                  "src": "6627:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "6627:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6627:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "6627:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6627:38:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6608:57:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8505,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7895,
                              "src": "6704:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8506,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8492,
                              "src": "6711:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8502,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6686:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8501,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6679:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6679:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "6679:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6679:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8508,
                        "nodeType": "ExpressionStatement",
                        "src": "6679:41:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8509,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8478,
                            "src": "6734:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8512,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8492,
                                "src": "6750:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 8510,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8478,
                                "src": "6741:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35279,
                              "src": "6741:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 8513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6741:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6734:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8515,
                        "nodeType": "ExpressionStatement",
                        "src": "6734:25:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8520,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7944,
                              "src": "6798:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6803:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8517,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6781:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8516,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6774:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6774:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6774:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6774:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8523,
                        "nodeType": "ExpressionStatement",
                        "src": "6774:31:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8528,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7944,
                              "src": "6843:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8529,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8478,
                              "src": "6848:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8525,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7880,
                                  "src": "6826:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8524,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6819:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6819:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6819:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6819:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8531,
                        "nodeType": "ExpressionStatement",
                        "src": "6819:34:20"
                      },
                      {
                        "assignments": [
                          8535
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8535,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 8578,
                            "src": "6868:21:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8533,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6868:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8534,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6868:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8541,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 8539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6906:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 8538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6892:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8536,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6896:7:20",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8537,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6896:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 8540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6892:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6868:40:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8542,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8535,
                              "src": "6922:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8544,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6927:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6922:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8545,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7880,
                            "src": "6932:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6922:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8547,
                        "nodeType": "ExpressionStatement",
                        "src": "6922:13:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8548,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8535,
                              "src": "6949:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8550,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6954:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6949:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8551,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7920,
                            "src": "6959:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6949:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8553,
                        "nodeType": "ExpressionStatement",
                        "src": "6949:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8554,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8535,
                              "src": "6977:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8556,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 8555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6982:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6977:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8557,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7915,
                            "src": "6987:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6977:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8559,
                        "nodeType": "ExpressionStatement",
                        "src": "6977:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8564,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8478,
                              "src": "7040:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7054:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 8565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7046:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 8567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7046:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8568,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8535,
                              "src": "7058:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8570,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38020,
                                  "src": "7072:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                ],
                                "id": 8569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7064:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 8571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7064:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 8574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7087:4:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8572,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37934,
                                  "src": "7079:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35263,
                                "src": "7079:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7079:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8561,
                                  "name": "dex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7944,
                                  "src": "7010:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8560,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36470,
                                "src": "7006:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$36470_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 8562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7006:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$36470",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 8563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36469,
                            "src": "7006:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 8576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7006:87:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8577,
                        "nodeType": "ExpressionStatement",
                        "src": "7006:87:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8584,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "7145:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8585,
                        "name": "snx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7925,
                        "src": "7152:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8581,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "7125:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8580,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "7113:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7113:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36602,
                      "src": "7113:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 8586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7113:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8587,
                  "nodeType": "ExpressionStatement",
                  "src": "7113:43:20"
                },
                {
                  "assignments": [
                    8589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8589,
                      "name": "_snx",
                      "nodeType": "VariableDeclaration",
                      "scope": 8857,
                      "src": "7166:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7166:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8598,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "7211:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7203:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7203:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8591,
                            "name": "snx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7925,
                            "src": "7188:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8590,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "7181:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7181:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "7181:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7181:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7166:51:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8599,
                      "name": "_snx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8589,
                      "src": "7231:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7238:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7231:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8665,
                  "nodeType": "IfStatement",
                  "src": "7227:358:20",
                  "trueBody": {
                    "id": 8664,
                    "nodeType": "Block",
                    "src": "7241:344:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8606,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7944,
                              "src": "7279:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7284:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8603,
                                  "name": "snx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7925,
                                  "src": "7262:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8602,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7255:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7255:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7255:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7255:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8609,
                        "nodeType": "ExpressionStatement",
                        "src": "7255:31:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8614,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7944,
                              "src": "7324:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8615,
                              "name": "_snx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "7329:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8611,
                                  "name": "snx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7925,
                                  "src": "7307:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8610,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7300:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7300:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7300:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7300:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8617,
                        "nodeType": "ExpressionStatement",
                        "src": "7300:34:20"
                      },
                      {
                        "assignments": [
                          8621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8621,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 8664,
                            "src": "7349:21:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8619,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7349:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8620,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "7349:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8627,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 8625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7387:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 8624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7373:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7377:7:20",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8623,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "7377:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 8626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7373:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7349:40:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8628,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8621,
                              "src": "7403:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8630,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7408:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7403:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8631,
                            "name": "snx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7925,
                            "src": "7413:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7403:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8633,
                        "nodeType": "ExpressionStatement",
                        "src": "7403:13:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8634,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8621,
                              "src": "7430:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8636,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7435:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7430:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8637,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7920,
                            "src": "7440:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7430:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8639,
                        "nodeType": "ExpressionStatement",
                        "src": "7430:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8640,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8621,
                              "src": "7458:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8642,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 8641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7463:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7458:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8643,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7915,
                            "src": "7468:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7458:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8645,
                        "nodeType": "ExpressionStatement",
                        "src": "7458:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8650,
                              "name": "_snx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "7521:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7535:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 8651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7527:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 8653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7527:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8654,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8621,
                              "src": "7539:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8656,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38020,
                                  "src": "7553:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                ],
                                "id": 8655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7545:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 8657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7545:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 8660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7568:4:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8658,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37934,
                                  "src": "7560:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35263,
                                "src": "7560:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7560:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8647,
                                  "name": "dex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7944,
                                  "src": "7491:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8646,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36470,
                                "src": "7487:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$36470_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 8648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7487:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$36470",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 8649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36469,
                            "src": "7487:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 8662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7487:87:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8663,
                        "nodeType": "ExpressionStatement",
                        "src": "7487:87:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8667,
                      "name": "_usdc",
                      "nodeType": "VariableDeclaration",
                      "scope": 8857,
                      "src": "7594:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7594:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8676,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8673,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "7641:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7633:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7633:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8669,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7915,
                            "src": "7617:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8668,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "7610:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7610:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "7610:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7610:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7594:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8677,
                      "name": "_usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8667,
                      "src": "7661:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7669:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7661:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8737,
                  "nodeType": "IfStatement",
                  "src": "7657:347:20",
                  "trueBody": {
                    "id": 8736,
                    "nodeType": "Block",
                    "src": "7672:332:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8684,
                              "name": "uniswap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7900,
                              "src": "7711:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7720:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8681,
                                  "name": "usdc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7915,
                                  "src": "7693:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8680,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7686:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7686:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7686:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7686:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8687,
                        "nodeType": "ExpressionStatement",
                        "src": "7686:36:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8692,
                              "name": "uniswap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7900,
                              "src": "7761:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8693,
                              "name": "_snx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8589,
                              "src": "7770:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8689,
                                  "name": "usdc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7915,
                                  "src": "7743:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8688,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7736:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7736:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7736:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7736:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8695,
                        "nodeType": "ExpressionStatement",
                        "src": "7736:39:20"
                      },
                      {
                        "assignments": [
                          8699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8699,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 8736,
                            "src": "7790:21:20",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8697,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7790:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8698,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "7790:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8705,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 8703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7828:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 8702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7814:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8700,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7818:7:20",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 8701,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "7818:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 8704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7814:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7790:40:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8706,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8699,
                              "src": "7844:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8708,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7849:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7844:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8709,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7915,
                            "src": "7854:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7844:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8711,
                        "nodeType": "ExpressionStatement",
                        "src": "7844:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8712,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8699,
                              "src": "7872:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 8714,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 8713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7877:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7872:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8715,
                            "name": "eurs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7910,
                            "src": "7882:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7872:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 8717,
                        "nodeType": "ExpressionStatement",
                        "src": "7872:14:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8722,
                              "name": "_usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8667,
                              "src": "7939:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7954:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 8723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7946:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 8725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7946:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8726,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8699,
                              "src": "7958:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8728,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38020,
                                  "src": "7972:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                                    "typeString": "contract StrategyCurveEURVoterProxy"
                                  }
                                ],
                                "id": 8727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7964:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 8729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7964:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 8732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7987:4:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8730,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37934,
                                  "src": "7979:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35263,
                                "src": "7979:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7979:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8719,
                                  "name": "uniswap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7900,
                                  "src": "7905:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8718,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36470,
                                "src": "7901:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$36470_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 8720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7901:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$36470",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 8721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36469,
                            "src": "7901:37:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 8734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7901:92:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8735,
                        "nodeType": "ExpressionStatement",
                        "src": "7901:92:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8739,
                      "name": "_eurs",
                      "nodeType": "VariableDeclaration",
                      "scope": 8857,
                      "src": "8013:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8013:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8748,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8745,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "8060:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8052:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8052:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8741,
                            "name": "eurs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7910,
                            "src": "8036:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8740,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "8029:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8029:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "8029:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8029:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8013:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8749,
                      "name": "_eurs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8739,
                      "src": "8080:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8088:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8080:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8779,
                  "nodeType": "IfStatement",
                  "src": "8076:184:20",
                  "trueBody": {
                    "id": 8778,
                    "nodeType": "Block",
                    "src": "8091:169:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8756,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7885,
                              "src": "8130:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8137:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8753,
                                  "name": "eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7910,
                                  "src": "8112:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8752,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "8105:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8105:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "8105:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8105:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8759,
                        "nodeType": "ExpressionStatement",
                        "src": "8105:34:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8764,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7885,
                              "src": "8178:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8765,
                              "name": "_eurs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8739,
                              "src": "8185:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8761,
                                  "name": "eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7910,
                                  "src": "8160:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8760,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "8153:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8153:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "8153:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8153:38:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8767,
                        "nodeType": "ExpressionStatement",
                        "src": "8153:38:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 8772,
                                  "name": "_eurs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8739,
                                  "src": "8236:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 8773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8243:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 8774,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8235:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8247:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8769,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7885,
                                  "src": "8214:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8768,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36380,
                                "src": "8205:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$36380_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 8770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8205:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$36380",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 8771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36294,
                            "src": "8205:29:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[2] memory,uint256) external"
                            }
                          },
                          "id": 8776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8205:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8777,
                        "nodeType": "ExpressionStatement",
                        "src": "8205:44:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8781,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 8857,
                      "src": "8269:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8269:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8790,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8787,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "8316:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8308:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8308:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8783,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "8292:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8782,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "8285:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8285:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "8285:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8285:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8269:53:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8791,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8781,
                      "src": "8336:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8344:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8336:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8838,
                  "nodeType": "IfStatement",
                  "src": "8332:341:20",
                  "trueBody": {
                    "id": 8837,
                    "nodeType": "Block",
                    "src": "8347:326:20",
                    "statements": [
                      {
                        "assignments": [
                          8795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8795,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 8837,
                            "src": "8361:12:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8794,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8361:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8803,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8801,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7940,
                              "src": "8403:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8798,
                                  "name": "treasuryFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7931,
                                  "src": "8386:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8796,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8781,
                                  "src": "8376:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "8376:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8376:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "8376:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8376:43:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8361:58:20"
                      },
                      {
                        "assignments": [
                          8805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8805,
                            "name": "_reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 8837,
                            "src": "8433:15:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8804,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8433:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8813,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8811,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7940,
                              "src": "8483:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8808,
                                  "name": "strategistReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7934,
                                  "src": "8461:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 8806,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8781,
                                  "src": "8451:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 8807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "8451:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 8809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8451:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "8451:31:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8451:48:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8433:66:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 8819,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7948,
                                      "src": "8551:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8818,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36181,
                                    "src": "8539:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 8820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8539:23:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$36181",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 8821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36157,
                                "src": "8539:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 8822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8539:33:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8823,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8795,
                              "src": "8574:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8815,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "8520:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8814,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "8513:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8513:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "8513:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8513:66:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8825,
                        "nodeType": "ExpressionStatement",
                        "src": "8513:66:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 8830,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7950,
                              "src": "8619:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 8831,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8805,
                              "src": "8631:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8827,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7875,
                                  "src": "8600:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8826,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "8593:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 8828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8593:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "8593:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 8832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8593:46:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8833,
                        "nodeType": "ExpressionStatement",
                        "src": "8593:46:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8834,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8206,
                            "src": "8653:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 8835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8653:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8836,
                        "nodeType": "ExpressionStatement",
                        "src": "8653:9:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8840,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "8694:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8839,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "8682:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36595,
                      "src": "8682:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8682:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8844,
                  "nodeType": "ExpressionStatement",
                  "src": "8682:25:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8845,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7954,
                      "src": "8717:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8848,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8781,
                          "src": "8737:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8846,
                          "name": "earned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7954,
                          "src": "8726:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "8726:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8726:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8717:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8851,
                  "nodeType": "ExpressionStatement",
                  "src": "8717:26:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8853,
                        "name": "_want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8781,
                        "src": "8768:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8854,
                        "name": "earned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7954,
                        "src": "8775:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8852,
                      "name": "Harvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7960,
                      "src": "8758:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 8855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8758:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8856,
                  "nodeType": "EmitStatement",
                  "src": "8753:29:20"
                }
              ]
            },
            "documentation": null,
            "id": 8858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6349:2:20"
            },
            "returnParameters": {
              "id": 8451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6359:0:20"
            },
            "scope": 8936,
            "src": "6333:2456:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8872,
              "nodeType": "Block",
              "src": "8850:61:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8868,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38020,
                            "src": "8898:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveEURVoterProxy_$8936",
                              "typeString": "contract StrategyCurveEURVoterProxy"
                            }
                          ],
                          "id": 8867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8890:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8890:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8864,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7875,
                            "src": "8874:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8863,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "8867:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 8865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8867:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "8867:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8862,
                  "id": 8871,
                  "nodeType": "Return",
                  "src": "8860:44:20"
                }
              ]
            },
            "documentation": null,
            "id": 8873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8817:2:20"
            },
            "returnParameters": {
              "id": 8862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8861,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8873,
                  "src": "8841:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8841:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8840:9:20"
            },
            "scope": 8936,
            "src": "8795:116:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8885,
              "nodeType": "Block",
              "src": "8972:59:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8882,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "9018:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8879,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7942,
                            "src": "9001:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8878,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "8989:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 8880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8989:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 8881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36571,
                      "src": "8989:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8989:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8877,
                  "id": 8884,
                  "nodeType": "Return",
                  "src": "8982:42:20"
                }
              ]
            },
            "documentation": null,
            "id": 8886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8939:2:20"
            },
            "returnParameters": {
              "id": 8877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8886,
                  "src": "8963:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8963:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8962:9:20"
            },
            "scope": 8936,
            "src": "8917:114:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8898,
              "nodeType": "Block",
              "src": "9088:60:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8894,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8886,
                          "src": "9125:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9125:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8891,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8873,
                          "src": "9105:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 8892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9105:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35263,
                      "src": "9105:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9105:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8890,
                  "id": 8897,
                  "nodeType": "Return",
                  "src": "9098:43:20"
                }
              ]
            },
            "documentation": null,
            "id": 8899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:2:20"
            },
            "returnParameters": {
              "id": 8890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8889,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8899,
                  "src": "9079:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9079:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9078:9:20"
            },
            "scope": 8936,
            "src": "9037:111:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8916,
              "nodeType": "Block",
              "src": "9207:99:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8905,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "9225:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9225:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8907,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "9239:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9225:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9251:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "9217:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9217:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8911,
                  "nodeType": "ExpressionStatement",
                  "src": "9217:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8912,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7946,
                      "src": "9275:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8913,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8901,
                      "src": "9288:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9275:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8915,
                  "nodeType": "ExpressionStatement",
                  "src": "9275:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8901,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 8917,
                  "src": "9177:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9177:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9176:21:20"
            },
            "returnParameters": {
              "id": 8903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9207:0:20"
            },
            "scope": 8936,
            "src": "9154:152:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8934,
              "nodeType": "Block",
              "src": "9365:99:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8923,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "9383:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9383:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8925,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "9397:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9383:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 8927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9409:13:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 8922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "9375:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9375:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8929,
                  "nodeType": "ExpressionStatement",
                  "src": "9375:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8930,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7948,
                      "src": "9433:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8931,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8919,
                      "src": "9446:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9433:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8933,
                  "nodeType": "ExpressionStatement",
                  "src": "9433:24:20"
                }
              ]
            },
            "documentation": null,
            "id": 8935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8919,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 8935,
                  "src": "9335:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9334:21:20"
            },
            "returnParameters": {
              "id": 8921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9365:0:20"
            },
            "scope": 8936,
            "src": "9312:152:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8937,
        "src": "565:8901:20"
      }
    ],
    "src": "38:9429:20"
  },
  "bytecode": "",
  "bytecodeSha1": "d515249d45c74763ca4e09254d00d3e66f4c8d31",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "StrategyCurveEURVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "127": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "131": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "128": [
            2458,
            2464,
            false
          ],
          "129": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "130": [
            1845,
            1851,
            true
          ]
        }
      },
      "20": {
        "StrategyCurveEURVoterProxy.deposit": {
          "122": [
            4198,
            4207,
            false
          ]
        },
        "StrategyCurveEURVoterProxy.harvest": {
          "95": [
            6377,
            6397,
            true
          ],
          "96": [
            6401,
            6425,
            true
          ],
          "97": [
            6429,
            6453,
            true
          ],
          "98": [
            6584,
            6592,
            false
          ],
          "99": [
            7231,
            7239,
            false
          ],
          "100": [
            7661,
            7670,
            false
          ],
          "101": [
            8080,
            8089,
            false
          ],
          "102": [
            8336,
            8345,
            false
          ]
        },
        "StrategyCurveEURVoterProxy.setController": {
          "115": [
            9383,
            9407,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setGovernance": {
          "118": [
            9225,
            9249,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setKeepCRV": {
          "116": [
            3111,
            3135,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setKeeper": {
          "110": [
            2939,
            2963,
            true
          ],
          "111": [
            2967,
            2991,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setProxy": {
          "117": [
            3767,
            3791,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategist": {
          "120": [
            2761,
            2785,
            true
          ],
          "121": [
            2789,
            2813,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategistReward": {
          "91": [
            3607,
            3631,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setTreasuryFee": {
          "112": [
            3435,
            3459,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.setWithdrawalFee": {
          "119": [
            3269,
            3293,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.switchDex": {
          "107": [
            3906,
            3930,
            true
          ],
          "108": [
            3934,
            3958,
            true
          ],
          "109": [
            3988,
            3997,
            false
          ]
        },
        "StrategyCurveEURVoterProxy.withdraw": {
          "92": [
            4931,
            4955,
            true
          ],
          "93": [
            5051,
            5069,
            false
          ],
          "94": [
            5426,
            5446,
            true
          ],
          "103": [
            4498,
            4522,
            true
          ],
          "104": [
            4556,
            4579,
            true
          ],
          "105": [
            4606,
            4628,
            true
          ],
          "106": [
            4654,
            4677,
            true
          ]
        },
        "StrategyCurveEURVoterProxy.withdrawAll": {
          "113": [
            5873,
            5897,
            true
          ],
          "114": [
            6086,
            6106,
            true
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "123": [
            3261,
            3288,
            true
          ],
          "124": [
            3479,
            3486,
            true
          ],
          "125": [
            3538,
            3559,
            false
          ],
          "126": [
            3667,
            3697,
            true
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {},
      "75": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "77": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "80": [
            3150,
            3196
          ],
          "86": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "78": [
            2480,
            2488
          ],
          "79": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "75": [
            1351,
            1401
          ],
          "85": [
            1837,
            1866
          ]
        }
      },
      "20": {
        "StrategyCurveEURVoterProxy._withdrawAll": {
          "84": [
            6277,
            6320
          ]
        },
        "StrategyCurveEURVoterProxy._withdrawSome": {
          "76": [
            5661,
            5717
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOf": {
          "50": [
            9098,
            9141
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOfPool": {
          "2": [
            8982,
            9024
          ]
        },
        "StrategyCurveEURVoterProxy.balanceOfWant": {
          "70": [
            8860,
            8904
          ]
        },
        "StrategyCurveEURVoterProxy.deposit": {
          "73": [
            4223,
            4262
          ],
          "74": [
            4276,
            4315
          ]
        },
        "StrategyCurveEURVoterProxy.getName": {
          "3": [
            2642,
            2677
          ]
        },
        "StrategyCurveEURVoterProxy.harvest": {
          "10": [
            6369,
            6466
          ],
          "11": [
            6476,
            6509
          ],
          "12": [
            6679,
            6720
          ],
          "13": [
            6734,
            6759
          ],
          "14": [
            6774,
            6805
          ],
          "15": [
            6819,
            6853
          ],
          "16": [
            6922,
            6935
          ],
          "17": [
            6949,
            6963
          ],
          "18": [
            6977,
            6991
          ],
          "19": [
            7006,
            7093
          ],
          "20": [
            7113,
            7156
          ],
          "21": [
            7255,
            7286
          ],
          "22": [
            7300,
            7334
          ],
          "23": [
            7403,
            7416
          ],
          "24": [
            7430,
            7444
          ],
          "25": [
            7458,
            7472
          ],
          "26": [
            7487,
            7574
          ],
          "27": [
            7686,
            7722
          ],
          "28": [
            7736,
            7775
          ],
          "29": [
            7844,
            7858
          ],
          "30": [
            7872,
            7886
          ],
          "31": [
            7901,
            7993
          ],
          "32": [
            8105,
            8139
          ],
          "33": [
            8153,
            8191
          ],
          "34": [
            8205,
            8249
          ],
          "35": [
            8513,
            8579
          ],
          "36": [
            8593,
            8639
          ],
          "37": [
            8653,
            8662
          ],
          "38": [
            8682,
            8707
          ],
          "39": [
            8717,
            8743
          ],
          "40": [
            8753,
            8782
          ]
        },
        "StrategyCurveEURVoterProxy.setController": {
          "60": [
            9375,
            9423
          ],
          "61": [
            9433,
            9457
          ]
        },
        "StrategyCurveEURVoterProxy.setGovernance": {
          "66": [
            9217,
            9265
          ],
          "67": [
            9275,
            9299
          ]
        },
        "StrategyCurveEURVoterProxy.setKeepCRV": {
          "62": [
            3103,
            3151
          ],
          "63": [
            3161,
            3179
          ]
        },
        "StrategyCurveEURVoterProxy.setKeeper": {
          "51": [
            2931,
            3007
          ],
          "52": [
            3017,
            3033
          ]
        },
        "StrategyCurveEURVoterProxy.setProxy": {
          "64": [
            3759,
            3807
          ],
          "65": [
            3817,
            3831
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategist": {
          "71": [
            2753,
            2829
          ],
          "72": [
            2839,
            2863
          ]
        },
        "StrategyCurveEURVoterProxy.setStrategistReward": {
          "0": [
            3599,
            3647
          ],
          "1": [
            3657,
            3693
          ]
        },
        "StrategyCurveEURVoterProxy.setTreasuryFee": {
          "53": [
            3427,
            3475
          ],
          "54": [
            3485,
            3511
          ]
        },
        "StrategyCurveEURVoterProxy.setWithdrawalFee": {
          "68": [
            3261,
            3309
          ],
          "69": [
            3319,
            3349
          ]
        },
        "StrategyCurveEURVoterProxy.switchDex": {
          "47": [
            3898,
            3974
          ],
          "48": [
            4013,
            4026
          ],
          "49": [
            4057,
            4072
          ]
        },
        "StrategyCurveEURVoterProxy.withdraw": {
          "4": [
            4923,
            4971
          ],
          "5": [
            5085,
            5131
          ],
          "6": [
            5145,
            5176
          ],
          "7": [
            5270,
            5336
          ],
          "8": [
            5418,
            5457
          ],
          "9": [
            5519,
            5571
          ],
          "41": [
            4490,
            4538
          ],
          "42": [
            4548,
            4588
          ],
          "43": [
            4598,
            4636
          ],
          "44": [
            4646,
            4686
          ],
          "45": [
            4696,
            4737
          ],
          "46": [
            4747,
            4787
          ]
        },
        "StrategyCurveEURVoterProxy.withdrawAll": {
          "55": [
            5865,
            5913
          ],
          "56": [
            5923,
            5937
          ],
          "57": [
            5948,
            5995
          ],
          "58": [
            6078,
            6117
          ],
          "59": [
            6179,
            6221
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "87": [
            3253,
            3324
          ],
          "88": [
            3471,
            3523
          ],
          "89": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "82": [
            1406,
            1556
          ],
          "83": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "81": [
            744,
            829
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {
        "Address.isContract": {
          "90": [
            1238,
            1289
          ]
        }
      },
      "75": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "IController",
    "ICurveFi",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "IVoterProxy",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "Uni"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "565:8901:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:8901:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3524:176;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3524:176:20;;:::i;:::-;;8917:114;;;:::i;:::-;;;;;;;;;;;;;;;;2575:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2575:109:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:82;;;:::i;:::-;;;;-1:-1:-1;;;;;703:82:20;;;;;;;;;;;;;;2053:25;;;:::i;1147:85::-;;;:::i;4869:709::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4869:709:20;;:::i;1419:82::-;;;:::i;1507:::-;;;:::i;6333:2456::-;;;:::i;1057:83::-;;;:::i;1331:82::-;;;:::i;4412:382::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4412:382:20;-1:-1:-1;;;;;4412:382:20;;:::i;1991:25::-;;;:::i;1966:18::-;;;:::i;791:81::-;;;:::i;3844:245::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3844:245:20;;;;:::i;879:83::-;;;:::i;9037:111::-;;;:::i;2876:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2876:164:20;-1:-1:-1;;;;;2876:164:20;;:::i;3362:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3362:156:20;;:::i;1729:29::-;;;:::i;1803:38::-;;;:::i;5797:431::-;;;:::i;1847:33::-;;;:::i;9312:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9312:152:20;-1:-1:-1;;;;;9312:152:20;;:::i;3046:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3046:140:20;;:::i;3706:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3706:132:20;-1:-1:-1;;;;;3706:132:20;;:::i;1238:87::-;;;:::i;968:83::-;;;:::i;9154:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9154:152:20;-1:-1:-1;;;;;9154:152:20;;:::i;3192:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3192:164:20;;:::i;2084:21::-;;;:::i;8795:116::-;;;:::i;2690:180::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2690:180:20;-1:-1:-1;;;;;2690:180:20;;:::i;1764:33::-;;;:::i;4095:237::-;;;:::i;2112:21::-;;;:::i;1886:47::-;;;:::i;1641:81::-;;;:::i;1940:20::-;;;:::i;2022:25::-;;;:::i;3524:176::-;3621:10;;-1:-1:-1;;;;;3621:10:20;3607;:24;3599:48;;;;;-1:-1:-1;;;3599:48:20;;;;;;;;;;;;-1:-1:-1;;;3599:48:20;;;;;;;;;;;;;;;3657:16;:36;3524:176::o;8917:114::-;9001:5;;;8989:35;;;-1:-1:-1;;;8989:35:20;;1008:42;8989:35;;;;;;;;8963:7;;-1:-1:-1;;;;;9001:5:20;;;;8989:28;;:35;;;;;;;;;;;;;;9001:5;8989:35;;;5:2:-1;;;;30:1;27;20:12;5:2;8989:35:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8989:35:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8989:35:20;;-1:-1:-1;8917:114:20;:::o;2575:109::-;2642:35;;;;;;;;;;;;;;;;;2575:109;:::o;703:82::-;-1:-1:-1;;;;;;;;;;;703:82:20;:::o;2053:25::-;;;-1:-1:-1;;;;;2053:25:20;;:::o;1147:85::-;1189:42;1147:85;:::o;4869:709::-;4945:10;;-1:-1:-1;;;;;4945:10:20;4931;:24;4923:48;;;;;-1:-1:-1;;;4923:48:20;;;;;;;;;;;;-1:-1:-1;;;4923:48:20;;;;;;;;;;;;;;;5000:37;;;-1:-1:-1;;;5000:37:20;;5031:4;5000:37;;;;;;4981:16;;-1:-1:-1;;;;;;;;;;;742:42:20;5000:22;;:37;;;;;;;;;;;;;;;742:42;5000:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5000:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5000:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5000:37:20;;-1:-1:-1;5051:18:20;;;5047:140;;;5095:36;5109:21;:7;5121:8;5109:21;:11;:21;:::i;:::-;5095:13;:36::i;:::-;5085:46;-1:-1:-1;5155:21:20;5085:46;5167:8;5155:21;:11;:21;:::i;:::-;5145:31;;5047:140;5197:12;5212:47;1928:5;5212:26;5224:13;;5212:7;:11;;:26;;;;:::i;:::-;:30;:47;:30;:47;:::i;:::-;5197:62;;5270:66;5308:10;;;;;;;;;-1:-1:-1;;;;;5308:10:20;-1:-1:-1;;;;;5296:31:20;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5296:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5296:33:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5296:33:20;-1:-1:-1;;;;;;;;;;;742:42:20;5331:4;5270:66;:25;:66;:::i;:::-;5375:10;;5363:45;;;-1:-1:-1;;;5363:45:20;;-1:-1:-1;;;;;;;;;;;5363:45:20;;;;;;5346:14;;-1:-1:-1;;;;;5375:10:20;;5363:30;;:45;;;;;;;;;;;;;;5375:10;5363:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5363:45:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5363:45:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5363:45:20;;-1:-1:-1;;;;;;5426:20:20;;5418:39;;;;;-1:-1:-1;;;5418:39:20;;;;;;;;;;;;-1:-1:-1;;;5418:39:20;;;;;;;;;;;;;;;5519:52;5545:6;5553:17;:7;5565:4;5553:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;742:42:20;5519:52;;:25;:52;:::i;:::-;4869:709;;;;:::o;1419:82::-;1458:42;1419:82;:::o;1507:::-;1546:42;1507:82;:::o;6333:2456::-;6391:6;;-1:-1:-1;;;;;6391:6:20;6377:10;:20;;:48;;-1:-1:-1;6415:10:20;;-1:-1:-1;;;;;6415:10:20;6401;:24;6377:48;:76;;;-1:-1:-1;6443:10:20;;-1:-1:-1;;;;;6443:10:20;6429;:24;6377:76;6369:97;;;;;-1:-1:-1;;;6369:97:20;;;;;;;;;;;;-1:-1:-1;;;6369:97:20;;;;;;;;;;;;;;;6488:5;;;6476:33;;;-1:-1:-1;;;6476:33:20;;1008:42;6476:33;;;;;;;;-1:-1:-1;;;;;6488:5:20;;;;6476:26;;:33;;;;;6488:5;;6476:33;;;;;;;6488:5;;6476:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6476:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6534:36:20;;;-1:-1:-1;;;6534:36:20;;6564:4;6534:36;;;;;;6519:12;;-1:-1:-1;829:42:20;;-1:-1:-1;6534:21:20;;:36;;;;;;;;;;;;;;;829:42;6534:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6534:36:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6534:36:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6534:36:20;;-1:-1:-1;6584:8:20;;6580:524;;6608:16;6627:38;1928:5;6627:17;6636:7;;6627:4;:8;;:17;;;;:::i;:38::-;6608:57;-1:-1:-1;6679:41:20;829:42;1097;6608:57;6679:41;:24;:41;:::i;:::-;6741:18;:4;6750:8;6741:18;:8;:18;:::i;:::-;6798:3;;6734:25;;-1:-1:-1;6774:31:20;;829:42;;-1:-1:-1;;;;;6798:3:20;;6774:31;:23;:31;:::i;:::-;6843:3;;6819:34;;829:42;;-1:-1:-1;;;;;6843:3:20;6848:4;6819:34;:23;:34;:::i;:::-;6892:16;;;6906:1;6892:16;;;;;;;;;6868:21;;6892:16;;;6868:21;;105:10:-1;6892:16:20;88:34:-1;136:17;;-1:-1;6892:16:20;6868:40;;829:42;6922:4;6927:1;6922:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;6922:13:20;;;-1:-1:-1;;;;;6922:13:20;;;;;1546:42;6949:4;6954:1;6949:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;6949:14:20;;;-1:-1:-1;;;;;6949:14:20;;;;;1458:42;6977:4;6982:1;6977:7;;;;;;;;-1:-1:-1;;;;;6977:14:20;;;:7;;;;;;;;;:14;7010:3;;;7006:33;7040:4;7010:3;7058:4;7072;7079:13;:3;7087:4;7079:13;:7;:13;:::i;:::-;7006:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7006:87:20;-1:-1:-1;;;;;7006:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7006:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7006:87:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7006:87:20;;;;6580:524;;;7125:5;;;7113:43;;;-1:-1:-1;;;7113:43:20;;1008:42;7113:43;;;;;;;1679:42;7113:43;;;;;-1:-1:-1;;;;;7125:5:20;;;;7113:31;;:43;;;;;7125:5;;7113:43;;;;;;;7125:5;;7113:43;;;5:2:-1;;;;30:1;27;20:12;5:2;7113:43:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7181:36:20;;;-1:-1:-1;;;7181:36:20;;7211:4;7181:36;;;;;;7166:12;;-1:-1:-1;1679:42:20;;-1:-1:-1;7181:21:20;;:36;;;;;;;;;;;;;;;1679:42;7181:36;;;5:2:-1;;;;30:1;27;20:12;5:2;7181:36:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7181:36:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7181:36:20;;-1:-1:-1;7231:8:20;;7227:358;;7279:3;;7255:31;;1679:42;;-1:-1:-1;;;;;7279:3:20;;7255:31;:23;:31;:::i;:::-;7324:3;;7300:34;;1679:42;;-1:-1:-1;;;;;7324:3:20;7329:4;7300:34;:23;:34;:::i;:::-;7373:16;;;7387:1;7373:16;;;;;;;;;7349:21;;7373:16;;;7349:21;;105:10:-1;7373:16:20;88:34:-1;136:17;;-1:-1;7373:16:20;7349:40;;1679:42;7403:4;7408:1;7403:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;7403:13:20;;;-1:-1:-1;;;;;7403:13:20;;;;;1546:42;7430:4;7435:1;7430:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;7430:14:20;;;-1:-1:-1;;;;;7430:14:20;;;;;1458:42;7458:4;7463:1;7458:7;;;;;;;;-1:-1:-1;;;;;7458:14:20;;;:7;;;;;;;;;:14;7491:3;;;7487:33;7521:4;7491:3;7539:4;7553;7560:13;:3;7568:4;7560:13;:7;:13;:::i;:::-;7487:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7487:87:20;-1:-1:-1;;;;;7487:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7487:87:20;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7487:87:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7487:87:20;;;;7227:358;;7610:37;;;-1:-1:-1;;;7610:37:20;;7641:4;7610:37;;;;;;7594:13;;1458:42;;7610:22;;:37;;;;;;;;;;;;;;;1458:42;7610:37;;;5:2:-1;;;;30:1;27;20:12;5:2;7610:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7610:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7610:37:20;;-1:-1:-1;7661:9:20;;7657:347;;7686:36;1458:42;1189;7720:1;7686:36;:24;:36;:::i;:::-;7736:39;1458:42;1189;7770:4;7736:39;:24;:39;:::i;:::-;7814:16;;;7828:1;7814:16;;;7790:21;7814:16;;;;;7790:21;7814:16;;;;;105:10:-1;7814:16:20;88:34:-1;136:17;;-1:-1;7814:16:20;7790:40;;1458:42;7844:4;7849:1;7844:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;7844:14:20;;;-1:-1:-1;;;;;7844:14:20;;;;;1370:42;7872:4;7877:1;7872:7;;;;;;;;-1:-1:-1;;;;;7872:14:20;;;:7;;;;;;;;;;;:14;1189:42;7901:37;7939:5;7954:1;7958:4;7972;7979:13;:3;7987:4;7979:13;:7;:13;:::i;:::-;7901:92;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7901:92:20;-1:-1:-1;;;;;7901:92:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7901:92:20;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7901:92:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7901:92:20;;;;7657:347;;8029:37;;;-1:-1:-1;;;8029:37:20;;8060:4;8029:37;;;;;;8013:13;;1370:42;;8029:22;;:37;;;;;;;;;;;;;;;1370:42;8029:37;;;5:2:-1;;;;30:1;27;20:12;5:2;8029:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8029:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8029:37:20;;-1:-1:-1;8080:9:20;;8076:184;;8105:34;1370:42;919;8137:1;8105:34;:24;:34;:::i;:::-;8153:38;1370:42;919;8185:5;8153:38;:24;:38;:::i;:::-;8205:44;;;;;;;;;;;-1:-1:-1;8205:44:20;;;;;;;;-1:-1:-1;;;8205:44:20;;919:42;;8205:29;;:44;-1:-1:-1;8205:44:20;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8205:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8205:44:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8205:44:20;;;;8076:184;8285:37;;;-1:-1:-1;;;8285:37:20;;8316:4;8285:37;;;;;;8269:13;;-1:-1:-1;;;;;;;;;;;742:42:20;8285:22;;:37;;;;;;;;;;;;;;;742:42;8285:37;;;5:2:-1;;;;30:1;27;20:12;5:2;8285:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8285:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8285:37:20;;-1:-1:-1;8336:9:20;;8332:341;;8361:12;8376:43;1928:5;8376:22;8386:11;;8376:5;:9;;:22;;;;:::i;:43::-;8361:58;;8433:15;8451:48;1928:5;8451:27;8461:16;;8451:5;:9;;:27;;;;:::i;:48::-;8433:66;;8513;8551:10;;;;;;;;;-1:-1:-1;;;;;8551:10:20;-1:-1:-1;;;;;8539:31:20;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8539:33:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8539:33:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8539:33:20;-1:-1:-1;;;;;;;;;;;742:42:20;8574:4;8513:66;:25;:66;:::i;:::-;8619:10;;8593:46;;-1:-1:-1;;;;;;;;;;;742:42:20;-1:-1:-1;;;;;8619:10:20;8631:7;8593:46;:25;:46;:::i;:::-;8653:9;:7;:9::i;:::-;8332:341;;;8694:5;;;8682:25;;;-1:-1:-1;;;8682:25:20;;;;-1:-1:-1;;;;;8694:5:20;;;;8682:23;;:25;;;;8694:5;;8682:25;;;;;;8694:5;;8682:25;;;5:2:-1;;;;30:1;27;20:12;5:2;8682:25:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8726:6:20;;:17;;-1:-1:-1;8726:6:20;-1:-1:-1;8737:5:20;8726:17;:10;:17;:::i;:::-;8717:6;:26;;;8758:24;;;;;;;;;;;;;;;;;;;;;;;;;6333:2456;;;;;:::o;1057:83::-;1097:42;1057:83;:::o;1331:82::-;1370:42;1331:82;:::o;4412:382::-;4512:10;;4463:15;;-1:-1:-1;;;;;4512:10:20;4498;:24;4490:48;;;;;-1:-1:-1;;;4490:48:20;;;;;;;;;;;;-1:-1:-1;;;4490:48:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;4556:23:20;;;;4548:40;;;;;-1:-1:-1;;;4548:40:20;;;;;;;;;;;;;;;-1:-1:-1;;;4548:40:20;;;;;;;;;;;;;;;829:42;-1:-1:-1;;;;;4606:22:20;;;;4598:38;;;;;-1:-1:-1;;;4598:38:20;;;;;;;;;;;;-1:-1:-1;;;4598:38:20;;;;;;;;;;;;;;;1370:42;-1:-1:-1;;;;;4654:23:20;;;;4646:40;;;;;-1:-1:-1;;;4646:40:20;;;;;;;;;;;;;;;-1:-1:-1;;;4646:40:20;;;;;;;;;;;;;;;4706:31;;;-1:-1:-1;;;4706:31:20;;4731:4;4706:31;;;;;;-1:-1:-1;;;;;4706:16:20;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;4706:31:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4706:31:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4706:31:20;4767:10;;4706:31;;-1:-1:-1;4747:40:20;;-1:-1:-1;;;;;4747:19:20;;;;4767:10;4706:31;4747:40;:19;:40;:::i;:::-;4412:382;;;:::o;1991:25::-;;;-1:-1:-1;;;;;1991:25:20;;:::o;1966:18::-;;;-1:-1:-1;;;;;1966:18:20;;:::o;791:81::-;829:42;791:81;:::o;3844:245::-;3920:10;;-1:-1:-1;;;;;3920:10:20;3906;:24;;:52;;-1:-1:-1;3948:10:20;;-1:-1:-1;;;;;3948:10:20;3934;:24;3906:52;3898:76;;;;;-1:-1:-1;;;3898:76:20;;;;;;;;;;;;-1:-1:-1;;;3898:76:20;;;;;;;;;;;;;;;3988:9;3984:99;;;4013:3;:13;;-1:-1:-1;;;;;;4013:13:20;1189:42;4013:13;;;3984:99;;;4057:3;:15;;-1:-1:-1;;;;;;4057:15:20;1282:42;4057:15;;;3984:99;3844:245;:::o;879:83::-;919:42;879:83;:::o;9037:111::-;9079:7;9105:36;9125:15;:13;:15::i;:::-;9105;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;9098:43;;9037:111;:::o;2876:164::-;2953:10;;-1:-1:-1;;;;;2953:10:20;2939;:24;;:52;;-1:-1:-1;2981:10:20;;-1:-1:-1;;;;;2981:10:20;2967;:24;2939:52;2931:76;;;;;-1:-1:-1;;;2931:76:20;;;;;;;;;;;;-1:-1:-1;;;2931:76:20;;;;;;;;;;;;;;;3017:6;:16;;-1:-1:-1;;;;;;3017:16:20;-1:-1:-1;;;;;3017:16:20;;;;;;;;;;2876:164::o;3362:156::-;3449:10;;-1:-1:-1;;;;;3449:10:20;3435;:24;3427:48;;;;;-1:-1:-1;;;3427:48:20;;;;;;;;;;;;-1:-1:-1;;;3427:48:20;;;;;;;;;;;;;;;3485:11;:26;3362:156::o;1729:29::-;;;;:::o;1803:38::-;;;;:::o;5797:431::-;5887:10;;5838:15;;-1:-1:-1;;;;;5887:10:20;5873;:24;5865:48;;;;;-1:-1:-1;;;5865:48:20;;;;;;;;;;;;-1:-1:-1;;;5865:48:20;;;;;;;;;;;;;;;5923:14;:12;:14::i;:::-;5958:37;;;-1:-1:-1;;;5958:37:20;;5989:4;5958:37;;;;;;-1:-1:-1;;;;;;;;;;;742:42:20;5958:22;;:37;;;;;;;;;;;;;;742:42;5958:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5958:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5958:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5958:37:20;6035:10;;6023:45;;;-1:-1:-1;;;6023:45:20;;-1:-1:-1;;;;;;;;;;;6023:45:20;;;;;;5958:37;;-1:-1:-1;6006:14:20;;-1:-1:-1;;;;;6035:10:20;;;;6023:30;;:45;;;;;5958:37;;6023:45;;;;;;;;6035:10;6023:45;;;5:2:-1;;;;30:1;27;20:12;5:2;6023:45:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6023:45:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6023:45:20;;-1:-1:-1;;;;;;6086:20:20;;6078:39;;;;;-1:-1:-1;;;6078:39:20;;;;;;;;;;;;-1:-1:-1;;;6078:39:20;;;;;;;;;;;;;;;6179:42;-1:-1:-1;;;;;;;;;;;6205:6:20;6213:7;6179:42;:25;:42;:::i;:::-;5797:431;;:::o;1847:33::-;;;;:::o;9312:152::-;9397:10;;-1:-1:-1;;;;;9397:10:20;9383;:24;9375:48;;;;;-1:-1:-1;;;9375:48:20;;;;;;;;;;;;-1:-1:-1;;;9375:48:20;;;;;;;;;;;;;;;9433:10;:24;;-1:-1:-1;;;;;;9433:24:20;-1:-1:-1;;;;;9433:24:20;;;;;;;;;;9312:152::o;3046:140::-;3125:10;;-1:-1:-1;;;;;3125:10:20;3111;:24;3103:48;;;;;-1:-1:-1;;;3103:48:20;;;;;;;;;;;;-1:-1:-1;;;3103:48:20;;;;;;;;;;;;;;;3161:7;:18;3046:140::o;3706:132::-;3781:10;;-1:-1:-1;;;;;3781:10:20;3767;:24;3759:48;;;;;-1:-1:-1;;;3759:48:20;;;;;;;;;;;;-1:-1:-1;;;3759:48:20;;;;;;;;;;;;;;;3817:5;:14;;-1:-1:-1;;;;;;3817:14:20;-1:-1:-1;;;;;3817:14:20;;;;;;;;;;3706:132::o;1238:87::-;1282:42;1238:87;:::o;968:83::-;1008:42;968:83;:::o;9154:152::-;9239:10;;-1:-1:-1;;;;;9239:10:20;9225;:24;9217:48;;;;;-1:-1:-1;;;9217:48:20;;;;;;;;;;;;-1:-1:-1;;;9217:48:20;;;;;;;;;;;;;;;9275:10;:24;;-1:-1:-1;;;;;;9275:24:20;-1:-1:-1;;;;;9275:24:20;;;;;;;;;;9154:152::o;3192:164::-;3283:10;;-1:-1:-1;;;;;3283:10:20;3269;:24;3261:48;;;;;-1:-1:-1;;;3261:48:20;;;;;;;;;;;;-1:-1:-1;;;3261:48:20;;;;;;;;;;;;;;;3319:13;:30;3192:164::o;2084:21::-;;;-1:-1:-1;;;;;2084:21:20;;:::o;8795:116::-;8867:37;;;-1:-1:-1;;;8867:37:20;;8898:4;8867:37;;;;;;8841:7;;-1:-1:-1;;;;;;;;;;;742:42:20;8867:22;;:37;;;;;;;;;;;;;;;742:42;8867:37;;;5:2:-1;;;;30:1;27;20:12;2690:180:20;2775:10;;-1:-1:-1;;;;;2775:10:20;2761;:24;;:52;;-1:-1:-1;2803:10:20;;-1:-1:-1;;;;;2803:10:20;2789;:24;2761:52;2753:76;;;;;-1:-1:-1;;;2753:76:20;;;;;;;;;;;;-1:-1:-1;;;2753:76:20;;;;;;;;;;;;;;;2839:10;:24;;-1:-1:-1;;;;;;2839:24:20;-1:-1:-1;;;;;2839:24:20;;;;;;;;;;2690:180::o;1764:33::-;;;;:::o;4095:237::-;4147:37;;;-1:-1:-1;;;4147:37:20;;4178:4;4147:37;;;;;;4131:13;;-1:-1:-1;;;;;;;;;;;742:42:20;4147:22;;:37;;;;;;;;;;;;;;;742:42;4147:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4147:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4147:37:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4147:37:20;;-1:-1:-1;4198:9:20;;4194:132;;4249:5;;4223:39;;-1:-1:-1;;;;;;;;;;;742:42:20;-1:-1:-1;;;;;4249:5:20;4256;4223:39;:25;:39;:::i;:::-;4288:5;;;4276:39;;;-1:-1:-1;;;4276:39:20;;1008:42;4276:39;;;;;;;-1:-1:-1;;;;;;;;;;;4276:39:20;;;;;-1:-1:-1;;;;;4288:5:20;;;;4276:26;;:39;;;;;4288:5;;4276:39;;;;;;;4288:5;;4276:39;;;5:2:-1;;;;30:1;27;20:12;5:2;4276:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4276:39:20;;;;4095:237;:::o;2112:21::-;;;;:::o;1886:47::-;1928:5;1886:47;:::o;1641:81::-;1679:42;1641:81;:::o;1940:20::-;;;-1:-1:-1;;;;;1940:20:20;;:::o;2022:25::-;;;-1:-1:-1;;;;;2022:25:20;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;5584:140:20:-;5680:5;;;5668:49;;;-1:-1:-1;;;5668:49:20;;1008:42;5668:49;;;;;;;-1:-1:-1;;;;;;;;;;;5668:49:20;;;;;;;;;;;5642:7;;-1:-1:-1;;;;;5680:5:20;;;;5668:27;;:49;;;;;;;;;;;;;;5642:7;5680:5;5668:49;;;5:2:-1;;;;30:1;27;20:12;5:2;5668:49:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5668:49:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5668:49:20;;5584:140;-1:-1:-1;;5584:140:20:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;6234:93:20:-;6289:5;;;6277:43;;;-1:-1:-1;;;6277:43:20;;1008:42;6277:43;;;;;;;-1:-1:-1;;;;;;;;;;;6277:43:20;;;;;-1:-1:-1;;;;;6289:5:20;;;;6277:30;;:43;;;;;;;;;;;;;;6289:5;;6277:43;;;5:2:-1;;;;30:1;27;20:12;5:2;6277:43:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6277:43:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;6234:93:20:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    565,
    9466
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEF901A GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xAC1E5025 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xE7D27998 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x584 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x554 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x955383BD GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x97107D6D EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x9BE28785 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x4DB JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x8158676E EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x462 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6A4874A1 GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x6BC55876 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x425 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x4886654E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x692058C2 EQ PUSH2 0x3C0 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x2681F7E4 GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x2681F7E4 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x37A JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0xD596CDF EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x11588086 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x33D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x58C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x321 PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x280 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x179A JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x321 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1BB7 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D80 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1DEF JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x321 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x28A PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x280 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x21C8 JUMP JUMPDEST PUSH2 0x28A PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x321 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x321 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x655 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x53747261746567794375727665455552566F74657250726F7879000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7CC PUSH2 0x7C7 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x220A AND JUMP JUMPDEST PUSH2 0x2255 JUMP JUMPDEST SWAP2 POP PUSH2 0x7DE DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x80A PUSH2 0x2710 PUSH2 0x7FE PUSH1 0x3 SLOAD DUP7 PUSH2 0x2360 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x23B9 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8A5 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x970 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0x984 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x220A AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x9F9 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0xA0E JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xA4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x216B656570657273 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 PUSH2 0xB69 PUSH2 0x2710 PUSH2 0x7FE PUSH1 0x0 SLOAD DUP6 PUSH2 0x2360 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBA4 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST PUSH2 0xBB4 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x220A AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP3 POP PUSH2 0xBEA SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC1C SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC60 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xCA2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xCE4 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD AND PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xD1A TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD93 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD7B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF1E42CCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF1E42CCD SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1112 JUMPI PUSH1 0x5 SLOAD PUSH2 0xF26 SWAP1 PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF58 SWAP1 PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF9C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1020 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD AND PUSH4 0x38ED1739 DUP4 PUSH1 0x0 DUP5 ADDRESS PUSH2 0x1056 TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1397 JUMPI PUSH2 0x11D5 PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH2 0x120E PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP5 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1250 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1292 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH4 0x38ED1739 DUP4 PUSH1 0x0 DUP5 ADDRESS PUSH2 0x12DB TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1354 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x133C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x153B JUMPI PUSH2 0x145A PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH2 0x1493 PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2452 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH4 0xB4C7E4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA SWAP4 PUSH4 0xB4C7E4D SWAP4 SWAP3 SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP1 DUP4 DUP4 DUP8 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14F7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14DF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1536 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x159E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 PUSH2 0x15DB PUSH2 0x2710 PUSH2 0x7FE PUSH1 0x1 SLOAD DUP6 PUSH2 0x2360 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FA PUSH2 0x2710 PUSH2 0x7FE PUSH1 0x2 SLOAD DUP7 PUSH2 0x2360 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1695 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x16C1 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST PUSH2 0x16C9 PUSH2 0x2089 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7C1E845D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xF83D08BA SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xA SLOAD PUSH2 0x173B SWAP3 POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1802 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1857 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x18AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xDB25F211AB05B1C97D595516F45794528A807AD8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x190A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x65757273 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x199F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x19FD JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1A3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1A6D JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D OR SWAP1 SSTORE PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH20 0xCE6A5FF5217E38315F87032CF90686C96627CAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD0 PUSH2 0x1ABC PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x1AC4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2306 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1AF8 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1B37 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1C0F PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1D57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D76 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DCD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F DUP2 JUMP JUMPDEST PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x2022 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2061 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1A94 JUMPI PUSH1 0x4 SLOAD PUSH2 0x2138 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x23FB AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH20 0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x224C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x236F JUMPI POP PUSH1 0x0 PUSH2 0x224F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x237C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x291A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x244D SWAP1 DUP5 SWAP1 PUSH2 0x2705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x24D8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x2513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2965 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x244D SWAP1 DUP5 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x90BB609649E0451E5AD952683D64BD2D1F245840 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x28FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x265D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2645 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x268A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x265D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2645 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x26FB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2717 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28BD JUMP JUMPDEST PUSH2 0x2768 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x27A6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2787 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2808 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x280D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2864 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x9A0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2880 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x293B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x28F1 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP NOT 0x4E 0xBD OR EXTCODEHASH PUSH13 0xDACE046C53EACCE9B953F28411 0xD1 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A7231582069906EE1 0xAD PC 0xA9 0xF9 0xBE SWAP1 0xEA PUSH30 0x61141F761D20E04E613E0E286EAA13F2813778D64736F6C634300051100 ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        565,
        9466
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "25": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7FEF901A"
    },
    "38": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x146"
    },
    "42": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAC1E5025"
    },
    "49": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD0E30DB0"
    },
    "60": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD0E30DB0"
    },
    "71": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x55C"
    },
    "75": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD6F19262"
    },
    "82": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x564"
    },
    "86": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD73792A9"
    },
    "93": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x56C"
    },
    "97": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE7D27998"
    },
    "104": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x574"
    },
    "108": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xEC556889"
    },
    "115": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "116": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x57C"
    },
    "119": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "120": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "121": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF77C4791"
    },
    "126": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "127": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x584"
    },
    "130": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "131": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "134": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAC1E5025"
    },
    "142": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x501"
    },
    "146": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xACED1661"
    },
    "153": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51E"
    },
    "157": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC1A3D44C"
    },
    "164": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x526"
    },
    "168": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "170": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC7B9D530"
    },
    "175": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "176": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52E"
    },
    "179": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "180": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xCC32D176"
    },
    "186": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "187": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x554"
    },
    "190": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "191": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "194": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x955383BD"
    },
    "202": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10A"
    },
    "206": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x955383BD"
    },
    "213": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x488"
    },
    "217": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x97107D6D"
    },
    "224": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4A5"
    },
    "228": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "230": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9BE28785"
    },
    "235": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "236": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4CB"
    },
    "239": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "240": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "241": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA6F19C84"
    },
    "246": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "247": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4D3"
    },
    "250": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "251": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "252": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAB033EA9"
    },
    "257": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "258": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4DB"
    },
    "261": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "262": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "265": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "266": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7FEF901A"
    },
    "273": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x442"
    },
    "277": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "279": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8158676E"
    },
    "284": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "285": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x44A"
    },
    "288": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "289": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "290": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x853828B6"
    },
    "295": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "296": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x452"
    },
    "299": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "300": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "301": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8BC7E8C4"
    },
    "306": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "307": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45A"
    },
    "310": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "311": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "312": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x92EEFE9B"
    },
    "317": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "318": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x462"
    },
    "321": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "322": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "325": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "326": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "328": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x46C96AAC"
    },
    "333": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "334": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DF"
    },
    "337": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "338": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "339": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6A4874A1"
    },
    "344": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "345": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A3"
    },
    "348": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "349": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "350": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6A4874A1"
    },
    "355": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "356": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C8"
    },
    "359": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "360": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "361": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6BC55876"
    },
    "366": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "367": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D0"
    },
    "370": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "371": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "372": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7165485D"
    },
    "377": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "378": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3EF"
    },
    "381": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "382": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "383": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x722713F7"
    },
    "388": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "389": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F7"
    },
    "392": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "393": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "394": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x748747E6"
    },
    "399": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "400": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FF"
    },
    "403": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "404": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "405": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x77E741C7"
    },
    "410": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "411": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x425"
    },
    "414": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "415": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "418": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "419": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "420": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "421": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x46C96AAC"
    },
    "426": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "427": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x382"
    },
    "430": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "431": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "432": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4886654E"
    },
    "437": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "438": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38A"
    },
    "441": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "442": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "443": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x51CFF8D9"
    },
    "448": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "449": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x392"
    },
    "452": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "453": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "454": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5AA6E675"
    },
    "459": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "460": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B8"
    },
    "463": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "464": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "465": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x692058C2"
    },
    "470": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "471": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C0"
    },
    "474": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "475": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "478": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "479": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "480": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "481": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2681F7E4"
    },
    "486": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "GT",
      "path": "20"
    },
    "487": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x226"
    },
    "490": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "491": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "492": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2681F7E4"
    },
    "497": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "498": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x345"
    },
    "501": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "502": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "503": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2E1A7D4D"
    },
    "508": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "509": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34D"
    },
    "512": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "513": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "514": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3E413BEE"
    },
    "519": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "520": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36A"
    },
    "523": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "524": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "525": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x3FC8CEF3"
    },
    "530": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "531": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x372"
    },
    "534": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "535": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "536": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4641257D"
    },
    "541": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "542": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37A"
    },
    "545": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "546": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "549": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMP",
      "path": "20"
    },
    "550": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "552": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD596CDF"
    },
    "557": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "558": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x263"
    },
    "561": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "562": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "563": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x11588086"
    },
    "568": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "569": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282"
    },
    "572": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "573": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "574": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x17D7DE7C"
    },
    "579": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "580": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29C"
    },
    "583": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "584": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "585": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1F1FCD51"
    },
    "590": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "591": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x319"
    },
    "594": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "595": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "596": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FE4A686"
    },
    "601": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "EQ",
      "path": "20"
    },
    "602": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33D"
    },
    "605": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "606": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "607": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "609": {
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "610": {
      "first_revert": true,
      "fn": null,
      "offset": [
        565,
        9466
      ],
      "op": "REVERT",
      "path": "20"
    },
    "611": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "612": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "615": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "617": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "DUP1",
      "path": "20"
    },
    "618": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "619": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "SUB",
      "path": "20"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "622": {
      "op": "DUP2"
    },
    "623": {
      "op": "LT"
    },
    "624": {
      "op": "ISZERO"
    },
    "625": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "628": {
      "op": "JUMPI"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "631": {
      "op": "DUP1"
    },
    "632": {
      "op": "REVERT"
    },
    "633": {
      "op": "JUMPDEST"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "636": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x58C"
    },
    "639": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "jump": "i",
      "offset": [
        3524,
        3700
      ],
      "op": "JUMP",
      "path": "20"
    },
    "640": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "641": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "STOP",
      "path": "20"
    },
    "642": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "643": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "646": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5DE"
    },
    "649": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        8917,
        9031
      ],
      "op": "JUMP",
      "path": "20"
    },
    "650": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "651": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "653": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "DUP1",
      "path": "20"
    },
    "654": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "655": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "656": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "DUP3",
      "path": "20"
    },
    "657": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "658": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "659": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "660": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "DUP2",
      "path": "20"
    },
    "661": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "662": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SUB",
      "path": "20"
    },
    "663": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "665": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "ADD",
      "path": "20"
    },
    "666": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "667": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "RETURN",
      "path": "20"
    },
    "668": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "669": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A4"
    },
    "672": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x672"
    },
    "675": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMP",
      "path": "20"
    },
    "676": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "677": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "679": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "680": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "681": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "683": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "684": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP3",
      "path": "20"
    },
    "685": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "686": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "687": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "688": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP2",
      "path": "20"
    },
    "689": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "690": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ADD",
      "path": "20"
    },
    "691": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "692": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "693": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "694": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "695": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "696": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "697": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "698": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "699": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "700": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ADD",
      "path": "20"
    },
    "701": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "702": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP6",
      "path": "20"
    },
    "703": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ADD",
      "path": "20"
    },
    "704": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "705": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "706": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "707": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "708": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "710": {
      "op": "JUMPDEST"
    },
    "711": {
      "op": "DUP4"
    },
    "712": {
      "op": "DUP2"
    },
    "713": {
      "op": "LT"
    },
    "714": {
      "op": "ISZERO"
    },
    "715": {
      "op": "PUSH2",
      "value": "0x2DE"
    },
    "718": {
      "op": "JUMPI"
    },
    "719": {
      "op": "DUP2"
    },
    "720": {
      "op": "DUP2"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "MLOAD"
    },
    "723": {
      "op": "DUP4"
    },
    "724": {
      "op": "DUP3"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "op": "MSTORE"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "729": {
      "op": "ADD"
    },
    "730": {
      "op": "PUSH2",
      "value": "0x2C6"
    },
    "733": {
      "op": "JUMP"
    },
    "734": {
      "op": "JUMPDEST"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "737": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "738": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "739": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "740": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "741": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "742": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP2",
      "path": "20"
    },
    "743": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ADD",
      "path": "20"
    },
    "744": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "745": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "747": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "AND",
      "path": "20"
    },
    "748": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "749": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "750": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B"
    },
    "753": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "754": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "755": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP3",
      "path": "20"
    },
    "756": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SUB",
      "path": "20"
    },
    "757": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "758": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "759": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "761": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP4",
      "path": "20"
    },
    "762": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "764": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SUB",
      "path": "20"
    },
    "765": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "768": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "EXP",
      "path": "20"
    },
    "769": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SUB",
      "path": "20"
    },
    "770": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "NOT",
      "path": "20"
    },
    "771": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "AND",
      "path": "20"
    },
    "772": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP2",
      "path": "20"
    },
    "773": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "774": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "776": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "ADD",
      "path": "20"
    },
    "777": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "778": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "779": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "780": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "781": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "782": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "783": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "784": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "POP",
      "path": "20"
    },
    "785": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "787": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "788": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "DUP1",
      "path": "20"
    },
    "789": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "790": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SUB",
      "path": "20"
    },
    "791": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "792": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "RETURN",
      "path": "20"
    },
    "793": {
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "794": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "797": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6A9"
    },
    "800": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        703,
        785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "801": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "802": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "804": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP1",
      "path": "20"
    },
    "805": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "815": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "816": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "AND",
      "path": "20"
    },
    "817": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP3",
      "path": "20"
    },
    "818": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "819": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "820": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "821": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "DUP2",
      "path": "20"
    },
    "822": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "823": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SUB",
      "path": "20"
    },
    "824": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "826": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "ADD",
      "path": "20"
    },
    "827": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "828": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        703,
        785
      ],
      "op": "RETURN",
      "path": "20"
    },
    "829": {
      "offset": [
        2053,
        2078
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "830": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2053,
        2078
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "833": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2053,
        2078
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BB"
    },
    "836": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        2053,
        2078
      ],
      "op": "JUMP",
      "path": "20"
    },
    "837": {
      "offset": [
        1147,
        1232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "838": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1147,
        1232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "841": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        1147,
        1232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6CA"
    },
    "844": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "i",
      "offset": [
        1147,
        1232
      ],
      "op": "JUMP",
      "path": "20"
    },
    "845": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "846": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "849": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "851": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "DUP1",
      "path": "20"
    },
    "852": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "853": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "SUB",
      "path": "20"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "856": {
      "op": "DUP2"
    },
    "857": {
      "op": "LT"
    },
    "858": {
      "op": "ISZERO"
    },
    "859": {
      "op": "PUSH2",
      "value": "0x363"
    },
    "862": {
      "op": "JUMPI"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "865": {
      "op": "DUP1"
    },
    "866": {
      "op": "REVERT"
    },
    "867": {
      "op": "JUMPDEST"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "870": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E2"
    },
    "873": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4869,
        5578
      ],
      "op": "JUMP",
      "path": "20"
    },
    "874": {
      "offset": [
        1419,
        1501
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "875": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1419,
        1501
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "878": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1419,
        1501
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A6"
    },
    "881": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1419,
        1501
      ],
      "op": "JUMP",
      "path": "20"
    },
    "882": {
      "offset": [
        1507,
        1589
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "883": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1507,
        1589
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "886": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1507,
        1589
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9BE"
    },
    "889": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1507,
        1589
      ],
      "op": "JUMP",
      "path": "20"
    },
    "890": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "891": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "894": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9D6"
    },
    "897": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6333,
        8789
      ],
      "op": "JUMP",
      "path": "20"
    },
    "898": {
      "offset": [
        1057,
        1140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "899": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1057,
        1140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "902": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1057,
        1140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1782"
    },
    "905": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1057,
        1140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "906": {
      "offset": [
        1331,
        1413
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1331,
        1413
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "910": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1331,
        1413
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x179A"
    },
    "913": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1331,
        1413
      ],
      "op": "JUMP",
      "path": "20"
    },
    "914": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "915": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "918": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "920": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "DUP1",
      "path": "20"
    },
    "921": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "922": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "SUB",
      "path": "20"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "925": {
      "op": "DUP2"
    },
    "926": {
      "op": "LT"
    },
    "927": {
      "op": "ISZERO"
    },
    "928": {
      "op": "PUSH2",
      "value": "0x3A8"
    },
    "931": {
      "op": "JUMPI"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "934": {
      "op": "DUP1"
    },
    "935": {
      "op": "REVERT"
    },
    "936": {
      "op": "JUMPDEST"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "AND",
      "path": "20"
    },
    "948": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17B2"
    },
    "951": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4412,
        4794
      ],
      "op": "JUMP",
      "path": "20"
    },
    "952": {
      "offset": [
        1991,
        2016
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "953": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1991,
        2016
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "956": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1991,
        2016
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19A4"
    },
    "959": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1991,
        2016
      ],
      "op": "JUMP",
      "path": "20"
    },
    "960": {
      "offset": [
        1966,
        1984
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "961": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1966,
        1984
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "964": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1966,
        1984
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19B3"
    },
    "967": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1966,
        1984
      ],
      "op": "JUMP",
      "path": "20"
    },
    "968": {
      "offset": [
        791,
        872
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "969": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        791,
        872
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "972": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        791,
        872
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19C2"
    },
    "975": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        791,
        872
      ],
      "op": "JUMP",
      "path": "20"
    },
    "976": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "977": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "980": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "982": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "DUP1",
      "path": "20"
    },
    "983": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "984": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "SUB",
      "path": "20"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "op": "DUP2"
    },
    "988": {
      "op": "LT"
    },
    "989": {
      "op": "ISZERO"
    },
    "990": {
      "op": "PUSH2",
      "value": "0x3E6"
    },
    "993": {
      "op": "JUMPI"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "996": {
      "op": "DUP1"
    },
    "997": {
      "op": "REVERT"
    },
    "998": {
      "op": "JUMPDEST"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1001": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1002": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1003": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19DA"
    },
    "1006": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "jump": "i",
      "offset": [
        3844,
        4089
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1007": {
      "offset": [
        879,
        962
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1008": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        879,
        962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1011": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        879,
        962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A97"
    },
    "1014": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "jump": "i",
      "offset": [
        879,
        962
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1015": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9037,
        9148
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1016": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9037,
        9148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1019": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9037,
        9148
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AAF"
    },
    "1022": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        9037,
        9148
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1023": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1024": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1027": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1029": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1030": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1031": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "SUB",
      "path": "20"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "op": "DUP2"
    },
    "1035": {
      "op": "LT"
    },
    "1036": {
      "op": "ISZERO"
    },
    "1037": {
      "op": "PUSH2",
      "value": "0x415"
    },
    "1040": {
      "op": "JUMPI"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "DUP1"
    },
    "1044": {
      "op": "REVERT"
    },
    "1045": {
      "op": "JUMPDEST"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "AND",
      "path": "20"
    },
    "1057": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AD5"
    },
    "1060": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "jump": "i",
      "offset": [
        2876,
        3040
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1061": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1062": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1065": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1067": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1068": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1069": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "SUB",
      "path": "20"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1072": {
      "op": "DUP2"
    },
    "1073": {
      "op": "LT"
    },
    "1074": {
      "op": "ISZERO"
    },
    "1075": {
      "op": "PUSH2",
      "value": "0x43B"
    },
    "1078": {
      "op": "JUMPI"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1081": {
      "op": "DUP1"
    },
    "1082": {
      "op": "REVERT"
    },
    "1083": {
      "op": "JUMPDEST"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1086": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B59"
    },
    "1089": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        3362,
        3518
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1090": {
      "offset": [
        1729,
        1758
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1091": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1729,
        1758
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1094": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1729,
        1758
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BAB"
    },
    "1097": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1729,
        1758
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1098": {
      "offset": [
        1803,
        1841
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1099": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1803,
        1841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1102": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1803,
        1841
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BB1"
    },
    "1105": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1803,
        1841
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1106": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1107": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1110": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BB7"
    },
    "1113": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5797,
        6228
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1114": {
      "offset": [
        1847,
        1880
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1115": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1847,
        1880
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1118": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1847,
        1880
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D7A"
    },
    "1121": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1847,
        1880
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1122": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1123": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1126": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1128": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1129": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1130": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "SUB",
      "path": "20"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1133": {
      "op": "DUP2"
    },
    "1134": {
      "op": "LT"
    },
    "1135": {
      "op": "ISZERO"
    },
    "1136": {
      "op": "PUSH2",
      "value": "0x478"
    },
    "1139": {
      "op": "JUMPI"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1142": {
      "op": "DUP1"
    },
    "1143": {
      "op": "REVERT"
    },
    "1144": {
      "op": "JUMPDEST"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "op": "SUB"
    },
    "1155": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "AND",
      "path": "20"
    },
    "1156": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D80"
    },
    "1159": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "jump": "i",
      "offset": [
        9312,
        9464
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1160": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1161": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1164": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1166": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1167": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1168": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "SUB",
      "path": "20"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1171": {
      "op": "DUP2"
    },
    "1172": {
      "op": "LT"
    },
    "1173": {
      "op": "ISZERO"
    },
    "1174": {
      "op": "PUSH2",
      "value": "0x49E"
    },
    "1177": {
      "op": "JUMPI"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "REVERT"
    },
    "1182": {
      "op": "JUMPDEST"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1185": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DEF"
    },
    "1188": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        3046,
        3186
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1189": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1190": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1193": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1195": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1196": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1197": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "SUB",
      "path": "20"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "op": "DUP2"
    },
    "1201": {
      "op": "LT"
    },
    "1202": {
      "op": "ISZERO"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x4BB"
    },
    "1206": {
      "op": "JUMPI"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1209": {
      "op": "DUP1"
    },
    "1210": {
      "op": "REVERT"
    },
    "1211": {
      "op": "JUMPDEST"
    },
    "1212": {
      "op": "POP"
    },
    "1213": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "AND",
      "path": "20"
    },
    "1223": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E41"
    },
    "1226": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        3706,
        3838
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1227": {
      "offset": [
        1238,
        1325
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1228": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        1238,
        1325
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1231": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        1238,
        1325
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EB0"
    },
    "1234": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        1238,
        1325
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1235": {
      "offset": [
        968,
        1051
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1236": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        968,
        1051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1239": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        968,
        1051
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EC8"
    },
    "1242": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        968,
        1051
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1243": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1244": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1247": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1249": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1250": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1251": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "SUB",
      "path": "20"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1254": {
      "op": "DUP2"
    },
    "1255": {
      "op": "LT"
    },
    "1256": {
      "op": "ISZERO"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x4F1"
    },
    "1260": {
      "op": "JUMPI"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "REVERT"
    },
    "1265": {
      "op": "JUMPDEST"
    },
    "1266": {
      "op": "POP"
    },
    "1267": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "op": "SUB"
    },
    "1276": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "AND",
      "path": "20"
    },
    "1277": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1EE0"
    },
    "1280": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        9154,
        9306
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1281": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1282": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1285": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1287": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1288": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1289": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "SUB",
      "path": "20"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1292": {
      "op": "DUP2"
    },
    "1293": {
      "op": "LT"
    },
    "1294": {
      "op": "ISZERO"
    },
    "1295": {
      "op": "PUSH2",
      "value": "0x517"
    },
    "1298": {
      "op": "JUMPI"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "DUP1"
    },
    "1302": {
      "op": "REVERT"
    },
    "1303": {
      "op": "JUMPDEST"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1306": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F4F"
    },
    "1309": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        3192,
        3356
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1310": {
      "offset": [
        2084,
        2105
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1311": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2084,
        2105
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1314": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2084,
        2105
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FA1"
    },
    "1317": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        2084,
        2105
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1318": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8795,
        8911
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1319": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8795,
        8911
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1322": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8795,
        8911
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FB0"
    },
    "1325": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        8795,
        8911
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1326": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1327": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1330": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1332": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1333": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1334": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "SUB",
      "path": "20"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1337": {
      "op": "DUP2"
    },
    "1338": {
      "op": "LT"
    },
    "1339": {
      "op": "ISZERO"
    },
    "1340": {
      "op": "PUSH2",
      "value": "0x544"
    },
    "1343": {
      "op": "JUMPI"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1346": {
      "op": "DUP1"
    },
    "1347": {
      "op": "REVERT"
    },
    "1348": {
      "op": "JUMPDEST"
    },
    "1349": {
      "op": "POP"
    },
    "1350": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "SUB"
    },
    "1359": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "AND",
      "path": "20"
    },
    "1360": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FFF"
    },
    "1363": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2690,
        2870
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1364": {
      "offset": [
        1764,
        1797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1365": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1764,
        1797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1368": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1764,
        1797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2083"
    },
    "1371": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        1764,
        1797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1372": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4095,
        4332
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1373": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4095,
        4332
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "1376": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4095,
        4332
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2089"
    },
    "1379": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        4095,
        4332
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1380": {
      "offset": [
        2112,
        2133
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1381": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1384": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C8"
    },
    "1387": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        2112,
        2133
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1388": {
      "offset": [
        1886,
        1933
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1389": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1886,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28A"
    },
    "1392": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1886,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21CE"
    },
    "1395": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1886,
        1933
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1396": {
      "offset": [
        1641,
        1722
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1397": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1641,
        1722
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1400": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1641,
        1722
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21D4"
    },
    "1403": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1641,
        1722
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1404": {
      "offset": [
        1940,
        1960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1405": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1940,
        1960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1408": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1940,
        1960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21EC"
    },
    "1411": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1940,
        1960
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1412": {
      "offset": [
        2022,
        2047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1413": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2022,
        2047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x321"
    },
    "1416": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2022,
        2047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21FB"
    },
    "1419": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        2022,
        2047
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1420": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3524,
        3700
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1421": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3621,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 0,
      "value": "0x6"
    },
    "1423": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3621,
        3631
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3621,
        3631
      ],
      "op": "AND",
      "path": "20"
    },
    "1433": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3607,
        3617
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1434": {
      "branch": 91,
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3607,
        3631
      ],
      "op": "EQ",
      "path": "20"
    },
    "1435": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5D9"
    },
    "1438": {
      "branch": 91,
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1439": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1441": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1442": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1451": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1452": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1454": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1456": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1457": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "ADD",
      "path": "20"
    },
    "1458": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1459": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1461": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1463": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1464": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "ADD",
      "path": "20"
    },
    "1465": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1466": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "1483": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1484": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "ADD",
      "path": "20"
    },
    "1485": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1486": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1487": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1488": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1489": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1490": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1491": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "SUB",
      "path": "20"
    },
    "1492": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "1494": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "ADD",
      "path": "20"
    },
    "1495": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1496": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1497": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3599,
        3647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1498": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3657,
        3673
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 1,
      "value": "0x2"
    },
    "1500": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "offset": [
        3657,
        3693
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "1501": {
      "fn": "StrategyCurveEURVoterProxy.setStrategistReward",
      "jump": "o",
      "offset": [
        3524,
        3700
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1502": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1503": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 2,
      "value": "0x4"
    },
    "1505": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1506": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1507": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1509": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1510": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1511": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1520": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1521": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "1542": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1543": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1544": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "ADD",
      "path": "20"
    },
    "1545": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1546": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1547": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1548": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1549": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1550": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8963,
        8970
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1552": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8963,
        8970
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1562": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1563": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "AND",
      "path": "20"
    },
    "1564": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1565": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9017
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "1570": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9017
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1571": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1573": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1574": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1575": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "ADD",
      "path": "20"
    },
    "1576": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1577": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1579": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1580": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1581": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1582": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1583": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1584": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SUB",
      "path": "20"
    },
    "1585": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "ADD",
      "path": "20"
    },
    "1586": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1587": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        9001,
        9006
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1588": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1589": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1590": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1591": {
      "op": "DUP1"
    },
    "1592": {
      "op": "ISZERO"
    },
    "1593": {
      "op": "PUSH2",
      "value": "0x641"
    },
    "1596": {
      "op": "JUMPI"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1599": {
      "op": "DUP1"
    },
    "1600": {
      "op": "REVERT"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "POP",
      "path": "20"
    },
    "1603": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "GAS",
      "path": "20"
    },
    "1604": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "1605": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1606": {
      "op": "DUP1"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "RETURNDATASIZE"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1615": {
      "op": "DUP1"
    },
    "1616": {
      "op": "RETURNDATACOPY"
    },
    "1617": {
      "op": "RETURNDATASIZE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1620": {
      "op": "REVERT"
    },
    "1621": {
      "op": "JUMPDEST"
    },
    "1622": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "POP",
      "path": "20"
    },
    "1623": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "POP",
      "path": "20"
    },
    "1624": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "POP",
      "path": "20"
    },
    "1625": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "POP",
      "path": "20"
    },
    "1626": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1628": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1629": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "op": "DUP2"
    },
    "1633": {
      "op": "LT"
    },
    "1634": {
      "op": "ISZERO"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x66B"
    },
    "1638": {
      "op": "JUMPI"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1641": {
      "op": "DUP1"
    },
    "1642": {
      "op": "REVERT"
    },
    "1643": {
      "op": "JUMPDEST"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1646": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "offset": [
        8917,
        9031
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1649": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        8917,
        9031
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1650": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1651": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 3,
      "value": "0x40"
    },
    "1653": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1654": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1655": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1656": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1657": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "ADD",
      "path": "20"
    },
    "1658": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1659": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1660": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1661": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "1663": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1664": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1665": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x53747261746567794375727665455552566F74657250726F7879000000000000"
    },
    "1698": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1700": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1701": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "ADD",
      "path": "20"
    },
    "1702": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2642,
        2677
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1703": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2575,
        2684
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1704": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        2575,
        2684
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1705": {
      "offset": [
        703,
        785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1708": {
      "op": "DUP1"
    },
    "1709": {
      "op": "MLOAD"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "1715": {
      "op": "DUP4"
    },
    "1716": {
      "op": "CODECOPY"
    },
    "1717": {
      "op": "DUP2"
    },
    "1718": {
      "op": "MLOAD"
    },
    "1719": {
      "op": "SWAP2"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "offset": [
        703,
        785
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1722": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        703,
        785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1723": {
      "offset": [
        2053,
        2078
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1724": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2053,
        2078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1726": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2053,
        2078
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "offset": [
        2053,
        2078
      ],
      "op": "AND",
      "path": "20"
    },
    "1736": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "offset": [
        2053,
        2078
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1737": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        2053,
        2078
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1738": {
      "offset": [
        1147,
        1232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1739": {
      "offset": [
        1189,
        1231
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "1760": {
      "offset": [
        1147,
        1232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1761": {
      "fn": "StrategyCurveEURVoterProxy.getName",
      "jump": "o",
      "offset": [
        1147,
        1232
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1762": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1763": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4945,
        4955
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0x7"
    },
    "1765": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4945,
        4955
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4945,
        4955
      ],
      "op": "AND",
      "path": "20"
    },
    "1775": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4931,
        4941
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1776": {
      "branch": 92,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4931,
        4955
      ],
      "op": "EQ",
      "path": "20"
    },
    "1777": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x72F"
    },
    "1780": {
      "branch": 92,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1781": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1783": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1784": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1793": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1794": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1796": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1798": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1799": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "ADD",
      "path": "20"
    },
    "1800": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1801": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1803": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1805": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1806": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "ADD",
      "path": "20"
    },
    "1807": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1808": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "1825": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1826": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "ADD",
      "path": "20"
    },
    "1827": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1828": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1829": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1830": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1831": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1832": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1833": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "SUB",
      "path": "20"
    },
    "1834": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "1836": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "ADD",
      "path": "20"
    },
    "1837": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1838": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1839": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4923,
        4971
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1840": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1842": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1843": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1844": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1853": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1854": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5031,
        5035
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "1855": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1857": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1858": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "ADD",
      "path": "20"
    },
    "1859": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1860": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1861": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1862": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4981,
        4997
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1864": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4981,
        4997
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1867": {
      "op": "DUP1"
    },
    "1868": {
      "op": "MLOAD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "1874": {
      "op": "DUP4"
    },
    "1875": {
      "op": "CODECOPY"
    },
    "1876": {
      "op": "DUP2"
    },
    "1877": {
      "op": "MLOAD"
    },
    "1878": {
      "op": "SWAP2"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1881": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5022
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "1886": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5022
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1887": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "1889": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1890": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1891": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "ADD",
      "path": "20"
    },
    "1892": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1893": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1895": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1896": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1897": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1898": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1899": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1900": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1901": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SUB",
      "path": "20"
    },
    "1902": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "ADD",
      "path": "20"
    },
    "1903": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1904": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1905": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1906": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "1907": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "ISZERO"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "1913": {
      "op": "JUMPI"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1916": {
      "op": "DUP1"
    },
    "1917": {
      "op": "REVERT"
    },
    "1918": {
      "op": "JUMPDEST"
    },
    "1919": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "POP",
      "path": "20"
    },
    "1920": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "GAS",
      "path": "20"
    },
    "1921": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "1922": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1923": {
      "op": "DUP1"
    },
    "1924": {
      "op": "ISZERO"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x792"
    },
    "1928": {
      "op": "JUMPI"
    },
    "1929": {
      "op": "RETURNDATASIZE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "DUP1"
    },
    "1933": {
      "op": "RETURNDATACOPY"
    },
    "1934": {
      "op": "RETURNDATASIZE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "POP",
      "path": "20"
    },
    "1940": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "POP",
      "path": "20"
    },
    "1941": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "POP",
      "path": "20"
    },
    "1942": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "POP",
      "path": "20"
    },
    "1943": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1945": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1946": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1949": {
      "op": "DUP2"
    },
    "1950": {
      "op": "LT"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x7A8"
    },
    "1955": {
      "op": "JUMPI"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1958": {
      "op": "DUP1"
    },
    "1959": {
      "op": "REVERT"
    },
    "1960": {
      "op": "JUMPDEST"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1963": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5000,
        5037
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5051,
        5069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1966": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5051,
        5069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1967": {
      "branch": 93,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5051,
        5069
      ],
      "op": "LT",
      "path": "20"
    },
    "1968": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5047,
        5187
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1969": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5047,
        5187
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7E1"
    },
    "1972": {
      "branch": 93,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5047,
        5187
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1973": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5095,
        5131
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 5,
      "value": "0x7CC"
    },
    "1976": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5130
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C7"
    },
    "1979": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5116
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1980": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5121,
        5129
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1981": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5130
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "1986": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x220A"
    },
    "1989": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5130
      ],
      "op": "AND",
      "path": "20"
    },
    "1990": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5109,
        5130
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1991": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5109,
        5130
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1992": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5095,
        5108
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2255"
    },
    "1995": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5095,
        5131
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1996": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5095,
        5131
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1997": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5085,
        5131
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 6,
      "value": "0x7DE"
    },
    "2002": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5085,
        5131
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2003": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5167,
        5175
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2004": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2009": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5155,
        5166
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "2012": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5155,
        5176
      ],
      "op": "AND",
      "path": "20"
    },
    "2013": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5155,
        5176
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2014": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5155,
        5176
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2015": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5145,
        5176
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2016": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5145,
        5176
      ],
      "op": "POP",
      "path": "20"
    },
    "2017": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5047,
        5187
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2018": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5197,
        5209
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2020": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5259
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x80A"
    },
    "2023": {
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "2026": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7FE"
    },
    "2029": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5224,
        5237
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2031": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5224,
        5237
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2032": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5219
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2033": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5223
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2360"
    },
    "2036": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5223
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2037": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2038": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2039": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2044": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "AND",
      "path": "20"
    },
    "2045": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5212,
        5238
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2046": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5238
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2047": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5242
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2048": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5259
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2053": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5242
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23B9"
    },
    "2056": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5259
      ],
      "op": "AND",
      "path": "20"
    },
    "2057": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5212,
        5259
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2058": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5212,
        5259
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2059": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5197,
        5259
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2060": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5197,
        5259
      ],
      "op": "POP",
      "path": "20"
    },
    "2061": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5270,
        5336
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 7,
      "value": "0x8A5"
    },
    "2064": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2066": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2068": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2069": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2070": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2071": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2074": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "EXP",
      "path": "20"
    },
    "2075": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2076": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "DIV",
      "path": "20"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "op": "SUB"
    },
    "2085": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5308,
        5318
      ],
      "op": "AND",
      "path": "20"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2092": {
      "op": "SHL"
    },
    "2093": {
      "op": "SUB"
    },
    "2094": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5327
      ],
      "op": "AND",
      "path": "20"
    },
    "2095": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5327
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9EC5A894"
    },
    "2100": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2102": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2103": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2104": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2109": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "AND",
      "path": "20"
    },
    "2110": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "2112": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "SHL",
      "path": "20"
    },
    "2113": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2114": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2115": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2117": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "ADD",
      "path": "20"
    },
    "2118": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2120": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2122": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2123": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2124": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2125": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "SUB",
      "path": "20"
    },
    "2126": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2127": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2128": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2129": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2130": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2131": {
      "op": "DUP1"
    },
    "2132": {
      "op": "ISZERO"
    },
    "2133": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2136": {
      "op": "JUMPI"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2139": {
      "op": "DUP1"
    },
    "2140": {
      "op": "REVERT"
    },
    "2141": {
      "op": "JUMPDEST"
    },
    "2142": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "POP",
      "path": "20"
    },
    "2143": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "GAS",
      "path": "20"
    },
    "2144": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2145": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2146": {
      "op": "DUP1"
    },
    "2147": {
      "op": "ISZERO"
    },
    "2148": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2151": {
      "op": "JUMPI"
    },
    "2152": {
      "op": "RETURNDATASIZE"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "DUP1"
    },
    "2156": {
      "op": "RETURNDATACOPY"
    },
    "2157": {
      "op": "RETURNDATASIZE"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2160": {
      "op": "REVERT"
    },
    "2161": {
      "op": "JUMPDEST"
    },
    "2162": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "POP",
      "path": "20"
    },
    "2163": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "POP",
      "path": "20"
    },
    "2164": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "POP",
      "path": "20"
    },
    "2165": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "POP",
      "path": "20"
    },
    "2166": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2168": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2169": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2172": {
      "op": "DUP2"
    },
    "2173": {
      "op": "LT"
    },
    "2174": {
      "op": "ISZERO"
    },
    "2175": {
      "op": "PUSH2",
      "value": "0x887"
    },
    "2178": {
      "op": "JUMPI"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2181": {
      "op": "DUP1"
    },
    "2182": {
      "op": "REVERT"
    },
    "2183": {
      "op": "JUMPDEST"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5296,
        5329
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2188": {
      "op": "DUP1"
    },
    "2189": {
      "op": "MLOAD"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "2195": {
      "op": "DUP4"
    },
    "2196": {
      "op": "CODECOPY"
    },
    "2197": {
      "op": "DUP2"
    },
    "2198": {
      "op": "MLOAD"
    },
    "2199": {
      "op": "SWAP2"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2202": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5331,
        5335
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2203": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5270,
        5336
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2208": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5270,
        5295
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "2211": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5270,
        5336
      ],
      "op": "AND",
      "path": "20"
    },
    "2212": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5270,
        5336
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2213": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5270,
        5336
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2214": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5375,
        5385
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "2216": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5375,
        5385
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2217": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2219": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2220": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2221": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2230": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2233": {
      "op": "DUP1"
    },
    "2234": {
      "op": "MLOAD"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "2240": {
      "op": "DUP4"
    },
    "2241": {
      "op": "CODECOPY"
    },
    "2242": {
      "op": "DUP2"
    },
    "2243": {
      "op": "MLOAD"
    },
    "2244": {
      "op": "SWAP2"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2248": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2249": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "ADD",
      "path": "20"
    },
    "2250": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2251": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2252": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2253": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5346,
        5360
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2255": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5346,
        5360
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5375,
        5385
      ],
      "op": "AND",
      "path": "20"
    },
    "2265": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5375,
        5385
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2266": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5393
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA622EE7C"
    },
    "2271": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5393
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2272": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2274": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2275": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2276": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "ADD",
      "path": "20"
    },
    "2277": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2278": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2280": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2281": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2282": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2283": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2284": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2285": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SUB",
      "path": "20"
    },
    "2286": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "ADD",
      "path": "20"
    },
    "2287": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2288": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5375,
        5385
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2289": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2290": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2291": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2292": {
      "op": "DUP1"
    },
    "2293": {
      "op": "ISZERO"
    },
    "2294": {
      "op": "PUSH2",
      "value": "0x8FE"
    },
    "2297": {
      "op": "JUMPI"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2300": {
      "op": "DUP1"
    },
    "2301": {
      "op": "REVERT"
    },
    "2302": {
      "op": "JUMPDEST"
    },
    "2303": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "POP",
      "path": "20"
    },
    "2304": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "GAS",
      "path": "20"
    },
    "2305": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2306": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2307": {
      "op": "DUP1"
    },
    "2308": {
      "op": "ISZERO"
    },
    "2309": {
      "op": "PUSH2",
      "value": "0x912"
    },
    "2312": {
      "op": "JUMPI"
    },
    "2313": {
      "op": "RETURNDATASIZE"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "RETURNDATACOPY"
    },
    "2318": {
      "op": "RETURNDATASIZE"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2321": {
      "op": "REVERT"
    },
    "2322": {
      "op": "JUMPDEST"
    },
    "2323": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "POP",
      "path": "20"
    },
    "2324": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "POP",
      "path": "20"
    },
    "2325": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "POP",
      "path": "20"
    },
    "2326": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "POP",
      "path": "20"
    },
    "2327": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2329": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2330": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "DUP2"
    },
    "2334": {
      "op": "LT"
    },
    "2335": {
      "op": "ISZERO"
    },
    "2336": {
      "op": "PUSH2",
      "value": "0x928"
    },
    "2339": {
      "op": "JUMPI"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2342": {
      "op": "DUP1"
    },
    "2343": {
      "op": "REVERT"
    },
    "2344": {
      "op": "JUMPDEST"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2347": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5363,
        5408
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "op": "SUB"
    },
    "2357": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5426,
        5446
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 8
    },
    "2358": {
      "branch": 94,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5426,
        5446
      ],
      "op": "AND",
      "path": "20"
    },
    "2359": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x970"
    },
    "2362": {
      "branch": 94,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2363": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2365": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2366": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2375": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2376": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2378": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2380": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2381": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "ADD",
      "path": "20"
    },
    "2382": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2383": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2385": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2387": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2388": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "ADD",
      "path": "20"
    },
    "2389": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2390": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "2402": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2403": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "ADD",
      "path": "20"
    },
    "2404": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2405": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2406": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2407": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2408": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2409": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2410": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "SUB",
      "path": "20"
    },
    "2411": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2413": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "ADD",
      "path": "20"
    },
    "2414": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2415": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2416": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5418,
        5457
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2417": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5571
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 9,
      "value": "0x9A0"
    },
    "2420": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2421": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x984"
    },
    "2424": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5560
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2425": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5565,
        5569
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2426": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5570
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2431": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5564
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x220A"
    },
    "2434": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5570
      ],
      "op": "AND",
      "path": "20"
    },
    "2435": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5553,
        5570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2436": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5553,
        5570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2439": {
      "op": "DUP1"
    },
    "2440": {
      "op": "MLOAD"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2443": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "2446": {
      "op": "DUP4"
    },
    "2447": {
      "op": "CODECOPY"
    },
    "2448": {
      "op": "DUP2"
    },
    "2449": {
      "op": "MLOAD"
    },
    "2450": {
      "op": "SWAP2"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2453": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5571
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2454": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5571
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2459": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "2462": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5571
      ],
      "op": "AND",
      "path": "20"
    },
    "2463": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5519,
        5571
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2464": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        5519,
        5571
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2465": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "POP",
      "path": "20"
    },
    "2466": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "POP",
      "path": "20"
    },
    "2467": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "POP",
      "path": "20"
    },
    "2468": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4869,
        5578
      ],
      "op": "POP",
      "path": "20"
    },
    "2469": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        4869,
        5578
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2470": {
      "offset": [
        1419,
        1501
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2471": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "2492": {
      "offset": [
        1419,
        1501
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2493": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1419,
        1501
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2494": {
      "offset": [
        1507,
        1589
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2495": {
      "offset": [
        1546,
        1588
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2516": {
      "offset": [
        1507,
        1589
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2517": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1507,
        1589
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2518": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2519": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6391,
        6397
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 10,
      "value": "0x9"
    },
    "2521": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6391,
        6397
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "SUB"
    },
    "2530": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6391,
        6397
      ],
      "op": "AND",
      "path": "20"
    },
    "2531": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6387
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2532": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6397
      ],
      "op": "EQ",
      "path": "20"
    },
    "2533": {
      "branch": 95,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2534": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6425
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9F9"
    },
    "2537": {
      "branch": 95,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6425
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2538": {
      "op": "POP"
    },
    "2539": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6415,
        6425
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2541": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6415,
        6425
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6415,
        6425
      ],
      "op": "AND",
      "path": "20"
    },
    "2551": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6401,
        6411
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2552": {
      "branch": 96,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6401,
        6425
      ],
      "op": "EQ",
      "path": "20"
    },
    "2553": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6425
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2554": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6453
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2555": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6453
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA0E"
    },
    "2558": {
      "branch": 96,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6453
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6443,
        6453
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2562": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6443,
        6453
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "SUB"
    },
    "2571": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6443,
        6453
      ],
      "op": "AND",
      "path": "20"
    },
    "2572": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6429,
        6439
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2573": {
      "branch": 97,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6429,
        6453
      ],
      "op": "EQ",
      "path": "20"
    },
    "2574": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6377,
        6453
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2575": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA4A"
    },
    "2578": {
      "branch": 97,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2579": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2581": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2582": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2589": {
      "op": "SHL"
    },
    "2590": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2591": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2592": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2594": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2596": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2597": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "ADD",
      "path": "20"
    },
    "2598": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2599": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "2601": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2603": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2604": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "ADD",
      "path": "20"
    },
    "2605": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2606": {
      "op": "PUSH8",
      "value": "0x216B656570657273"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "2620": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2621": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "ADD",
      "path": "20"
    },
    "2622": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2623": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2624": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2625": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2626": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2627": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2628": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "SUB",
      "path": "20"
    },
    "2629": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2631": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "ADD",
      "path": "20"
    },
    "2632": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2633": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2634": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6369,
        6466
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2635": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 11,
      "value": "0x4"
    },
    "2637": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2638": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2639": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2641": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2642": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2643": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2652": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2653": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "2674": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2675": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2676": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "ADD",
      "path": "20"
    },
    "2677": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2678": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2679": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2680": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2681": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2691": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2692": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "AND",
      "path": "20"
    },
    "2693": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2694": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6502
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE5C011E"
    },
    "2699": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6502
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2700": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2702": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2703": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2704": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "ADD",
      "path": "20"
    },
    "2705": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2706": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2708": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2709": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2710": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2711": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2712": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2713": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "SUB",
      "path": "20"
    },
    "2714": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "ADD",
      "path": "20"
    },
    "2715": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2716": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2717": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6488,
        6493
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2718": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2719": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2720": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2721": {
      "op": "DUP1"
    },
    "2722": {
      "op": "ISZERO"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xAAB"
    },
    "2726": {
      "op": "JUMPI"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2729": {
      "op": "DUP1"
    },
    "2730": {
      "op": "REVERT"
    },
    "2731": {
      "op": "JUMPDEST"
    },
    "2732": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "POP",
      "path": "20"
    },
    "2733": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "GAS",
      "path": "20"
    },
    "2734": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "CALL",
      "path": "20"
    },
    "2735": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6476,
        6509
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2736": {
      "op": "DUP1"
    },
    "2737": {
      "op": "ISZERO"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0xABF"
    },
    "2741": {
      "op": "JUMPI"
    },
    "2742": {
      "op": "RETURNDATASIZE"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2745": {
      "op": "DUP1"
    },
    "2746": {
      "op": "RETURNDATACOPY"
    },
    "2747": {
      "op": "RETURNDATASIZE"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2750": {
      "op": "REVERT"
    },
    "2751": {
      "op": "JUMPDEST"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2756": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2757": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2758": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2767": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2768": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6564,
        6568
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2769": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2771": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2772": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "ADD",
      "path": "20"
    },
    "2773": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2774": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2775": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2776": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6519,
        6531
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2778": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6519,
        6531
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2801": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6555
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "2808": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6555
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2809": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "2811": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2812": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2813": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "ADD",
      "path": "20"
    },
    "2814": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2815": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2817": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2818": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2819": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2820": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2821": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2822": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2823": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SUB",
      "path": "20"
    },
    "2824": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "ADD",
      "path": "20"
    },
    "2825": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2826": {
      "offset": [
        829,
        871
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2827": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2828": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "2829": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2830": {
      "op": "DUP1"
    },
    "2831": {
      "op": "ISZERO"
    },
    "2832": {
      "op": "PUSH2",
      "value": "0xB18"
    },
    "2835": {
      "op": "JUMPI"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2838": {
      "op": "DUP1"
    },
    "2839": {
      "op": "REVERT"
    },
    "2840": {
      "op": "JUMPDEST"
    },
    "2841": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "POP",
      "path": "20"
    },
    "2842": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "GAS",
      "path": "20"
    },
    "2843": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "2844": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2845": {
      "op": "DUP1"
    },
    "2846": {
      "op": "ISZERO"
    },
    "2847": {
      "op": "PUSH2",
      "value": "0xB2C"
    },
    "2850": {
      "op": "JUMPI"
    },
    "2851": {
      "op": "RETURNDATASIZE"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "RETURNDATACOPY"
    },
    "2856": {
      "op": "RETURNDATASIZE"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2859": {
      "op": "REVERT"
    },
    "2860": {
      "op": "JUMPDEST"
    },
    "2861": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "POP",
      "path": "20"
    },
    "2862": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "POP",
      "path": "20"
    },
    "2863": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "POP",
      "path": "20"
    },
    "2864": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "POP",
      "path": "20"
    },
    "2865": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2867": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2868": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2871": {
      "op": "DUP2"
    },
    "2872": {
      "op": "LT"
    },
    "2873": {
      "op": "ISZERO"
    },
    "2874": {
      "op": "PUSH2",
      "value": "0xB42"
    },
    "2877": {
      "op": "JUMPI"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2880": {
      "op": "DUP1"
    },
    "2881": {
      "op": "REVERT"
    },
    "2882": {
      "op": "JUMPDEST"
    },
    "2883": {
      "op": "POP"
    },
    "2884": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2885": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6534,
        6570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6584,
        6592
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2888": {
      "branch": 98,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6584,
        6592
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2889": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6580,
        7104
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDD7"
    },
    "2892": {
      "branch": 98,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6580,
        7104
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2893": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6608,
        6624
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2895": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6665
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB69"
    },
    "2898": {
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "2901": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6644
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7FE"
    },
    "2904": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6636,
        6643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2906": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6636,
        6643
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6631
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2908": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6635
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2360"
    },
    "2911": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2912": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6644
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2913": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6644
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2914": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6644
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2919": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6644
      ],
      "op": "AND",
      "path": "20"
    },
    "2920": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6627,
        6644
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2921": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6627,
        6665
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2922": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6608,
        6665
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2923": {
      "op": "POP"
    },
    "2924": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6679,
        6720
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 12,
      "value": "0xBA4"
    },
    "2927": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2948": {
      "offset": [
        1097,
        1139
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2969": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6608,
        6665
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2970": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6679,
        6720
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2975": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6679,
        6703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "2978": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6679,
        6720
      ],
      "op": "AND",
      "path": "20"
    },
    "2979": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6679,
        6720
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2980": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6679,
        6720
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2981": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 13,
      "value": "0xBB4"
    },
    "2984": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6745
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2985": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6750,
        6758
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2986": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2991": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6749
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x220A"
    },
    "2994": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6759
      ],
      "op": "AND",
      "path": "20"
    },
    "2995": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2996": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2997": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6798,
        6801
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 14,
      "value": "0x5"
    },
    "2999": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6798,
        6801
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3000": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6734,
        6759
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3001": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6734,
        6759
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6805
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBEA"
    },
    "3006": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6805
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3007": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3028": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3035": {
      "op": "SHL"
    },
    "3036": {
      "op": "SUB"
    },
    "3037": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6798,
        6801
      ],
      "op": "AND",
      "path": "20"
    },
    "3038": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6798,
        6801
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3040": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6805
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3045": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "3048": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6805
      ],
      "op": "AND",
      "path": "20"
    },
    "3049": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6774,
        6805
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3050": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6774,
        6805
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3051": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6843,
        6846
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 15,
      "value": "0x5"
    },
    "3053": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6843,
        6846
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3054": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6853
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC1C"
    },
    "3057": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6853
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3058": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3079": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6843,
        6846
      ],
      "op": "AND",
      "path": "20"
    },
    "3089": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6848,
        6852
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3090": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6853
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3095": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6842
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "3098": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6853
      ],
      "op": "AND",
      "path": "20"
    },
    "3099": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6819,
        6853
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3100": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6819,
        6853
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3101": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3103": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3104": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3105": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6906,
        6907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3107": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3108": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3109": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3110": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3112": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3113": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "ADD",
      "path": "20"
    },
    "3114": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3115": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3116": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3117": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6889
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3119": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6889
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3120": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3122": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3123": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "ADD",
      "path": "20"
    },
    "3124": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6889
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3125": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6889
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3126": {
      "op": "CODESIZE"
    },
    "3127": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3128": {
      "op": "CODECOPY"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "SWAP1"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6892,
        6908
      ],
      "op": "POP",
      "path": "20"
    },
    "3133": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6908
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3134": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6868,
        6908
      ],
      "op": "POP",
      "path": "20"
    },
    "3135": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3156": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6926
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 16
    },
    "3157": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6927,
        6928
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3159": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3160": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3161": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3162": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "LT",
      "path": "20"
    },
    "3163": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC60"
    },
    "3166": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3167": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3168": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3169": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3171": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "MUL",
      "path": "20"
    },
    "3172": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3174": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "ADD",
      "path": "20"
    },
    "3175": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6929
      ],
      "op": "ADD",
      "path": "20"
    },
    "3176": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "AND",
      "path": "20"
    },
    "3186": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3187": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "op": "SUB"
    },
    "3196": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "AND",
      "path": "20"
    },
    "3197": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3198": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3199": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "POP",
      "path": "20"
    },
    "3200": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6922,
        6935
      ],
      "op": "POP",
      "path": "20"
    },
    "3201": {
      "offset": [
        1546,
        1588
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "3222": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6953
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 17
    },
    "3223": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6954,
        6955
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3225": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3226": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3227": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3228": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "LT",
      "path": "20"
    },
    "3229": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCA2"
    },
    "3232": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3233": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3234": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3235": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3237": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "MUL",
      "path": "20"
    },
    "3238": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3240": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "ADD",
      "path": "20"
    },
    "3241": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6956
      ],
      "op": "ADD",
      "path": "20"
    },
    "3242": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "AND",
      "path": "20"
    },
    "3252": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3253": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "AND",
      "path": "20"
    },
    "3263": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3264": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3265": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "POP",
      "path": "20"
    },
    "3266": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6949,
        6963
      ],
      "op": "POP",
      "path": "20"
    },
    "3267": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "3288": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6981
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 18
    },
    "3289": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6982,
        6983
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3291": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3292": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3293": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3294": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "LT",
      "path": "20"
    },
    "3295": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCE4"
    },
    "3298": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3299": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3300": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6991
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3310": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6991
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3311": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6991
      ],
      "op": "AND",
      "path": "20"
    },
    "3312": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3314": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3315": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3316": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "MUL",
      "path": "20"
    },
    "3317": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3318": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3319": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3320": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "ADD",
      "path": "20"
    },
    "3321": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6984
      ],
      "op": "ADD",
      "path": "20"
    },
    "3322": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6977,
        6991
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3323": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7010,
        7013
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 19,
      "value": "0x5"
    },
    "3325": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7010,
        7013
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3326": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7010,
        7013
      ],
      "op": "AND",
      "path": "20"
    },
    "3327": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7039
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x38ED1739"
    },
    "3332": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7040,
        7044
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3333": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7010,
        7013
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3335": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7058,
        7062
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3336": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7072,
        7076
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3337": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7092
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD1A"
    },
    "3340": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7082
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "3341": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7087,
        7091
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "3344": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7092
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3349": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7086
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "3352": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7092
      ],
      "op": "AND",
      "path": "20"
    },
    "3353": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7079,
        7092
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3354": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7079,
        7092
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3355": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3357": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3358": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3359": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3364": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "AND",
      "path": "20"
    },
    "3365": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "3367": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SHL",
      "path": "20"
    },
    "3368": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3369": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3370": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3372": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3373": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3374": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3375": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3376": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3377": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3379": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3380": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3381": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3382": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3383": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3385": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3386": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3387": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3389": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3390": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3397": {
      "op": "SHL"
    },
    "3398": {
      "op": "SUB"
    },
    "3399": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "AND",
      "path": "20"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "AND",
      "path": "20"
    },
    "3409": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3410": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3411": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3413": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3414": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3415": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3416": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3417": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3419": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3420": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3421": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3422": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SUB",
      "path": "20"
    },
    "3423": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3424": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3425": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3426": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3427": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3428": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3429": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3430": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3431": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3433": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3434": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3435": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3436": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3437": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3438": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3441": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3442": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3443": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3445": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MUL",
      "path": "20"
    },
    "3446": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3447": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3448": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3451": {
      "op": "JUMPDEST"
    },
    "3452": {
      "op": "DUP4"
    },
    "3453": {
      "op": "DUP2"
    },
    "3454": {
      "op": "LT"
    },
    "3455": {
      "op": "ISZERO"
    },
    "3456": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3459": {
      "op": "JUMPI"
    },
    "3460": {
      "op": "DUP2"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "ADD"
    },
    "3463": {
      "op": "MLOAD"
    },
    "3464": {
      "op": "DUP4"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "op": "MSTORE"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3470": {
      "op": "ADD"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD7B"
    },
    "3474": {
      "op": "JUMP"
    },
    "3475": {
      "op": "JUMPDEST"
    },
    "3476": {
      "op": "POP"
    },
    "3477": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3478": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3479": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3480": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3481": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ADD",
      "path": "20"
    },
    "3483": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "3484": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3485": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3486": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3487": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3488": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3489": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3490": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3491": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3493": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3495": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3496": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3497": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3498": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "SUB",
      "path": "20"
    },
    "3499": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3500": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3502": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3503": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3504": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3505": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "ISZERO"
    },
    "3508": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3511": {
      "op": "JUMPI"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3514": {
      "op": "DUP1"
    },
    "3515": {
      "op": "REVERT"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3518": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "GAS",
      "path": "20"
    },
    "3519": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "CALL",
      "path": "20"
    },
    "3520": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3521": {
      "op": "DUP1"
    },
    "3522": {
      "op": "ISZERO"
    },
    "3523": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3526": {
      "op": "JUMPI"
    },
    "3527": {
      "op": "RETURNDATASIZE"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "RETURNDATACOPY"
    },
    "3532": {
      "op": "RETURNDATASIZE"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3535": {
      "op": "REVERT"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3538": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3539": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3540": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7006,
        7093
      ],
      "op": "POP",
      "path": "20"
    },
    "3541": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6580,
        7104
      ],
      "op": "POP",
      "path": "20"
    },
    "3542": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6580,
        7104
      ],
      "op": "POP",
      "path": "20"
    },
    "3543": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6580,
        7104
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3544": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 20,
      "value": "0x4"
    },
    "3546": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3547": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3548": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3550": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3551": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3552": {
      "op": "PUSH4",
      "value": "0xF1E42CCD"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3561": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3562": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "3583": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3584": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3585": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ADD",
      "path": "20"
    },
    "3586": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3587": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3588": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3589": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3590": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "3611": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "3613": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3614": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ADD",
      "path": "20"
    },
    "3615": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3616": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3623": {
      "op": "SHL"
    },
    "3624": {
      "op": "SUB"
    },
    "3625": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3626": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3627": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "AND",
      "path": "20"
    },
    "3628": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3629": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7144
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF1E42CCD"
    },
    "3634": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7144
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3635": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "3637": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3638": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3639": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ADD",
      "path": "20"
    },
    "3640": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3641": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3643": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3644": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3645": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3646": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3647": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3648": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "SUB",
      "path": "20"
    },
    "3649": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ADD",
      "path": "20"
    },
    "3650": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3651": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3652": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7125,
        7130
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3653": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3654": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3655": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3656": {
      "op": "DUP1"
    },
    "3657": {
      "op": "ISZERO"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0xE52"
    },
    "3661": {
      "op": "JUMPI"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3664": {
      "op": "DUP1"
    },
    "3665": {
      "op": "REVERT"
    },
    "3666": {
      "op": "JUMPDEST"
    },
    "3667": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "POP",
      "path": "20"
    },
    "3668": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "GAS",
      "path": "20"
    },
    "3669": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "CALL",
      "path": "20"
    },
    "3670": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7113,
        7156
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3671": {
      "op": "DUP1"
    },
    "3672": {
      "op": "ISZERO"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE66"
    },
    "3676": {
      "op": "JUMPI"
    },
    "3677": {
      "op": "RETURNDATASIZE"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3680": {
      "op": "DUP1"
    },
    "3681": {
      "op": "RETURNDATACOPY"
    },
    "3682": {
      "op": "RETURNDATASIZE"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3685": {
      "op": "REVERT"
    },
    "3686": {
      "op": "JUMPDEST"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3691": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3692": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3693": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3702": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3703": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7211,
        7215
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3704": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3706": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3707": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "ADD",
      "path": "20"
    },
    "3708": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3709": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3710": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3711": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7166,
        7178
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3713": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7166,
        7178
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "3736": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1679,
        1721
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7202
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "3743": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7202
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3744": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "3746": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3747": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3748": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "ADD",
      "path": "20"
    },
    "3749": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3750": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3752": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3753": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3754": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3755": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3756": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3757": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3758": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SUB",
      "path": "20"
    },
    "3759": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "ADD",
      "path": "20"
    },
    "3760": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3761": {
      "offset": [
        1679,
        1721
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3762": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3763": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "3764": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3765": {
      "op": "DUP1"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEBF"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "REVERT"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "POP",
      "path": "20"
    },
    "3777": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "GAS",
      "path": "20"
    },
    "3778": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "3779": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3780": {
      "op": "DUP1"
    },
    "3781": {
      "op": "ISZERO"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xED3"
    },
    "3785": {
      "op": "JUMPI"
    },
    "3786": {
      "op": "RETURNDATASIZE"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "RETURNDATACOPY"
    },
    "3791": {
      "op": "RETURNDATASIZE"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3794": {
      "op": "REVERT"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "POP",
      "path": "20"
    },
    "3797": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "POP",
      "path": "20"
    },
    "3798": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "POP",
      "path": "20"
    },
    "3799": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "POP",
      "path": "20"
    },
    "3800": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3802": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3803": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3806": {
      "op": "DUP2"
    },
    "3807": {
      "op": "LT"
    },
    "3808": {
      "op": "ISZERO"
    },
    "3809": {
      "op": "PUSH2",
      "value": "0xEE9"
    },
    "3812": {
      "op": "JUMPI"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3815": {
      "op": "DUP1"
    },
    "3816": {
      "op": "REVERT"
    },
    "3817": {
      "op": "JUMPDEST"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3820": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7181,
        7217
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7231,
        7239
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3823": {
      "branch": 99,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7231,
        7239
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3824": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7227,
        7585
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1112"
    },
    "3827": {
      "branch": 99,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7227,
        7585
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3828": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7279,
        7282
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 21,
      "value": "0x5"
    },
    "3830": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7279,
        7282
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3831": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7286
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF26"
    },
    "3834": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7286
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3835": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "3856": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1679,
        1721
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3863": {
      "op": "SHL"
    },
    "3864": {
      "op": "SUB"
    },
    "3865": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7279,
        7282
      ],
      "op": "AND",
      "path": "20"
    },
    "3866": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7279,
        7282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3868": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7286
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3873": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7278
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "3876": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7286
      ],
      "op": "AND",
      "path": "20"
    },
    "3877": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7255,
        7286
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3878": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7255,
        7286
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3879": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7324,
        7327
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 22,
      "value": "0x5"
    },
    "3881": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7324,
        7327
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3882": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7334
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF58"
    },
    "3885": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7334
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3886": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "3907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1679,
        1721
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "op": "SUB"
    },
    "3916": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7324,
        7327
      ],
      "op": "AND",
      "path": "20"
    },
    "3917": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7329,
        7333
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3918": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7334
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "3923": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7323
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "3926": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7334
      ],
      "op": "AND",
      "path": "20"
    },
    "3927": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7300,
        7334
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3928": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7300,
        7334
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3929": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3931": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3932": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3933": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7387,
        7388
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3935": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3936": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3937": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3938": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3940": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3941": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "ADD",
      "path": "20"
    },
    "3942": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3943": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3944": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3945": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7370
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3947": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7370
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3948": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3950": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3951": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "ADD",
      "path": "20"
    },
    "3952": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7370
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3953": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7370
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3954": {
      "op": "CODESIZE"
    },
    "3955": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3956": {
      "op": "CODECOPY"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7373,
        7389
      ],
      "op": "POP",
      "path": "20"
    },
    "3961": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7389
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3962": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7349,
        7389
      ],
      "op": "POP",
      "path": "20"
    },
    "3963": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "3984": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7407
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 23
    },
    "3985": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7408,
        7409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3987": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3988": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3989": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3990": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "LT",
      "path": "20"
    },
    "3991": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF9C"
    },
    "3994": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3995": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "INVALID",
      "path": "20"
    },
    "3996": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3997": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3999": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "MUL",
      "path": "20"
    },
    "4000": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4002": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "ADD",
      "path": "20"
    },
    "4003": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7410
      ],
      "op": "ADD",
      "path": "20"
    },
    "4004": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "SUB"
    },
    "4013": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "AND",
      "path": "20"
    },
    "4014": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4015": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4022": {
      "op": "SHL"
    },
    "4023": {
      "op": "SUB"
    },
    "4024": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "AND",
      "path": "20"
    },
    "4025": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4026": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4027": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "POP",
      "path": "20"
    },
    "4028": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7403,
        7416
      ],
      "op": "POP",
      "path": "20"
    },
    "4029": {
      "offset": [
        1546,
        1588
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "4050": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7434
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 24
    },
    "4051": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7435,
        7436
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4053": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4054": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4055": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4056": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "LT",
      "path": "20"
    },
    "4057": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFDE"
    },
    "4060": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4061": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "INVALID",
      "path": "20"
    },
    "4062": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4063": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4065": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "MUL",
      "path": "20"
    },
    "4066": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4068": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "ADD",
      "path": "20"
    },
    "4069": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7437
      ],
      "op": "ADD",
      "path": "20"
    },
    "4070": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4077": {
      "op": "SHL"
    },
    "4078": {
      "op": "SUB"
    },
    "4079": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "AND",
      "path": "20"
    },
    "4080": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4081": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "op": "SUB"
    },
    "4090": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "AND",
      "path": "20"
    },
    "4091": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4092": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4093": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "POP",
      "path": "20"
    },
    "4094": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7430,
        7444
      ],
      "op": "POP",
      "path": "20"
    },
    "4095": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "4116": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7462
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 25
    },
    "4117": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7463,
        7464
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4119": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4120": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4121": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4122": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "LT",
      "path": "20"
    },
    "4123": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1020"
    },
    "4126": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4127": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "INVALID",
      "path": "20"
    },
    "4128": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "op": "SUB"
    },
    "4137": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7472
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4138": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7472
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4139": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7472
      ],
      "op": "AND",
      "path": "20"
    },
    "4140": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4142": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4143": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4144": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "MUL",
      "path": "20"
    },
    "4145": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4146": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4147": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4148": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "ADD",
      "path": "20"
    },
    "4149": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7465
      ],
      "op": "ADD",
      "path": "20"
    },
    "4150": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7458,
        7472
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4151": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7491,
        7494
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 26,
      "value": "0x5"
    },
    "4153": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7491,
        7494
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4154": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7491,
        7494
      ],
      "op": "AND",
      "path": "20"
    },
    "4155": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7520
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x38ED1739"
    },
    "4160": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7521,
        7525
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4161": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7491,
        7494
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4163": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7539,
        7543
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4164": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7553,
        7557
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4165": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7573
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1056"
    },
    "4168": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7563
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4169": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7568,
        7572
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "4172": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7573
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4177": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7567
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "4180": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7573
      ],
      "op": "AND",
      "path": "20"
    },
    "4181": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7560,
        7573
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4182": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7560,
        7573
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4183": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4185": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4186": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4187": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4192": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "AND",
      "path": "20"
    },
    "4193": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "4195": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SHL",
      "path": "20"
    },
    "4196": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4197": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4198": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4200": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4201": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4202": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4203": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4204": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4205": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4207": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4208": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4209": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4210": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4211": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4213": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4214": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4215": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4217": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4218": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "op": "SUB"
    },
    "4227": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "AND",
      "path": "20"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "op": "SUB"
    },
    "4236": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "AND",
      "path": "20"
    },
    "4237": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4238": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4239": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4241": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4242": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4243": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4244": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4245": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4247": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4248": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4249": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4250": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SUB",
      "path": "20"
    },
    "4251": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4252": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4253": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4254": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4255": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4256": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4257": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4258": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4259": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4261": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4262": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4263": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4264": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4265": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4266": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4267": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4269": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4270": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4271": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4273": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MUL",
      "path": "20"
    },
    "4274": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4275": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4276": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4279": {
      "op": "JUMPDEST"
    },
    "4280": {
      "op": "DUP4"
    },
    "4281": {
      "op": "DUP2"
    },
    "4282": {
      "op": "LT"
    },
    "4283": {
      "op": "ISZERO"
    },
    "4284": {
      "op": "PUSH2",
      "value": "0x10CF"
    },
    "4287": {
      "op": "JUMPI"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "DUP2"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "op": "MLOAD"
    },
    "4292": {
      "op": "DUP4"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x10B7"
    },
    "4302": {
      "op": "JUMP"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "op": "POP"
    },
    "4305": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4306": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4307": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4308": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4309": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4310": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ADD",
      "path": "20"
    },
    "4311": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "4312": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4313": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4314": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4315": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4316": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4317": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4318": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4319": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4321": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4323": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4324": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4325": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4326": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "SUB",
      "path": "20"
    },
    "4327": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4328": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4330": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4331": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4332": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4333": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4334": {
      "op": "DUP1"
    },
    "4335": {
      "op": "ISZERO"
    },
    "4336": {
      "op": "PUSH2",
      "value": "0x10F8"
    },
    "4339": {
      "op": "JUMPI"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "DUP1"
    },
    "4343": {
      "op": "REVERT"
    },
    "4344": {
      "op": "JUMPDEST"
    },
    "4345": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4346": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "GAS",
      "path": "20"
    },
    "4347": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "CALL",
      "path": "20"
    },
    "4348": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4349": {
      "op": "DUP1"
    },
    "4350": {
      "op": "ISZERO"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4354": {
      "op": "JUMPI"
    },
    "4355": {
      "op": "RETURNDATASIZE"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4358": {
      "op": "DUP1"
    },
    "4359": {
      "op": "RETURNDATACOPY"
    },
    "4360": {
      "op": "RETURNDATASIZE"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4363": {
      "op": "REVERT"
    },
    "4364": {
      "op": "JUMPDEST"
    },
    "4365": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4366": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4367": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4368": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7487,
        7574
      ],
      "op": "POP",
      "path": "20"
    },
    "4369": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7227,
        7585
      ],
      "op": "POP",
      "path": "20"
    },
    "4370": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7227,
        7585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4371": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4373": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4374": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4375": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4384": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4385": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7641,
        7645
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4386": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4388": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4389": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "ADD",
      "path": "20"
    },
    "4390": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4391": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4392": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4393": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7594,
        7607
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4395": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7594,
        7607
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4396": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "4417": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1458,
        1500
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4418": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7632
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "4423": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7632
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4424": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4426": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4427": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4428": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "ADD",
      "path": "20"
    },
    "4429": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4430": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4432": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4433": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4434": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4435": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4436": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4437": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4438": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SUB",
      "path": "20"
    },
    "4439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "ADD",
      "path": "20"
    },
    "4440": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4441": {
      "offset": [
        1458,
        1500
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4442": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4443": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4444": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4445": {
      "op": "DUP1"
    },
    "4446": {
      "op": "ISZERO"
    },
    "4447": {
      "op": "PUSH2",
      "value": "0x1167"
    },
    "4450": {
      "op": "JUMPI"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4453": {
      "op": "DUP1"
    },
    "4454": {
      "op": "REVERT"
    },
    "4455": {
      "op": "JUMPDEST"
    },
    "4456": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "POP",
      "path": "20"
    },
    "4457": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "GAS",
      "path": "20"
    },
    "4458": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "4459": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4460": {
      "op": "DUP1"
    },
    "4461": {
      "op": "ISZERO"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x117B"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "RETURNDATASIZE"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "DUP1"
    },
    "4470": {
      "op": "RETURNDATACOPY"
    },
    "4471": {
      "op": "RETURNDATASIZE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4474": {
      "op": "REVERT"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "POP",
      "path": "20"
    },
    "4477": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "POP",
      "path": "20"
    },
    "4478": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "POP",
      "path": "20"
    },
    "4479": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "POP",
      "path": "20"
    },
    "4480": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4483": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4486": {
      "op": "DUP2"
    },
    "4487": {
      "op": "LT"
    },
    "4488": {
      "op": "ISZERO"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1191"
    },
    "4492": {
      "op": "JUMPI"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4495": {
      "op": "DUP1"
    },
    "4496": {
      "op": "REVERT"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4500": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7610,
        7647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7661,
        7670
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4503": {
      "branch": 100,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7661,
        7670
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4504": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7657,
        8004
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1397"
    },
    "4507": {
      "branch": 100,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7657,
        8004
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4508": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7686,
        7722
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 27,
      "value": "0x11D5"
    },
    "4511": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "4532": {
      "offset": [
        1189,
        1231
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "4553": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7720,
        7721
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4555": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7686,
        7722
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4560": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7686,
        7710
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "4563": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7686,
        7722
      ],
      "op": "AND",
      "path": "20"
    },
    "4564": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4565": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4566": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7736,
        7775
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 28,
      "value": "0x120E"
    },
    "4569": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "4590": {
      "offset": [
        1189,
        1231
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "4611": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7770,
        7774
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4612": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7736,
        7775
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4617": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7736,
        7760
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "4620": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7736,
        7775
      ],
      "op": "AND",
      "path": "20"
    },
    "4621": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7736,
        7775
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4622": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7736,
        7775
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4623": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4625": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4626": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4627": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7828,
        7829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4629": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4630": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4631": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4632": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7790,
        7811
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "4634": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4635": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4636": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "ADD",
      "path": "20"
    },
    "4637": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4638": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4639": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7790,
        7811
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4640": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4642": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4643": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "ADD",
      "path": "20"
    },
    "4644": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4645": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4646": {
      "op": "CODESIZE"
    },
    "4647": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4648": {
      "op": "CODECOPY"
    },
    "4649": {
      "op": "ADD"
    },
    "4650": {
      "op": "SWAP1"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7814,
        7830
      ],
      "op": "POP",
      "path": "20"
    },
    "4653": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7790,
        7830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4654": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7790,
        7830
      ],
      "op": "POP",
      "path": "20"
    },
    "4655": {
      "offset": [
        1458,
        1500
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
    },
    "4676": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7848
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 29
    },
    "4677": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7849,
        7850
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4679": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4680": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4681": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4682": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "LT",
      "path": "20"
    },
    "4683": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1250"
    },
    "4686": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4687": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "INVALID",
      "path": "20"
    },
    "4688": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4689": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4691": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "MUL",
      "path": "20"
    },
    "4692": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4694": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "ADD",
      "path": "20"
    },
    "4695": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7851
      ],
      "op": "ADD",
      "path": "20"
    },
    "4696": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4703": {
      "op": "SHL"
    },
    "4704": {
      "op": "SUB"
    },
    "4705": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "AND",
      "path": "20"
    },
    "4706": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4707": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "AND",
      "path": "20"
    },
    "4717": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4718": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4719": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "POP",
      "path": "20"
    },
    "4720": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7844,
        7858
      ],
      "op": "POP",
      "path": "20"
    },
    "4721": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "4742": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7876
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 30
    },
    "4743": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7877,
        7878
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4745": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4746": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4747": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4748": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "LT",
      "path": "20"
    },
    "4749": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1292"
    },
    "4752": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4753": {
      "dev": "Index out of range",
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "INVALID",
      "path": "20"
    },
    "4754": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "SUB"
    },
    "4763": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7886
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4764": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7886
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4765": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7886
      ],
      "op": "AND",
      "path": "20"
    },
    "4766": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4768": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4769": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4770": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "MUL",
      "path": "20"
    },
    "4771": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4772": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4773": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4774": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "ADD",
      "path": "20"
    },
    "4775": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4776": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4777": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7879
      ],
      "op": "ADD",
      "path": "20"
    },
    "4778": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7872,
        7886
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4779": {
      "offset": [
        1189,
        1231
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "4800": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7938
      ],
      "op": "PUSH4",
      "path": "20",
      "statement": 31,
      "value": "0x38ED1739"
    },
    "4805": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7939,
        7944
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4806": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7954,
        7955
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4808": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7958,
        7962
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4809": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7972,
        7976
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4810": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7992
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12DB"
    },
    "4813": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7982
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4814": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7987,
        7991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x708"
    },
    "4817": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7992
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4822": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7986
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "4825": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7992
      ],
      "op": "AND",
      "path": "20"
    },
    "4826": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7979,
        7992
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4827": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7979,
        7992
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4828": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4830": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4831": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4832": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "4837": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "AND",
      "path": "20"
    },
    "4838": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "4840": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SHL",
      "path": "20"
    },
    "4841": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4842": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4843": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4845": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4846": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4847": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4848": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4849": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4850": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4852": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4853": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4854": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4855": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4856": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4858": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4859": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4860": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4862": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4863": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4870": {
      "op": "SHL"
    },
    "4871": {
      "op": "SUB"
    },
    "4872": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "AND",
      "path": "20"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4879": {
      "op": "SHL"
    },
    "4880": {
      "op": "SUB"
    },
    "4881": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "AND",
      "path": "20"
    },
    "4882": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4883": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4884": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4886": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4887": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4888": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4889": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4890": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4892": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4893": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4894": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4895": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SUB",
      "path": "20"
    },
    "4896": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4897": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4898": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4899": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4900": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4901": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4902": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4903": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4904": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4906": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4908": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4909": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4910": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4911": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4912": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4914": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4915": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4916": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4918": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MUL",
      "path": "20"
    },
    "4919": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4920": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4921": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4924": {
      "op": "JUMPDEST"
    },
    "4925": {
      "op": "DUP4"
    },
    "4926": {
      "op": "DUP2"
    },
    "4927": {
      "op": "LT"
    },
    "4928": {
      "op": "ISZERO"
    },
    "4929": {
      "op": "PUSH2",
      "value": "0x1354"
    },
    "4932": {
      "op": "JUMPI"
    },
    "4933": {
      "op": "DUP2"
    },
    "4934": {
      "op": "DUP2"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "MLOAD"
    },
    "4937": {
      "op": "DUP4"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "MSTORE"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4943": {
      "op": "ADD"
    },
    "4944": {
      "op": "PUSH2",
      "value": "0x133C"
    },
    "4947": {
      "op": "JUMP"
    },
    "4948": {
      "op": "JUMPDEST"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4951": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4952": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4953": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4954": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4955": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4956": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "4957": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4958": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4959": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4960": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4961": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4962": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4963": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4964": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4966": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4968": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4969": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4970": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4971": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "SUB",
      "path": "20"
    },
    "4972": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4973": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4975": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4976": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4977": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4978": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4979": {
      "op": "DUP1"
    },
    "4980": {
      "op": "ISZERO"
    },
    "4981": {
      "op": "PUSH2",
      "value": "0x137D"
    },
    "4984": {
      "op": "JUMPI"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4987": {
      "op": "DUP1"
    },
    "4988": {
      "op": "REVERT"
    },
    "4989": {
      "op": "JUMPDEST"
    },
    "4990": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "4991": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "GAS",
      "path": "20"
    },
    "4992": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "CALL",
      "path": "20"
    },
    "4993": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4994": {
      "op": "DUP1"
    },
    "4995": {
      "op": "ISZERO"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "4999": {
      "op": "JUMPI"
    },
    "5000": {
      "op": "RETURNDATASIZE"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5003": {
      "op": "DUP1"
    },
    "5004": {
      "op": "RETURNDATACOPY"
    },
    "5005": {
      "op": "RETURNDATASIZE"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5008": {
      "op": "REVERT"
    },
    "5009": {
      "op": "JUMPDEST"
    },
    "5010": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "5011": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "5012": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "5013": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7901,
        7993
      ],
      "op": "POP",
      "path": "20"
    },
    "5014": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7657,
        8004
      ],
      "op": "POP",
      "path": "20"
    },
    "5015": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        7657,
        8004
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5016": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5018": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5019": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5020": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5029": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5030": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8060,
        8064
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "5031": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5033": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5034": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "ADD",
      "path": "20"
    },
    "5035": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5036": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5037": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5038": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8013,
        8026
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5040": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8013,
        8026
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5041": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "5062": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        1370,
        1412
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5063": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8051
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "5068": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8051
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5069": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5071": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5072": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5073": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "ADD",
      "path": "20"
    },
    "5074": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5075": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5077": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5078": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5079": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5080": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5081": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5082": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5083": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SUB",
      "path": "20"
    },
    "5084": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "ADD",
      "path": "20"
    },
    "5085": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5086": {
      "offset": [
        1370,
        1412
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5087": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5088": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5089": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5090": {
      "op": "DUP1"
    },
    "5091": {
      "op": "ISZERO"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x13EC"
    },
    "5095": {
      "op": "JUMPI"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5098": {
      "op": "DUP1"
    },
    "5099": {
      "op": "REVERT"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "POP",
      "path": "20"
    },
    "5102": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "GAS",
      "path": "20"
    },
    "5103": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "5104": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5105": {
      "op": "DUP1"
    },
    "5106": {
      "op": "ISZERO"
    },
    "5107": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5110": {
      "op": "JUMPI"
    },
    "5111": {
      "op": "RETURNDATASIZE"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5114": {
      "op": "DUP1"
    },
    "5115": {
      "op": "RETURNDATACOPY"
    },
    "5116": {
      "op": "RETURNDATASIZE"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5119": {
      "op": "REVERT"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "POP",
      "path": "20"
    },
    "5122": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "POP",
      "path": "20"
    },
    "5123": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "POP",
      "path": "20"
    },
    "5124": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "POP",
      "path": "20"
    },
    "5125": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5127": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5128": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "op": "DUP2"
    },
    "5132": {
      "op": "LT"
    },
    "5133": {
      "op": "ISZERO"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0x1416"
    },
    "5137": {
      "op": "JUMPI"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5140": {
      "op": "DUP1"
    },
    "5141": {
      "op": "REVERT"
    },
    "5142": {
      "op": "JUMPDEST"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5145": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8029,
        8066
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8080,
        8089
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5148": {
      "branch": 101,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8080,
        8089
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5149": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8076,
        8260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x153B"
    },
    "5152": {
      "branch": 101,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8076,
        8260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5153": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8105,
        8139
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 32,
      "value": "0x145A"
    },
    "5156": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "5177": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "5198": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8137,
        8138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5200": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8105,
        8139
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5205": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8105,
        8129
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "5208": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8105,
        8139
      ],
      "op": "AND",
      "path": "20"
    },
    "5209": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8105,
        8139
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5210": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8105,
        8139
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5211": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8153,
        8191
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 33,
      "value": "0x1493"
    },
    "5214": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "5235": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "5256": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8185,
        8190
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5257": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8153,
        8191
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5262": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8153,
        8177
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2452"
    },
    "5265": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8153,
        8191
      ],
      "op": "AND",
      "path": "20"
    },
    "5266": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8153,
        8191
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5267": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8153,
        8191
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5268": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 34,
      "value": "0x40"
    },
    "5270": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5271": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5272": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5273": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5274": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5275": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5276": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5277": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5278": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5279": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5284": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5285": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5286": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5287": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5288": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5289": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5290": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5291": {
      "op": "PUSH4",
      "value": "0xB4C7E4D"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5298": {
      "op": "SHL"
    },
    "5299": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5300": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5301": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "5322": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        919,
        961
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5323": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8234
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB4C7E4D"
    },
    "5328": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8234
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5329": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5333": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5334": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5335": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5336": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5337": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5338": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5339": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5340": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5341": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5342": {
      "op": "DUP8"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "op": "DUP4"
    },
    "5345": {
      "op": "DUP2"
    },
    "5346": {
      "op": "LT"
    },
    "5347": {
      "op": "ISZERO"
    },
    "5348": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5351": {
      "op": "JUMPI"
    },
    "5352": {
      "op": "DUP2"
    },
    "5353": {
      "op": "DUP2"
    },
    "5354": {
      "op": "ADD"
    },
    "5355": {
      "op": "MLOAD"
    },
    "5356": {
      "op": "DUP4"
    },
    "5357": {
      "op": "DUP3"
    },
    "5358": {
      "op": "ADD"
    },
    "5359": {
      "op": "MSTORE"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5362": {
      "op": "ADD"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x14DF"
    },
    "5366": {
      "op": "JUMP"
    },
    "5367": {
      "op": "JUMPDEST"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5370": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5371": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5372": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5373": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5374": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5375": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5376": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5377": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5378": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5380": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ADD",
      "path": "20"
    },
    "5381": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5382": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5383": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5384": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5385": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5387": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5389": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5390": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5391": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5392": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "SUB",
      "path": "20"
    },
    "5393": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5394": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5396": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP8",
      "path": "20"
    },
    "5397": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5398": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5399": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5400": {
      "op": "DUP1"
    },
    "5401": {
      "op": "ISZERO"
    },
    "5402": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "5405": {
      "op": "JUMPI"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5408": {
      "op": "DUP1"
    },
    "5409": {
      "op": "REVERT"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5412": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "GAS",
      "path": "20"
    },
    "5413": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "CALL",
      "path": "20"
    },
    "5414": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5415": {
      "op": "DUP1"
    },
    "5416": {
      "op": "ISZERO"
    },
    "5417": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5420": {
      "op": "JUMPI"
    },
    "5421": {
      "op": "RETURNDATASIZE"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5424": {
      "op": "DUP1"
    },
    "5425": {
      "op": "RETURNDATACOPY"
    },
    "5426": {
      "op": "RETURNDATASIZE"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5429": {
      "op": "REVERT"
    },
    "5430": {
      "op": "JUMPDEST"
    },
    "5431": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5432": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5433": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5434": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8205,
        8249
      ],
      "op": "POP",
      "path": "20"
    },
    "5435": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8076,
        8260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5436": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5438": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5439": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5440": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5447": {
      "op": "SHL"
    },
    "5448": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5449": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5450": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8316,
        8320
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "5451": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5453": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5454": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "ADD",
      "path": "20"
    },
    "5455": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5456": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5457": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5458": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8269,
        8282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5460": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8269,
        8282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5463": {
      "op": "DUP1"
    },
    "5464": {
      "op": "MLOAD"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5467": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "5470": {
      "op": "DUP4"
    },
    "5471": {
      "op": "CODECOPY"
    },
    "5472": {
      "op": "DUP2"
    },
    "5473": {
      "op": "MLOAD"
    },
    "5474": {
      "op": "SWAP2"
    },
    "5475": {
      "op": "MSTORE"
    },
    "5476": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5477": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8307
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "5482": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8307
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5483": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "5485": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5486": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5487": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "ADD",
      "path": "20"
    },
    "5488": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5489": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5491": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5492": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5493": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5494": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5495": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5496": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5497": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SUB",
      "path": "20"
    },
    "5498": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "ADD",
      "path": "20"
    },
    "5499": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5500": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5501": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5502": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5503": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5504": {
      "op": "DUP1"
    },
    "5505": {
      "op": "ISZERO"
    },
    "5506": {
      "op": "PUSH2",
      "value": "0x158A"
    },
    "5509": {
      "op": "JUMPI"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5512": {
      "op": "DUP1"
    },
    "5513": {
      "op": "REVERT"
    },
    "5514": {
      "op": "JUMPDEST"
    },
    "5515": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "POP",
      "path": "20"
    },
    "5516": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "GAS",
      "path": "20"
    },
    "5517": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "5518": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5519": {
      "op": "DUP1"
    },
    "5520": {
      "op": "ISZERO"
    },
    "5521": {
      "op": "PUSH2",
      "value": "0x159E"
    },
    "5524": {
      "op": "JUMPI"
    },
    "5525": {
      "op": "RETURNDATASIZE"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5528": {
      "op": "DUP1"
    },
    "5529": {
      "op": "RETURNDATACOPY"
    },
    "5530": {
      "op": "RETURNDATASIZE"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5533": {
      "op": "REVERT"
    },
    "5534": {
      "op": "JUMPDEST"
    },
    "5535": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "POP",
      "path": "20"
    },
    "5536": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "POP",
      "path": "20"
    },
    "5537": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "POP",
      "path": "20"
    },
    "5538": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "POP",
      "path": "20"
    },
    "5539": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5541": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5542": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5545": {
      "op": "DUP2"
    },
    "5546": {
      "op": "LT"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "PUSH2",
      "value": "0x15B4"
    },
    "5551": {
      "op": "JUMPI"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5554": {
      "op": "DUP1"
    },
    "5555": {
      "op": "REVERT"
    },
    "5556": {
      "op": "JUMPDEST"
    },
    "5557": {
      "op": "POP"
    },
    "5558": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5559": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8285,
        8322
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8336,
        8345
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5562": {
      "branch": 102,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8336,
        8345
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5563": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8332,
        8673
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16CC"
    },
    "5566": {
      "branch": 102,
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8332,
        8673
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5567": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8361,
        8373
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5569": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8419
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15DB"
    },
    "5572": {
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "5575": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8398
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7FE"
    },
    "5578": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8386,
        8397
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5580": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8386,
        8397
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5581": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8381
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5582": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2360"
    },
    "5585": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8385
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5586": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8398
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5587": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8398
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5588": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8398
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5593": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8398
      ],
      "op": "AND",
      "path": "20"
    },
    "5594": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8376,
        8398
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5595": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8376,
        8419
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5596": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8361,
        8419
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5597": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8361,
        8419
      ],
      "op": "POP",
      "path": "20"
    },
    "5598": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8433,
        8448
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5600": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15FA"
    },
    "5603": {
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "5606": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7FE"
    },
    "5609": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8461,
        8477
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "5611": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8461,
        8477
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5612": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8456
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5613": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8460
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2360"
    },
    "5616": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8460
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5617": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8478
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5618": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8478
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5619": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8478
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5624": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8478
      ],
      "op": "AND",
      "path": "20"
    },
    "5625": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8451,
        8478
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5626": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8451,
        8499
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5627": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8433,
        8499
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5628": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8433,
        8499
      ],
      "op": "POP",
      "path": "20"
    },
    "5629": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8513,
        8579
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 35,
      "value": "0x1695"
    },
    "5632": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5634": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5636": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5637": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5638": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5639": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5642": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "EXP",
      "path": "20"
    },
    "5643": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5644": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "DIV",
      "path": "20"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5651": {
      "op": "SHL"
    },
    "5652": {
      "op": "SUB"
    },
    "5653": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8551,
        8561
      ],
      "op": "AND",
      "path": "20"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5660": {
      "op": "SHL"
    },
    "5661": {
      "op": "SUB"
    },
    "5662": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8570
      ],
      "op": "AND",
      "path": "20"
    },
    "5663": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8570
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9EC5A894"
    },
    "5668": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5670": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5671": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5672": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5677": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "AND",
      "path": "20"
    },
    "5678": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "5680": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "SHL",
      "path": "20"
    },
    "5681": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5682": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5683": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5685": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "ADD",
      "path": "20"
    },
    "5686": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5688": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5690": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5691": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5692": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5693": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "SUB",
      "path": "20"
    },
    "5694": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5695": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5696": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5697": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5698": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5699": {
      "op": "DUP1"
    },
    "5700": {
      "op": "ISZERO"
    },
    "5701": {
      "op": "PUSH2",
      "value": "0x164D"
    },
    "5704": {
      "op": "JUMPI"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "DUP1"
    },
    "5708": {
      "op": "REVERT"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "POP",
      "path": "20"
    },
    "5711": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "GAS",
      "path": "20"
    },
    "5712": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "5713": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5714": {
      "op": "DUP1"
    },
    "5715": {
      "op": "ISZERO"
    },
    "5716": {
      "op": "PUSH2",
      "value": "0x1661"
    },
    "5719": {
      "op": "JUMPI"
    },
    "5720": {
      "op": "RETURNDATASIZE"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5723": {
      "op": "DUP1"
    },
    "5724": {
      "op": "RETURNDATACOPY"
    },
    "5725": {
      "op": "RETURNDATASIZE"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "REVERT"
    },
    "5729": {
      "op": "JUMPDEST"
    },
    "5730": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "POP",
      "path": "20"
    },
    "5731": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "POP",
      "path": "20"
    },
    "5732": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "POP",
      "path": "20"
    },
    "5733": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "POP",
      "path": "20"
    },
    "5734": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5736": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5737": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5740": {
      "op": "DUP2"
    },
    "5741": {
      "op": "LT"
    },
    "5742": {
      "op": "ISZERO"
    },
    "5743": {
      "op": "PUSH2",
      "value": "0x1677"
    },
    "5746": {
      "op": "JUMPI"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5749": {
      "op": "DUP1"
    },
    "5750": {
      "op": "REVERT"
    },
    "5751": {
      "op": "JUMPDEST"
    },
    "5752": {
      "op": "POP"
    },
    "5753": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8539,
        8572
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5756": {
      "op": "DUP1"
    },
    "5757": {
      "op": "MLOAD"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5760": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "5763": {
      "op": "DUP4"
    },
    "5764": {
      "op": "CODECOPY"
    },
    "5765": {
      "op": "DUP2"
    },
    "5766": {
      "op": "MLOAD"
    },
    "5767": {
      "op": "SWAP2"
    },
    "5768": {
      "op": "MSTORE"
    },
    "5769": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5770": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8574,
        8578
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5771": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8513,
        8579
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5776": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8513,
        8538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "5779": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8513,
        8579
      ],
      "op": "AND",
      "path": "20"
    },
    "5780": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8513,
        8579
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5781": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8513,
        8579
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5782": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8619,
        8629
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x8"
    },
    "5784": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8619,
        8629
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5785": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8639
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16C1"
    },
    "5788": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8639
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5791": {
      "op": "DUP1"
    },
    "5792": {
      "op": "MLOAD"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5795": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "5798": {
      "op": "DUP4"
    },
    "5799": {
      "op": "CODECOPY"
    },
    "5800": {
      "op": "DUP2"
    },
    "5801": {
      "op": "MLOAD"
    },
    "5802": {
      "op": "SWAP2"
    },
    "5803": {
      "op": "MSTORE"
    },
    "5804": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5811": {
      "op": "SHL"
    },
    "5812": {
      "op": "SUB"
    },
    "5813": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8619,
        8629
      ],
      "op": "AND",
      "path": "20"
    },
    "5814": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8631,
        8638
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5815": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8639
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5820": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8618
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "5823": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8639
      ],
      "op": "AND",
      "path": "20"
    },
    "5824": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8593,
        8639
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5825": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8593,
        8639
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5826": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8653,
        8662
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 37,
      "value": "0x16C9"
    },
    "5829": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8653,
        8660
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2089"
    },
    "5832": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8653,
        8662
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5833": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8653,
        8662
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5834": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8332,
        8673
      ],
      "op": "POP",
      "path": "20"
    },
    "5835": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8332,
        8673
      ],
      "op": "POP",
      "path": "20"
    },
    "5836": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8332,
        8673
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5837": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 38,
      "value": "0x4"
    },
    "5839": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5840": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5841": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5843": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5844": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5845": {
      "op": "PUSH4",
      "value": "0x7C1E845D"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5854": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5855": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5856": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5863": {
      "op": "SHL"
    },
    "5864": {
      "op": "SUB"
    },
    "5865": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5866": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5867": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "AND",
      "path": "20"
    },
    "5868": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5869": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF83D08BA"
    },
    "5874": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8705
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5875": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5876": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5877": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "ADD",
      "path": "20"
    },
    "5878": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5879": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5881": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5882": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5883": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5884": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5885": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "SUB",
      "path": "20"
    },
    "5886": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "ADD",
      "path": "20"
    },
    "5887": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5888": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5889": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8694,
        8699
      ],
      "op": "DUP8",
      "path": "20"
    },
    "5890": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5891": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "5892": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "ISZERO"
    },
    "5895": {
      "op": "PUSH2",
      "value": "0x170F"
    },
    "5898": {
      "op": "JUMPI"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5901": {
      "op": "DUP1"
    },
    "5902": {
      "op": "REVERT"
    },
    "5903": {
      "op": "JUMPDEST"
    },
    "5904": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "POP",
      "path": "20"
    },
    "5905": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "GAS",
      "path": "20"
    },
    "5906": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "CALL",
      "path": "20"
    },
    "5907": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8682,
        8707
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5908": {
      "op": "DUP1"
    },
    "5909": {
      "op": "ISZERO"
    },
    "5910": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "5913": {
      "op": "JUMPI"
    },
    "5914": {
      "op": "RETURNDATASIZE"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5917": {
      "op": "DUP1"
    },
    "5918": {
      "op": "RETURNDATACOPY"
    },
    "5919": {
      "op": "RETURNDATASIZE"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5922": {
      "op": "REVERT"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8732
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0xA"
    },
    "5928": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8732
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5929": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8743
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x173B"
    },
    "5932": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8743
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8732
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8737,
        8742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5937": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8743
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "5942": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8736
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "5945": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8743
      ],
      "op": "AND",
      "path": "20"
    },
    "5946": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "i",
      "offset": [
        8726,
        8743
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5947": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8726,
        8743
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5948": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8717,
        8723
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "5950": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8717,
        8743
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5951": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8717,
        8743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5952": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8717,
        8743
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5953": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x40"
    },
    "5955": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5956": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5957": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5958": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5959": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5960": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5962": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5963": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "ADD",
      "path": "20"
    },
    "5964": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5965": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5966": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5967": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5968": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5969": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5970": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939"
    },
    "6003": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6004": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6005": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6006": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SUB",
      "path": "20"
    },
    "6007": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6008": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6009": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "ADD",
      "path": "20"
    },
    "6010": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6011": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        8758,
        8782
      ],
      "op": "LOG1",
      "path": "20"
    },
    "6012": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "POP",
      "path": "20"
    },
    "6013": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "POP",
      "path": "20"
    },
    "6014": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "POP",
      "path": "20"
    },
    "6015": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "POP",
      "path": "20"
    },
    "6016": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "offset": [
        6333,
        8789
      ],
      "op": "POP",
      "path": "20"
    },
    "6017": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        6333,
        8789
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6018": {
      "offset": [
        1057,
        1140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6019": {
      "offset": [
        1097,
        1139
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "6040": {
      "offset": [
        1057,
        1140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6041": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1057,
        1140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6042": {
      "offset": [
        1331,
        1413
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6043": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "6064": {
      "offset": [
        1331,
        1413
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6065": {
      "fn": "StrategyCurveEURVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1331,
        1413
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6066": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6067": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4512,
        4522
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x7"
    },
    "6069": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4512,
        4522
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6070": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4463,
        4478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6072": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4463,
        4478
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6079": {
      "op": "SHL"
    },
    "6080": {
      "op": "SUB"
    },
    "6081": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4512,
        4522
      ],
      "op": "AND",
      "path": "20"
    },
    "6082": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4498,
        4508
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6083": {
      "branch": 103,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4498,
        4522
      ],
      "op": "EQ",
      "path": "20"
    },
    "6084": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1802"
    },
    "6087": {
      "branch": 103,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6088": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6090": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6091": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6098": {
      "op": "SHL"
    },
    "6099": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6100": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6101": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6103": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6105": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6106": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "ADD",
      "path": "20"
    },
    "6107": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6108": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6110": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6112": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6113": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "ADD",
      "path": "20"
    },
    "6114": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6115": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6129": {
      "op": "SHL"
    },
    "6130": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6132": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6133": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "ADD",
      "path": "20"
    },
    "6134": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6135": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6136": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6137": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6138": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6139": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6140": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "SUB",
      "path": "20"
    },
    "6141": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6143": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "ADD",
      "path": "20"
    },
    "6144": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6145": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6146": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4490,
        4538
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6149": {
      "op": "DUP1"
    },
    "6150": {
      "op": "MLOAD"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6153": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "6156": {
      "op": "DUP4"
    },
    "6157": {
      "op": "CODECOPY"
    },
    "6158": {
      "op": "DUP2"
    },
    "6159": {
      "op": "MLOAD"
    },
    "6160": {
      "op": "SWAP2"
    },
    "6161": {
      "op": "MSTORE"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6168": {
      "op": "SHL"
    },
    "6169": {
      "op": "SUB"
    },
    "6170": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4556,
        4579
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 42
    },
    "6171": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4556,
        4579
      ],
      "op": "AND",
      "path": "20"
    },
    "6172": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4556,
        4579
      ],
      "op": "EQ",
      "path": "20"
    },
    "6173": {
      "branch": 104,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4556,
        4579
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6174": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1857"
    },
    "6177": {
      "branch": 104,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6178": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6180": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6181": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6188": {
      "op": "SHL"
    },
    "6189": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6190": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6191": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6193": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6195": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6196": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6197": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "ADD",
      "path": "20"
    },
    "6198": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6199": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6200": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6201": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6202": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6204": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6205": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "ADD",
      "path": "20"
    },
    "6206": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6207": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6214": {
      "op": "SHL"
    },
    "6215": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6217": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6218": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "ADD",
      "path": "20"
    },
    "6219": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6220": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6221": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6222": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6223": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6224": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6225": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SUB",
      "path": "20"
    },
    "6226": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6228": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "ADD",
      "path": "20"
    },
    "6229": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6230": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6231": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4548,
        4588
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6232": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6259": {
      "op": "SHL"
    },
    "6260": {
      "op": "SUB"
    },
    "6261": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4606,
        4628
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 43
    },
    "6262": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4606,
        4628
      ],
      "op": "AND",
      "path": "20"
    },
    "6263": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4606,
        4628
      ],
      "op": "EQ",
      "path": "20"
    },
    "6264": {
      "branch": 105,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4606,
        4628
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6265": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18AF"
    },
    "6268": {
      "branch": 105,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6269": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6271": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6272": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6279": {
      "op": "SHL"
    },
    "6280": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6281": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6282": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6284": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6286": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6287": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "ADD",
      "path": "20"
    },
    "6288": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6289": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "6291": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6293": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6294": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "ADD",
      "path": "20"
    },
    "6295": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6296": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6302": {
      "op": "SHL"
    },
    "6303": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6305": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6306": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "ADD",
      "path": "20"
    },
    "6307": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6308": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6309": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6310": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6311": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6312": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6313": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "SUB",
      "path": "20"
    },
    "6314": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6316": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "ADD",
      "path": "20"
    },
    "6317": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6318": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6319": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4598,
        4636
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6320": {
      "offset": [
        1370,
        1412
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xDB25F211AB05B1C97D595516F45794528A807AD8"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "op": "SUB"
    },
    "6349": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4654,
        4677
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 44
    },
    "6350": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4654,
        4677
      ],
      "op": "AND",
      "path": "20"
    },
    "6351": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4654,
        4677
      ],
      "op": "EQ",
      "path": "20"
    },
    "6352": {
      "branch": 106,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4654,
        4677
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6353": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x190A"
    },
    "6356": {
      "branch": 106,
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6357": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6359": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6360": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6367": {
      "op": "SHL"
    },
    "6368": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6369": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6370": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6372": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6374": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6375": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6376": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "ADD",
      "path": "20"
    },
    "6377": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6378": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6379": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6380": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6381": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6383": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6384": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "ADD",
      "path": "20"
    },
    "6385": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6386": {
      "op": "PUSH4",
      "value": "0x65757273"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6393": {
      "op": "SHL"
    },
    "6394": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6396": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6397": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "ADD",
      "path": "20"
    },
    "6398": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6399": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6400": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6401": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6402": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6403": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6404": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SUB",
      "path": "20"
    },
    "6405": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6407": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "ADD",
      "path": "20"
    },
    "6408": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6409": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6410": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4646,
        4686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6411": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0x40"
    },
    "6413": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6414": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6415": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6422": {
      "op": "SHL"
    },
    "6423": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6424": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6425": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4731,
        4735
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6426": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6428": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6429": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "ADD",
      "path": "20"
    },
    "6430": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6431": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6432": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6439": {
      "op": "SHL"
    },
    "6440": {
      "op": "SUB"
    },
    "6441": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6442": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "AND",
      "path": "20"
    },
    "6443": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6444": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "6449": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6450": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6452": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6453": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6454": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "ADD",
      "path": "20"
    },
    "6455": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6456": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6458": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6459": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6460": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6461": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6462": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6463": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SUB",
      "path": "20"
    },
    "6464": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "ADD",
      "path": "20"
    },
    "6465": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6466": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4722
      ],
      "op": "DUP7",
      "path": "20"
    },
    "6467": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6468": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "6469": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6470": {
      "op": "DUP1"
    },
    "6471": {
      "op": "ISZERO"
    },
    "6472": {
      "op": "PUSH2",
      "value": "0x1950"
    },
    "6475": {
      "op": "JUMPI"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6478": {
      "op": "DUP1"
    },
    "6479": {
      "op": "REVERT"
    },
    "6480": {
      "op": "JUMPDEST"
    },
    "6481": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "POP",
      "path": "20"
    },
    "6482": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "GAS",
      "path": "20"
    },
    "6483": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "6484": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6485": {
      "op": "DUP1"
    },
    "6486": {
      "op": "ISZERO"
    },
    "6487": {
      "op": "PUSH2",
      "value": "0x1964"
    },
    "6490": {
      "op": "JUMPI"
    },
    "6491": {
      "op": "RETURNDATASIZE"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6494": {
      "op": "DUP1"
    },
    "6495": {
      "op": "RETURNDATACOPY"
    },
    "6496": {
      "op": "RETURNDATASIZE"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6499": {
      "op": "REVERT"
    },
    "6500": {
      "op": "JUMPDEST"
    },
    "6501": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "POP",
      "path": "20"
    },
    "6502": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "POP",
      "path": "20"
    },
    "6503": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "POP",
      "path": "20"
    },
    "6504": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "POP",
      "path": "20"
    },
    "6505": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6507": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6508": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6511": {
      "op": "DUP2"
    },
    "6512": {
      "op": "LT"
    },
    "6513": {
      "op": "ISZERO"
    },
    "6514": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6517": {
      "op": "JUMPI"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6520": {
      "op": "DUP1"
    },
    "6521": {
      "op": "REVERT"
    },
    "6522": {
      "op": "JUMPDEST"
    },
    "6523": {
      "op": "POP"
    },
    "6524": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6525": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4767,
        4777
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 46,
      "value": "0x7"
    },
    "6527": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4767,
        4777
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6528": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6529": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6530": {
      "op": "POP"
    },
    "6531": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4787
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x199F"
    },
    "6534": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4787
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "op": "SUB"
    },
    "6543": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4766
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6544": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4766
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6545": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4766
      ],
      "op": "AND",
      "path": "20"
    },
    "6546": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4766
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6547": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4767,
        4777
      ],
      "op": "AND",
      "path": "20"
    },
    "6548": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4706,
        4737
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6549": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4787
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6554": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4766
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "6557": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4787
      ],
      "op": "AND",
      "path": "20"
    },
    "6558": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4747,
        4787
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6559": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4747,
        4787
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6560": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6561": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6562": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        4412,
        4794
      ],
      "op": "POP",
      "path": "20"
    },
    "6563": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        4412,
        4794
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6564": {
      "offset": [
        1991,
        2016
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6565": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1991,
        2016
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6567": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1991,
        2016
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6574": {
      "op": "SHL"
    },
    "6575": {
      "op": "SUB"
    },
    "6576": {
      "offset": [
        1991,
        2016
      ],
      "op": "AND",
      "path": "20"
    },
    "6577": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1991,
        2016
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6578": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1991,
        2016
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6579": {
      "offset": [
        1966,
        1984
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6580": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1966,
        1984
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "6582": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1966,
        1984
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6589": {
      "op": "SHL"
    },
    "6590": {
      "op": "SUB"
    },
    "6591": {
      "offset": [
        1966,
        1984
      ],
      "op": "AND",
      "path": "20"
    },
    "6592": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "offset": [
        1966,
        1984
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6593": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1966,
        1984
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6594": {
      "offset": [
        791,
        872
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6595": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "6616": {
      "offset": [
        791,
        872
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6617": {
      "fn": "StrategyCurveEURVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        791,
        872
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6618": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6619": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3920,
        3930
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 47,
      "value": "0x8"
    },
    "6621": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3920,
        3930
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "op": "SUB"
    },
    "6630": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3920,
        3930
      ],
      "op": "AND",
      "path": "20"
    },
    "6631": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3916
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6632": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3930
      ],
      "op": "EQ",
      "path": "20"
    },
    "6633": {
      "branch": 107,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3930
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6634": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3958
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19FD"
    },
    "6637": {
      "branch": 107,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3958
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3948,
        3958
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6641": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3948,
        3958
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6648": {
      "op": "SHL"
    },
    "6649": {
      "op": "SUB"
    },
    "6650": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3948,
        3958
      ],
      "op": "AND",
      "path": "20"
    },
    "6651": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3934,
        3944
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6652": {
      "branch": 108,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3934,
        3958
      ],
      "op": "EQ",
      "path": "20"
    },
    "6653": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3906,
        3958
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6654": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A3C"
    },
    "6657": {
      "branch": 108,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6658": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6660": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6661": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6668": {
      "op": "SHL"
    },
    "6669": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6670": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6671": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6673": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6675": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6676": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "ADD",
      "path": "20"
    },
    "6677": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6678": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6680": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6682": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6683": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "ADD",
      "path": "20"
    },
    "6684": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6685": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6699": {
      "op": "SHL"
    },
    "6700": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6702": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6703": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "ADD",
      "path": "20"
    },
    "6704": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6705": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6706": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6707": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6708": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6709": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6710": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "SUB",
      "path": "20"
    },
    "6711": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6713": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "ADD",
      "path": "20"
    },
    "6714": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6715": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6716": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3898,
        3974
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6717": {
      "branch": 109,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3988,
        3997
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6718": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6719": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A6D"
    },
    "6722": {
      "branch": 109,
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6723": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4016
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 48,
      "value": "0x5"
    },
    "6725": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6726": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6733": {
      "op": "SHL"
    },
    "6734": {
      "op": "SUB"
    },
    "6735": {
      "op": "NOT"
    },
    "6736": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "AND",
      "path": "20"
    },
    "6737": {
      "offset": [
        1189,
        1231
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "6758": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "OR",
      "path": "20"
    },
    "6759": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6760": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4013,
        4026
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6761": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A94"
    },
    "6764": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6765": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6766": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4060
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 49,
      "value": "0x5"
    },
    "6768": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6769": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6776": {
      "op": "SHL"
    },
    "6777": {
      "op": "SUB"
    },
    "6778": {
      "op": "NOT"
    },
    "6779": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "AND",
      "path": "20"
    },
    "6780": {
      "offset": [
        1282,
        1324
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
    },
    "6801": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "OR",
      "path": "20"
    },
    "6802": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6803": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        4057,
        4072
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6804": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3984,
        4083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6805": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "offset": [
        3844,
        4089
      ],
      "op": "POP",
      "path": "20"
    },
    "6806": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "jump": "o",
      "offset": [
        3844,
        4089
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6807": {
      "offset": [
        879,
        962
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6808": {
      "offset": [
        919,
        961
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xCE6A5FF5217E38315F87032CF90686C96627CAA"
    },
    "6829": {
      "offset": [
        879,
        962
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6830": {
      "fn": "StrategyCurveEURVoterProxy.switchDex",
      "jump": "o",
      "offset": [
        879,
        962
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6831": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9037,
        9148
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6832": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9079,
        9086
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6834": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9141
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 50,
      "value": "0x1AD0"
    },
    "6837": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9125,
        9140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ABC"
    },
    "6840": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9125,
        9138
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5DE"
    },
    "6843": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        9125,
        9140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6844": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9125,
        9140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6845": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9120
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AC4"
    },
    "6848": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9118
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1FB0"
    },
    "6851": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        9105,
        9120
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6852": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9120
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6853": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9124
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6854": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9141
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6859": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9124
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2306"
    },
    "6862": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9141
      ],
      "op": "AND",
      "path": "20"
    },
    "6863": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        9105,
        9141
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6864": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9105,
        9141
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6865": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9098,
        9141
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6866": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9098,
        9141
      ],
      "op": "POP",
      "path": "20"
    },
    "6867": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "offset": [
        9037,
        9148
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6868": {
      "fn": "StrategyCurveEURVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        9037,
        9148
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6869": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2876,
        3040
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6870": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2953,
        2963
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 51,
      "value": "0x8"
    },
    "6872": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2953,
        2963
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "op": "SUB"
    },
    "6881": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2953,
        2963
      ],
      "op": "AND",
      "path": "20"
    },
    "6882": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2949
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6883": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2963
      ],
      "op": "EQ",
      "path": "20"
    },
    "6884": {
      "branch": 110,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6885": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AF8"
    },
    "6888": {
      "branch": 110,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2991
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6889": {
      "op": "POP"
    },
    "6890": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2981,
        2991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "6892": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2981,
        2991
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6899": {
      "op": "SHL"
    },
    "6900": {
      "op": "SUB"
    },
    "6901": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2981,
        2991
      ],
      "op": "AND",
      "path": "20"
    },
    "6902": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2967,
        2977
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6903": {
      "branch": 111,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2967,
        2991
      ],
      "op": "EQ",
      "path": "20"
    },
    "6904": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2939,
        2991
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6905": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B37"
    },
    "6908": {
      "branch": 111,
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6909": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6911": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6912": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6919": {
      "op": "SHL"
    },
    "6920": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6921": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6922": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6924": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6926": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6927": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "ADD",
      "path": "20"
    },
    "6928": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6929": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6931": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6933": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6934": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "ADD",
      "path": "20"
    },
    "6935": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6936": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6950": {
      "op": "SHL"
    },
    "6951": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6953": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6954": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "ADD",
      "path": "20"
    },
    "6955": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6956": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6957": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6958": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6959": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6960": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6961": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "SUB",
      "path": "20"
    },
    "6962": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6964": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "ADD",
      "path": "20"
    },
    "6965": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6966": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6967": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        2931,
        3007
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6968": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3023
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 52,
      "value": "0x9"
    },
    "6970": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6971": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6978": {
      "op": "SHL"
    },
    "6979": {
      "op": "SUB"
    },
    "6980": {
      "op": "NOT"
    },
    "6981": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "AND",
      "path": "20"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6988": {
      "op": "SHL"
    },
    "6989": {
      "op": "SUB"
    },
    "6990": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6991": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6992": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6993": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "AND",
      "path": "20"
    },
    "6994": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6995": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6996": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6997": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "OR",
      "path": "20"
    },
    "6998": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6999": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "offset": [
        3017,
        3033
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7000": {
      "fn": "StrategyCurveEURVoterProxy.setKeeper",
      "jump": "o",
      "offset": [
        2876,
        3040
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7001": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3362,
        3518
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7002": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3449,
        3459
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 53,
      "value": "0x6"
    },
    "7004": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3449,
        3459
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "SUB"
    },
    "7013": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3449,
        3459
      ],
      "op": "AND",
      "path": "20"
    },
    "7014": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3435,
        3445
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7015": {
      "branch": 112,
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3435,
        3459
      ],
      "op": "EQ",
      "path": "20"
    },
    "7016": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BA6"
    },
    "7019": {
      "branch": 112,
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7020": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7022": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7023": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7030": {
      "op": "SHL"
    },
    "7031": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7032": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7033": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7035": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7037": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7038": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "ADD",
      "path": "20"
    },
    "7039": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7040": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7042": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7044": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7045": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "ADD",
      "path": "20"
    },
    "7046": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7047": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7064": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7065": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "ADD",
      "path": "20"
    },
    "7066": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7067": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7068": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7069": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7070": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7071": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7072": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "SUB",
      "path": "20"
    },
    "7073": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7075": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "ADD",
      "path": "20"
    },
    "7076": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7077": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7078": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3427,
        3475
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7079": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3485,
        3496
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0x1"
    },
    "7081": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        3485,
        3511
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7082": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        3362,
        3518
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7083": {
      "offset": [
        1729,
        1758
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7084": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1729,
        1758
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7086": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1729,
        1758
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7087": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1729,
        1758
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7088": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1729,
        1758
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7089": {
      "offset": [
        1803,
        1841
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7090": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1803,
        1841
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "7092": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1803,
        1841
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7093": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "offset": [
        1803,
        1841
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7094": {
      "fn": "StrategyCurveEURVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1803,
        1841
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7095": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7096": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5887,
        5897
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0x7"
    },
    "7098": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5887,
        5897
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7099": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5838,
        5853
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7101": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5838,
        5853
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7108": {
      "op": "SHL"
    },
    "7109": {
      "op": "SUB"
    },
    "7110": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5887,
        5897
      ],
      "op": "AND",
      "path": "20"
    },
    "7111": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5873,
        5883
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7112": {
      "branch": 113,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5873,
        5897
      ],
      "op": "EQ",
      "path": "20"
    },
    "7113": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C07"
    },
    "7116": {
      "branch": 113,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7117": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7119": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7120": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7127": {
      "op": "SHL"
    },
    "7128": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7129": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7130": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7132": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7134": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7135": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "ADD",
      "path": "20"
    },
    "7136": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7137": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7139": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7141": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7142": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "ADD",
      "path": "20"
    },
    "7143": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7144": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7158": {
      "op": "SHL"
    },
    "7159": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7161": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7162": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "ADD",
      "path": "20"
    },
    "7163": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7164": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7165": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7166": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7167": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7168": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7169": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "SUB",
      "path": "20"
    },
    "7170": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7172": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "ADD",
      "path": "20"
    },
    "7173": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7174": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7175": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5865,
        5913
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7176": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5923,
        5937
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 56,
      "value": "0x1C0F"
    },
    "7179": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5923,
        5935
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2565"
    },
    "7182": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5923,
        5937
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7183": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5923,
        5937
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7184": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 57,
      "value": "0x40"
    },
    "7186": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7187": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7188": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7195": {
      "op": "SHL"
    },
    "7196": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7197": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7198": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5989,
        5993
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "7199": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7201": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7202": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "ADD",
      "path": "20"
    },
    "7203": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7204": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7205": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7208": {
      "op": "DUP1"
    },
    "7209": {
      "op": "MLOAD"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7212": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "7215": {
      "op": "DUP4"
    },
    "7216": {
      "op": "CODECOPY"
    },
    "7217": {
      "op": "DUP2"
    },
    "7218": {
      "op": "MLOAD"
    },
    "7219": {
      "op": "SWAP2"
    },
    "7220": {
      "op": "MSTORE"
    },
    "7221": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7222": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5980
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "7227": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5980
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7228": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7230": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7231": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7232": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "ADD",
      "path": "20"
    },
    "7233": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7234": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7236": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7237": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7238": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7239": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7240": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7241": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SUB",
      "path": "20"
    },
    "7242": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "ADD",
      "path": "20"
    },
    "7243": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7244": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7245": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7246": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7247": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7248": {
      "op": "DUP1"
    },
    "7249": {
      "op": "ISZERO"
    },
    "7250": {
      "op": "PUSH2",
      "value": "0x1C5A"
    },
    "7253": {
      "op": "JUMPI"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7256": {
      "op": "DUP1"
    },
    "7257": {
      "op": "REVERT"
    },
    "7258": {
      "op": "JUMPDEST"
    },
    "7259": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "POP",
      "path": "20"
    },
    "7260": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "GAS",
      "path": "20"
    },
    "7261": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "7262": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7263": {
      "op": "DUP1"
    },
    "7264": {
      "op": "ISZERO"
    },
    "7265": {
      "op": "PUSH2",
      "value": "0x1C6E"
    },
    "7268": {
      "op": "JUMPI"
    },
    "7269": {
      "op": "RETURNDATASIZE"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7272": {
      "op": "DUP1"
    },
    "7273": {
      "op": "RETURNDATACOPY"
    },
    "7274": {
      "op": "RETURNDATASIZE"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7277": {
      "op": "REVERT"
    },
    "7278": {
      "op": "JUMPDEST"
    },
    "7279": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "POP",
      "path": "20"
    },
    "7280": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "POP",
      "path": "20"
    },
    "7281": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "POP",
      "path": "20"
    },
    "7282": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "POP",
      "path": "20"
    },
    "7283": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7285": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7286": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7289": {
      "op": "DUP2"
    },
    "7290": {
      "op": "LT"
    },
    "7291": {
      "op": "ISZERO"
    },
    "7292": {
      "op": "PUSH2",
      "value": "0x1C84"
    },
    "7295": {
      "op": "JUMPI"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7298": {
      "op": "DUP1"
    },
    "7299": {
      "op": "REVERT"
    },
    "7300": {
      "op": "JUMPDEST"
    },
    "7301": {
      "op": "POP"
    },
    "7302": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7303": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "7305": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7306": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7308": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7309": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7310": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7319": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7322": {
      "op": "DUP1"
    },
    "7323": {
      "op": "MLOAD"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7326": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "7329": {
      "op": "DUP4"
    },
    "7330": {
      "op": "CODECOPY"
    },
    "7331": {
      "op": "DUP2"
    },
    "7332": {
      "op": "MLOAD"
    },
    "7333": {
      "op": "SWAP2"
    },
    "7334": {
      "op": "MSTORE"
    },
    "7335": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7337": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7338": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "ADD",
      "path": "20"
    },
    "7339": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7340": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7341": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7342": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7343": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7344": {
      "op": "POP"
    },
    "7345": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7347": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6006,
        6020
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7354": {
      "op": "SHL"
    },
    "7355": {
      "op": "SUB"
    },
    "7356": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7357": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7358": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "AND",
      "path": "20"
    },
    "7359": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7360": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6053
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA622EE7C"
    },
    "7365": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6053
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7366": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7368": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7369": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7370": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "ADD",
      "path": "20"
    },
    "7371": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7372": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7374": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5958,
        5995
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7375": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7376": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7377": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7378": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7379": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7380": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SUB",
      "path": "20"
    },
    "7381": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "ADD",
      "path": "20"
    },
    "7382": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7383": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6035,
        6045
      ],
      "op": "DUP7",
      "path": "20"
    },
    "7384": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7385": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7386": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7387": {
      "op": "DUP1"
    },
    "7388": {
      "op": "ISZERO"
    },
    "7389": {
      "op": "PUSH2",
      "value": "0x1CE5"
    },
    "7392": {
      "op": "JUMPI"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7395": {
      "op": "DUP1"
    },
    "7396": {
      "op": "REVERT"
    },
    "7397": {
      "op": "JUMPDEST"
    },
    "7398": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "POP",
      "path": "20"
    },
    "7399": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "GAS",
      "path": "20"
    },
    "7400": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "7401": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7402": {
      "op": "DUP1"
    },
    "7403": {
      "op": "ISZERO"
    },
    "7404": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "7407": {
      "op": "JUMPI"
    },
    "7408": {
      "op": "RETURNDATASIZE"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7411": {
      "op": "DUP1"
    },
    "7412": {
      "op": "RETURNDATACOPY"
    },
    "7413": {
      "op": "RETURNDATASIZE"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7416": {
      "op": "REVERT"
    },
    "7417": {
      "op": "JUMPDEST"
    },
    "7418": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "POP",
      "path": "20"
    },
    "7419": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "POP",
      "path": "20"
    },
    "7420": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "POP",
      "path": "20"
    },
    "7421": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "POP",
      "path": "20"
    },
    "7422": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7424": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7425": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7428": {
      "op": "DUP2"
    },
    "7429": {
      "op": "LT"
    },
    "7430": {
      "op": "ISZERO"
    },
    "7431": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7434": {
      "op": "JUMPI"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7437": {
      "op": "DUP1"
    },
    "7438": {
      "op": "REVERT"
    },
    "7439": {
      "op": "JUMPDEST"
    },
    "7440": {
      "op": "POP"
    },
    "7441": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7442": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6023,
        6068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7443": {
      "op": "POP"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7450": {
      "op": "SHL"
    },
    "7451": {
      "op": "SUB"
    },
    "7452": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6086,
        6106
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 58
    },
    "7453": {
      "branch": 114,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6086,
        6106
      ],
      "op": "AND",
      "path": "20"
    },
    "7454": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D57"
    },
    "7457": {
      "branch": 114,
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7458": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7460": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7461": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7468": {
      "op": "SHL"
    },
    "7469": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7470": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7471": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7473": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7475": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7476": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "ADD",
      "path": "20"
    },
    "7477": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7478": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "7480": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7482": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7483": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "ADD",
      "path": "20"
    },
    "7484": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7485": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7497": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7498": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "ADD",
      "path": "20"
    },
    "7499": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7500": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7501": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7502": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7503": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7504": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7505": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "SUB",
      "path": "20"
    },
    "7506": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7508": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "ADD",
      "path": "20"
    },
    "7509": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7510": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7511": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6078,
        6117
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7512": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6179,
        6221
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 59,
      "value": "0x1D76"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7517": {
      "op": "DUP1"
    },
    "7518": {
      "op": "MLOAD"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7521": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "7524": {
      "op": "DUP4"
    },
    "7525": {
      "op": "CODECOPY"
    },
    "7526": {
      "op": "DUP2"
    },
    "7527": {
      "op": "MLOAD"
    },
    "7528": {
      "op": "SWAP2"
    },
    "7529": {
      "op": "MSTORE"
    },
    "7530": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6205,
        6211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7531": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6213,
        6220
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7532": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6179,
        6221
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "7537": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6179,
        6204
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "7540": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6179,
        6221
      ],
      "op": "AND",
      "path": "20"
    },
    "7541": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        6179,
        6221
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7542": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        6179,
        6221
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7543": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "POP",
      "path": "20"
    },
    "7544": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        5797,
        6228
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7545": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        5797,
        6228
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7546": {
      "offset": [
        1847,
        1880
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7547": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1847,
        1880
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "7549": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1847,
        1880
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7550": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "offset": [
        1847,
        1880
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7551": {
      "fn": "StrategyCurveEURVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1847,
        1880
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7552": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9312,
        9464
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7553": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9397,
        9407
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 60,
      "value": "0x6"
    },
    "7555": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9397,
        9407
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7562": {
      "op": "SHL"
    },
    "7563": {
      "op": "SUB"
    },
    "7564": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9397,
        9407
      ],
      "op": "AND",
      "path": "20"
    },
    "7565": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9383,
        9393
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7566": {
      "branch": 115,
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9383,
        9407
      ],
      "op": "EQ",
      "path": "20"
    },
    "7567": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DCD"
    },
    "7570": {
      "branch": 115,
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7571": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7573": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7574": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7581": {
      "op": "SHL"
    },
    "7582": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7583": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7584": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7586": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7588": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7589": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "ADD",
      "path": "20"
    },
    "7590": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7591": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7593": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7595": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7596": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "ADD",
      "path": "20"
    },
    "7597": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7598": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7612": {
      "op": "SHL"
    },
    "7613": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7615": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7616": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "ADD",
      "path": "20"
    },
    "7617": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7618": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7619": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7620": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7621": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7622": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7623": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "SUB",
      "path": "20"
    },
    "7624": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7626": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "ADD",
      "path": "20"
    },
    "7627": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7628": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7629": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9375,
        9423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7630": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9443
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 61,
      "value": "0x7"
    },
    "7632": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7633": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7640": {
      "op": "SHL"
    },
    "7641": {
      "op": "SUB"
    },
    "7642": {
      "op": "NOT"
    },
    "7643": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "AND",
      "path": "20"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7650": {
      "op": "SHL"
    },
    "7651": {
      "op": "SUB"
    },
    "7652": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7653": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7654": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7655": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "AND",
      "path": "20"
    },
    "7656": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7657": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7658": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7659": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "OR",
      "path": "20"
    },
    "7660": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7661": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "offset": [
        9433,
        9457
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7662": {
      "fn": "StrategyCurveEURVoterProxy.setController",
      "jump": "o",
      "offset": [
        9312,
        9464
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7663": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3046,
        3186
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7664": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3125,
        3135
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 62,
      "value": "0x6"
    },
    "7666": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3125,
        3135
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7673": {
      "op": "SHL"
    },
    "7674": {
      "op": "SUB"
    },
    "7675": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3125,
        3135
      ],
      "op": "AND",
      "path": "20"
    },
    "7676": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3111,
        3121
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7677": {
      "branch": 116,
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3111,
        3135
      ],
      "op": "EQ",
      "path": "20"
    },
    "7678": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E3C"
    },
    "7681": {
      "branch": 116,
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7682": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7684": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7685": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7692": {
      "op": "SHL"
    },
    "7693": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7694": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7695": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7697": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7699": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7700": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "ADD",
      "path": "20"
    },
    "7701": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7702": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7704": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7706": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7707": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "ADD",
      "path": "20"
    },
    "7708": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7709": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7726": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7727": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "ADD",
      "path": "20"
    },
    "7728": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7729": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7730": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7731": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7732": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7733": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7734": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "SUB",
      "path": "20"
    },
    "7735": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7737": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "ADD",
      "path": "20"
    },
    "7738": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7739": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7740": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3103,
        3151
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7741": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3161,
        3168
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 63,
      "value": "0x0"
    },
    "7743": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "offset": [
        3161,
        3179
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7744": {
      "fn": "StrategyCurveEURVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        3046,
        3186
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7745": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3706,
        3838
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7746": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3781,
        3791
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 64,
      "value": "0x6"
    },
    "7748": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3781,
        3791
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7755": {
      "op": "SHL"
    },
    "7756": {
      "op": "SUB"
    },
    "7757": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3781,
        3791
      ],
      "op": "AND",
      "path": "20"
    },
    "7758": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3767,
        3777
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7759": {
      "branch": 117,
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3767,
        3791
      ],
      "op": "EQ",
      "path": "20"
    },
    "7760": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E8E"
    },
    "7763": {
      "branch": 117,
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7764": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7766": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7767": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7774": {
      "op": "SHL"
    },
    "7775": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7776": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7777": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7779": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7781": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7782": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "ADD",
      "path": "20"
    },
    "7783": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7784": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7786": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7788": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7789": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "ADD",
      "path": "20"
    },
    "7790": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7791": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7805": {
      "op": "SHL"
    },
    "7806": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7808": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7809": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "ADD",
      "path": "20"
    },
    "7810": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7811": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7812": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7813": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7814": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7815": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7816": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "SUB",
      "path": "20"
    },
    "7817": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7819": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "ADD",
      "path": "20"
    },
    "7820": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7821": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7822": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3759,
        3807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7823": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3822
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 65,
      "value": "0x4"
    },
    "7825": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7826": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7833": {
      "op": "SHL"
    },
    "7834": {
      "op": "SUB"
    },
    "7835": {
      "op": "NOT"
    },
    "7836": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "AND",
      "path": "20"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7843": {
      "op": "SHL"
    },
    "7844": {
      "op": "SUB"
    },
    "7845": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7846": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7847": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7848": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "AND",
      "path": "20"
    },
    "7849": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7850": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7851": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7852": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "OR",
      "path": "20"
    },
    "7853": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7854": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "offset": [
        3817,
        3831
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7855": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        3706,
        3838
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7856": {
      "offset": [
        1238,
        1325
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7857": {
      "offset": [
        1282,
        1324
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
    },
    "7878": {
      "offset": [
        1238,
        1325
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7879": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        1238,
        1325
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7880": {
      "offset": [
        968,
        1051
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7881": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "7902": {
      "offset": [
        968,
        1051
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7903": {
      "fn": "StrategyCurveEURVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        968,
        1051
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7904": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9154,
        9306
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7905": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9239,
        9249
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 66,
      "value": "0x6"
    },
    "7907": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9239,
        9249
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7914": {
      "op": "SHL"
    },
    "7915": {
      "op": "SUB"
    },
    "7916": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9239,
        9249
      ],
      "op": "AND",
      "path": "20"
    },
    "7917": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9225,
        9235
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7918": {
      "branch": 118,
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9225,
        9249
      ],
      "op": "EQ",
      "path": "20"
    },
    "7919": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F2D"
    },
    "7922": {
      "branch": 118,
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7923": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7925": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7926": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7933": {
      "op": "SHL"
    },
    "7934": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7935": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7936": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7938": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7940": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7941": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "ADD",
      "path": "20"
    },
    "7942": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7943": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7945": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7947": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7948": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "ADD",
      "path": "20"
    },
    "7949": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7950": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7964": {
      "op": "SHL"
    },
    "7965": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7967": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7968": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "ADD",
      "path": "20"
    },
    "7969": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7970": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7971": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7972": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7973": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7974": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7975": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "SUB",
      "path": "20"
    },
    "7976": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7978": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "ADD",
      "path": "20"
    },
    "7979": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7980": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7981": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9217,
        9265
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7982": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9285
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 67,
      "value": "0x6"
    },
    "7984": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7985": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7992": {
      "op": "SHL"
    },
    "7993": {
      "op": "SUB"
    },
    "7994": {
      "op": "NOT"
    },
    "7995": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "AND",
      "path": "20"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8002": {
      "op": "SHL"
    },
    "8003": {
      "op": "SUB"
    },
    "8004": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8005": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8006": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8007": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "AND",
      "path": "20"
    },
    "8008": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8009": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8010": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8011": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "OR",
      "path": "20"
    },
    "8012": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8013": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "offset": [
        9275,
        9299
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8014": {
      "fn": "StrategyCurveEURVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        9154,
        9306
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8015": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3192,
        3356
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8016": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3283,
        3293
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 68,
      "value": "0x6"
    },
    "8018": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3283,
        3293
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8025": {
      "op": "SHL"
    },
    "8026": {
      "op": "SUB"
    },
    "8027": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3283,
        3293
      ],
      "op": "AND",
      "path": "20"
    },
    "8028": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3269,
        3279
      ],
      "op": "CALLER",
      "path": "20"
    },
    "8029": {
      "branch": 119,
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3269,
        3293
      ],
      "op": "EQ",
      "path": "20"
    },
    "8030": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F9C"
    },
    "8033": {
      "branch": 119,
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8034": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8036": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8037": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8044": {
      "op": "SHL"
    },
    "8045": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8046": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8047": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8049": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8051": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8052": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "ADD",
      "path": "20"
    },
    "8053": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8054": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "8056": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8058": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8059": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "ADD",
      "path": "20"
    },
    "8060": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8061": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "8073": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8075": {
      "op": "SHL"
    },
    "8076": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8078": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8079": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "ADD",
      "path": "20"
    },
    "8080": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8081": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8082": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8083": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8084": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8085": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8086": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "SUB",
      "path": "20"
    },
    "8087": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8089": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "ADD",
      "path": "20"
    },
    "8090": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8091": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8092": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3261,
        3309
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8093": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3319,
        3332
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 69,
      "value": "0x3"
    },
    "8095": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        3319,
        3349
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8096": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        3192,
        3356
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8097": {
      "offset": [
        2084,
        2105
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8098": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2084,
        2105
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "8100": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2084,
        2105
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8107": {
      "op": "SHL"
    },
    "8108": {
      "op": "SUB"
    },
    "8109": {
      "offset": [
        2084,
        2105
      ],
      "op": "AND",
      "path": "20"
    },
    "8110": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "offset": [
        2084,
        2105
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8111": {
      "fn": "StrategyCurveEURVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        2084,
        2105
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8112": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8795,
        8911
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8113": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 70,
      "value": "0x40"
    },
    "8115": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8116": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8117": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8124": {
      "op": "SHL"
    },
    "8125": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8126": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8127": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8898,
        8902
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "8128": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8130": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8131": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "ADD",
      "path": "20"
    },
    "8132": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8133": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8134": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8135": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8841,
        8848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8137": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8841,
        8848
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8140": {
      "op": "DUP1"
    },
    "8141": {
      "op": "MLOAD"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8144": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "8147": {
      "op": "DUP4"
    },
    "8148": {
      "op": "CODECOPY"
    },
    "8149": {
      "op": "DUP2"
    },
    "8150": {
      "op": "MLOAD"
    },
    "8151": {
      "op": "SWAP2"
    },
    "8152": {
      "op": "MSTORE"
    },
    "8153": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8154": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8889
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "8159": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8889
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8160": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8162": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8163": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8164": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "ADD",
      "path": "20"
    },
    "8165": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8166": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8168": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8169": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8170": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8171": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8172": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8173": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8174": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "SUB",
      "path": "20"
    },
    "8175": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "ADD",
      "path": "20"
    },
    "8176": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8177": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "8178": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8179": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "8180": {
      "fn": "StrategyCurveEURVoterProxy.balanceOfWant",
      "offset": [
        8867,
        8904
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8181": {
      "op": "DUP1"
    },
    "8182": {
      "op": "ISZERO"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x641"
    },
    "8186": {
      "op": "JUMPI"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8189": {
      "op": "DUP1"
    },
    "8190": {
      "op": "REVERT"
    },
    "8191": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2690,
        2870
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8192": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2775,
        2785
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 71,
      "value": "0x8"
    },
    "8194": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2775,
        2785
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "op": "SUB"
    },
    "8203": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2775,
        2785
      ],
      "op": "AND",
      "path": "20"
    },
    "8204": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2771
      ],
      "op": "CALLER",
      "path": "20"
    },
    "8205": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2785
      ],
      "op": "EQ",
      "path": "20"
    },
    "8206": {
      "branch": 120,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2785
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8207": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2813
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2022"
    },
    "8210": {
      "branch": 120,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2813
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8211": {
      "op": "POP"
    },
    "8212": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2803,
        2813
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "8214": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2803,
        2813
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8221": {
      "op": "SHL"
    },
    "8222": {
      "op": "SUB"
    },
    "8223": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2803,
        2813
      ],
      "op": "AND",
      "path": "20"
    },
    "8224": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2789,
        2799
      ],
      "op": "CALLER",
      "path": "20"
    },
    "8225": {
      "branch": 121,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2789,
        2813
      ],
      "op": "EQ",
      "path": "20"
    },
    "8226": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2761,
        2813
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8227": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2061"
    },
    "8230": {
      "branch": 121,
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8231": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8233": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8234": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8241": {
      "op": "SHL"
    },
    "8242": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8243": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8244": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8246": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8248": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8249": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "ADD",
      "path": "20"
    },
    "8250": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8251": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "8253": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8255": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8256": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "ADD",
      "path": "20"
    },
    "8257": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8258": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "8272": {
      "op": "SHL"
    },
    "8273": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8275": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8276": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "ADD",
      "path": "20"
    },
    "8277": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8278": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8279": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8280": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8281": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8282": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8283": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "SUB",
      "path": "20"
    },
    "8284": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8286": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "ADD",
      "path": "20"
    },
    "8287": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8288": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8289": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2753,
        2829
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8290": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 72,
      "value": "0x8"
    },
    "8292": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8293": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8300": {
      "op": "SHL"
    },
    "8301": {
      "op": "SUB"
    },
    "8302": {
      "op": "NOT"
    },
    "8303": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "AND",
      "path": "20"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8310": {
      "op": "SHL"
    },
    "8311": {
      "op": "SUB"
    },
    "8312": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8313": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8314": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8315": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "AND",
      "path": "20"
    },
    "8316": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8317": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8318": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8319": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "OR",
      "path": "20"
    },
    "8320": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8321": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        2839,
        2863
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8322": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2690,
        2870
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8323": {
      "offset": [
        1764,
        1797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8324": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1764,
        1797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "8326": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1764,
        1797
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8327": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "offset": [
        1764,
        1797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8328": {
      "fn": "StrategyCurveEURVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        1764,
        1797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8329": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4095,
        4332
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8330": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8332": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8333": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8334": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8341": {
      "op": "SHL"
    },
    "8342": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8343": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8344": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4178,
        4182
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "8345": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8347": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8348": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "ADD",
      "path": "20"
    },
    "8349": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8350": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8351": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8352": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4131,
        4144
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8354": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4131,
        4144
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8357": {
      "op": "DUP1"
    },
    "8358": {
      "op": "MLOAD"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8361": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "8364": {
      "op": "DUP4"
    },
    "8365": {
      "op": "CODECOPY"
    },
    "8366": {
      "op": "DUP2"
    },
    "8367": {
      "op": "MLOAD"
    },
    "8368": {
      "op": "SWAP2"
    },
    "8369": {
      "op": "MSTORE"
    },
    "8370": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8371": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4169
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "8376": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4169
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8377": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8379": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8380": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8381": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "ADD",
      "path": "20"
    },
    "8382": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8383": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8385": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8386": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8387": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8388": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8389": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8390": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8391": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SUB",
      "path": "20"
    },
    "8392": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "ADD",
      "path": "20"
    },
    "8393": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8394": {
      "offset": [
        742,
        784
      ],
      "op": "DUP7",
      "path": "20"
    },
    "8395": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8396": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "8397": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8398": {
      "op": "DUP1"
    },
    "8399": {
      "op": "ISZERO"
    },
    "8400": {
      "op": "PUSH2",
      "value": "0x20D8"
    },
    "8403": {
      "op": "JUMPI"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8406": {
      "op": "DUP1"
    },
    "8407": {
      "op": "REVERT"
    },
    "8408": {
      "op": "JUMPDEST"
    },
    "8409": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "POP",
      "path": "20"
    },
    "8410": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "GAS",
      "path": "20"
    },
    "8411": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "8412": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8413": {
      "op": "DUP1"
    },
    "8414": {
      "op": "ISZERO"
    },
    "8415": {
      "op": "PUSH2",
      "value": "0x20EC"
    },
    "8418": {
      "op": "JUMPI"
    },
    "8419": {
      "op": "RETURNDATASIZE"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8422": {
      "op": "DUP1"
    },
    "8423": {
      "op": "RETURNDATACOPY"
    },
    "8424": {
      "op": "RETURNDATASIZE"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8427": {
      "op": "REVERT"
    },
    "8428": {
      "op": "JUMPDEST"
    },
    "8429": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "POP",
      "path": "20"
    },
    "8430": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "POP",
      "path": "20"
    },
    "8431": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "POP",
      "path": "20"
    },
    "8432": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "POP",
      "path": "20"
    },
    "8433": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8435": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8436": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "op": "DUP2"
    },
    "8440": {
      "op": "LT"
    },
    "8441": {
      "op": "ISZERO"
    },
    "8442": {
      "op": "PUSH2",
      "value": "0x2102"
    },
    "8445": {
      "op": "JUMPI"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8448": {
      "op": "DUP1"
    },
    "8449": {
      "op": "REVERT"
    },
    "8450": {
      "op": "JUMPDEST"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8453": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4147,
        4184
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4198,
        4207
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8456": {
      "branch": 122,
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4198,
        4207
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8457": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4194,
        4326
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A94"
    },
    "8460": {
      "branch": 122,
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4194,
        4326
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8461": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4249,
        4254
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 73,
      "value": "0x4"
    },
    "8463": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4249,
        4254
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8464": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4262
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2138"
    },
    "8467": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4262
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8470": {
      "op": "DUP1"
    },
    "8471": {
      "op": "MLOAD"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8474": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "8477": {
      "op": "DUP4"
    },
    "8478": {
      "op": "CODECOPY"
    },
    "8479": {
      "op": "DUP2"
    },
    "8480": {
      "op": "MLOAD"
    },
    "8481": {
      "op": "SWAP2"
    },
    "8482": {
      "op": "MSTORE"
    },
    "8483": {
      "offset": [
        742,
        784
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "op": "SUB"
    },
    "8492": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4249,
        4254
      ],
      "op": "AND",
      "path": "20"
    },
    "8493": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4256,
        4261
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8494": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4262
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "8499": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4248
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FB"
    },
    "8502": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4262
      ],
      "op": "AND",
      "path": "20"
    },
    "8503": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "i",
      "offset": [
        4223,
        4262
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8504": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4223,
        4262
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8505": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 74,
      "value": "0x4"
    },
    "8507": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8508": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8509": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8511": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8512": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8513": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "8520": {
      "op": "SHL"
    },
    "8521": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8522": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8523": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "8544": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8545": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8546": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ADD",
      "path": "20"
    },
    "8547": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8548": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8549": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8550": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8553": {
      "op": "DUP1"
    },
    "8554": {
      "op": "MLOAD"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8557": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "8560": {
      "op": "DUP4"
    },
    "8561": {
      "op": "CODECOPY"
    },
    "8562": {
      "op": "DUP2"
    },
    "8563": {
      "op": "MLOAD"
    },
    "8564": {
      "op": "SWAP2"
    },
    "8565": {
      "op": "MSTORE"
    },
    "8566": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8568": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8569": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ADD",
      "path": "20"
    },
    "8570": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8571": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8578": {
      "op": "SHL"
    },
    "8579": {
      "op": "SUB"
    },
    "8580": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8581": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8582": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "AND",
      "path": "20"
    },
    "8583": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8584": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4302
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF9609F08"
    },
    "8589": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4302
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8590": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8592": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8593": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8594": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ADD",
      "path": "20"
    },
    "8595": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8596": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8598": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8599": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8600": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8601": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8602": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8603": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "SUB",
      "path": "20"
    },
    "8604": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ADD",
      "path": "20"
    },
    "8605": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8606": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8607": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4288,
        4293
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8608": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8609": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "8610": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8611": {
      "op": "DUP1"
    },
    "8612": {
      "op": "ISZERO"
    },
    "8613": {
      "op": "PUSH2",
      "value": "0x21AD"
    },
    "8616": {
      "op": "JUMPI"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8619": {
      "op": "DUP1"
    },
    "8620": {
      "op": "REVERT"
    },
    "8621": {
      "op": "JUMPDEST"
    },
    "8622": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "POP",
      "path": "20"
    },
    "8623": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "GAS",
      "path": "20"
    },
    "8624": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "CALL",
      "path": "20"
    },
    "8625": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8626": {
      "op": "DUP1"
    },
    "8627": {
      "op": "ISZERO"
    },
    "8628": {
      "op": "PUSH2",
      "value": "0x21C1"
    },
    "8631": {
      "op": "JUMPI"
    },
    "8632": {
      "op": "RETURNDATASIZE"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8635": {
      "op": "DUP1"
    },
    "8636": {
      "op": "RETURNDATACOPY"
    },
    "8637": {
      "op": "RETURNDATASIZE"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8640": {
      "op": "REVERT"
    },
    "8641": {
      "op": "JUMPDEST"
    },
    "8642": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "POP",
      "path": "20"
    },
    "8643": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "POP",
      "path": "20"
    },
    "8644": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "POP",
      "path": "20"
    },
    "8645": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4276,
        4315
      ],
      "op": "POP",
      "path": "20"
    },
    "8646": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        4095,
        4332
      ],
      "op": "POP",
      "path": "20"
    },
    "8647": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        4095,
        4332
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8648": {
      "offset": [
        2112,
        2133
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8649": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2112,
        2133
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "8651": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2112,
        2133
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8652": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2112,
        2133
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8653": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        2112,
        2133
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8654": {
      "offset": [
        1886,
        1933
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8655": {
      "offset": [
        1928,
        1933
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "8658": {
      "offset": [
        1886,
        1933
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8659": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1886,
        1933
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8660": {
      "offset": [
        1641,
        1722
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8661": {
      "offset": [
        1679,
        1721
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0xC011A73EE8576FB46F5E1C5751CA3B9FE0AF2A6F"
    },
    "8682": {
      "offset": [
        1641,
        1722
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8683": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1641,
        1722
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8684": {
      "offset": [
        1940,
        1960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8685": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1940,
        1960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8687": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1940,
        1960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8694": {
      "op": "SHL"
    },
    "8695": {
      "op": "SUB"
    },
    "8696": {
      "offset": [
        1940,
        1960
      ],
      "op": "AND",
      "path": "20"
    },
    "8697": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        1940,
        1960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8698": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1940,
        1960
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8699": {
      "offset": [
        2022,
        2047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8700": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2022,
        2047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "8702": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2022,
        2047
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8709": {
      "op": "SHL"
    },
    "8710": {
      "op": "SUB"
    },
    "8711": {
      "offset": [
        2022,
        2047
      ],
      "op": "AND",
      "path": "20"
    },
    "8712": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "offset": [
        2022,
        2047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8713": {
      "fn": "StrategyCurveEURVoterProxy.deposit",
      "jump": "o",
      "offset": [
        2022,
        2047
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8714": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8715": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8717": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 75,
      "value": "0x224C"
    },
    "8720": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8721": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8722": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8724": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8725": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8726": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8728": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "8729": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8731": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8732": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8733": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "8735": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8736": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8737": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8739": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "8740": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8773": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8774": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8775": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "8776": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2609"
    },
    "8779": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8780": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8781": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8782": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "8783": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8784": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8785": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8786": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "8787": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "8788": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8789": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5584,
        5724
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8790": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 76,
      "value": "0x4"
    },
    "8792": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8793": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8794": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8796": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8797": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8798": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8805": {
      "op": "SHL"
    },
    "8806": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8807": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8808": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "8829": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8830": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8831": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ADD",
      "path": "20"
    },
    "8832": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8833": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8834": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "8835": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8838": {
      "op": "DUP1"
    },
    "8839": {
      "op": "MLOAD"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8842": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "8845": {
      "op": "DUP4"
    },
    "8846": {
      "op": "CODECOPY"
    },
    "8847": {
      "op": "DUP2"
    },
    "8848": {
      "op": "MLOAD"
    },
    "8849": {
      "op": "SWAP2"
    },
    "8850": {
      "op": "MSTORE"
    },
    "8851": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8853": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8854": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ADD",
      "path": "20"
    },
    "8855": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8856": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8858": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8859": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ADD",
      "path": "20"
    },
    "8860": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8861": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8862": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8863": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8864": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5642,
        5649
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8866": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5642,
        5649
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8873": {
      "op": "SHL"
    },
    "8874": {
      "op": "SUB"
    },
    "8875": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8876": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8877": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "AND",
      "path": "20"
    },
    "8878": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8879": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5695
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD9CAED12"
    },
    "8884": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5695
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8885": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8887": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8888": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8889": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ADD",
      "path": "20"
    },
    "8890": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8891": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8893": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8894": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8895": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8896": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8897": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8898": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SUB",
      "path": "20"
    },
    "8899": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ADD",
      "path": "20"
    },
    "8900": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8901": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5642,
        5649
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8902": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5680,
        5685
      ],
      "op": "DUP8",
      "path": "20"
    },
    "8903": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8904": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "8905": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8906": {
      "op": "DUP1"
    },
    "8907": {
      "op": "ISZERO"
    },
    "8908": {
      "op": "PUSH2",
      "value": "0x22D4"
    },
    "8911": {
      "op": "JUMPI"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8914": {
      "op": "DUP1"
    },
    "8915": {
      "op": "REVERT"
    },
    "8916": {
      "op": "JUMPDEST"
    },
    "8917": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "POP",
      "path": "20"
    },
    "8918": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "GAS",
      "path": "20"
    },
    "8919": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "CALL",
      "path": "20"
    },
    "8920": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8921": {
      "op": "DUP1"
    },
    "8922": {
      "op": "ISZERO"
    },
    "8923": {
      "op": "PUSH2",
      "value": "0x22E8"
    },
    "8926": {
      "op": "JUMPI"
    },
    "8927": {
      "op": "RETURNDATASIZE"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8930": {
      "op": "DUP1"
    },
    "8931": {
      "op": "RETURNDATACOPY"
    },
    "8932": {
      "op": "RETURNDATASIZE"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8935": {
      "op": "REVERT"
    },
    "8936": {
      "op": "JUMPDEST"
    },
    "8937": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "POP",
      "path": "20"
    },
    "8938": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "POP",
      "path": "20"
    },
    "8939": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "POP",
      "path": "20"
    },
    "8940": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "POP",
      "path": "20"
    },
    "8941": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8943": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8944": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8947": {
      "op": "DUP2"
    },
    "8948": {
      "op": "LT"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x22FE"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8956": {
      "op": "DUP1"
    },
    "8957": {
      "op": "REVERT"
    },
    "8958": {
      "op": "JUMPDEST"
    },
    "8959": {
      "op": "POP"
    },
    "8960": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8961": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5668,
        5717
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8962": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "offset": [
        5584,
        5724
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8963": {
      "op": "POP"
    },
    "8964": {
      "op": "POP"
    },
    "8965": {
      "fn": "StrategyCurveEURVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        5584,
        5724
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8966": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8967": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8969": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8970": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8971": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "8972": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 77
    },
    "8973": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8974": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "8975": {
      "branch": 127,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8976": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224C"
    },
    "8979": {
      "branch": 127,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8980": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8982": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8983": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8990": {
      "op": "SHL"
    },
    "8991": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8992": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8993": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8995": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8997": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8998": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "8999": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9000": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "9002": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "9004": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9005": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9006": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9007": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "9040": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "9042": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9043": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9044": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9045": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9046": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9047": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9048": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9049": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9050": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "9051": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "9053": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9054": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9055": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9056": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9057": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9059": {
      "branch": 128,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9060": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236F"
    },
    "9063": {
      "branch": 128,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9064": {
      "op": "POP"
    },
    "9065": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 78,
      "value": "0x0"
    },
    "9067": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224F"
    },
    "9070": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9071": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9072": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9073": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9074": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "9075": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9076": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9077": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9078": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9079": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 79,
      "value": "0x237C"
    },
    "9082": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9083": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "9084": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9085": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "9086": {
      "branch": 129,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "9087": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224C"
    },
    "9090": {
      "branch": 129,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9091": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9093": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9100": {
      "op": "SHL"
    },
    "9101": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9102": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9103": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9105": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "9106": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9107": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9108": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9110": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "9111": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9112": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9113": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "9114": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9115": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9116": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "9118": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9119": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9120": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9122": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "9123": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9124": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x291A"
    },
    "9127": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "9129": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9130": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "9131": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9133": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "9134": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9135": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "9136": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "9137": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9139": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9140": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9141": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9142": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "9143": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9144": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9145": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9146": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9148": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 80,
      "value": "0x224C"
    },
    "9151": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9152": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9153": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9155": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9156": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9157": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9159": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "9160": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9162": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9163": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9164": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "9166": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9167": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9168": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9170": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "9171": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "9204": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9205": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9206": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "9207": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26A0"
    },
    "9210": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9211": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9212": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 81,
      "value": "0x40"
    },
    "9214": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9215": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9222": {
      "op": "SHL"
    },
    "9223": {
      "op": "SUB"
    },
    "9224": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9225": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "9226": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9228": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9229": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "9230": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9231": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9233": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9234": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9235": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "9236": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9237": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9238": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9239": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9240": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9241": {
      "op": "DUP1"
    },
    "9242": {
      "op": "DUP4"
    },
    "9243": {
      "op": "SUB"
    },
    "9244": {
      "op": "SWAP1"
    },
    "9245": {
      "op": "SWAP2"
    },
    "9246": {
      "op": "ADD"
    },
    "9247": {
      "op": "DUP2"
    },
    "9248": {
      "op": "MSTORE"
    },
    "9249": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "9251": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9252": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9253": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "9254": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9255": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9256": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9257": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9259": {
      "op": "DUP2"
    },
    "9260": {
      "op": "ADD"
    },
    "9261": {
      "op": "DUP1"
    },
    "9262": {
      "op": "MLOAD"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9269": {
      "op": "SHL"
    },
    "9270": {
      "op": "SUB"
    },
    "9271": {
      "op": "AND"
    },
    "9272": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9279": {
      "op": "SHL"
    },
    "9280": {
      "op": "OR"
    },
    "9281": {
      "op": "SWAP1"
    },
    "9282": {
      "op": "MSTORE"
    },
    "9283": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x244D"
    },
    "9286": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9287": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9288": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9289": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2705"
    },
    "9292": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9293": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9294": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "9295": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "9296": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "9297": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9298": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9299": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 82
    },
    "9300": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9301": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9302": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24D8"
    },
    "9305": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9306": {
      "op": "POP"
    },
    "9307": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9309": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9310": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9311": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9318": {
      "op": "SHL"
    },
    "9319": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9320": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9321": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "9322": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9324": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9325": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "9326": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9333": {
      "op": "SHL"
    },
    "9334": {
      "op": "SUB"
    },
    "9335": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9336": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9337": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "9338": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9340": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9341": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "9342": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9343": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9344": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9345": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9346": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9347": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "9348": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9349": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "9354": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9355": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9357": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9358": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9359": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "9360": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9361": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9363": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9364": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9365": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9366": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9367": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9368": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9369": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "9370": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "9371": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9372": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "9373": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9374": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "9375": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9376": {
      "op": "DUP1"
    },
    "9377": {
      "op": "ISZERO"
    },
    "9378": {
      "op": "PUSH2",
      "value": "0x24AA"
    },
    "9381": {
      "op": "JUMPI"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9384": {
      "op": "DUP1"
    },
    "9385": {
      "op": "REVERT"
    },
    "9386": {
      "op": "JUMPDEST"
    },
    "9387": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "9388": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "9389": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "9390": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9391": {
      "op": "DUP1"
    },
    "9392": {
      "op": "ISZERO"
    },
    "9393": {
      "op": "PUSH2",
      "value": "0x24BE"
    },
    "9396": {
      "op": "JUMPI"
    },
    "9397": {
      "op": "RETURNDATASIZE"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9400": {
      "op": "DUP1"
    },
    "9401": {
      "op": "RETURNDATACOPY"
    },
    "9402": {
      "op": "RETURNDATASIZE"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9405": {
      "op": "REVERT"
    },
    "9406": {
      "op": "JUMPDEST"
    },
    "9407": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "9408": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "9409": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "9410": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "9411": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9413": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9414": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9417": {
      "op": "DUP2"
    },
    "9418": {
      "op": "LT"
    },
    "9419": {
      "op": "ISZERO"
    },
    "9420": {
      "op": "PUSH2",
      "value": "0x24D4"
    },
    "9423": {
      "op": "JUMPI"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9426": {
      "op": "DUP1"
    },
    "9427": {
      "op": "REVERT"
    },
    "9428": {
      "op": "JUMPDEST"
    },
    "9429": {
      "op": "POP"
    },
    "9430": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9431": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9432": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9433": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2513"
    },
    "9436": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9437": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9439": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9446": {
      "op": "SHL"
    },
    "9447": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9448": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9449": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9451": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "9452": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9453": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9454": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9456": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "9457": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9458": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9459": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "9460": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9461": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9462": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "9464": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9465": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9466": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9468": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "9469": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9470": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2965"
    },
    "9473": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "9475": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9476": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "9477": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9479": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "9480": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9481": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "9482": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "9483": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9485": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9486": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9487": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9488": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "9489": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9490": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9491": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9492": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 83,
      "value": "0x40"
    },
    "9494": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9495": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9502": {
      "op": "SHL"
    },
    "9503": {
      "op": "SUB"
    },
    "9504": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9505": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "9506": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9508": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9509": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "9510": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9511": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9513": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9514": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9515": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "9516": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9517": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9518": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9519": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9520": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9521": {
      "op": "DUP1"
    },
    "9522": {
      "op": "DUP4"
    },
    "9523": {
      "op": "SUB"
    },
    "9524": {
      "op": "SWAP1"
    },
    "9525": {
      "op": "SWAP2"
    },
    "9526": {
      "op": "ADD"
    },
    "9527": {
      "op": "DUP2"
    },
    "9528": {
      "op": "MSTORE"
    },
    "9529": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "9531": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9532": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9533": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "9534": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9535": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9536": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9537": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9539": {
      "op": "DUP2"
    },
    "9540": {
      "op": "ADD"
    },
    "9541": {
      "op": "DUP1"
    },
    "9542": {
      "op": "MLOAD"
    },
    "9543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9549": {
      "op": "SHL"
    },
    "9550": {
      "op": "SUB"
    },
    "9551": {
      "op": "AND"
    },
    "9552": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9559": {
      "op": "SHL"
    },
    "9560": {
      "op": "OR"
    },
    "9561": {
      "op": "SWAP1"
    },
    "9562": {
      "op": "MSTORE"
    },
    "9563": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x244D"
    },
    "9566": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9567": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9568": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9569": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2705"
    },
    "9572": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9573": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6234,
        6327
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9574": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 84,
      "value": "0x4"
    },
    "9576": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9577": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9578": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9580": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9581": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9582": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "9589": {
      "op": "SHL"
    },
    "9590": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9591": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9592": {
      "offset": [
        1008,
        1050
      ],
      "op": "PUSH20",
      "path": "20",
      "value": "0x90BB609649E0451E5AD952683D64BD2D1F245840"
    },
    "9613": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9614": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9615": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ADD",
      "path": "20"
    },
    "9616": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9617": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9618": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9619": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9622": {
      "op": "DUP1"
    },
    "9623": {
      "op": "MLOAD"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9626": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "9629": {
      "op": "DUP4"
    },
    "9630": {
      "op": "CODECOPY"
    },
    "9631": {
      "op": "DUP2"
    },
    "9632": {
      "op": "MLOAD"
    },
    "9633": {
      "op": "SWAP2"
    },
    "9634": {
      "op": "MSTORE"
    },
    "9635": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "9637": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9638": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ADD",
      "path": "20"
    },
    "9639": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9640": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9647": {
      "op": "SHL"
    },
    "9648": {
      "op": "SUB"
    },
    "9649": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9650": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9651": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "AND",
      "path": "20"
    },
    "9652": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9653": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6307
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x9CAE2C8"
    },
    "9658": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6307
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9659": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "9661": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9662": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9663": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ADD",
      "path": "20"
    },
    "9664": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9665": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9667": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9668": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9669": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9670": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9671": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9672": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "SUB",
      "path": "20"
    },
    "9673": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ADD",
      "path": "20"
    },
    "9674": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9675": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9677": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6289,
        6294
      ],
      "op": "DUP8",
      "path": "20"
    },
    "9678": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9679": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "9680": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9681": {
      "op": "DUP1"
    },
    "9682": {
      "op": "ISZERO"
    },
    "9683": {
      "op": "PUSH2",
      "value": "0x25DB"
    },
    "9686": {
      "op": "JUMPI"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9689": {
      "op": "DUP1"
    },
    "9690": {
      "op": "REVERT"
    },
    "9691": {
      "op": "JUMPDEST"
    },
    "9692": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "POP",
      "path": "20"
    },
    "9693": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "GAS",
      "path": "20"
    },
    "9694": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "CALL",
      "path": "20"
    },
    "9695": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9696": {
      "op": "DUP1"
    },
    "9697": {
      "op": "ISZERO"
    },
    "9698": {
      "op": "PUSH2",
      "value": "0x25EF"
    },
    "9701": {
      "op": "JUMPI"
    },
    "9702": {
      "op": "RETURNDATASIZE"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9705": {
      "op": "DUP1"
    },
    "9706": {
      "op": "RETURNDATACOPY"
    },
    "9707": {
      "op": "RETURNDATASIZE"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9710": {
      "op": "REVERT"
    },
    "9711": {
      "op": "JUMPDEST"
    },
    "9712": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "POP",
      "path": "20"
    },
    "9713": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "POP",
      "path": "20"
    },
    "9714": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "POP",
      "path": "20"
    },
    "9715": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "POP",
      "path": "20"
    },
    "9716": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9718": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9719": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "offset": [
        6277,
        6320
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9722": {
      "op": "DUP2"
    },
    "9723": {
      "op": "LT"
    },
    "9724": {
      "op": "ISZERO"
    },
    "9725": {
      "op": "PUSH2",
      "value": "0x2605"
    },
    "9728": {
      "op": "JUMPI"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9731": {
      "op": "DUP1"
    },
    "9732": {
      "op": "REVERT"
    },
    "9733": {
      "op": "JUMPDEST"
    },
    "9734": {
      "op": "POP"
    },
    "9735": {
      "op": "POP"
    },
    "9736": {
      "fn": "StrategyCurveEURVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        6234,
        6327
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9737": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9738": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9740": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 85
    },
    "9741": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9742": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9743": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "9744": {
      "branch": 130,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9745": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2698"
    },
    "9748": {
      "branch": 130,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9749": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9751": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9758": {
      "op": "SHL"
    },
    "9759": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9760": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9761": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9763": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9764": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9765": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9766": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9768": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9769": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9770": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9771": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "9772": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9773": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9774": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9775": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9776": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9777": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9778": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9779": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9780": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9782": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9783": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9784": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9785": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9786": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9787": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9788": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9790": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9791": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9792": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9793": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9794": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9797": {
      "op": "JUMPDEST"
    },
    "9798": {
      "op": "DUP4"
    },
    "9799": {
      "op": "DUP2"
    },
    "9800": {
      "op": "LT"
    },
    "9801": {
      "op": "ISZERO"
    },
    "9802": {
      "op": "PUSH2",
      "value": "0x265D"
    },
    "9805": {
      "op": "JUMPI"
    },
    "9806": {
      "op": "DUP2"
    },
    "9807": {
      "op": "DUP2"
    },
    "9808": {
      "op": "ADD"
    },
    "9809": {
      "op": "MLOAD"
    },
    "9810": {
      "op": "DUP4"
    },
    "9811": {
      "op": "DUP3"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "op": "MSTORE"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9816": {
      "op": "ADD"
    },
    "9817": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "9820": {
      "op": "JUMP"
    },
    "9821": {
      "op": "JUMPDEST"
    },
    "9822": {
      "op": "POP"
    },
    "9823": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9824": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9825": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9826": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9827": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9828": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9829": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9830": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9831": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9832": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9834": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "9835": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9836": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9837": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x268A"
    },
    "9840": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9841": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9842": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9843": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "9844": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9845": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9846": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9848": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9849": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9851": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "9852": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "9855": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "9856": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "9857": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "9858": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "9859": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9860": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9861": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9863": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "9864": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9865": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9866": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9867": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9868": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9869": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9870": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9871": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "9872": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9874": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9875": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9876": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9877": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "9878": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9879": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9880": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9881": {
      "op": "POP"
    },
    "9882": {
      "op": "POP"
    },
    "9883": {
      "op": "POP"
    },
    "9884": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9885": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "9886": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9887": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9888": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9889": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9891": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 86
    },
    "9892": {
      "branch": 131,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9893": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26EF"
    },
    "9896": {
      "branch": 131,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9897": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9899": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9906": {
      "op": "SHL"
    },
    "9907": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9908": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9909": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9911": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9913": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9914": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9915": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9916": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9917": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9918": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9919": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9920": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "9922": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9923": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9924": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9925": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9926": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9927": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9928": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9929": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9930": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9931": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "9933": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9934": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9935": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9936": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9937": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9938": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9939": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9940": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9941": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9942": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9943": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9944": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9946": {
      "op": "DUP4"
    },
    "9947": {
      "op": "ISZERO"
    },
    "9948": {
      "op": "PUSH2",
      "value": "0x265D"
    },
    "9951": {
      "op": "JUMPI"
    },
    "9952": {
      "op": "DUP2"
    },
    "9953": {
      "op": "DUP2"
    },
    "9954": {
      "op": "ADD"
    },
    "9955": {
      "op": "MLOAD"
    },
    "9956": {
      "op": "DUP4"
    },
    "9957": {
      "op": "DUP3"
    },
    "9958": {
      "op": "ADD"
    },
    "9959": {
      "op": "MSTORE"
    },
    "9960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "PUSH2",
      "value": "0x2645"
    },
    "9966": {
      "op": "JUMP"
    },
    "9967": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9968": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "9969": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9971": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9972": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9973": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9974": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26FB"
    },
    "9977": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9978": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "9979": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9980": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "9981": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "9982": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "op": "POP"
    },
    "9985": {
      "op": "POP"
    },
    "9986": {
      "op": "POP"
    },
    "9987": {
      "op": "POP"
    },
    "9988": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9989": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9990": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 87,
      "value": "0x2717"
    },
    "9993": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10000": {
      "op": "SHL"
    },
    "10001": {
      "op": "SUB"
    },
    "10002": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "10003": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28BD"
    },
    "10006": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10007": {
      "branch": 123,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10008": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2768"
    },
    "10011": {
      "branch": 123,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10012": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10014": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10015": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10022": {
      "op": "SHL"
    },
    "10023": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10024": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10025": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10027": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10029": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10030": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "10031": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10032": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "10034": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "10036": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10037": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "10038": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10039": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "10072": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "10074": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10075": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "10076": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10077": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10078": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10079": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10080": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10081": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10082": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "10083": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "10085": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "10086": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10087": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "10088": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10089": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10091": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "10093": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10100": {
      "op": "SHL"
    },
    "10101": {
      "op": "SUB"
    },
    "10102": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "10103": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10104": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10106": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10107": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10108": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10109": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10110": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10111": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10112": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10114": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "10115": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10116": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10117": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10118": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10119": {
      "op": "JUMPDEST"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10122": {
      "op": "DUP4"
    },
    "10123": {
      "op": "LT"
    },
    "10124": {
      "op": "PUSH2",
      "value": "0x27A6"
    },
    "10127": {
      "op": "JUMPI"
    },
    "10128": {
      "op": "DUP1"
    },
    "10129": {
      "op": "MLOAD"
    },
    "10130": {
      "op": "DUP3"
    },
    "10131": {
      "op": "MSTORE"
    },
    "10132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10134": {
      "op": "NOT"
    },
    "10135": {
      "op": "SWAP1"
    },
    "10136": {
      "op": "SWAP3"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "SWAP2"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10141": {
      "op": "SWAP2"
    },
    "10142": {
      "op": "DUP3"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "SWAP2"
    },
    "10145": {
      "op": "ADD"
    },
    "10146": {
      "op": "PUSH2",
      "value": "0x2787"
    },
    "10149": {
      "op": "JUMP"
    },
    "10150": {
      "op": "JUMPDEST"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10153": {
      "op": "DUP4"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10156": {
      "op": "SUB"
    },
    "10157": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10160": {
      "op": "EXP"
    },
    "10161": {
      "op": "SUB"
    },
    "10162": {
      "op": "DUP1"
    },
    "10163": {
      "op": "NOT"
    },
    "10164": {
      "op": "DUP3"
    },
    "10165": {
      "op": "MLOAD"
    },
    "10166": {
      "op": "AND"
    },
    "10167": {
      "op": "DUP2"
    },
    "10168": {
      "op": "DUP5"
    },
    "10169": {
      "op": "MLOAD"
    },
    "10170": {
      "op": "AND"
    },
    "10171": {
      "op": "DUP1"
    },
    "10172": {
      "op": "DUP3"
    },
    "10173": {
      "op": "OR"
    },
    "10174": {
      "op": "DUP6"
    },
    "10175": {
      "op": "MSTORE"
    },
    "10176": {
      "op": "POP"
    },
    "10177": {
      "op": "POP"
    },
    "10178": {
      "op": "POP"
    },
    "10179": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10180": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10181": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10182": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10183": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10184": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "10185": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10186": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10187": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10188": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10190": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10192": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10193": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10194": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "10195": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "10196": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10197": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "10199": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "10200": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "10201": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "10202": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10203": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10204": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10205": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "10206": {
      "op": "DUP1"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10209": {
      "op": "DUP2"
    },
    "10210": {
      "op": "EQ"
    },
    "10211": {
      "op": "PUSH2",
      "value": "0x2808"
    },
    "10214": {
      "op": "JUMPI"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10217": {
      "op": "MLOAD"
    },
    "10218": {
      "op": "SWAP2"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10222": {
      "op": "NOT"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10225": {
      "op": "RETURNDATASIZE"
    },
    "10226": {
      "op": "ADD"
    },
    "10227": {
      "op": "AND"
    },
    "10228": {
      "op": "DUP3"
    },
    "10229": {
      "op": "ADD"
    },
    "10230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10232": {
      "op": "MSTORE"
    },
    "10233": {
      "op": "RETURNDATASIZE"
    },
    "10234": {
      "op": "DUP3"
    },
    "10235": {
      "op": "MSTORE"
    },
    "10236": {
      "op": "RETURNDATASIZE"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10241": {
      "op": "DUP5"
    },
    "10242": {
      "op": "ADD"
    },
    "10243": {
      "op": "RETURNDATACOPY"
    },
    "10244": {
      "op": "PUSH2",
      "value": "0x280D"
    },
    "10247": {
      "op": "JUMP"
    },
    "10248": {
      "op": "JUMPDEST"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10251": {
      "op": "SWAP2"
    },
    "10252": {
      "op": "POP"
    },
    "10253": {
      "op": "JUMPDEST"
    },
    "10254": {
      "op": "POP"
    },
    "10255": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10256": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10257": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10258": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "10259": {
      "branch": 124,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 88
    },
    "10260": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2864"
    },
    "10263": {
      "branch": 124,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10264": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10266": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10267": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10274": {
      "op": "SHL"
    },
    "10275": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10276": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10277": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10279": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10281": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10282": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "10283": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10284": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10285": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10286": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "10288": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10289": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "10290": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10291": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "10324": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "10326": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10327": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "10328": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10329": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10330": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10331": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10332": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10333": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10334": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "10335": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "10337": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "10338": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10339": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "10340": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "10341": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10342": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10343": {
      "branch": 125,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "10344": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A0"
    },
    "10347": {
      "branch": 125,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10348": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 89
    },
    "10349": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10350": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10352": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "10353": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10354": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10357": {
      "op": "DUP2"
    },
    "10358": {
      "op": "LT"
    },
    "10359": {
      "op": "ISZERO"
    },
    "10360": {
      "op": "PUSH2",
      "value": "0x2880"
    },
    "10363": {
      "op": "JUMPI"
    },
    "10364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10366": {
      "op": "DUP1"
    },
    "10367": {
      "op": "REVERT"
    },
    "10368": {
      "op": "JUMPDEST"
    },
    "10369": {
      "op": "POP"
    },
    "10370": {
      "branch": 126,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10371": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A0"
    },
    "10374": {
      "branch": 126,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "10375": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10377": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10384": {
      "op": "SHL"
    },
    "10385": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10386": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10387": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "10389": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "10390": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10391": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10392": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10394": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "10395": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10396": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10397": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "10398": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "10399": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10400": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "10402": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "10403": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "10404": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "10406": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "10407": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10408": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x293B"
    },
    "10411": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "10413": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10414": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "10415": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10417": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "10418": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10419": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "10420": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "10421": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "10423": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "10424": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "10425": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "10426": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "10427": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10428": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "10429": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10430": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10432": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10433": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "10434": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "10467": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 90
    },
    "10468": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10469": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "10470": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10471": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10472": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10473": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28F1"
    },
    "10476": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10477": {
      "op": "POP"
    },
    "10478": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10479": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10480": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10481": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10482": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10483": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10484": {
      "op": "POP"
    },
    "10485": {
      "op": "POP"
    },
    "10486": {
      "op": "POP"
    },
    "10487": {
      "op": "POP"
    },
    "10488": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "ec5f5569fc19cfbc56ccf5bfd38b852011c61f11",
  "source": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/IVoterProxy.sol\";\n\ncontract StrategyCurveEURVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0x194eBd173F6cDacE046C53eACcE9B953F28411d1);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n\n    address public constant curve = address(0x0Ce6a5fF5217e38315f87032CF90686C96627CAA);\n    address public constant gauge = address(0x90Bb609649E0451E5aD952683D64BD2d1f245840);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    address public constant uniswap = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    address public constant sushiswap = address(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\n    address public constant eurs = address(0xdB25f211AB05b1c97D595516F45794528a807ad8);\n    address public constant usdc = address(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> usdc <> eurs route\n    address public constant snx = address(0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F);\n\n    uint256 public keepCRV = 1000;\n    uint256 public treasuryFee = 1000;\n    uint256 public strategistReward = 1000;\n    uint256 public withdrawalFee = 50;\n    uint256 public constant FEE_DENOMINATOR = 10000;\n\n    address public proxy;\n    address public dex;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n    address public keeper;\n\n    uint256 public earned; // lifetime strategy earnings denominated in `want` token\n\n    event Harvested(uint256 wantEarned, uint256 lifetimeEarned);\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        keeper = msg.sender;\n        controller = _controller;\n        // standardize constructor\n        proxy = address(0x9a3a03C614dc467ACC3e81275468e033c98d960E);\n        dex = sushiswap;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveEURVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        strategist = _strategist;\n    }\n\n    function setKeeper(address _keeper) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        keeper = _keeper;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setTreasuryFee(uint256 _treasuryFee) external {\n        require(msg.sender == governance, \"!governance\");\n        treasuryFee = _treasuryFee;\n    }\n\n    function setStrategistReward(uint256 _strategistReward) external {\n        require(msg.sender == governance, \"!governance\");\n        strategistReward = _strategistReward;\n    }\n\n    function setProxy(address _proxy) external {\n        require(msg.sender == governance, \"!governance\");\n        proxy = _proxy;\n    }\n\n    function switchDex(bool isUniswap) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        if (isUniswap) {\n            dex = uniswap;\n        } else {\n            dex = sushiswap;\n        }\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            IVoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(eurs != address(_asset), \"eurs\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(FEE_DENOMINATOR);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return IVoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        IVoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == keeper || msg.sender == strategist || msg.sender == governance, \"!keepers\");\n        IVoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(FEE_DENOMINATOR);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(dex, 0);\n            IERC20(crv).safeApprove(dex, _crv);\n\n            address[] memory path = new address[](3);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = usdc;\n\n            Uni(dex).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        IVoterProxy(proxy).claimRewards(gauge, snx);\n        uint256 _snx = IERC20(snx).balanceOf(address(this));\n        if (_snx > 0) {\n            IERC20(snx).safeApprove(dex, 0);\n            IERC20(snx).safeApprove(dex, _snx);\n\n            address[] memory path = new address[](3);\n            path[0] = snx;\n            path[1] = weth;\n            path[2] = usdc;\n\n            Uni(dex).swapExactTokensForTokens(_snx, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _usdc = IERC20(usdc).balanceOf(address(this));\n        if (_usdc > 0) {\n            IERC20(usdc).safeApprove(uniswap, 0);\n            IERC20(usdc).safeApprove(uniswap, _snx);\n\n            address[] memory path = new address[](2);\n            path[0] = usdc;\n            path[1] = eurs;\n\n            Uni(uniswap).swapExactTokensForTokens(_usdc, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _eurs = IERC20(eurs).balanceOf(address(this));\n        if (_eurs > 0) {\n            IERC20(eurs).safeApprove(curve, 0);\n            IERC20(eurs).safeApprove(curve, _eurs);\n            ICurveFi(curve).add_liquidity([_eurs, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(treasuryFee).div(FEE_DENOMINATOR);\n            uint256 _reward = _want.mul(strategistReward).div(FEE_DENOMINATOR);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            IERC20(want).safeTransfer(strategist, _reward);\n            deposit();\n        }\n        IVoterProxy(proxy).lock();\n        earned = earned.add(_want);\n        emit Harvested(_want, earned);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return IVoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "565:8901:20:-;;;1754:4;1729:29;;1793:4;1764:33;;1837:4;1803:38;;1878:2;1847:33;;2264:305;8:9:-1;5:2;;;30:1;27;20:12;5:2;2264:305:20;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2264:305:20;2314:10;:23;;-1:-1:-1;;;;;;2314:23:20;;;2327:10;2314:23;;;;;;2347:10;:23;;;;;;;;2380:6;:19;;;;;;;;;;2409:10;:24;;-1:-1:-1;;;;;2409:24:20;;;;;;;;;;;;;2478:5;:59;;;;2494:42;2478:59;;;-1:-1:-1;2547:15:20;;;;;1282:42;2547:15;;;565:8901;;;;;;",
  "sourcePath": "contracts/strategies/StrategyCurveEURVoterProxy.sol",
  "type": "contract"
}