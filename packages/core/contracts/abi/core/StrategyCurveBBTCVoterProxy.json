{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lifetimeEarned",
          "type": "uint256"
        }
      ],
      "name": "Harvested",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_strategistReward",
          "type": "uint256"
        }
      ],
      "name": "setStrategistReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_treasuryFee",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategistReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sushiswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isUniswap",
          "type": "bool"
        }
      ],
      "name": "switchDex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wbtc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "16": "contracts/strategies/StrategyCurveBBTCVoterProxy.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "55": "interfaces/curve/Curve.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "64": "interfaces/uniswap/Uni.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "75": "interfaces/yearn/IVoterProxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveBBTCVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveBBTCVoterProxy": [
        5364
      ]
    },
    "id": 5365,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4445,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:24:16"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 4446,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 35493,
        "src": "64:58:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 4447,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 35424,
        "src": "123:53:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 4448,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 35788,
        "src": "177:53:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 4449,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 35713,
        "src": "231:61:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 4450,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36182,
        "src": "294:48:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 4451,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36428,
        "src": "343:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 4452,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36436,
        "src": "386:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 4453,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36471,
        "src": "429:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 4454,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36391,
        "src": "472:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVoterProxy.sol",
        "file": "../../interfaces/yearn/IVoterProxy.sol",
        "id": 4455,
        "nodeType": "ImportDirective",
        "scope": 5365,
        "sourceUnit": 36604,
        "src": "515:48:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5364,
        "linearizedBaseContracts": [
          5364
        ],
        "name": "StrategyCurveBBTCVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4458,
            "libraryName": {
              "contractScope": null,
              "id": 4456,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35712,
              "src": "614:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$35712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "608:27:16",
            "typeName": {
              "contractScope": null,
              "id": 4457,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "628:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 4461,
            "libraryName": {
              "contractScope": null,
              "id": 4459,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "646:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "640:26:16",
            "typeName": {
              "id": 4460,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 4464,
            "libraryName": {
              "contractScope": null,
              "id": 4462,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "677:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "671:27:16",
            "typeName": {
              "id": 4463,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 4469,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "704:82:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307834313065334538366566343237653330423932333534393731343338383166373137643933633241",
                  "id": 4467,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "743:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x410e3E86ef427e30B9235497143881f717d93c2A"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4466,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "735:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4468,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "735:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4474,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "792:81:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4470,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "792:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 4472,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "830:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4471,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "822:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4473,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "822:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4479,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "880:83:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4475,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843343562324545653665303963413137364361336242356637654565374334376246393363373536",
                  "id": 4477,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "920:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC45b2EEe6e09cA176Ca3bB5f7eEe7C47bF93c756"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4476,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "912:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4478,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4484,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "969:83:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4480,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "969:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864466337416446613636346230383736376237333564453238663945383463643330343932616545",
                  "id": 4482,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1009:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdFc7AdFa664b08767b735dE28f9E84cd30492aeE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4481,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1001:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4483,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1001:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4489,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1058:83:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4485,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1058:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 4487,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1098:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4486,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1090:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1090:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4494,
            "name": "uniswap",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1148:85:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4490,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1148:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 4492,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1190:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4491,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1182:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1182:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4499,
            "name": "sushiswap",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1239:87:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4495,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1239:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864396531634531376632363431663234614538333633376162363661326363613943333738423946",
                  "id": 4497,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1283:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4496,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1275:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4498,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1275:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4504,
            "name": "wbtc",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1332:82:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4500,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1332:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
                  "id": 4502,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1371:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4501,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1363:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4503,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1363:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4509,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1420:82:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4505,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 4507,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1459:42:16",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4506,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1451:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4508,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1451:51:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4512,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1547:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4510,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1547:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 4511,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1572:4:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4515,
            "name": "treasuryFee",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1582:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4513,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1582:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030",
              "id": 4514,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1611:3:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4518,
            "name": "strategistReward",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1620:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4516,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1620:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 4517,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1654:2:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4521,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1662:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4519,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1662:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 4520,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1693:1:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4524,
            "name": "FEE_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1700:47:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4522,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1700:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 4523,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1742:5:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4526,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1754:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4525,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1754:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4528,
            "name": "dex",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1780:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4527,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4530,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1805:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4529,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1805:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4532,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1836:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4531,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1836:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4534,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1867:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4533,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4536,
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1898:21:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4535,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1898:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4538,
            "name": "earned",
            "nodeType": "VariableDeclaration",
            "scope": 5364,
            "src": "1926:21:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4537,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1926:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4544,
            "name": "Harvested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4540,
                  "indexed": false,
                  "name": "wantEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 4544,
                  "src": "2028:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4542,
                  "indexed": false,
                  "name": "lifetimeEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 4544,
                  "src": "2048:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2027:44:16"
            },
            "src": "2012:60:16"
          },
          {
            "body": {
              "id": 4578,
              "nodeType": "Block",
              "src": "2118:265:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4549,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4530,
                      "src": "2128:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4550,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2141:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2141:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2128:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4553,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:23:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4554,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4534,
                      "src": "2161:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4555,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2174:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2174:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2161:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4558,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:23:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4559,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4536,
                      "src": "2194:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4560,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2203:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2203:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2194:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4563,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:19:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4564,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4532,
                      "src": "2223:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4565,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4546,
                      "src": "2236:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2223:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4567,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:24:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4568,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4526,
                      "src": "2292:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307843313741446639343966353234323133613534303630396333383630333544374436383542313646",
                          "id": 4570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2308:42:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xC17ADf949f524213a540609c386035D7D685B16F"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2300:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2300:51:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2292:59:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4573,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:59:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4574,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4528,
                      "src": "2361:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4575,
                      "name": "sushiswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4499,
                      "src": "2367:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2361:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4577,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:15:16"
                }
              ]
            },
            "documentation": null,
            "id": 4579,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4546,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 4579,
                  "src": "2090:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2089:21:16"
            },
            "returnParameters": {
              "id": 4548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:16"
            },
            "scope": 5364,
            "src": "2078:305:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4586,
              "nodeType": "Block",
              "src": "2446:53:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5374726174656779437572766542425443566f74657250726f7879",
                    "id": 4584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2463:29:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1affffa4e75e3e1fa3c4b04fe84fa28d7becd08c83de52e45581eca7e2a769ad",
                      "typeString": "literal_string \"StrategyCurveBBTCVoterProxy\""
                    },
                    "value": "StrategyCurveBBTCVoterProxy"
                  },
                  "functionReturnParameters": 4583,
                  "id": 4585,
                  "nodeType": "Return",
                  "src": "2456:36:16"
                }
              ]
            },
            "documentation": null,
            "id": 4587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2405:2:16"
            },
            "returnParameters": {
              "id": 4583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4582,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4587,
                  "src": "2431:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4581,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2430:15:16"
            },
            "scope": 5364,
            "src": "2389:110:16",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4609,
              "nodeType": "Block",
              "src": "2558:127:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4593,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2576:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2576:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4595,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4534,
                            "src": "2590:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2576:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4597,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2604:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2604:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4599,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "2618:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2604:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2576:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 4602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2630:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 4592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2568:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:76:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4604,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:76:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4605,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4534,
                      "src": "2654:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4606,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "2667:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2654:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4608,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:24:16"
                }
              ]
            },
            "documentation": null,
            "id": 4610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4589,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 4610,
                  "src": "2528:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2527:21:16"
            },
            "returnParameters": {
              "id": 4591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2558:0:16"
            },
            "scope": 5364,
            "src": "2505:180:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4632,
              "nodeType": "Block",
              "src": "2736:119:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4616,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2754:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2754:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4618,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4534,
                            "src": "2768:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2754:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4620,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2782:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2782:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4622,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "2796:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2782:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2754:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 4625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2808:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 4615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2746:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:76:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4627,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:76:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4628,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4536,
                      "src": "2832:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4629,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4612,
                      "src": "2841:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2832:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4631,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:16:16"
                }
              ]
            },
            "documentation": null,
            "id": 4633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4612,
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 4633,
                  "src": "2710:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2709:17:16"
            },
            "returnParameters": {
              "id": 4614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2736:0:16"
            },
            "scope": 5364,
            "src": "2691:164:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4650,
              "nodeType": "Block",
              "src": "2908:93:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4639,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2926:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2926:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4641,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "2940:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2926:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2952:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2918:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2918:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4645,
                  "nodeType": "ExpressionStatement",
                  "src": "2918:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4646,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4512,
                      "src": "2976:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4647,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "2986:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2976:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4649,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:18:16"
                }
              ]
            },
            "documentation": null,
            "id": 4651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4635,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 4651,
                  "src": "2881:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2881:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2880:18:16"
            },
            "returnParameters": {
              "id": 4637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2908:0:16"
            },
            "scope": 5364,
            "src": "2861:140:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4668,
              "nodeType": "Block",
              "src": "3066:105:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4657,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3084:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3084:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4659,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "3098:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3084:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3110:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3076:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4663,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4664,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4521,
                      "src": "3134:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4665,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4653,
                      "src": "3150:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3134:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4667,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:30:16"
                }
              ]
            },
            "documentation": null,
            "id": 4669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4653,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "3033:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3033:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3032:24:16"
            },
            "returnParameters": {
              "id": 4655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:16"
            },
            "scope": 5364,
            "src": "3007:164:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4686,
              "nodeType": "Block",
              "src": "3232:101:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4675,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3250:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3250:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4677,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "3264:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3250:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3242:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4681,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4682,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4515,
                      "src": "3300:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4683,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4671,
                      "src": "3314:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3300:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4685,
                  "nodeType": "ExpressionStatement",
                  "src": "3300:26:16"
                }
              ]
            },
            "documentation": null,
            "id": 4687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTreasuryFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4671,
                  "name": "_treasuryFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4687,
                  "src": "3201:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3201:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3200:22:16"
            },
            "returnParameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:16"
            },
            "scope": 5364,
            "src": "3177:156:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4704,
              "nodeType": "Block",
              "src": "3404:111:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3422:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3422:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4695,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "3436:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3422:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3448:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3414:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4700,
                      "name": "strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4518,
                      "src": "3472:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4701,
                      "name": "_strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4689,
                      "src": "3491:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3472:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4703,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:36:16"
                }
              ]
            },
            "documentation": null,
            "id": 4705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategistReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4689,
                  "name": "_strategistReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 4705,
                  "src": "3368:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3367:27:16"
            },
            "returnParameters": {
              "id": 4691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3404:0:16"
            },
            "scope": 5364,
            "src": "3339:176:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4722,
              "nodeType": "Block",
              "src": "3564:89:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4711,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3582:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3582:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4713,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "3596:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3582:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3608:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3574:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4717,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4718,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4526,
                      "src": "3632:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4719,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4707,
                      "src": "3640:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3632:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4721,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:14:16"
                }
              ]
            },
            "documentation": null,
            "id": 4723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4707,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 4723,
                  "src": "3539:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3538:16:16"
            },
            "returnParameters": {
              "id": 4709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3564:0:16"
            },
            "scope": 5364,
            "src": "3521:132:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4753,
              "nodeType": "Block",
              "src": "3703:201:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4729,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3721:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3721:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4731,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4534,
                            "src": "3735:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3721:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4733,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3749:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3749:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4735,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "3763:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3749:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3721:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3775:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 4728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3713:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3713:76:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "3713:76:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4741,
                    "name": "isUniswap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4725,
                    "src": "3803:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4751,
                    "nodeType": "Block",
                    "src": "3858:40:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4747,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4528,
                            "src": "3872:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4748,
                            "name": "sushiswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4499,
                            "src": "3878:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3872:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4750,
                        "nodeType": "ExpressionStatement",
                        "src": "3872:15:16"
                      }
                    ]
                  },
                  "id": 4752,
                  "nodeType": "IfStatement",
                  "src": "3799:99:16",
                  "trueBody": {
                    "id": 4746,
                    "nodeType": "Block",
                    "src": "3814:38:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4742,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4528,
                            "src": "3828:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4743,
                            "name": "uniswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4494,
                            "src": "3834:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3828:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4745,
                        "nodeType": "ExpressionStatement",
                        "src": "3828:13:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "switchDex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4725,
                  "name": "isUniswap",
                  "nodeType": "VariableDeclaration",
                  "scope": 4754,
                  "src": "3678:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3677:16:16"
            },
            "returnParameters": {
              "id": 4727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3703:0:16"
            },
            "scope": 5364,
            "src": "3659:245:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4789,
              "nodeType": "Block",
              "src": "3936:211:16",
              "statements": [
                {
                  "assignments": [
                    4758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4758,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 4789,
                      "src": "3946:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4757,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3946:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4767,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4764,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "3993:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 4763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3985:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3985:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4760,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "3969:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4759,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3962:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3962:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "3962:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3946:53:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4768,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4758,
                      "src": "4013:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4021:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4013:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4788,
                  "nodeType": "IfStatement",
                  "src": "4009:132:16",
                  "trueBody": {
                    "id": 4787,
                    "nodeType": "Block",
                    "src": "4024:117:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4775,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4526,
                              "src": "4064:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4776,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4758,
                              "src": "4071:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4772,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4469,
                                  "src": "4045:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4771,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "4038:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4038:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "4038:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4038:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4778,
                        "nodeType": "ExpressionStatement",
                        "src": "4038:39:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4783,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4484,
                              "src": "4118:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4784,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4469,
                              "src": "4125:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4780,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4526,
                                  "src": "4103:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4779,
                                "name": "IVoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36603,
                                "src": "4091:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                                  "typeString": "type(contract IVoterProxy)"
                                }
                              },
                              "id": 4781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4091:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                                "typeString": "contract IVoterProxy"
                              }
                            },
                            "id": 4782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36587,
                            "src": "4091:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 4785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4091:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4786,
                        "nodeType": "ExpressionStatement",
                        "src": "4091:39:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3926:2:16"
            },
            "returnParameters": {
              "id": 4756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3936:0:16"
            },
            "scope": 5364,
            "src": "3910:237:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4848,
              "nodeType": "Block",
              "src": "4295:314:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4313:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4313:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4800,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4532,
                          "src": "4327:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4313:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4305:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4305:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4804,
                  "nodeType": "ExpressionStatement",
                  "src": "4305:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4806,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4469,
                          "src": "4371:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4808,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4792,
                              "src": "4387:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4379:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4379:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4371:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 4811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:6:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 4805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4363:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4363:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4813,
                  "nodeType": "ExpressionStatement",
                  "src": "4363:40:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4815,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4474,
                          "src": "4421:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4817,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4792,
                              "src": "4436:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4428:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4428:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4421:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 4820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4445:5:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 4814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4413:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4413:38:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4822,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:38:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4824,
                          "name": "wbtc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4504,
                          "src": "4469:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4826,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4792,
                              "src": "4485:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4477:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4477:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4469:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77627463",
                        "id": 4829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4494:6:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59e50295208418569657dcdbf79b85731eff3be260696ead2b44b1c097916a6c",
                          "typeString": "literal_string \"wbtc\""
                        },
                        "value": "wbtc"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59e50295208418569657dcdbf79b85731eff3be260696ead2b44b1c097916a6c",
                          "typeString": "literal_string \"wbtc\""
                        }
                      ],
                      "id": 4823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4461:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4831,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:40:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4832,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4795,
                      "src": "4511:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4836,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38012,
                              "src": "4546:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                "typeString": "contract StrategyCurveBBTCVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                "typeString": "contract StrategyCurveBBTCVoterProxy"
                              }
                            ],
                            "id": 4835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4538:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4833,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4792,
                          "src": "4521:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "4521:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4521:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4511:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4840,
                  "nodeType": "ExpressionStatement",
                  "src": "4511:41:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4844,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4532,
                        "src": "4582:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4845,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4795,
                        "src": "4594:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4841,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4792,
                        "src": "4562:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4562:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4562:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4847,
                  "nodeType": "ExpressionStatement",
                  "src": "4562:40:16"
                }
              ]
            },
            "documentation": null,
            "id": 4849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4792,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 4849,
                  "src": "4245:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$35492",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4791,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 35492,
                    "src": "4245:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35492",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4244:15:16"
            },
            "returnParameters": {
              "id": 4796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4795,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4849,
                  "src": "4278:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4277:17:16"
            },
            "scope": 5364,
            "src": "4227:382:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4947,
              "nodeType": "Block",
              "src": "4728:665:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4855,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4746:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4746:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4857,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4532,
                          "src": "4760:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4746:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4772:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4738:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:48:16"
                },
                {
                  "assignments": [
                    4863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4863,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 4947,
                      "src": "4796:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4796:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4869,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "4846:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 4868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4838:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4838:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4865,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "4822:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4864,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4815:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4815:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "4815:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4815:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4796:56:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4873,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4863,
                      "src": "4866:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4874,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "4877:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4866:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4893,
                  "nodeType": "IfStatement",
                  "src": "4862:140:16",
                  "trueBody": {
                    "id": 4892,
                    "nodeType": "Block",
                    "src": "4886:116:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4876,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4851,
                            "src": "4900:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4880,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4863,
                                    "src": "4936:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4878,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4851,
                                    "src": "4924:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35279,
                                  "src": "4924:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4924:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4877,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4965,
                              "src": "4910:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 4882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4910:36:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4900:46:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4884,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:46:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4885,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4851,
                            "src": "4960:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4888,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4863,
                                "src": "4982:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4886,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4851,
                                "src": "4970:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35263,
                              "src": "4970:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4970:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4960:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4891,
                        "nodeType": "ExpressionStatement",
                        "src": "4960:31:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4895,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 4947,
                      "src": "5012:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5012:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4903,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4901,
                        "name": "FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4524,
                        "src": "5058:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4898,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4521,
                            "src": "5039:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4896,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4851,
                            "src": "5027:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "5027:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5027:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "5027:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5027:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5012:62:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4909,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4532,
                                "src": "5123:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4908,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36181,
                              "src": "5111:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 4910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5111:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$36181",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 4911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36157,
                          "src": "5111:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5111:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4913,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4895,
                        "src": "5146:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4905,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "5092:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4904,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5085:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5085:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5085:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5085:66:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4915,
                  "nodeType": "ExpressionStatement",
                  "src": "5085:66:16"
                },
                {
                  "assignments": [
                    4917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4917,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 4947,
                      "src": "5161:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4916,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5161:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4926,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4923,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "5217:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5209:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5209:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4919,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4532,
                            "src": "5190:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4918,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "5178:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 4920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5178:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 4921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "5178:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 4925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5178:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5161:62:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4928,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4917,
                          "src": "5241:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5259:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5251:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5251:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5241:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 4933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5263:8:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 4927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5233:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5233:39:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4935,
                  "nodeType": "ExpressionStatement",
                  "src": "5233:39:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4940,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4917,
                        "src": "5360:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4943,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4895,
                            "src": "5380:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4941,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4851,
                            "src": "5368:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35279,
                          "src": "5368:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5368:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4937,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "5341:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4936,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5334:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5334:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5334:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:52:16"
                }
              ]
            },
            "documentation": null,
            "id": 4948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4851,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4948,
                  "src": "4702:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4701:17:16"
            },
            "returnParameters": {
              "id": 4853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4728:0:16"
            },
            "scope": 5364,
            "src": "4684:709:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4964,
              "nodeType": "Block",
              "src": "5466:73:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4959,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "5511:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4960,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "5518:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4961,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4950,
                        "src": "5524:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4956,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4526,
                            "src": "5495:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4955,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "5483:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 4957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5483:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 4958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36564,
                      "src": "5483:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 4962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:49:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4954,
                  "id": 4963,
                  "nodeType": "Return",
                  "src": "5476:56:16"
                }
              ]
            },
            "documentation": null,
            "id": 4965,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4950,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4965,
                  "src": "5422:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5422:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5421:17:16"
            },
            "returnParameters": {
              "id": 4954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4953,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4965,
                  "src": "5457:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5457:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5456:9:16"
            },
            "scope": 5364,
            "src": "5399:140:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5020,
              "nodeType": "Block",
              "src": "5670:373:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4971,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "5688:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5688:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4973,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4532,
                          "src": "5702:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5688:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5714:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5680:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5680:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4977,
                  "nodeType": "ExpressionStatement",
                  "src": "5680:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4978,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5033,
                      "src": "5738:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5738:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4980,
                  "nodeType": "ExpressionStatement",
                  "src": "5738:14:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4981,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4968,
                      "src": "5763:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4987,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38012,
                              "src": "5804:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                "typeString": "contract StrategyCurveBBTCVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                "typeString": "contract StrategyCurveBBTCVoterProxy"
                              }
                            ],
                            "id": 4986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5796:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5796:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4983,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4469,
                              "src": "5780:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4982,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35492,
                            "src": "5773:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5773:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "5773:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5773:37:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5763:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4991,
                  "nodeType": "ExpressionStatement",
                  "src": "5763:47:16"
                },
                {
                  "assignments": [
                    4993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4993,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 5020,
                      "src": "5821:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4992,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5821:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5002,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4999,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "5877:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5869:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5869:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4995,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4532,
                            "src": "5850:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4994,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "5838:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 4996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5838:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 4997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "5838:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 5001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5838:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5821:62:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5004,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4993,
                          "src": "5901:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5919:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5911:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5901:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 5009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5923:8:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 5003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5893:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5893:39:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5011,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:39:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5016,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "6020:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5017,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4968,
                        "src": "6028:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5013,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "6001:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5012,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5994:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5994:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5994:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5019,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:42:16"
                }
              ]
            },
            "documentation": null,
            "id": 5021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5632:2:16"
            },
            "returnParameters": {
              "id": 4969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4968,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 5021,
                  "src": "5653:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5653:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5652:17:16"
            },
            "scope": 5364,
            "src": "5612:431:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5032,
              "nodeType": "Block",
              "src": "6082:60:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5028,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "6123:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5029,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "6130:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5025,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4526,
                            "src": "6104:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5024,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "6092:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 5026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6092:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 5027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36580,
                      "src": "6092:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 5030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6092:43:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5031,
                  "nodeType": "ExpressionStatement",
                  "src": "6092:43:16"
                }
              ]
            },
            "documentation": null,
            "id": 5033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6070:2:16"
            },
            "returnParameters": {
              "id": 5023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6082:0:16"
            },
            "scope": 5364,
            "src": "6049:93:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5285,
              "nodeType": "Block",
              "src": "6174:1536:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37932,
                                "src": "6192:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6192:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5039,
                              "name": "keeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4536,
                              "src": "6206:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6192:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 5044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5041,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37932,
                                "src": "6216:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6216:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5043,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4534,
                              "src": "6230:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6216:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6192:48:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5046,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "6244:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6244:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5048,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "6258:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6244:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6192:76:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "216b656570657273",
                        "id": 5051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6270:10:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        },
                        "value": "!keepers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_704bcba45701ea2fb1e66234bb2d9c591f079ab263f453f4b6183eed0cd0e032",
                          "typeString": "literal_string \"!keepers\""
                        }
                      ],
                      "id": 5036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6184:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6184:97:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5053,
                  "nodeType": "ExpressionStatement",
                  "src": "6184:97:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5058,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "6318:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5055,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4526,
                            "src": "6303:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5054,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "6291:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 5056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6291:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 5057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36592,
                      "src": "6291:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 5059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6291:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5060,
                  "nodeType": "ExpressionStatement",
                  "src": "6291:33:16"
                },
                {
                  "assignments": [
                    5062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5062,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 5285,
                      "src": "6334:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5061,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6334:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5071,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5068,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "6379:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 5067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6371:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6371:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5064,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4474,
                            "src": "6356:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5063,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6349:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6349:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "6349:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6349:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6334:51:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5072,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5062,
                      "src": "6399:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6406:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6399:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5163,
                  "nodeType": "IfStatement",
                  "src": "6395:524:16",
                  "trueBody": {
                    "id": 5162,
                    "nodeType": "Block",
                    "src": "6409:510:16",
                    "statements": [
                      {
                        "assignments": [
                          5076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5076,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 5162,
                            "src": "6423:16:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5075,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6423:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5084,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5082,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4524,
                              "src": "6464:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5079,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4512,
                                  "src": "6451:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5077,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5062,
                                  "src": "6442:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "6442:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6442:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "6442:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6423:57:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5089,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4489,
                              "src": "6519:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5090,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5076,
                              "src": "6526:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5086,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4474,
                                  "src": "6501:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5085,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6494:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6494:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "6494:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6494:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5092,
                        "nodeType": "ExpressionStatement",
                        "src": "6494:41:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5093,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5062,
                            "src": "6549:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5096,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5076,
                                "src": "6565:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 5094,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5062,
                                "src": "6556:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35279,
                              "src": "6556:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6556:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6549:25:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5099,
                        "nodeType": "ExpressionStatement",
                        "src": "6549:25:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5104,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4528,
                              "src": "6613:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6618:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5101,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4474,
                                  "src": "6596:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5100,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6589:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6589:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6589:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6589:31:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5107,
                        "nodeType": "ExpressionStatement",
                        "src": "6589:31:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5112,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4528,
                              "src": "6658:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5113,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5062,
                              "src": "6663:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5109,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4474,
                                  "src": "6641:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5108,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6634:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6634:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6634:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6634:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5115,
                        "nodeType": "ExpressionStatement",
                        "src": "6634:34:16"
                      },
                      {
                        "assignments": [
                          5119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5119,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 5162,
                            "src": "6683:21:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5117,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6683:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 5118,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6683:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5125,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 5123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6721:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 5122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6707:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5120,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6711:7:16",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 5121,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6711:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 5124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6707:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6683:40:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5126,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5119,
                              "src": "6737:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5128,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6742:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6737:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5129,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4474,
                            "src": "6747:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6737:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5131,
                        "nodeType": "ExpressionStatement",
                        "src": "6737:13:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5132,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5119,
                              "src": "6764:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5134,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 5133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6769:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6764:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5135,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4509,
                            "src": "6774:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6764:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5137,
                        "nodeType": "ExpressionStatement",
                        "src": "6764:14:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5138,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5119,
                              "src": "6792:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5140,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 5139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6797:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6792:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5141,
                            "name": "wbtc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "6802:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6792:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5143,
                        "nodeType": "ExpressionStatement",
                        "src": "6792:14:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5148,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5062,
                              "src": "6855:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 5150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6869:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 5149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6861:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 5151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6861:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5152,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5119,
                              "src": "6873:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5154,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38012,
                                  "src": "6887:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                    "typeString": "contract StrategyCurveBBTCVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                                    "typeString": "contract StrategyCurveBBTCVoterProxy"
                                  }
                                ],
                                "id": 5153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6879:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 5155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6879:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 5158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6902:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5156,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37934,
                                  "src": "6894:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35263,
                                "src": "6894:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6894:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5145,
                                  "name": "dex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4528,
                                  "src": "6825:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5144,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36470,
                                "src": "6821:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$36470_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 5146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6821:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$36470",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 5147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36469,
                            "src": "6821:33:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 5160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6821:87:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5161,
                        "nodeType": "ExpressionStatement",
                        "src": "6821:87:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5165,
                      "name": "_wbtc",
                      "nodeType": "VariableDeclaration",
                      "scope": 5285,
                      "src": "6928:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6928:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5174,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "6975:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 5170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6967:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6967:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5167,
                            "name": "wbtc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "6951:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5166,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6944:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6944:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "6944:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6944:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6928:53:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5175,
                      "name": "_wbtc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5165,
                      "src": "6995:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7003:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6995:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5207,
                  "nodeType": "IfStatement",
                  "src": "6991:190:16",
                  "trueBody": {
                    "id": 5206,
                    "nodeType": "Block",
                    "src": "7006:175:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5182,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4479,
                              "src": "7045:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7052:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5179,
                                  "name": "wbtc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4504,
                                  "src": "7027:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5178,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7020:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7020:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7020:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7020:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5185,
                        "nodeType": "ExpressionStatement",
                        "src": "7020:34:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5190,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4479,
                              "src": "7093:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5191,
                              "name": "_wbtc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5165,
                              "src": "7100:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5187,
                                  "name": "wbtc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4504,
                                  "src": "7075:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5186,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7068:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7068:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "7068:24:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7068:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5193,
                        "nodeType": "ExpressionStatement",
                        "src": "7068:38:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 5198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7151:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 5199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7154:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 5200,
                                  "name": "_wbtc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5165,
                                  "src": "7157:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 5201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7164:1:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 5202,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7150:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7168:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5195,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4479,
                                  "src": "7129:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5194,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36380,
                                "src": "7120:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$36380_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 5196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7120:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$36380",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 5197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36312,
                            "src": "7120:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[4] memory,uint256) external"
                            }
                          },
                          "id": 5204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7120:50:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5205,
                        "nodeType": "ExpressionStatement",
                        "src": "7120:50:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5209,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 5285,
                      "src": "7190:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7190:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5215,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "7237:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 5214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7229:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7229:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5211,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "7213:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5210,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "7206:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7206:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "7206:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7190:53:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5219,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5209,
                      "src": "7257:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7265:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7257:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5266,
                  "nodeType": "IfStatement",
                  "src": "7253:341:16",
                  "trueBody": {
                    "id": 5265,
                    "nodeType": "Block",
                    "src": "7268:326:16",
                    "statements": [
                      {
                        "assignments": [
                          5223
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5223,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 5265,
                            "src": "7282:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5222,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7282:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5231,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5229,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4524,
                              "src": "7324:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5226,
                                  "name": "treasuryFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4515,
                                  "src": "7307:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5224,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5209,
                                  "src": "7297:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "7297:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7297:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "7297:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7297:43:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7282:58:16"
                      },
                      {
                        "assignments": [
                          5233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5233,
                            "name": "_reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 5265,
                            "src": "7354:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5232,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7354:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5241,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5239,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4524,
                              "src": "7404:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5236,
                                  "name": "strategistReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4518,
                                  "src": "7382:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5234,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5209,
                                  "src": "7372:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "7372:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7372:27:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "7372:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7372:48:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7354:66:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 5247,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4532,
                                      "src": "7472:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5246,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36181,
                                    "src": "7460:11:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 5248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7460:23:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$36181",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 5249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36157,
                                "src": "7460:31:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 5250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7460:33:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5251,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "7495:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5243,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4469,
                                  "src": "7441:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5242,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7434:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7434:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "7434:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7434:66:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5253,
                        "nodeType": "ExpressionStatement",
                        "src": "7434:66:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5258,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4534,
                              "src": "7540:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5259,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5233,
                              "src": "7552:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5255,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4469,
                                  "src": "7521:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5254,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "7514:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7514:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "7514:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7514:46:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5261,
                        "nodeType": "ExpressionStatement",
                        "src": "7514:46:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5262,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4790,
                            "src": "7574:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 5263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7574:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5264,
                        "nodeType": "ExpressionStatement",
                        "src": "7574:9:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5268,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4526,
                            "src": "7615:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5267,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "7603:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 5269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7603:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 5270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36595,
                      "src": "7603:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 5271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5272,
                  "nodeType": "ExpressionStatement",
                  "src": "7603:25:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5273,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4538,
                      "src": "7638:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5276,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5209,
                          "src": "7658:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5274,
                          "name": "earned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4538,
                          "src": "7647:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "7647:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7647:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7638:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5279,
                  "nodeType": "ExpressionStatement",
                  "src": "7638:26:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5281,
                        "name": "_want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5209,
                        "src": "7689:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5282,
                        "name": "earned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4538,
                        "src": "7696:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5280,
                      "name": "Harvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4544,
                      "src": "7679:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7679:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5284,
                  "nodeType": "EmitStatement",
                  "src": "7674:29:16"
                }
              ]
            },
            "documentation": null,
            "id": 5286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6164:2:16"
            },
            "returnParameters": {
              "id": 5035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6174:0:16"
            },
            "scope": 5364,
            "src": "6148:1562:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5300,
              "nodeType": "Block",
              "src": "7771:61:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5296,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38012,
                            "src": "7819:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveBBTCVoterProxy_$5364",
                              "typeString": "contract StrategyCurveBBTCVoterProxy"
                            }
                          ],
                          "id": 5295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7811:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7811:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5292,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "7795:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5291,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "7788:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7788:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "7788:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5290,
                  "id": 5299,
                  "nodeType": "Return",
                  "src": "7781:44:16"
                }
              ]
            },
            "documentation": null,
            "id": 5301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7738:2:16"
            },
            "returnParameters": {
              "id": 5290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5289,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5301,
                  "src": "7762:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7762:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7761:9:16"
            },
            "scope": 5364,
            "src": "7716:116:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5313,
              "nodeType": "Block",
              "src": "7893:59:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5310,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "7939:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5307,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4526,
                            "src": "7922:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5306,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "7910:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 5308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7910:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 5309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36571,
                      "src": "7910:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5305,
                  "id": 5312,
                  "nodeType": "Return",
                  "src": "7903:42:16"
                }
              ]
            },
            "documentation": null,
            "id": 5314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7860:2:16"
            },
            "returnParameters": {
              "id": 5305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5304,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5314,
                  "src": "7884:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7884:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7883:9:16"
            },
            "scope": 5364,
            "src": "7838:114:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5326,
              "nodeType": "Block",
              "src": "8009:60:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5322,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5314,
                          "src": "8046:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 5323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8046:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5319,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5301,
                          "src": "8026:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 5320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8026:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35263,
                      "src": "8026:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5318,
                  "id": 5325,
                  "nodeType": "Return",
                  "src": "8019:43:16"
                }
              ]
            },
            "documentation": null,
            "id": 5327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7976:2:16"
            },
            "returnParameters": {
              "id": 5318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5317,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5327,
                  "src": "8000:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8000:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7999:9:16"
            },
            "scope": 5364,
            "src": "7958:111:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5344,
              "nodeType": "Block",
              "src": "8128:99:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "8146:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8146:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5335,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "8160:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8146:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 5337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8172:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 5332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "8138:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8138:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5339,
                  "nodeType": "ExpressionStatement",
                  "src": "8138:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5340,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4530,
                      "src": "8196:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5341,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5329,
                      "src": "8209:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8196:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5343,
                  "nodeType": "ExpressionStatement",
                  "src": "8196:24:16"
                }
              ]
            },
            "documentation": null,
            "id": 5345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5329,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 5345,
                  "src": "8098:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8098:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8097:21:16"
            },
            "returnParameters": {
              "id": 5331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8128:0:16"
            },
            "scope": 5364,
            "src": "8075:152:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5362,
              "nodeType": "Block",
              "src": "8286:99:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5351,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "8304:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8304:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5353,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4530,
                          "src": "8318:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8304:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 5355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8330:13:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 5350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "8296:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8296:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5357,
                  "nodeType": "ExpressionStatement",
                  "src": "8296:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5358,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4532,
                      "src": "8354:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5359,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5347,
                      "src": "8367:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8354:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5361,
                  "nodeType": "ExpressionStatement",
                  "src": "8354:24:16"
                }
              ]
            },
            "documentation": null,
            "id": 5363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5347,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 5363,
                  "src": "8256:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8256:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8255:21:16"
            },
            "returnParameters": {
              "id": 5349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8286:0:16"
            },
            "scope": 5364,
            "src": "8233:152:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5365,
        "src": "565:7822:16"
      }
    ],
    "src": "38:8350:16"
  },
  "bytecode": "60806040526103e86000556101f46001556032600255600060035534801561002657600080fd5b506040516124b03803806124b08339818101604052602081101561004957600080fd5b5051600680546001600160a01b03199081163390811790925560088054821683179055600980548216909217909155600780546001600160a01b039093169282169290921790915560048054821673c17adf949f524213a540609c386035d7d685b16f1790556005805490911673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790556123d3806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80637fef901a1161013b578063ac1e5025116100b8578063d0e30db01161007c578063d0e30db01461053e578063d6f1926214610546578063d73792a91461054e578063ec55688914610556578063f77c47911461055e57610248565b8063ac1e5025146104e3578063aced166114610500578063c1a3d44c14610508578063c7b9d53014610510578063cc32d1761461053657610248565b8063955383bd116100ff578063955383bd1461046a57806397107d6d146104875780639be28785146104ad578063a6f19c84146104b5578063ab033ea9146104bd57610248565b80637fef901a146104245780638158676e1461042c578063853828b6146104345780638bc7e8c41461043c57806392eefe9b1461044457610248565b806346c96aac116101c95780636bc558761161018d5780636bc55876146103b25780637165485d146103d1578063722713f7146103d9578063748747e6146103e157806377e741c71461040757610248565b806346c96aac1461036c57806351cff8d9146103745780635aa6e6751461039a578063692058c2146103a25780636a4874a1146103aa57610248565b80632681f7e4116102105780632681f7e41461032f5780632e1a7d4d146103375780633cdc5389146103545780633fc8cef31461035c5780634641257d1461036457610248565b80630d596cdf1461024d578063115880861461026c57806317d7de7c146102865780631f1fcd51146103035780631fe4a68614610327575b600080fd5b61026a6004803603602081101561026357600080fd5b5035610566565b005b6102746105b8565b60408051918252519081900360200190f35b61028e61064c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102c85781810151838201526020016102b0565b50505050905090810190601f1680156102f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61030b610683565b604080516001600160a01b039092168252519081900360200190f35b61030b610695565b61030b6106a4565b61026a6004803603602081101561034d57600080fd5b50356106bc565b61030b610980565b61030b610998565b61026a6109b0565b61030b6111b6565b6102746004803603602081101561038a57600080fd5b50356001600160a01b03166111ce565b61030b6113c0565b61030b6113cf565b61030b6113de565b61026a600480360360208110156103c857600080fd5b503515156113f6565b61030b6114b3565b6102746114cb565b61026a600480360360208110156103f757600080fd5b50356001600160a01b03166114f1565b61026a6004803603602081101561041d57600080fd5b5035611575565b6102746115c7565b6102746115cd565b6102746115d3565b610274611796565b61026a6004803603602081101561045a57600080fd5b50356001600160a01b031661179c565b61026a6004803603602081101561048057600080fd5b503561180b565b61026a6004803603602081101561049d57600080fd5b50356001600160a01b031661185d565b61030b6118cc565b61030b6118e4565b61026a600480360360208110156104d357600080fd5b50356001600160a01b03166118fc565b61026a600480360360208110156104f957600080fd5b503561196b565b61030b6119bd565b6102746119cc565b61026a6004803603602081101561052657600080fd5b50356001600160a01b0316611a1b565b610274611a9f565b61026a611aa5565b610274611be4565b610274611bea565b61030b611bf0565b61030b611bff565b6006546001600160a01b031633146105b3576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b60048054604080516370a0823160e01b815273dfc7adfa664b08767b735de28f9e84cd30492aee93810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561061b57600080fd5b505afa15801561062f573d6000803e3d6000fd5b505050506040513d602081101561064557600080fd5b5051905090565b60408051808201909152601b81527f5374726174656779437572766542425443566f74657250726f78790000000000602082015290565b60008051602061231f83398151915281565b6008546001600160a01b031681565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6007546001600160a01b03163314610709576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905160009160008051602061231f833981519152916370a0823191602480820192602092909190829003018186803b15801561075857600080fd5b505afa15801561076c573d6000803e3d6000fd5b505050506040513d602081101561078257600080fd5b50519050818110156107bb576107a66107a1838363ffffffff611c0e16565b611c59565b91506107b8828263ffffffff611d0a16565b91505b60006107e46127106107d860035486611d6490919063ffffffff16565b9063ffffffff611dbd16565b905061087f600760009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561083757600080fd5b505afa15801561084b573d6000803e3d6000fd5b505050506040513d602081101561086157600080fd5b505160008051602061231f833981519152908363ffffffff611dff16565b60075460408051632988bb9f60e21b815260008051602061231f833981519152600482015290516000926001600160a01b03169163a622ee7c916024808301926020929190829003018186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d602081101561090257600080fd5b505190506001600160a01b03811661094a576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61097a8161095e868563ffffffff611c0e16565b60008051602061231f833981519152919063ffffffff611dff16565b50505050565b732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6009546001600160a01b03163314806109d357506008546001600160a01b031633145b806109e857506006546001600160a01b031633145b610a24576040805162461bcd60e51b8152602060048201526008602482015267216b65657065727360c01b604482015290519081900360640190fd5b600480546040805163072e008f60e11b815273dfc7adfa664b08767b735de28f9e84cd30492aee93810193909352516001600160a01b0390911691630e5c011e91602480830192600092919082900301818387803b158015610a8557600080fd5b505af1158015610a99573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b158015610af257600080fd5b505afa158015610b06573d6000803e3d6000fd5b505050506040513d6020811015610b1c57600080fd5b505190508015610db1576000610b436127106107d860005485611d6490919063ffffffff16565b9050610b7e73d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611dff16565b610b8e828263ffffffff611c0e16565b600554909250610bc49073d533a949740bb3306d119cc777fa900ba034cd52906001600160a01b0316600063ffffffff611e5616565b600554610bf69073d533a949740bb3306d119cc777fa900ba034cd52906001600160a01b03168463ffffffff611e5616565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610c3a57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610c7c57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050732260fac5e5542a773aa44fbcfedf7c193bc2c59981600281518110610cbe57fe5b6001600160a01b039283166020918202929092010152600554166338ed17398460008430610cf44261070863ffffffff611d0a16565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610d6d578181015183820152602001610d55565b505050509050019650505050505050600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091732260fac5e5542a773aa44fbcfedf7c193bc2c599916370a0823191602480820192602092909190829003018186803b158015610e0657600080fd5b505afa158015610e1a573d6000803e3d6000fd5b505050506040513d6020811015610e3057600080fd5b505190508015610f7157610e74732260fac5e5542a773aa44fbcfedf7c193bc2c59973c45b2eee6e09ca176ca3bb5f7eee7c47bf93c756600063ffffffff611e5616565b610ead732260fac5e5542a773aa44fbcfedf7c193bc2c59973c45b2eee6e09ca176ca3bb5f7eee7c47bf93c7568363ffffffff611e5616565b73c45b2eee6e09ca176ca3bb5f7eee7c47bf93c7566001600160a01b031663029b2f3460405180608001604052806000815260200160008152602001848152602001600081525060006040518363ffffffff1660e01b81526004018083600460200280838360005b83811015610f2d578181015183820152602001610f15565b5050505090500182815260200192505050600060405180830381600087803b158015610f5857600080fd5b505af1158015610f6c573d6000803e3d6000fd5b505050505b604080516370a0823160e01b8152306004820152905160009160008051602061231f833981519152916370a0823191602480820192602092909190829003018186803b158015610fc057600080fd5b505afa158015610fd4573d6000803e3d6000fd5b505050506040513d6020811015610fea57600080fd5b5051905080156111025760006110116127106107d860015485611d6490919063ffffffff16565b905060006110306127106107d860025486611d6490919063ffffffff16565b90506110cb600760009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561108357600080fd5b505afa158015611097573d6000803e3d6000fd5b505050506040513d60208110156110ad57600080fd5b505160008051602061231f833981519152908463ffffffff611dff16565b6008546110f79060008051602061231f833981519152906001600160a01b03168363ffffffff611dff16565b6110ff611aa5565b50505b6004805460408051637c1e845d60e11b815290516001600160a01b039092169263f83d08ba92828201926000929082900301818387803b15801561114557600080fd5b505af1158015611159573d6000803e3d6000fd5b5050600a54611171925090508263ffffffff611d0a16565b600a81905560408051838152602081019290925280517ffa07446fad45314351eb89109a154880278451332bb87f1824d435fe58da59399281900390910190a1505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6007546000906001600160a01b0316331461121e576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b60008051602061231f8339815191526001600160a01b0383161415611273576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b03831614156112cb576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b732260fac5e5542a773aa44fbcfedf7c193bc2c5996001600160a01b0383161415611326576040805162461bcd60e51b815260206004808301919091526024820152637762746360e01b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561136c57600080fd5b505afa158015611380573d6000803e3d6000fd5b505050506040513d602081101561139657600080fd5b50516007549091506113bb906001600160a01b0384811691168363ffffffff611dff16565b919050565b6006546001600160a01b031681565b6005546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6008546001600160a01b031633148061141957506006546001600160a01b031633145b611458576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b801561148957600580546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790556114b0565b600580546001600160a01b03191673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790555b50565b73c45b2eee6e09ca176ca3bb5f7eee7c47bf93c75681565b60006114ec6114d86105b8565b6114e06119cc565b9063ffffffff611d0a16565b905090565b6008546001600160a01b031633148061151457506006546001600160a01b031633145b611553576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146115c2576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b60005481565b60025481565b6007546000906001600160a01b03163314611623576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b61162b611f69565b604080516370a0823160e01b8152306004820152905160008051602061231f833981519152916370a08231916024808301926020929190829003018186803b15801561167657600080fd5b505afa15801561168a573d6000803e3d6000fd5b505050506040513d60208110156116a057600080fd5b505160075460408051632988bb9f60e21b815260008051602061231f833981519152600482015290519293506000926001600160a01b039092169163a622ee7c91602480820192602092909190829003018186803b15801561170157600080fd5b505afa158015611715573d6000803e3d6000fd5b505050506040513d602081101561172b57600080fd5b505190506001600160a01b038116611773576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61179260008051602061231f833981519152828463ffffffff611dff16565b5090565b60035481565b6006546001600160a01b031633146117e9576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b03163314611858576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b6006546001600160a01b031633146118aa576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b73d9e1ce17f2641f24ae83637ab66a2cca9c378b9f81565b73dfc7adfa664b08767b735de28f9e84cd30492aee81565b6006546001600160a01b03163314611949576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146119b8576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600355565b6009546001600160a01b031681565b604080516370a0823160e01b8152306004820152905160009160008051602061231f833981519152916370a0823191602480820192602092909190829003018186803b15801561061b57600080fd5b6008546001600160a01b0316331480611a3e57506006546001600160a01b031633145b611a7d576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b604080516370a0823160e01b8152306004820152905160009160008051602061231f833981519152916370a0823191602480820192602092909190829003018186803b158015611af457600080fd5b505afa158015611b08573d6000803e3d6000fd5b505050506040513d6020811015611b1e57600080fd5b5051905080156114b057600454611b549060008051602061231f833981519152906001600160a01b03168363ffffffff611dff16565b6004805460408051631f2c13e160e31b815273dfc7adfa664b08767b735de28f9e84cd30492aee9381019390935260008051602061231f8339815191526024840152516001600160a01b039091169163f9609f0891604480830192600092919082900301818387803b158015611bc957600080fd5b505af1158015611bdd573d6000803e3d6000fd5b5050505050565b600a5481565b61271081565b6004546001600160a01b031681565b6007546001600160a01b031681565b6000611c5083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061200d565b90505b92915050565b6004805460408051636ce5768960e11b815273dfc7adfa664b08767b735de28f9e84cd30492aee9381019390935260008051602061231f833981519152602484015260448301849052516000926001600160a01b039092169163d9caed1291606480830192602092919082900301818787803b158015611cd857600080fd5b505af1158015611cec573d6000803e3d6000fd5b505050506040513d6020811015611d0257600080fd5b505192915050565b600082820183811015611c50576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611d7357506000611c53565b82820282848281611d8057fe5b0414611c505760405162461bcd60e51b81526004018080602001828103825260218152602001806122fe6021913960400191505060405180910390fd5b6000611c5083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506120a4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611e51908490612109565b505050565b801580611edc575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611eae57600080fd5b505afa158015611ec2573d6000803e3d6000fd5b505050506040513d6020811015611ed857600080fd5b5051155b611f175760405162461bcd60e51b81526004018080602001828103825260368152602001806123696036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611e51908490612109565b60048054604080516301395c5960e31b815273dfc7adfa664b08767b735de28f9e84cd30492aee9381019390935260008051602061231f8339815191526024840152516001600160a01b03909116916309cae2c89160448083019260209291908290030181600087803b158015611fdf57600080fd5b505af1158015611ff3573d6000803e3d6000fd5b505050506040513d602081101561200957600080fd5b5050565b6000818484111561209c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612061578181015183820152602001612049565b50505050905090810190601f16801561208e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836120f35760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612061578181015183820152602001612049565b5060008385816120ff57fe5b0495945050505050565b61211b826001600160a01b03166122c1565b61216c576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106121aa5780518252601f19909201916020918201910161218b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461220c576040519150601f19603f3d011682016040523d82523d6000602084013e612211565b606091505b509150915081612268576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561097a5780806020019051602081101561228457600080fd5b505161097a5760405162461bcd60e51b815260040180806020018281038252602a81526020018061233f602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906122f557508115155b94935050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77000000000000000000000000410e3e86ef427e30b9235497143881f717d93c2a5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820094b42922bf065daeb739440a3cf642d24e12f41114a90df57d20252dabb777a64736f6c63430005110032",
  "bytecodeSha1": "bdfc7b74e3a23fe066a1ffaab7983044a3f6909b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "StrategyCurveBBTCVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "113": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "117": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "114": [
            2458,
            2464,
            false
          ],
          "115": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "116": [
            1845,
            1851,
            true
          ]
        }
      },
      "16": {
        "StrategyCurveBBTCVoterProxy.deposit": {
          "108": [
            4013,
            4022,
            false
          ]
        },
        "StrategyCurveBBTCVoterProxy.harvest": {
          "83": [
            6192,
            6212,
            true
          ],
          "84": [
            6216,
            6240,
            true
          ],
          "85": [
            6244,
            6268,
            true
          ],
          "86": [
            6399,
            6407,
            false
          ],
          "87": [
            6995,
            7004,
            false
          ],
          "88": [
            7257,
            7266,
            false
          ]
        },
        "StrategyCurveBBTCVoterProxy.setController": {
          "101": [
            8304,
            8328,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setGovernance": {
          "104": [
            8146,
            8170,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setKeepCRV": {
          "102": [
            2926,
            2950,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setKeeper": {
          "96": [
            2754,
            2778,
            true
          ],
          "97": [
            2782,
            2806,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setProxy": {
          "103": [
            3582,
            3606,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setStrategist": {
          "106": [
            2576,
            2600,
            true
          ],
          "107": [
            2604,
            2628,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setStrategistReward": {
          "79": [
            3422,
            3446,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setTreasuryFee": {
          "98": [
            3250,
            3274,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.setWithdrawalFee": {
          "105": [
            3084,
            3108,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.switchDex": {
          "93": [
            3721,
            3745,
            true
          ],
          "94": [
            3749,
            3773,
            true
          ],
          "95": [
            3803,
            3812,
            false
          ]
        },
        "StrategyCurveBBTCVoterProxy.withdraw": {
          "80": [
            4746,
            4770,
            true
          ],
          "81": [
            4866,
            4884,
            false
          ],
          "82": [
            5241,
            5261,
            true
          ],
          "89": [
            4313,
            4337,
            true
          ],
          "90": [
            4371,
            4394,
            true
          ],
          "91": [
            4421,
            4443,
            true
          ],
          "92": [
            4469,
            4492,
            true
          ]
        },
        "StrategyCurveBBTCVoterProxy.withdrawAll": {
          "99": [
            5688,
            5712,
            true
          ],
          "100": [
            5901,
            5921,
            true
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "109": [
            3261,
            3288,
            true
          ],
          "110": [
            3479,
            3486,
            true
          ],
          "111": [
            3538,
            3559,
            false
          ],
          "112": [
            3667,
            3697,
            true
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {},
      "75": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "65": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "68": [
            3150,
            3196
          ],
          "74": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "66": [
            2480,
            2488
          ],
          "67": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "63": [
            1351,
            1401
          ],
          "73": [
            1837,
            1866
          ]
        }
      },
      "16": {
        "StrategyCurveBBTCVoterProxy._withdrawAll": {
          "72": [
            6092,
            6135
          ]
        },
        "StrategyCurveBBTCVoterProxy._withdrawSome": {
          "64": [
            5476,
            5532
          ]
        },
        "StrategyCurveBBTCVoterProxy.balanceOf": {
          "38": [
            8019,
            8062
          ]
        },
        "StrategyCurveBBTCVoterProxy.balanceOfPool": {
          "2": [
            7903,
            7945
          ]
        },
        "StrategyCurveBBTCVoterProxy.balanceOfWant": {
          "58": [
            7781,
            7825
          ]
        },
        "StrategyCurveBBTCVoterProxy.deposit": {
          "61": [
            4038,
            4077
          ],
          "62": [
            4091,
            4130
          ]
        },
        "StrategyCurveBBTCVoterProxy.getName": {
          "3": [
            2456,
            2492
          ]
        },
        "StrategyCurveBBTCVoterProxy.harvest": {
          "10": [
            6184,
            6281
          ],
          "11": [
            6291,
            6324
          ],
          "12": [
            6494,
            6535
          ],
          "13": [
            6549,
            6574
          ],
          "14": [
            6589,
            6620
          ],
          "15": [
            6634,
            6668
          ],
          "16": [
            6737,
            6750
          ],
          "17": [
            6764,
            6778
          ],
          "18": [
            6792,
            6806
          ],
          "19": [
            6821,
            6908
          ],
          "20": [
            7020,
            7054
          ],
          "21": [
            7068,
            7106
          ],
          "22": [
            7120,
            7170
          ],
          "23": [
            7434,
            7500
          ],
          "24": [
            7514,
            7560
          ],
          "25": [
            7574,
            7583
          ],
          "26": [
            7603,
            7628
          ],
          "27": [
            7638,
            7664
          ],
          "28": [
            7674,
            7703
          ]
        },
        "StrategyCurveBBTCVoterProxy.setController": {
          "48": [
            8296,
            8344
          ],
          "49": [
            8354,
            8378
          ]
        },
        "StrategyCurveBBTCVoterProxy.setGovernance": {
          "54": [
            8138,
            8186
          ],
          "55": [
            8196,
            8220
          ]
        },
        "StrategyCurveBBTCVoterProxy.setKeepCRV": {
          "50": [
            2918,
            2966
          ],
          "51": [
            2976,
            2994
          ]
        },
        "StrategyCurveBBTCVoterProxy.setKeeper": {
          "39": [
            2746,
            2822
          ],
          "40": [
            2832,
            2848
          ]
        },
        "StrategyCurveBBTCVoterProxy.setProxy": {
          "52": [
            3574,
            3622
          ],
          "53": [
            3632,
            3646
          ]
        },
        "StrategyCurveBBTCVoterProxy.setStrategist": {
          "59": [
            2568,
            2644
          ],
          "60": [
            2654,
            2678
          ]
        },
        "StrategyCurveBBTCVoterProxy.setStrategistReward": {
          "0": [
            3414,
            3462
          ],
          "1": [
            3472,
            3508
          ]
        },
        "StrategyCurveBBTCVoterProxy.setTreasuryFee": {
          "41": [
            3242,
            3290
          ],
          "42": [
            3300,
            3326
          ]
        },
        "StrategyCurveBBTCVoterProxy.setWithdrawalFee": {
          "56": [
            3076,
            3124
          ],
          "57": [
            3134,
            3164
          ]
        },
        "StrategyCurveBBTCVoterProxy.switchDex": {
          "35": [
            3713,
            3789
          ],
          "36": [
            3828,
            3841
          ],
          "37": [
            3872,
            3887
          ]
        },
        "StrategyCurveBBTCVoterProxy.withdraw": {
          "4": [
            4738,
            4786
          ],
          "5": [
            4900,
            4946
          ],
          "6": [
            4960,
            4991
          ],
          "7": [
            5085,
            5151
          ],
          "8": [
            5233,
            5272
          ],
          "9": [
            5334,
            5386
          ],
          "29": [
            4305,
            4353
          ],
          "30": [
            4363,
            4403
          ],
          "31": [
            4413,
            4451
          ],
          "32": [
            4461,
            4501
          ],
          "33": [
            4511,
            4552
          ],
          "34": [
            4562,
            4602
          ]
        },
        "StrategyCurveBBTCVoterProxy.withdrawAll": {
          "43": [
            5680,
            5728
          ],
          "44": [
            5738,
            5752
          ],
          "45": [
            5763,
            5810
          ],
          "46": [
            5893,
            5932
          ],
          "47": [
            5994,
            6036
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "75": [
            3253,
            3324
          ],
          "76": [
            3471,
            3523
          ],
          "77": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "70": [
            1406,
            1556
          ],
          "71": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "69": [
            744,
            829
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {
        "Address.isContract": {
          "78": [
            1238,
            1289
          ]
        }
      },
      "75": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "IController",
    "ICurveFi",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "IVoterProxy",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "Uni"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "565:7822:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:7822:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:176;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3339:176:16;;:::i;:::-;;7838:114;;;:::i;:::-;;;;;;;;;;;;;;;;2389:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2389:110:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:82;;;:::i;:::-;;;;-1:-1:-1;;;;;704:82:16;;;;;;;;;;;;;;1867:25;;;:::i;1148:85::-;;;:::i;4684:709::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4684:709:16;;:::i;1332:82::-;;;:::i;1420:::-;;;:::i;6148:1562::-;;;:::i;1058:83::-;;;:::i;4227:382::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4227:382:16;-1:-1:-1;;;;;4227:382:16;;:::i;1805:25::-;;;:::i;1780:18::-;;;:::i;792:81::-;;;:::i;3659:245::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3659:245:16;;;;:::i;880:83::-;;;:::i;7958:111::-;;;:::i;2691:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2691:164:16;-1:-1:-1;;;;;2691:164:16;;:::i;3177:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3177:156:16;;:::i;1547:29::-;;;:::i;1620:36::-;;;:::i;5612:431::-;;;:::i;1662:32::-;;;:::i;8233:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8233:152:16;-1:-1:-1;;;;;8233:152:16;;:::i;2861:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2861:140:16;;:::i;3521:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3521:132:16;-1:-1:-1;;;;;3521:132:16;;:::i;1239:87::-;;;:::i;969:83::-;;;:::i;8075:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8075:152:16;-1:-1:-1;;;;;8075:152:16;;:::i;3007:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3007:164:16;;:::i;1898:21::-;;;:::i;7716:116::-;;;:::i;2505:180::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2505:180:16;-1:-1:-1;;;;;2505:180:16;;:::i;1582:32::-;;;:::i;3910:237::-;;;:::i;1926:21::-;;;:::i;1700:47::-;;;:::i;1754:20::-;;;:::i;1836:25::-;;;:::i;3339:176::-;3436:10;;-1:-1:-1;;;;;3436:10:16;3422;:24;3414:48;;;;;-1:-1:-1;;;3414:48:16;;;;;;;;;;;;-1:-1:-1;;;3414:48:16;;;;;;;;;;;;;;;3472:16;:36;3339:176::o;7838:114::-;7922:5;;;7910:35;;;-1:-1:-1;;;7910:35:16;;1009:42;7910:35;;;;;;;;7884:7;;-1:-1:-1;;;;;7922:5:16;;;;7910:28;;:35;;;;;;;;;;;;;;7922:5;7910:35;;;5:2:-1;;;;30:1;27;20:12;5:2;7910:35:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7910:35:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7910:35:16;;-1:-1:-1;7838:114:16;:::o;2389:110::-;2456:36;;;;;;;;;;;;;;;;;2389:110;:::o;704:82::-;-1:-1:-1;;;;;;;;;;;704:82:16;:::o;1867:25::-;;;-1:-1:-1;;;;;1867:25:16;;:::o;1148:85::-;1190:42;1148:85;:::o;4684:709::-;4760:10;;-1:-1:-1;;;;;4760:10:16;4746;:24;4738:48;;;;;-1:-1:-1;;;4738:48:16;;;;;;;;;;;;-1:-1:-1;;;4738:48:16;;;;;;;;;;;;;;;4815:37;;;-1:-1:-1;;;4815:37:16;;4846:4;4815:37;;;;;;4796:16;;-1:-1:-1;;;;;;;;;;;743:42:16;4815:22;;:37;;;;;;;;;;;;;;;743:42;4815:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4815:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4815:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4815:37:16;;-1:-1:-1;4866:18:16;;;4862:140;;;4910:36;4924:21;:7;4936:8;4924:21;:11;:21;:::i;:::-;4910:13;:36::i;:::-;4900:46;-1:-1:-1;4970:21:16;4900:46;4982:8;4970:21;:11;:21;:::i;:::-;4960:31;;4862:140;5012:12;5027:47;1742:5;5027:26;5039:13;;5027:7;:11;;:26;;;;:::i;:::-;:30;:47;:30;:47;:::i;:::-;5012:62;;5085:66;5123:10;;;;;;;;;-1:-1:-1;;;;;5123:10:16;-1:-1:-1;;;;;5111:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5111:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5111:33:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5111:33:16;-1:-1:-1;;;;;;;;;;;743:42:16;5146:4;5085:66;:25;:66;:::i;:::-;5190:10;;5178:45;;;-1:-1:-1;;;5178:45:16;;-1:-1:-1;;;;;;;;;;;5178:45:16;;;;;;5161:14;;-1:-1:-1;;;;;5190:10:16;;5178:30;;:45;;;;;;;;;;;;;;5190:10;5178:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5178:45:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5178:45:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5178:45:16;;-1:-1:-1;;;;;;5241:20:16;;5233:39;;;;;-1:-1:-1;;;5233:39:16;;;;;;;;;;;;-1:-1:-1;;;5233:39:16;;;;;;;;;;;;;;;5334:52;5360:6;5368:17;:7;5380:4;5368:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;743:42:16;5334:52;;:25;:52;:::i;:::-;4684:709;;;;:::o;1332:82::-;1371:42;1332:82;:::o;1420:::-;1459:42;1420:82;:::o;6148:1562::-;6206:6;;-1:-1:-1;;;;;6206:6:16;6192:10;:20;;:48;;-1:-1:-1;6230:10:16;;-1:-1:-1;;;;;6230:10:16;6216;:24;6192:48;:76;;;-1:-1:-1;6258:10:16;;-1:-1:-1;;;;;6258:10:16;6244;:24;6192:76;6184:97;;;;;-1:-1:-1;;;6184:97:16;;;;;;;;;;;;-1:-1:-1;;;6184:97:16;;;;;;;;;;;;;;;6303:5;;;6291:33;;;-1:-1:-1;;;6291:33:16;;1009:42;6291:33;;;;;;;;-1:-1:-1;;;;;6303:5:16;;;;6291:26;;:33;;;;;6303:5;;6291:33;;;;;;;6303:5;;6291:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6291:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6349:36:16;;;-1:-1:-1;;;6349:36:16;;6379:4;6349:36;;;;;;6334:12;;-1:-1:-1;830:42:16;;-1:-1:-1;6349:21:16;;:36;;;;;;;;;;;;;;;830:42;6349:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6349:36:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6349:36:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6349:36:16;;-1:-1:-1;6399:8:16;;6395:524;;6423:16;6442:38;1742:5;6442:17;6451:7;;6442:4;:8;;:17;;;;:::i;:38::-;6423:57;-1:-1:-1;6494:41:16;830:42;1098;6423:57;6494:41;:24;:41;:::i;:::-;6556:18;:4;6565:8;6556:18;:8;:18;:::i;:::-;6613:3;;6549:25;;-1:-1:-1;6589:31:16;;830:42;;-1:-1:-1;;;;;6613:3:16;;6589:31;:23;:31;:::i;:::-;6658:3;;6634:34;;830:42;;-1:-1:-1;;;;;6658:3:16;6663:4;6634:34;:23;:34;:::i;:::-;6707:16;;;6721:1;6707:16;;;;;;;;;6683:21;;6707:16;;;6683:21;;105:10:-1;6707:16:16;88:34:-1;136:17;;-1:-1;6707:16:16;6683:40;;830:42;6737:4;6742:1;6737:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;6737:13:16;;;-1:-1:-1;;;;;6737:13:16;;;;;1459:42;6764:4;6769:1;6764:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;6764:14:16;;;-1:-1:-1;;;;;6764:14:16;;;;;1371:42;6792:4;6797:1;6792:7;;;;;;;;-1:-1:-1;;;;;6792:14:16;;;:7;;;;;;;;;:14;6825:3;;;6821:33;6855:4;6825:3;6873:4;6887;6894:13;:3;6902:4;6894:13;:7;:13;:::i;:::-;6821:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6821:87:16;-1:-1:-1;;;;;6821:87:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6821:87:16;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6821:87:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6821:87:16;;;;6395:524;;;6944:37;;;-1:-1:-1;;;6944:37:16;;6975:4;6944:37;;;;;;6928:13;;1371:42;;6944:22;;:37;;;;;;;;;;;;;;;1371:42;6944:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6944:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6944:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6944:37:16;;-1:-1:-1;6995:9:16;;6991:190;;7020:34;1371:42;920;7052:1;7020:34;:24;:34;:::i;:::-;7068:38;1371:42;920;7100:5;7068:38;:24;:38;:::i;:::-;920:42;-1:-1:-1;;;;;7120:29:16;;:50;;;;;;;;7151:1;7120:50;;;;7154:1;7120:50;;;;7157:5;7120:50;;;;7164:1;7120:50;;;7168:1;7120:50;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7120:50:16;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7120:50:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7120:50:16;;;;6991:190;7206:37;;;-1:-1:-1;;;7206:37:16;;7237:4;7206:37;;;;;;7190:13;;-1:-1:-1;;;;;;;;;;;743:42:16;7206:22;;:37;;;;;;;;;;;;;;;743:42;7206:37;;;5:2:-1;;;;30:1;27;20:12;5:2;7206:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7206:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7206:37:16;;-1:-1:-1;7257:9:16;;7253:341;;7282:12;7297:43;1742:5;7297:22;7307:11;;7297:5;:9;;:22;;;;:::i;:43::-;7282:58;;7354:15;7372:48;1742:5;7372:27;7382:16;;7372:5;:9;;:27;;;;:::i;:48::-;7354:66;;7434;7472:10;;;;;;;;;-1:-1:-1;;;;;7472:10:16;-1:-1:-1;;;;;7460:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7460:33:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7460:33:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7460:33:16;-1:-1:-1;;;;;;;;;;;743:42:16;7495:4;7434:66;:25;:66;:::i;:::-;7540:10;;7514:46;;-1:-1:-1;;;;;;;;;;;743:42:16;-1:-1:-1;;;;;7540:10:16;7552:7;7514:46;:25;:46;:::i;:::-;7574:9;:7;:9::i;:::-;7253:341;;;7615:5;;;7603:25;;;-1:-1:-1;;;7603:25:16;;;;-1:-1:-1;;;;;7615:5:16;;;;7603:23;;:25;;;;7615:5;;7603:25;;;;;;7615:5;;7603:25;;;5:2:-1;;;;30:1;27;20:12;5:2;7603:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7647:6:16;;:17;;-1:-1:-1;7647:6:16;-1:-1:-1;7658:5:16;7647:17;:10;:17;:::i;:::-;7638:6;:26;;;7679:24;;;;;;;;;;;;;;;;;;;;;;;;;6148:1562;;;:::o;1058:83::-;1098:42;1058:83;:::o;4227:382::-;4327:10;;4278:15;;-1:-1:-1;;;;;4327:10:16;4313;:24;4305:48;;;;;-1:-1:-1;;;4305:48:16;;;;;;;;;;;;-1:-1:-1;;;4305:48:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;4371:23:16;;;;4363:40;;;;;-1:-1:-1;;;4363:40:16;;;;;;;;;;;;;;;-1:-1:-1;;;4363:40:16;;;;;;;;;;;;;;;830:42;-1:-1:-1;;;;;4421:22:16;;;;4413:38;;;;;-1:-1:-1;;;4413:38:16;;;;;;;;;;;;-1:-1:-1;;;4413:38:16;;;;;;;;;;;;;;;1371:42;-1:-1:-1;;;;;4469:23:16;;;;4461:40;;;;;-1:-1:-1;;;4461:40:16;;;;;;;;;;;;;;;-1:-1:-1;;;4461:40:16;;;;;;;;;;;;;;;4521:31;;;-1:-1:-1;;;4521:31:16;;4546:4;4521:31;;;;;;-1:-1:-1;;;;;4521:16:16;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;4521:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4521:31:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4521:31:16;4582:10;;4521:31;;-1:-1:-1;4562:40:16;;-1:-1:-1;;;;;4562:19:16;;;;4582:10;4521:31;4562:40;:19;:40;:::i;:::-;4227:382;;;:::o;1805:25::-;;;-1:-1:-1;;;;;1805:25:16;;:::o;1780:18::-;;;-1:-1:-1;;;;;1780:18:16;;:::o;792:81::-;830:42;792:81;:::o;3659:245::-;3735:10;;-1:-1:-1;;;;;3735:10:16;3721;:24;;:52;;-1:-1:-1;3763:10:16;;-1:-1:-1;;;;;3763:10:16;3749;:24;3721:52;3713:76;;;;;-1:-1:-1;;;3713:76:16;;;;;;;;;;;;-1:-1:-1;;;3713:76:16;;;;;;;;;;;;;;;3803:9;3799:99;;;3828:3;:13;;-1:-1:-1;;;;;;3828:13:16;1190:42;3828:13;;;3799:99;;;3872:3;:15;;-1:-1:-1;;;;;;3872:15:16;1283:42;3872:15;;;3799:99;3659:245;:::o;880:83::-;920:42;880:83;:::o;7958:111::-;8000:7;8026:36;8046:15;:13;:15::i;:::-;8026;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;8019:43;;7958:111;:::o;2691:164::-;2768:10;;-1:-1:-1;;;;;2768:10:16;2754;:24;;:52;;-1:-1:-1;2796:10:16;;-1:-1:-1;;;;;2796:10:16;2782;:24;2754:52;2746:76;;;;;-1:-1:-1;;;2746:76:16;;;;;;;;;;;;-1:-1:-1;;;2746:76:16;;;;;;;;;;;;;;;2832:6;:16;;-1:-1:-1;;;;;;2832:16:16;-1:-1:-1;;;;;2832:16:16;;;;;;;;;;2691:164::o;3177:156::-;3264:10;;-1:-1:-1;;;;;3264:10:16;3250;:24;3242:48;;;;;-1:-1:-1;;;3242:48:16;;;;;;;;;;;;-1:-1:-1;;;3242:48:16;;;;;;;;;;;;;;;3300:11;:26;3177:156::o;1547:29::-;;;;:::o;1620:36::-;;;;:::o;5612:431::-;5702:10;;5653:15;;-1:-1:-1;;;;;5702:10:16;5688;:24;5680:48;;;;;-1:-1:-1;;;5680:48:16;;;;;;;;;;;;-1:-1:-1;;;5680:48:16;;;;;;;;;;;;;;;5738:14;:12;:14::i;:::-;5773:37;;;-1:-1:-1;;;5773:37:16;;5804:4;5773:37;;;;;;-1:-1:-1;;;;;;;;;;;743:42:16;5773:22;;:37;;;;;;;;;;;;;;743:42;5773:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5773:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5773:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5773:37:16;5850:10;;5838:45;;;-1:-1:-1;;;5838:45:16;;-1:-1:-1;;;;;;;;;;;5838:45:16;;;;;;5773:37;;-1:-1:-1;5821:14:16;;-1:-1:-1;;;;;5850:10:16;;;;5838:30;;:45;;;;;5773:37;;5838:45;;;;;;;;5850:10;5838:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5838:45:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5838:45:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5838:45:16;;-1:-1:-1;;;;;;5901:20:16;;5893:39;;;;;-1:-1:-1;;;5893:39:16;;;;;;;;;;;;-1:-1:-1;;;5893:39:16;;;;;;;;;;;;;;;5994:42;-1:-1:-1;;;;;;;;;;;6020:6:16;6028:7;5994:42;:25;:42;:::i;:::-;5612:431;;:::o;1662:32::-;;;;:::o;8233:152::-;8318:10;;-1:-1:-1;;;;;8318:10:16;8304;:24;8296:48;;;;;-1:-1:-1;;;8296:48:16;;;;;;;;;;;;-1:-1:-1;;;8296:48:16;;;;;;;;;;;;;;;8354:10;:24;;-1:-1:-1;;;;;;8354:24:16;-1:-1:-1;;;;;8354:24:16;;;;;;;;;;8233:152::o;2861:140::-;2940:10;;-1:-1:-1;;;;;2940:10:16;2926;:24;2918:48;;;;;-1:-1:-1;;;2918:48:16;;;;;;;;;;;;-1:-1:-1;;;2918:48:16;;;;;;;;;;;;;;;2976:7;:18;2861:140::o;3521:132::-;3596:10;;-1:-1:-1;;;;;3596:10:16;3582;:24;3574:48;;;;;-1:-1:-1;;;3574:48:16;;;;;;;;;;;;-1:-1:-1;;;3574:48:16;;;;;;;;;;;;;;;3632:5;:14;;-1:-1:-1;;;;;;3632:14:16;-1:-1:-1;;;;;3632:14:16;;;;;;;;;;3521:132::o;1239:87::-;1283:42;1239:87;:::o;969:83::-;1009:42;969:83;:::o;8075:152::-;8160:10;;-1:-1:-1;;;;;8160:10:16;8146;:24;8138:48;;;;;-1:-1:-1;;;8138:48:16;;;;;;;;;;;;-1:-1:-1;;;8138:48:16;;;;;;;;;;;;;;;8196:10;:24;;-1:-1:-1;;;;;;8196:24:16;-1:-1:-1;;;;;8196:24:16;;;;;;;;;;8075:152::o;3007:164::-;3098:10;;-1:-1:-1;;;;;3098:10:16;3084;:24;3076:48;;;;;-1:-1:-1;;;3076:48:16;;;;;;;;;;;;-1:-1:-1;;;3076:48:16;;;;;;;;;;;;;;;3134:13;:30;3007:164::o;1898:21::-;;;-1:-1:-1;;;;;1898:21:16;;:::o;7716:116::-;7788:37;;;-1:-1:-1;;;7788:37:16;;7819:4;7788:37;;;;;;7762:7;;-1:-1:-1;;;;;;;;;;;743:42:16;7788:22;;:37;;;;;;;;;;;;;;;743:42;7788:37;;;5:2:-1;;;;30:1;27;20:12;2505:180:16;2590:10;;-1:-1:-1;;;;;2590:10:16;2576;:24;;:52;;-1:-1:-1;2618:10:16;;-1:-1:-1;;;;;2618:10:16;2604;:24;2576:52;2568:76;;;;;-1:-1:-1;;;2568:76:16;;;;;;;;;;;;-1:-1:-1;;;2568:76:16;;;;;;;;;;;;;;;2654:10;:24;;-1:-1:-1;;;;;;2654:24:16;-1:-1:-1;;;;;2654:24:16;;;;;;;;;;2505:180::o;1582:32::-;;;;:::o;3910:237::-;3962:37;;;-1:-1:-1;;;3962:37:16;;3993:4;3962:37;;;;;;3946:13;;-1:-1:-1;;;;;;;;;;;743:42:16;3962:22;;:37;;;;;;;;;;;;;;;743:42;3962:37;;;5:2:-1;;;;30:1;27;20:12;5:2;3962:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3962:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3962:37:16;;-1:-1:-1;4013:9:16;;4009:132;;4064:5;;4038:39;;-1:-1:-1;;;;;;;;;;;743:42:16;-1:-1:-1;;;;;4064:5:16;4071;4038:39;:25;:39;:::i;:::-;4103:5;;;4091:39;;;-1:-1:-1;;;4091:39:16;;1009:42;4091:39;;;;;;;-1:-1:-1;;;;;;;;;;;4091:39:16;;;;;-1:-1:-1;;;;;4103:5:16;;;;4091:26;;:39;;;;;4103:5;;4091:39;;;;;;;4103:5;;4091:39;;;5:2:-1;;;;30:1;27;20:12;5:2;4091:39:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4091:39:16;;;;3910:237;:::o;1926:21::-;;;;:::o;1700:47::-;1742:5;1700:47;:::o;1754:20::-;;;-1:-1:-1;;;;;1754:20:16;;:::o;1836:25::-;;;-1:-1:-1;;;;;1836:25:16;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;5399:140:16:-;5495:5;;;5483:49;;;-1:-1:-1;;;5483:49:16;;1009:42;5483:49;;;;;;;-1:-1:-1;;;;;;;;;;;5483:49:16;;;;;;;;;;;5457:7;;-1:-1:-1;;;;;5495:5:16;;;;5483:27;;:49;;;;;;;;;;;;;;5457:7;5495:5;5483:49;;;5:2:-1;;;;30:1;27;20:12;5:2;5483:49:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5483:49:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5483:49:16;;5399:140;-1:-1:-1;;5399:140:16:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;6049:93:16:-;6104:5;;;6092:43;;;-1:-1:-1;;;6092:43:16;;1009:42;6092:43;;;;;;;-1:-1:-1;;;;;;;;;;;6092:43:16;;;;;-1:-1:-1;;;;;6104:5:16;;;;6092:30;;:43;;;;;;;;;;;;;;6104:5;;6092:43;;;5:2:-1;;;;30:1;27;20:12;5:2;6092:43:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6092:43:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;6049:93:16:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    565,
    8387
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEF901A GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xAC1E5025 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x55E JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xCC32D176 EQ PUSH2 0x536 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x955383BD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x97107D6D EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x9BE28785 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x4BD JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x8158676E EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x444 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6BC55876 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x6BC55876 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x77E741C7 EQ PUSH2 0x407 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x692058C2 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x3AA JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0x2681F7E4 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x2681F7E4 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x3CDC5389 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x364 JUMPI PUSH2 0x248 JUMP JUMPDEST DUP1 PUSH4 0xD596CDF EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x11588086 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x327 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH2 0x695 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x30B PUSH2 0x980 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x998 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x30B PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x30B PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x274 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x179C JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x180B JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x185D JUMP JUMPDEST PUSH2 0x30B PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x30B PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x196B JUMP JUMPDEST PUSH2 0x30B PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x274 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x274 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x26A PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x30B PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH32 0x5374726174656779437572766542425443566F74657250726F78790000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x709 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH2 0x7A6 PUSH2 0x7A1 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1C0E AND JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D0A AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7E4 PUSH2 0x2710 PUSH2 0x7D8 PUSH1 0x3 SLOAD DUP7 PUSH2 0x1D64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DBD AND JUMP JUMPDEST SWAP1 POP PUSH2 0x87F PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x94A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97A DUP2 PUSH2 0x95E DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1C0E AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x9D3 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0x9E8 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xA24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x216B656570657273 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 PUSH2 0xB43 PUSH2 0x2710 PUSH2 0x7D8 PUSH1 0x0 SLOAD DUP6 PUSH2 0x1D64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB7E PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST PUSH2 0xB8E DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1C0E AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP3 POP PUSH2 0xBC4 SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1E56 AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xBF6 SWAP1 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E56 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC3A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC7C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xCBE JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD AND PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xCF4 TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x1D0A AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD55 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xF71 JUMPI PUSH2 0xE74 PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH20 0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1E56 AND JUMP JUMPDEST PUSH2 0xEAD PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH20 0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E56 AND JUMP JUMPDEST PUSH20 0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x29B2F34 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF15 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 PUSH2 0x1011 PUSH2 0x2710 PUSH2 0x7D8 PUSH1 0x1 SLOAD DUP6 PUSH2 0x1D64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1030 PUSH2 0x2710 PUSH2 0x7D8 PUSH1 0x2 SLOAD DUP7 PUSH2 0x1D64 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CB PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1097 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10F7 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST PUSH2 0x10FF PUSH2 0x1AA5 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7C1E845D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xF83D08BA SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1159 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xA SLOAD PUSH2 0x1171 SWAP3 POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D0A AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x121E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1273 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x12CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1326 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x77627463 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1380 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x13BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1419 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1458 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1489 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D OR SWAP1 SSTORE PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH20 0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EC PUSH2 0x14D8 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x14E0 PUSH2 0x19CC JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1D0A AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1514 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1553 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1623 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x162B PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x168A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1715 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x172B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1773 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1792 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1858 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F DUP2 JUMP JUMPDEST PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1949 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1A3E JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1A7D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x4 SLOAD PUSH2 0x1B54 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1DFF AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C50 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x200D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1C50 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D73 JUMPI POP PUSH1 0x0 PUSH2 0x1C53 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1D80 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22FE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C50 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1E51 SWAP1 DUP5 SWAP1 PUSH2 0x2109 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1EDC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1F17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2369 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1E51 SWAP1 DUP5 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x209C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2061 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2049 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x208E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2061 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2049 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x20FF JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x211B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22C1 JUMP JUMPDEST PUSH2 0x216C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x21AA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x218B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x220C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2268 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x97A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x233F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x22F5 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77000000000000000000 STOP STOP STOP COINBASE 0xE RETURNDATACOPY DUP7 0xEF TIMESTAMP PUSH31 0x30B9235497143881F717D93C2A5361666545524332303A204552433230206F PUSH17 0x65726174696F6E20646964206E6F742073 PUSH22 0x63636565645361666545524332303A20617070726F76 PUSH6 0x2066726F6D20 PUSH15 0x6F6E2D7A65726F20746F206E6F6E2D PUSH27 0x65726F20616C6C6F77616E6365A265627A7A72315820094B42922B CREATE PUSH6 0xDAEB739440A3 0xCF PUSH5 0x2D24E12F41 GT 0x4A SWAP1 0xDF JUMPI 0xD2 MUL MSTORE 0xDA 0xBB PUSH24 0x7A64736F6C63430005110032000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        565,
        8387
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "25": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7FEF901A"
    },
    "38": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B"
    },
    "42": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAC1E5025"
    },
    "49": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD0E30DB0"
    },
    "60": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD0E30DB0"
    },
    "71": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53E"
    },
    "75": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6F19262"
    },
    "82": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x546"
    },
    "86": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD73792A9"
    },
    "93": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54E"
    },
    "97": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEC556889"
    },
    "104": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x556"
    },
    "108": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF77C4791"
    },
    "115": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "116": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x55E"
    },
    "119": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "120": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "123": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAC1E5025"
    },
    "131": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E3"
    },
    "135": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xACED1661"
    },
    "142": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x500"
    },
    "146": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC1A3D44C"
    },
    "153": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "154": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x508"
    },
    "157": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "158": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC7B9D530"
    },
    "164": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "165": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x510"
    },
    "168": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "169": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCC32D176"
    },
    "175": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "176": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x536"
    },
    "179": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "180": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "183": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x955383BD"
    },
    "191": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x955383BD"
    },
    "202": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46A"
    },
    "206": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x97107D6D"
    },
    "213": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "214": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x487"
    },
    "217": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9BE28785"
    },
    "224": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "225": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AD"
    },
    "228": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "229": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA6F19C84"
    },
    "235": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "236": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B5"
    },
    "239": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "240": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "241": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xAB033EA9"
    },
    "246": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "247": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BD"
    },
    "250": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "251": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "254": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "256": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7FEF901A"
    },
    "262": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "263": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x424"
    },
    "266": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "267": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8158676E"
    },
    "273": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "274": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42C"
    },
    "277": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "278": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x853828B6"
    },
    "284": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "285": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x434"
    },
    "288": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "289": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "290": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8BC7E8C4"
    },
    "295": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "296": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43C"
    },
    "299": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "300": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "301": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x92EEFE9B"
    },
    "306": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "307": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x444"
    },
    "310": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "311": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "314": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "316": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "317": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x46C96AAC"
    },
    "322": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "323": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C9"
    },
    "326": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "327": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6BC55876"
    },
    "333": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "334": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18D"
    },
    "337": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "338": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6BC55876"
    },
    "344": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "345": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "348": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "349": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "350": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7165485D"
    },
    "355": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "356": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D1"
    },
    "359": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "360": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "361": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x722713F7"
    },
    "366": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "367": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D9"
    },
    "370": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "371": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "372": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x748747E6"
    },
    "377": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "378": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E1"
    },
    "381": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "382": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "383": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x77E741C7"
    },
    "388": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "389": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x407"
    },
    "392": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "393": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "396": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "398": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "399": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x46C96AAC"
    },
    "404": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "405": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C"
    },
    "408": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "409": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "410": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x51CFF8D9"
    },
    "415": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "416": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x374"
    },
    "419": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "420": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "421": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5AA6E675"
    },
    "426": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "427": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39A"
    },
    "430": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "431": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "432": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x692058C2"
    },
    "437": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A2"
    },
    "441": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "442": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "443": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6A4874A1"
    },
    "448": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "449": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AA"
    },
    "452": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "453": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "456": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "458": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "459": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2681F7E4"
    },
    "464": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "GT",
      "path": "16"
    },
    "465": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x210"
    },
    "468": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "469": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "470": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2681F7E4"
    },
    "475": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "476": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32F"
    },
    "479": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "480": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "481": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2E1A7D4D"
    },
    "486": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "487": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x337"
    },
    "490": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "491": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "492": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CDC5389"
    },
    "497": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "498": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x354"
    },
    "501": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "502": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "503": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3FC8CEF3"
    },
    "508": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "509": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35C"
    },
    "512": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "513": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "514": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4641257D"
    },
    "519": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "520": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x364"
    },
    "523": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "524": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x248"
    },
    "527": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMP",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "529": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "530": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD596CDF"
    },
    "535": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "536": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24D"
    },
    "539": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "540": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "541": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x11588086"
    },
    "546": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "547": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26C"
    },
    "550": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "551": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "552": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x17D7DE7C"
    },
    "557": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "558": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x286"
    },
    "561": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "562": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "563": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1F1FCD51"
    },
    "568": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "569": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x303"
    },
    "572": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "573": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "574": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FE4A686"
    },
    "579": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "EQ",
      "path": "16"
    },
    "580": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x327"
    },
    "583": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "584": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "585": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "587": {
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "DUP1",
      "path": "16"
    },
    "588": {
      "first_revert": true,
      "fn": null,
      "offset": [
        565,
        8387
      ],
      "op": "REVERT",
      "path": "16"
    },
    "589": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "590": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "593": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "595": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "DUP1",
      "path": "16"
    },
    "596": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "597": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "SUB",
      "path": "16"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "600": {
      "op": "DUP2"
    },
    "601": {
      "op": "LT"
    },
    "602": {
      "op": "ISZERO"
    },
    "603": {
      "op": "PUSH2",
      "value": "0x263"
    },
    "606": {
      "op": "JUMPI"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "609": {
      "op": "DUP1"
    },
    "610": {
      "op": "REVERT"
    },
    "611": {
      "op": "JUMPDEST"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "614": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x566"
    },
    "617": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "jump": "i",
      "offset": [
        3339,
        3515
      ],
      "op": "JUMP",
      "path": "16"
    },
    "618": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "619": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "STOP",
      "path": "16"
    },
    "620": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "621": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "624": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B8"
    },
    "627": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        7838,
        7952
      ],
      "op": "JUMP",
      "path": "16"
    },
    "628": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "629": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "631": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "DUP1",
      "path": "16"
    },
    "632": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "633": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "634": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "DUP3",
      "path": "16"
    },
    "635": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "636": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "637": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "638": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "DUP2",
      "path": "16"
    },
    "639": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "640": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SUB",
      "path": "16"
    },
    "641": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "643": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "ADD",
      "path": "16"
    },
    "644": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "645": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "RETURN",
      "path": "16"
    },
    "646": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "647": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28E"
    },
    "650": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64C"
    },
    "653": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "i",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMP",
      "path": "16"
    },
    "654": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "655": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "657": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "659": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "661": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "662": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP3",
      "path": "16"
    },
    "663": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "664": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "665": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "666": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP2",
      "path": "16"
    },
    "667": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "668": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ADD",
      "path": "16"
    },
    "669": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "670": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "671": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "672": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "673": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "674": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "675": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "676": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "677": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "678": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ADD",
      "path": "16"
    },
    "679": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "680": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP6",
      "path": "16"
    },
    "681": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ADD",
      "path": "16"
    },
    "682": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "683": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "684": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "685": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "686": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "DUP2"
    },
    "691": {
      "op": "LT"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "696": {
      "op": "JUMPI"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "DUP2"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "op": "MLOAD"
    },
    "701": {
      "op": "DUP4"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "711": {
      "op": "JUMP"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "715": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "716": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "717": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "718": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "719": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "720": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP2",
      "path": "16"
    },
    "721": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ADD",
      "path": "16"
    },
    "722": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "723": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "725": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "AND",
      "path": "16"
    },
    "726": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "727": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "728": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F5"
    },
    "731": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "732": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "733": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP3",
      "path": "16"
    },
    "734": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SUB",
      "path": "16"
    },
    "735": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "736": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "737": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "739": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "740": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "742": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SUB",
      "path": "16"
    },
    "743": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "746": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "EXP",
      "path": "16"
    },
    "747": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SUB",
      "path": "16"
    },
    "748": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "NOT",
      "path": "16"
    },
    "749": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "AND",
      "path": "16"
    },
    "750": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP2",
      "path": "16"
    },
    "751": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "752": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "754": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "ADD",
      "path": "16"
    },
    "755": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "756": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "757": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "758": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "759": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "760": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "761": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "762": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "POP",
      "path": "16"
    },
    "763": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "765": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "766": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "DUP1",
      "path": "16"
    },
    "767": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "768": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SUB",
      "path": "16"
    },
    "769": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "770": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "RETURN",
      "path": "16"
    },
    "771": {
      "offset": [
        704,
        786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "772": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "775": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x683"
    },
    "778": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "i",
      "offset": [
        704,
        786
      ],
      "op": "JUMP",
      "path": "16"
    },
    "779": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "780": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "782": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "DUP1",
      "path": "16"
    },
    "783": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "offset": [
        704,
        786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "793": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "794": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "AND",
      "path": "16"
    },
    "795": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "DUP3",
      "path": "16"
    },
    "796": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "797": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "798": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "799": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "DUP2",
      "path": "16"
    },
    "800": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "801": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "SUB",
      "path": "16"
    },
    "802": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "804": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "ADD",
      "path": "16"
    },
    "805": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "806": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        704,
        786
      ],
      "op": "RETURN",
      "path": "16"
    },
    "807": {
      "offset": [
        1867,
        1892
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "808": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "811": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x695"
    },
    "814": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "i",
      "offset": [
        1867,
        1892
      ],
      "op": "JUMP",
      "path": "16"
    },
    "815": {
      "offset": [
        1148,
        1233
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "816": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1148,
        1233
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "819": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1148,
        1233
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A4"
    },
    "822": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "i",
      "offset": [
        1148,
        1233
      ],
      "op": "JUMP",
      "path": "16"
    },
    "823": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "824": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "827": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "829": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "DUP1",
      "path": "16"
    },
    "830": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "831": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "SUB",
      "path": "16"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "834": {
      "op": "DUP2"
    },
    "835": {
      "op": "LT"
    },
    "836": {
      "op": "ISZERO"
    },
    "837": {
      "op": "PUSH2",
      "value": "0x34D"
    },
    "840": {
      "op": "JUMPI"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "843": {
      "op": "DUP1"
    },
    "844": {
      "op": "REVERT"
    },
    "845": {
      "op": "JUMPDEST"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "848": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6BC"
    },
    "851": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4684,
        5393
      ],
      "op": "JUMP",
      "path": "16"
    },
    "852": {
      "offset": [
        1332,
        1414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "853": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1332,
        1414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "856": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1332,
        1414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x980"
    },
    "859": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1332,
        1414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "860": {
      "offset": [
        1420,
        1502
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "861": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1420,
        1502
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "864": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1420,
        1502
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x998"
    },
    "867": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1420,
        1502
      ],
      "op": "JUMP",
      "path": "16"
    },
    "868": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "869": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "872": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B0"
    },
    "875": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6148,
        7710
      ],
      "op": "JUMP",
      "path": "16"
    },
    "876": {
      "offset": [
        1058,
        1141
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "877": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        1058,
        1141
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "880": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        1058,
        1141
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11B6"
    },
    "883": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1058,
        1141
      ],
      "op": "JUMP",
      "path": "16"
    },
    "884": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "885": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "888": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "890": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "DUP1",
      "path": "16"
    },
    "891": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "892": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "SUB",
      "path": "16"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "895": {
      "op": "DUP2"
    },
    "896": {
      "op": "LT"
    },
    "897": {
      "op": "ISZERO"
    },
    "898": {
      "op": "PUSH2",
      "value": "0x38A"
    },
    "901": {
      "op": "JUMPI"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "904": {
      "op": "DUP1"
    },
    "905": {
      "op": "REVERT"
    },
    "906": {
      "op": "JUMPDEST"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "op": "SUB"
    },
    "917": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "AND",
      "path": "16"
    },
    "918": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CE"
    },
    "921": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4227,
        4609
      ],
      "op": "JUMP",
      "path": "16"
    },
    "922": {
      "offset": [
        1805,
        1830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "923": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1805,
        1830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "926": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1805,
        1830
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13C0"
    },
    "929": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1805,
        1830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "930": {
      "offset": [
        1780,
        1798
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "931": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1780,
        1798
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "934": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1780,
        1798
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13CF"
    },
    "937": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1780,
        1798
      ],
      "op": "JUMP",
      "path": "16"
    },
    "938": {
      "offset": [
        792,
        873
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "939": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        792,
        873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "942": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        792,
        873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13DE"
    },
    "945": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        792,
        873
      ],
      "op": "JUMP",
      "path": "16"
    },
    "946": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "947": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "950": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "952": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "DUP1",
      "path": "16"
    },
    "953": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "954": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "SUB",
      "path": "16"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "957": {
      "op": "DUP2"
    },
    "958": {
      "op": "LT"
    },
    "959": {
      "op": "ISZERO"
    },
    "960": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "963": {
      "op": "JUMPI"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "966": {
      "op": "DUP1"
    },
    "967": {
      "op": "REVERT"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "POP"
    },
    "970": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "971": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "972": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "973": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F6"
    },
    "976": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "jump": "i",
      "offset": [
        3659,
        3904
      ],
      "op": "JUMP",
      "path": "16"
    },
    "977": {
      "offset": [
        880,
        963
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "978": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        880,
        963
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "981": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        880,
        963
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B3"
    },
    "984": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "jump": "i",
      "offset": [
        880,
        963
      ],
      "op": "JUMP",
      "path": "16"
    },
    "985": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        7958,
        8069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "986": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        7958,
        8069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "989": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        7958,
        8069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14CB"
    },
    "992": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7958,
        8069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "993": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "994": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "997": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "999": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1000": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1001": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "SUB",
      "path": "16"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1004": {
      "op": "DUP2"
    },
    "1005": {
      "op": "LT"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3F7"
    },
    "1010": {
      "op": "JUMPI"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "DUP1"
    },
    "1014": {
      "op": "REVERT"
    },
    "1015": {
      "op": "JUMPDEST"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "AND",
      "path": "16"
    },
    "1027": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14F1"
    },
    "1030": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "jump": "i",
      "offset": [
        2691,
        2855
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1031": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1032": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1035": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1037": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1038": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1039": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "SUB",
      "path": "16"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1042": {
      "op": "DUP2"
    },
    "1043": {
      "op": "LT"
    },
    "1044": {
      "op": "ISZERO"
    },
    "1045": {
      "op": "PUSH2",
      "value": "0x41D"
    },
    "1048": {
      "op": "JUMPI"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1051": {
      "op": "DUP1"
    },
    "1052": {
      "op": "REVERT"
    },
    "1053": {
      "op": "JUMPDEST"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1056": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1575"
    },
    "1059": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        3177,
        3333
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1060": {
      "offset": [
        1547,
        1576
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1061": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1547,
        1576
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1064": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1547,
        1576
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15C7"
    },
    "1067": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1547,
        1576
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1068": {
      "offset": [
        1620,
        1656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1069": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1620,
        1656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1072": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1620,
        1656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15CD"
    },
    "1075": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "i",
      "offset": [
        1620,
        1656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1076": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1077": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1080": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D3"
    },
    "1083": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5612,
        6043
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1084": {
      "offset": [
        1662,
        1694
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1085": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        1662,
        1694
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1088": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        1662,
        1694
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1796"
    },
    "1091": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1662,
        1694
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1092": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1093": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1096": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1098": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1099": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1100": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "SUB",
      "path": "16"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1103": {
      "op": "DUP2"
    },
    "1104": {
      "op": "LT"
    },
    "1105": {
      "op": "ISZERO"
    },
    "1106": {
      "op": "PUSH2",
      "value": "0x45A"
    },
    "1109": {
      "op": "JUMPI"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1112": {
      "op": "DUP1"
    },
    "1113": {
      "op": "REVERT"
    },
    "1114": {
      "op": "JUMPDEST"
    },
    "1115": {
      "op": "POP"
    },
    "1116": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "SUB"
    },
    "1125": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "AND",
      "path": "16"
    },
    "1126": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x179C"
    },
    "1129": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "jump": "i",
      "offset": [
        8233,
        8385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1130": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1131": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1134": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1136": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1137": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1138": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "SUB",
      "path": "16"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1141": {
      "op": "DUP2"
    },
    "1142": {
      "op": "LT"
    },
    "1143": {
      "op": "ISZERO"
    },
    "1144": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1147": {
      "op": "JUMPI"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1150": {
      "op": "DUP1"
    },
    "1151": {
      "op": "REVERT"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1155": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x180B"
    },
    "1158": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        2861,
        3001
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1159": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1160": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1163": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1165": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1166": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1167": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "SUB",
      "path": "16"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1170": {
      "op": "DUP2"
    },
    "1171": {
      "op": "LT"
    },
    "1172": {
      "op": "ISZERO"
    },
    "1173": {
      "op": "PUSH2",
      "value": "0x49D"
    },
    "1176": {
      "op": "JUMPI"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1179": {
      "op": "DUP1"
    },
    "1180": {
      "op": "REVERT"
    },
    "1181": {
      "op": "JUMPDEST"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1190": {
      "op": "SHL"
    },
    "1191": {
      "op": "SUB"
    },
    "1192": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "AND",
      "path": "16"
    },
    "1193": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x185D"
    },
    "1196": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        3521,
        3653
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1197": {
      "offset": [
        1239,
        1326
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1198": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        1239,
        1326
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "1201": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        1239,
        1326
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18CC"
    },
    "1204": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        1239,
        1326
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1205": {
      "offset": [
        969,
        1052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1206": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        969,
        1052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "1209": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        969,
        1052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18E4"
    },
    "1212": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        969,
        1052
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1213": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1214": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1217": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1219": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1220": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1221": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "SUB",
      "path": "16"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "LT"
    },
    "1226": {
      "op": "ISZERO"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4D3"
    },
    "1230": {
      "op": "JUMPI"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1233": {
      "op": "DUP1"
    },
    "1234": {
      "op": "REVERT"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "AND",
      "path": "16"
    },
    "1247": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18FC"
    },
    "1250": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        8075,
        8227
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1251": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1252": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1255": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1257": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1258": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1259": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "SUB",
      "path": "16"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1262": {
      "op": "DUP2"
    },
    "1263": {
      "op": "LT"
    },
    "1264": {
      "op": "ISZERO"
    },
    "1265": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1268": {
      "op": "JUMPI"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "op": "DUP1"
    },
    "1272": {
      "op": "REVERT"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1276": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x196B"
    },
    "1279": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        3007,
        3171
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1280": {
      "offset": [
        1898,
        1919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1281": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        1898,
        1919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "1284": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        1898,
        1919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19BD"
    },
    "1287": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        1898,
        1919
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1288": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7716,
        7832
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1289": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7716,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1292": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7716,
        7832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19CC"
    },
    "1295": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        7716,
        7832
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1296": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1297": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1300": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1302": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1303": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1304": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "SUB",
      "path": "16"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1307": {
      "op": "DUP2"
    },
    "1308": {
      "op": "LT"
    },
    "1309": {
      "op": "ISZERO"
    },
    "1310": {
      "op": "PUSH2",
      "value": "0x526"
    },
    "1313": {
      "op": "JUMPI"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "DUP1"
    },
    "1317": {
      "op": "REVERT"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "AND",
      "path": "16"
    },
    "1330": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1B"
    },
    "1333": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2505,
        2685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1334": {
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1335": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1338": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A9F"
    },
    "1341": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        1582,
        1614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1342": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3910,
        4147
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1343": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3910,
        4147
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "1346": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3910,
        4147
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AA5"
    },
    "1349": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3910,
        4147
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1350": {
      "offset": [
        1926,
        1947
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1351": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1926,
        1947
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1354": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1926,
        1947
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE4"
    },
    "1357": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1926,
        1947
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1358": {
      "offset": [
        1700,
        1747
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1359": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1700,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x274"
    },
    "1362": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1700,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BEA"
    },
    "1365": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1700,
        1747
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1366": {
      "offset": [
        1754,
        1774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1367": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1754,
        1774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "1370": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1754,
        1774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BF0"
    },
    "1373": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1754,
        1774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1374": {
      "offset": [
        1836,
        1861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1375": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1836,
        1861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30B"
    },
    "1378": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1836,
        1861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BFF"
    },
    "1381": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1836,
        1861
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1382": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3339,
        3515
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1383": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3436,
        3446
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x6"
    },
    "1385": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3436,
        3446
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3436,
        3446
      ],
      "op": "AND",
      "path": "16"
    },
    "1395": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3422,
        3432
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1396": {
      "branch": 79,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3422,
        3446
      ],
      "op": "EQ",
      "path": "16"
    },
    "1397": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B3"
    },
    "1400": {
      "branch": 79,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1401": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1403": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1404": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1413": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1414": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1416": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1418": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1419": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "ADD",
      "path": "16"
    },
    "1420": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1421": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "1423": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1425": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1426": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "ADD",
      "path": "16"
    },
    "1427": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1428": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1445": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1446": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "ADD",
      "path": "16"
    },
    "1447": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1448": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1449": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1450": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1451": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1452": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1453": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "SUB",
      "path": "16"
    },
    "1454": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1456": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "ADD",
      "path": "16"
    },
    "1457": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1458": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1459": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3414,
        3462
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1460": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x2"
    },
    "1462": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "offset": [
        3472,
        3508
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1463": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategistReward",
      "jump": "o",
      "offset": [
        3339,
        3515
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1464": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1465": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x4"
    },
    "1467": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1468": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1469": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1471": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1472": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1473": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1482": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1483": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "1504": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1505": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1506": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "ADD",
      "path": "16"
    },
    "1507": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1508": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1509": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1510": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1511": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1512": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7884,
        7891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1514": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7884,
        7891
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1524": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1525": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "AND",
      "path": "16"
    },
    "1526": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1527": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7938
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "1532": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7938
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1533": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1535": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1536": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1537": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "ADD",
      "path": "16"
    },
    "1538": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1539": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1541": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1542": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1543": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1544": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1545": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1546": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SUB",
      "path": "16"
    },
    "1547": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "ADD",
      "path": "16"
    },
    "1548": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1549": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7922,
        7927
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1550": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1551": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1552": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "ISZERO"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x61B"
    },
    "1558": {
      "op": "JUMPI"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "REVERT"
    },
    "1563": {
      "op": "JUMPDEST"
    },
    "1564": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "POP",
      "path": "16"
    },
    "1565": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "GAS",
      "path": "16"
    },
    "1566": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "1567": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1568": {
      "op": "DUP1"
    },
    "1569": {
      "op": "ISZERO"
    },
    "1570": {
      "op": "PUSH2",
      "value": "0x62F"
    },
    "1573": {
      "op": "JUMPI"
    },
    "1574": {
      "op": "RETURNDATASIZE"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1577": {
      "op": "DUP1"
    },
    "1578": {
      "op": "RETURNDATACOPY"
    },
    "1579": {
      "op": "RETURNDATASIZE"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1582": {
      "op": "REVERT"
    },
    "1583": {
      "op": "JUMPDEST"
    },
    "1584": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "POP",
      "path": "16"
    },
    "1585": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "POP",
      "path": "16"
    },
    "1586": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "POP",
      "path": "16"
    },
    "1587": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "POP",
      "path": "16"
    },
    "1588": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1590": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1591": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1594": {
      "op": "DUP2"
    },
    "1595": {
      "op": "LT"
    },
    "1596": {
      "op": "ISZERO"
    },
    "1597": {
      "op": "PUSH2",
      "value": "0x645"
    },
    "1600": {
      "op": "JUMPI"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "DUP1"
    },
    "1604": {
      "op": "REVERT"
    },
    "1605": {
      "op": "JUMPDEST"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1608": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7910,
        7945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "offset": [
        7838,
        7952
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1611": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        7838,
        7952
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1612": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1613": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x40"
    },
    "1615": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1616": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1617": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1618": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1619": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "ADD",
      "path": "16"
    },
    "1620": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1621": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1622": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1623": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1B"
    },
    "1625": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1626": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1627": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5374726174656779437572766542425443566F74657250726F78790000000000"
    },
    "1660": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1662": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1663": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "ADD",
      "path": "16"
    },
    "1664": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2456,
        2492
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1665": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        2389,
        2499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1666": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "o",
      "offset": [
        2389,
        2499
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1667": {
      "offset": [
        704,
        786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1670": {
      "op": "DUP1"
    },
    "1671": {
      "op": "MLOAD"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "1677": {
      "op": "DUP4"
    },
    "1678": {
      "op": "CODECOPY"
    },
    "1679": {
      "op": "DUP2"
    },
    "1680": {
      "op": "MLOAD"
    },
    "1681": {
      "op": "SWAP2"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "offset": [
        704,
        786
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1684": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "o",
      "offset": [
        704,
        786
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1685": {
      "offset": [
        1867,
        1892
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1686": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1688": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1867,
        1892
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "op": "SUB"
    },
    "1697": {
      "offset": [
        1867,
        1892
      ],
      "op": "AND",
      "path": "16"
    },
    "1698": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "offset": [
        1867,
        1892
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1699": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "o",
      "offset": [
        1867,
        1892
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1700": {
      "offset": [
        1148,
        1233
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1701": {
      "offset": [
        1190,
        1232
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "1722": {
      "offset": [
        1148,
        1233
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1723": {
      "fn": "StrategyCurveBBTCVoterProxy.getName",
      "jump": "o",
      "offset": [
        1148,
        1233
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1724": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1725": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4760,
        4770
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x7"
    },
    "1727": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4760,
        4770
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4760,
        4770
      ],
      "op": "AND",
      "path": "16"
    },
    "1737": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4746,
        4756
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1738": {
      "branch": 80,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4746,
        4770
      ],
      "op": "EQ",
      "path": "16"
    },
    "1739": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x709"
    },
    "1742": {
      "branch": 80,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1743": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1745": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1746": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1755": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1756": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1758": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1760": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1761": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "ADD",
      "path": "16"
    },
    "1762": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1763": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "1765": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1767": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1768": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "ADD",
      "path": "16"
    },
    "1769": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1770": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1787": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1788": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "ADD",
      "path": "16"
    },
    "1789": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1790": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1791": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1792": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1793": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1794": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1795": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "SUB",
      "path": "16"
    },
    "1796": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1798": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "ADD",
      "path": "16"
    },
    "1799": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1800": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1801": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4738,
        4786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1802": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1804": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1805": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1806": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1815": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1816": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4846,
        4850
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "1817": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1819": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1820": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1821": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1822": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1823": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1824": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4796,
        4812
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1826": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4796,
        4812
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1829": {
      "op": "DUP1"
    },
    "1830": {
      "op": "MLOAD"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "1836": {
      "op": "DUP4"
    },
    "1837": {
      "op": "CODECOPY"
    },
    "1838": {
      "op": "DUP2"
    },
    "1839": {
      "op": "MLOAD"
    },
    "1840": {
      "op": "SWAP2"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1843": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4837
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "1848": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4837
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1849": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1851": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1852": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1853": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1854": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1855": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1857": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1858": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1859": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1860": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1861": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1862": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1863": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SUB",
      "path": "16"
    },
    "1864": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1865": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1866": {
      "offset": [
        743,
        785
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1867": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1868": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1869": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1870": {
      "op": "DUP1"
    },
    "1871": {
      "op": "ISZERO"
    },
    "1872": {
      "op": "PUSH2",
      "value": "0x758"
    },
    "1875": {
      "op": "JUMPI"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1878": {
      "op": "DUP1"
    },
    "1879": {
      "op": "REVERT"
    },
    "1880": {
      "op": "JUMPDEST"
    },
    "1881": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "POP",
      "path": "16"
    },
    "1882": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "GAS",
      "path": "16"
    },
    "1883": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "1884": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1885": {
      "op": "DUP1"
    },
    "1886": {
      "op": "ISZERO"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "1890": {
      "op": "JUMPI"
    },
    "1891": {
      "op": "RETURNDATASIZE"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "DUP1"
    },
    "1895": {
      "op": "RETURNDATACOPY"
    },
    "1896": {
      "op": "RETURNDATASIZE"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1899": {
      "op": "REVERT"
    },
    "1900": {
      "op": "JUMPDEST"
    },
    "1901": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "POP",
      "path": "16"
    },
    "1902": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "POP",
      "path": "16"
    },
    "1903": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "POP",
      "path": "16"
    },
    "1904": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "POP",
      "path": "16"
    },
    "1905": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1907": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1908": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "LT"
    },
    "1913": {
      "op": "ISZERO"
    },
    "1914": {
      "op": "PUSH2",
      "value": "0x782"
    },
    "1917": {
      "op": "JUMPI"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1920": {
      "op": "DUP1"
    },
    "1921": {
      "op": "REVERT"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1925": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4815,
        4852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4866,
        4884
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1928": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4866,
        4884
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1929": {
      "branch": 81,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4866,
        4884
      ],
      "op": "LT",
      "path": "16"
    },
    "1930": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4862,
        5002
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1931": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4862,
        5002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BB"
    },
    "1934": {
      "branch": 81,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4862,
        5002
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1935": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4910,
        4946
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 5,
      "value": "0x7A6"
    },
    "1938": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A1"
    },
    "1941": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4931
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1942": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4936,
        4944
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1943": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4945
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1948": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C0E"
    },
    "1951": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4945
      ],
      "op": "AND",
      "path": "16"
    },
    "1952": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4924,
        4945
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1953": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4924,
        4945
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1954": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C59"
    },
    "1957": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4910,
        4946
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1958": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4910,
        4946
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1959": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4900,
        4946
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4970,
        4991
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 6,
      "value": "0x7B8"
    },
    "1964": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4900,
        4946
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1965": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4982,
        4990
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1966": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4970,
        4991
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1971": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4970,
        4981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0A"
    },
    "1974": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4970,
        4991
      ],
      "op": "AND",
      "path": "16"
    },
    "1975": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4970,
        4991
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1976": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4970,
        4991
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1977": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4960,
        4991
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1978": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4960,
        4991
      ],
      "op": "POP",
      "path": "16"
    },
    "1979": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4862,
        5002
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1980": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5012,
        5024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1982": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5074
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E4"
    },
    "1985": {
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2710"
    },
    "1988": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "1991": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5039,
        5052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1993": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5039,
        5052
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1994": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5034
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1995": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D64"
    },
    "1998": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5038
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1999": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2000": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2001": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2006": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "AND",
      "path": "16"
    },
    "2007": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5027,
        5053
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2008": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5053
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2009": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5057
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2010": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5074
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2015": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5057
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DBD"
    },
    "2018": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5074
      ],
      "op": "AND",
      "path": "16"
    },
    "2019": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5027,
        5074
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2020": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5027,
        5074
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2021": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5012,
        5074
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2022": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5012,
        5074
      ],
      "op": "POP",
      "path": "16"
    },
    "2023": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5085,
        5151
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 7,
      "value": "0x87F"
    },
    "2026": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "2028": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2030": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2031": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2032": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2033": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2036": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "EXP",
      "path": "16"
    },
    "2037": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2038": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "DIV",
      "path": "16"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "op": "SUB"
    },
    "2047": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5123,
        5133
      ],
      "op": "AND",
      "path": "16"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5142
      ],
      "op": "AND",
      "path": "16"
    },
    "2057": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5142
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9EC5A894"
    },
    "2062": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2064": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2065": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2066": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2071": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "AND",
      "path": "16"
    },
    "2072": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "2074": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "SHL",
      "path": "16"
    },
    "2075": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2076": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2077": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2079": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "ADD",
      "path": "16"
    },
    "2080": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2082": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2084": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2085": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2086": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2087": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "SUB",
      "path": "16"
    },
    "2088": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2089": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2090": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2091": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2092": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2093": {
      "op": "DUP1"
    },
    "2094": {
      "op": "ISZERO"
    },
    "2095": {
      "op": "PUSH2",
      "value": "0x837"
    },
    "2098": {
      "op": "JUMPI"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2101": {
      "op": "DUP1"
    },
    "2102": {
      "op": "REVERT"
    },
    "2103": {
      "op": "JUMPDEST"
    },
    "2104": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "POP",
      "path": "16"
    },
    "2105": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "GAS",
      "path": "16"
    },
    "2106": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2107": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2108": {
      "op": "DUP1"
    },
    "2109": {
      "op": "ISZERO"
    },
    "2110": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2113": {
      "op": "JUMPI"
    },
    "2114": {
      "op": "RETURNDATASIZE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2117": {
      "op": "DUP1"
    },
    "2118": {
      "op": "RETURNDATACOPY"
    },
    "2119": {
      "op": "RETURNDATASIZE"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2122": {
      "op": "REVERT"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "POP",
      "path": "16"
    },
    "2125": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "POP",
      "path": "16"
    },
    "2126": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "POP",
      "path": "16"
    },
    "2127": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "POP",
      "path": "16"
    },
    "2128": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2130": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2131": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2134": {
      "op": "DUP2"
    },
    "2135": {
      "op": "LT"
    },
    "2136": {
      "op": "ISZERO"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2140": {
      "op": "JUMPI"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "REVERT"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5111,
        5144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2150": {
      "op": "DUP1"
    },
    "2151": {
      "op": "MLOAD"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2154": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "2157": {
      "op": "DUP4"
    },
    "2158": {
      "op": "CODECOPY"
    },
    "2159": {
      "op": "DUP2"
    },
    "2160": {
      "op": "MLOAD"
    },
    "2161": {
      "op": "SWAP2"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2164": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5146,
        5150
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2165": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5085,
        5151
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2170": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5085,
        5110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "2173": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5085,
        5151
      ],
      "op": "AND",
      "path": "16"
    },
    "2174": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5085,
        5151
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2175": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5085,
        5151
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2176": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5190,
        5200
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "2178": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5190,
        5200
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2179": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2181": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2182": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2183": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2192": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2195": {
      "op": "DUP1"
    },
    "2196": {
      "op": "MLOAD"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2199": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "2202": {
      "op": "DUP4"
    },
    "2203": {
      "op": "CODECOPY"
    },
    "2204": {
      "op": "DUP2"
    },
    "2205": {
      "op": "MLOAD"
    },
    "2206": {
      "op": "SWAP2"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2210": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2211": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2212": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2213": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2214": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2215": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5161,
        5175
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2217": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5161,
        5175
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5190,
        5200
      ],
      "op": "AND",
      "path": "16"
    },
    "2227": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5190,
        5200
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2228": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5208
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA622EE7C"
    },
    "2233": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5208
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2234": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2236": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2237": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2238": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2239": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2240": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2242": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2243": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2244": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2245": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2246": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2247": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SUB",
      "path": "16"
    },
    "2248": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "ADD",
      "path": "16"
    },
    "2249": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2250": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5190,
        5200
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2251": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2252": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2253": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2254": {
      "op": "DUP1"
    },
    "2255": {
      "op": "ISZERO"
    },
    "2256": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "2259": {
      "op": "JUMPI"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2262": {
      "op": "DUP1"
    },
    "2263": {
      "op": "REVERT"
    },
    "2264": {
      "op": "JUMPDEST"
    },
    "2265": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "2266": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "GAS",
      "path": "16"
    },
    "2267": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2268": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2269": {
      "op": "DUP1"
    },
    "2270": {
      "op": "ISZERO"
    },
    "2271": {
      "op": "PUSH2",
      "value": "0x8EC"
    },
    "2274": {
      "op": "JUMPI"
    },
    "2275": {
      "op": "RETURNDATASIZE"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2278": {
      "op": "DUP1"
    },
    "2279": {
      "op": "RETURNDATACOPY"
    },
    "2280": {
      "op": "RETURNDATASIZE"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2283": {
      "op": "REVERT"
    },
    "2284": {
      "op": "JUMPDEST"
    },
    "2285": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "2286": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "2287": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "2288": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "2289": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2291": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2292": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "LT"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP1"
    },
    "2305": {
      "op": "REVERT"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "op": "POP"
    },
    "2308": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2309": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5178,
        5223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5241,
        5261
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 8
    },
    "2320": {
      "branch": 82,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5241,
        5261
      ],
      "op": "AND",
      "path": "16"
    },
    "2321": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94A"
    },
    "2324": {
      "branch": 82,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2325": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2327": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2328": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2337": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2338": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2340": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2342": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2343": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "ADD",
      "path": "16"
    },
    "2344": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2345": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "2347": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2349": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2350": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "ADD",
      "path": "16"
    },
    "2351": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2352": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2364": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2365": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "ADD",
      "path": "16"
    },
    "2366": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2367": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2368": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2369": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2370": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2371": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2372": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "SUB",
      "path": "16"
    },
    "2373": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2375": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "ADD",
      "path": "16"
    },
    "2376": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2377": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2378": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5233,
        5272
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2379": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5386
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x97A"
    },
    "2382": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5360,
        5366
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2383": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95E"
    },
    "2386": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5375
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2387": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5380,
        5384
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2388": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5385
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2393": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5379
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C0E"
    },
    "2396": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5385
      ],
      "op": "AND",
      "path": "16"
    },
    "2397": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5368,
        5385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2398": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5368,
        5385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2401": {
      "op": "DUP1"
    },
    "2402": {
      "op": "MLOAD"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "2408": {
      "op": "DUP4"
    },
    "2409": {
      "op": "CODECOPY"
    },
    "2410": {
      "op": "DUP2"
    },
    "2411": {
      "op": "MLOAD"
    },
    "2412": {
      "op": "SWAP2"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2415": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5386
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2416": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5386
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2421": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "2424": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5386
      ],
      "op": "AND",
      "path": "16"
    },
    "2425": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        5334,
        5386
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2426": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        5334,
        5386
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2427": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "POP",
      "path": "16"
    },
    "2428": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "POP",
      "path": "16"
    },
    "2429": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "POP",
      "path": "16"
    },
    "2430": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4684,
        5393
      ],
      "op": "POP",
      "path": "16"
    },
    "2431": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        4684,
        5393
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2432": {
      "offset": [
        1332,
        1414
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2433": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "2454": {
      "offset": [
        1332,
        1414
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2455": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1332,
        1414
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2456": {
      "offset": [
        1420,
        1502
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2457": {
      "offset": [
        1459,
        1501
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2478": {
      "offset": [
        1420,
        1502
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2479": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1420,
        1502
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2480": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2481": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6206,
        6212
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 10,
      "value": "0x9"
    },
    "2483": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6206,
        6212
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "SUB"
    },
    "2492": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6206,
        6212
      ],
      "op": "AND",
      "path": "16"
    },
    "2493": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6202
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2494": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6212
      ],
      "op": "EQ",
      "path": "16"
    },
    "2495": {
      "branch": 83,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6212
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2496": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6240
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9D3"
    },
    "2499": {
      "branch": 83,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6240
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2500": {
      "op": "POP"
    },
    "2501": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6230,
        6240
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2503": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6230,
        6240
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6230,
        6240
      ],
      "op": "AND",
      "path": "16"
    },
    "2513": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6216,
        6226
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2514": {
      "branch": 84,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6216,
        6240
      ],
      "op": "EQ",
      "path": "16"
    },
    "2515": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6240
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2516": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6268
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2517": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6268
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E8"
    },
    "2520": {
      "branch": 84,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6268
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6258,
        6268
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "2524": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6258,
        6268
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2531": {
      "op": "SHL"
    },
    "2532": {
      "op": "SUB"
    },
    "2533": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6258,
        6268
      ],
      "op": "AND",
      "path": "16"
    },
    "2534": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6244,
        6254
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2535": {
      "branch": 85,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6244,
        6268
      ],
      "op": "EQ",
      "path": "16"
    },
    "2536": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6192,
        6268
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2537": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA24"
    },
    "2540": {
      "branch": 85,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2541": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2543": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2544": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2551": {
      "op": "SHL"
    },
    "2552": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2553": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2554": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2556": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2558": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2559": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "ADD",
      "path": "16"
    },
    "2560": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2561": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2563": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2565": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2566": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "ADD",
      "path": "16"
    },
    "2567": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2568": {
      "op": "PUSH8",
      "value": "0x216B656570657273"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2582": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2583": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "ADD",
      "path": "16"
    },
    "2584": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2585": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2586": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2587": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2588": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2589": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2590": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "SUB",
      "path": "16"
    },
    "2591": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2593": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "ADD",
      "path": "16"
    },
    "2594": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2595": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2596": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6184,
        6281
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2597": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 11,
      "value": "0x4"
    },
    "2599": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2600": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2601": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2603": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2604": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2605": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2612": {
      "op": "SHL"
    },
    "2613": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2614": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2615": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "2636": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2637": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2638": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "ADD",
      "path": "16"
    },
    "2639": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2640": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2641": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2642": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2643": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2653": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2654": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "AND",
      "path": "16"
    },
    "2655": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2656": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6317
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE5C011E"
    },
    "2661": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6317
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2662": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2664": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2665": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2666": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "ADD",
      "path": "16"
    },
    "2667": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2668": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2670": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2671": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2672": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2673": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2674": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2675": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "SUB",
      "path": "16"
    },
    "2676": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "ADD",
      "path": "16"
    },
    "2677": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2678": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2679": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6303,
        6308
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2680": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2681": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2682": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "ISZERO"
    },
    "2685": {
      "op": "PUSH2",
      "value": "0xA85"
    },
    "2688": {
      "op": "JUMPI"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2691": {
      "op": "DUP1"
    },
    "2692": {
      "op": "REVERT"
    },
    "2693": {
      "op": "JUMPDEST"
    },
    "2694": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "POP",
      "path": "16"
    },
    "2695": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "GAS",
      "path": "16"
    },
    "2696": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "CALL",
      "path": "16"
    },
    "2697": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6291,
        6324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2698": {
      "op": "DUP1"
    },
    "2699": {
      "op": "ISZERO"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2703": {
      "op": "JUMPI"
    },
    "2704": {
      "op": "RETURNDATASIZE"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2707": {
      "op": "DUP1"
    },
    "2708": {
      "op": "RETURNDATACOPY"
    },
    "2709": {
      "op": "RETURNDATASIZE"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2712": {
      "op": "REVERT"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2718": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2719": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2720": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2727": {
      "op": "SHL"
    },
    "2728": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2729": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2730": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6379,
        6383
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "2731": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2733": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2734": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "ADD",
      "path": "16"
    },
    "2735": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2736": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2737": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2738": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6334,
        6346
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2740": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6334,
        6346
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2741": {
      "op": "POP"
    },
    "2742": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2763": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        830,
        872
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6370
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "2770": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6370
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2771": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2773": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2774": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2775": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "ADD",
      "path": "16"
    },
    "2776": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2777": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2779": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2780": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2781": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2782": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2783": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2784": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2785": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SUB",
      "path": "16"
    },
    "2786": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "ADD",
      "path": "16"
    },
    "2787": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2788": {
      "offset": [
        830,
        872
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2789": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2790": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2791": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2792": {
      "op": "DUP1"
    },
    "2793": {
      "op": "ISZERO"
    },
    "2794": {
      "op": "PUSH2",
      "value": "0xAF2"
    },
    "2797": {
      "op": "JUMPI"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2800": {
      "op": "DUP1"
    },
    "2801": {
      "op": "REVERT"
    },
    "2802": {
      "op": "JUMPDEST"
    },
    "2803": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "POP",
      "path": "16"
    },
    "2804": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "GAS",
      "path": "16"
    },
    "2805": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2806": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2807": {
      "op": "DUP1"
    },
    "2808": {
      "op": "ISZERO"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xB06"
    },
    "2812": {
      "op": "JUMPI"
    },
    "2813": {
      "op": "RETURNDATASIZE"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2816": {
      "op": "DUP1"
    },
    "2817": {
      "op": "RETURNDATACOPY"
    },
    "2818": {
      "op": "RETURNDATASIZE"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2821": {
      "op": "REVERT"
    },
    "2822": {
      "op": "JUMPDEST"
    },
    "2823": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "POP",
      "path": "16"
    },
    "2824": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "POP",
      "path": "16"
    },
    "2825": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "POP",
      "path": "16"
    },
    "2826": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "POP",
      "path": "16"
    },
    "2827": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2829": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2830": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2833": {
      "op": "DUP2"
    },
    "2834": {
      "op": "LT"
    },
    "2835": {
      "op": "ISZERO"
    },
    "2836": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2839": {
      "op": "JUMPI"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2842": {
      "op": "DUP1"
    },
    "2843": {
      "op": "REVERT"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "POP"
    },
    "2846": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2847": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6349,
        6385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6399,
        6407
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2850": {
      "branch": 86,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6399,
        6407
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2851": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6395,
        6919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB1"
    },
    "2854": {
      "branch": 86,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6395,
        6919
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2855": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2857": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB43"
    },
    "2860": {
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2710"
    },
    "2863": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "2866": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6451,
        6458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2868": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6451,
        6458
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2869": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6446
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2870": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D64"
    },
    "2873": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6450
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2874": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6459
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2875": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6459
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2876": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6459
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2881": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6459
      ],
      "op": "AND",
      "path": "16"
    },
    "2882": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2883": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6442,
        6480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2884": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6423,
        6480
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6494,
        6535
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 12,
      "value": "0xB7E"
    },
    "2889": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2910": {
      "offset": [
        1098,
        1140
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2931": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6423,
        6480
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2932": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6494,
        6535
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2937": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6494,
        6518
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "2940": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6494,
        6535
      ],
      "op": "AND",
      "path": "16"
    },
    "2941": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6494,
        6535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2942": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6494,
        6535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2943": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6574
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 13,
      "value": "0xB8E"
    },
    "2946": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6560
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2947": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6565,
        6573
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2948": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6574
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2953": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6564
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C0E"
    },
    "2956": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6574
      ],
      "op": "AND",
      "path": "16"
    },
    "2957": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6556,
        6574
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2958": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6556,
        6574
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2959": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6613,
        6616
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x5"
    },
    "2961": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6613,
        6616
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2962": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6549,
        6574
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2963": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6549,
        6574
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2964": {
      "op": "POP"
    },
    "2965": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6620
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBC4"
    },
    "2968": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2969": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2990": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        830,
        872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "op": "SUB"
    },
    "2999": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6613,
        6616
      ],
      "op": "AND",
      "path": "16"
    },
    "3000": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6613,
        6616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3002": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6620
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3007": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6612
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E56"
    },
    "3010": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6620
      ],
      "op": "AND",
      "path": "16"
    },
    "3011": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6589,
        6620
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3012": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6589,
        6620
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3013": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6658,
        6661
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x5"
    },
    "3015": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6658,
        6661
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3016": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6668
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF6"
    },
    "3019": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6668
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3020": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3041": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        830,
        872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "op": "SUB"
    },
    "3050": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6658,
        6661
      ],
      "op": "AND",
      "path": "16"
    },
    "3051": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6663,
        6667
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3052": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6668
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3057": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6657
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E56"
    },
    "3060": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6668
      ],
      "op": "AND",
      "path": "16"
    },
    "3061": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6634,
        6668
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3062": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6634,
        6668
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3063": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3065": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3066": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3067": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6721,
        6722
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3069": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3070": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3071": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3072": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "3074": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3075": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "ADD",
      "path": "16"
    },
    "3076": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3077": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3078": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3079": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3081": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6704
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3082": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3084": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3085": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "ADD",
      "path": "16"
    },
    "3086": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6704
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3087": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6704
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3088": {
      "op": "CODESIZE"
    },
    "3089": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3090": {
      "op": "CODECOPY"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "op": "SWAP1"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6707,
        6723
      ],
      "op": "POP",
      "path": "16"
    },
    "3095": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6723
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3096": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6683,
        6723
      ],
      "op": "POP",
      "path": "16"
    },
    "3097": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3118": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6741
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 16
    },
    "3119": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6742,
        6743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3121": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3122": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3123": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3124": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "LT",
      "path": "16"
    },
    "3125": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC3A"
    },
    "3128": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3129": {
      "dev": "Index out of range",
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "INVALID",
      "path": "16"
    },
    "3130": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3131": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3133": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "MUL",
      "path": "16"
    },
    "3134": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3136": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "ADD",
      "path": "16"
    },
    "3137": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6744
      ],
      "op": "ADD",
      "path": "16"
    },
    "3138": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "AND",
      "path": "16"
    },
    "3148": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3149": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3156": {
      "op": "SHL"
    },
    "3157": {
      "op": "SUB"
    },
    "3158": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "AND",
      "path": "16"
    },
    "3159": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3160": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3161": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "POP",
      "path": "16"
    },
    "3162": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6737,
        6750
      ],
      "op": "POP",
      "path": "16"
    },
    "3163": {
      "offset": [
        1459,
        1501
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "3184": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6768
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 17
    },
    "3185": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6769,
        6770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3187": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3188": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3189": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3190": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "LT",
      "path": "16"
    },
    "3191": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC7C"
    },
    "3194": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3195": {
      "dev": "Index out of range",
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "INVALID",
      "path": "16"
    },
    "3196": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3197": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3199": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "MUL",
      "path": "16"
    },
    "3200": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3202": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "ADD",
      "path": "16"
    },
    "3203": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6771
      ],
      "op": "ADD",
      "path": "16"
    },
    "3204": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "AND",
      "path": "16"
    },
    "3214": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3215": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3222": {
      "op": "SHL"
    },
    "3223": {
      "op": "SUB"
    },
    "3224": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "AND",
      "path": "16"
    },
    "3225": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3226": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3227": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "POP",
      "path": "16"
    },
    "3228": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6764,
        6778
      ],
      "op": "POP",
      "path": "16"
    },
    "3229": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "3250": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6796
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 18
    },
    "3251": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6797,
        6798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3253": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3254": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3255": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3256": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "LT",
      "path": "16"
    },
    "3257": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBE"
    },
    "3260": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3261": {
      "dev": "Index out of range",
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "INVALID",
      "path": "16"
    },
    "3262": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6806
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3272": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6806
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3273": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6806
      ],
      "op": "AND",
      "path": "16"
    },
    "3274": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3276": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3277": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3278": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "MUL",
      "path": "16"
    },
    "3279": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3280": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3281": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3282": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "ADD",
      "path": "16"
    },
    "3283": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6799
      ],
      "op": "ADD",
      "path": "16"
    },
    "3284": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6792,
        6806
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3285": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6825,
        6828
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x5"
    },
    "3287": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6825,
        6828
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3288": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6825,
        6828
      ],
      "op": "AND",
      "path": "16"
    },
    "3289": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6854
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x38ED1739"
    },
    "3294": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6855,
        6859
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3295": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6825,
        6828
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3297": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6873,
        6877
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3298": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6887,
        6891
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3299": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF4"
    },
    "3302": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6897
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "3303": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6902,
        6906
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x708"
    },
    "3306": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6907
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3311": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6901
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0A"
    },
    "3314": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6907
      ],
      "op": "AND",
      "path": "16"
    },
    "3315": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6894,
        6907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3316": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6894,
        6907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3317": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3319": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3320": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3321": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3326": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "AND",
      "path": "16"
    },
    "3327": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3329": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SHL",
      "path": "16"
    },
    "3330": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3331": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3332": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3334": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3335": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3336": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3337": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3338": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3339": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3341": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3342": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3343": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3344": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3345": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3347": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3348": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3349": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3351": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3352": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "AND",
      "path": "16"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "AND",
      "path": "16"
    },
    "3371": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3372": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3373": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3375": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3376": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3377": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3378": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3379": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3381": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3382": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3383": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3384": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SUB",
      "path": "16"
    },
    "3385": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3386": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3387": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3388": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3389": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3390": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3391": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3392": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3393": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3395": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3396": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3397": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3398": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3399": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3400": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3401": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3403": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3404": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3405": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3407": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MUL",
      "path": "16"
    },
    "3408": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3409": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3410": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "DUP4"
    },
    "3415": {
      "op": "DUP2"
    },
    "3416": {
      "op": "LT"
    },
    "3417": {
      "op": "ISZERO"
    },
    "3418": {
      "op": "PUSH2",
      "value": "0xD6D"
    },
    "3421": {
      "op": "JUMPI"
    },
    "3422": {
      "op": "DUP2"
    },
    "3423": {
      "op": "DUP2"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "MLOAD"
    },
    "3426": {
      "op": "DUP4"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3436": {
      "op": "JUMP"
    },
    "3437": {
      "op": "JUMPDEST"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3440": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3441": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3442": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3443": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3444": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ADD",
      "path": "16"
    },
    "3445": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "3446": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3447": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3448": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3449": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3450": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3451": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3452": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3453": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3455": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3457": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3458": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3459": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3460": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "SUB",
      "path": "16"
    },
    "3461": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3462": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3464": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3465": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3466": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3467": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3468": {
      "op": "DUP1"
    },
    "3469": {
      "op": "ISZERO"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3473": {
      "op": "JUMPI"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3476": {
      "op": "DUP1"
    },
    "3477": {
      "op": "REVERT"
    },
    "3478": {
      "op": "JUMPDEST"
    },
    "3479": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3480": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "GAS",
      "path": "16"
    },
    "3481": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "CALL",
      "path": "16"
    },
    "3482": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3483": {
      "op": "DUP1"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0xDAA"
    },
    "3488": {
      "op": "JUMPI"
    },
    "3489": {
      "op": "RETURNDATASIZE"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3492": {
      "op": "DUP1"
    },
    "3493": {
      "op": "RETURNDATACOPY"
    },
    "3494": {
      "op": "RETURNDATASIZE"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "REVERT"
    },
    "3498": {
      "op": "JUMPDEST"
    },
    "3499": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3500": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3501": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3502": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6821,
        6908
      ],
      "op": "POP",
      "path": "16"
    },
    "3503": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6395,
        6919
      ],
      "op": "POP",
      "path": "16"
    },
    "3504": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6395,
        6919
      ],
      "op": "POP",
      "path": "16"
    },
    "3505": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6395,
        6919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3506": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3508": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3509": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3510": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3519": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3520": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6975,
        6979
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3521": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3523": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3524": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "ADD",
      "path": "16"
    },
    "3525": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3526": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3527": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3528": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6928,
        6941
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3530": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6928,
        6941
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3531": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "3552": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        1371,
        1413
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3553": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6966
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3558": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6966
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3559": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3561": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3562": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3563": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "ADD",
      "path": "16"
    },
    "3564": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3565": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3567": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3568": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3569": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3570": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3571": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3572": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3573": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SUB",
      "path": "16"
    },
    "3574": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "ADD",
      "path": "16"
    },
    "3575": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3576": {
      "offset": [
        1371,
        1413
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3577": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3578": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3579": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "ISZERO"
    },
    "3582": {
      "op": "PUSH2",
      "value": "0xE06"
    },
    "3585": {
      "op": "JUMPI"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3588": {
      "op": "DUP1"
    },
    "3589": {
      "op": "REVERT"
    },
    "3590": {
      "op": "JUMPDEST"
    },
    "3591": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "POP",
      "path": "16"
    },
    "3592": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "GAS",
      "path": "16"
    },
    "3593": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3594": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "ISZERO"
    },
    "3597": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3600": {
      "op": "JUMPI"
    },
    "3601": {
      "op": "RETURNDATASIZE"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3604": {
      "op": "DUP1"
    },
    "3605": {
      "op": "RETURNDATACOPY"
    },
    "3606": {
      "op": "RETURNDATASIZE"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3609": {
      "op": "REVERT"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "POP",
      "path": "16"
    },
    "3612": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "POP",
      "path": "16"
    },
    "3613": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "POP",
      "path": "16"
    },
    "3614": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "POP",
      "path": "16"
    },
    "3615": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3617": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3618": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3621": {
      "op": "DUP2"
    },
    "3622": {
      "op": "LT"
    },
    "3623": {
      "op": "ISZERO"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xE30"
    },
    "3627": {
      "op": "JUMPI"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3630": {
      "op": "DUP1"
    },
    "3631": {
      "op": "REVERT"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "POP"
    },
    "3634": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3635": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6944,
        6981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3636": {
      "op": "POP"
    },
    "3637": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6995,
        7004
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3638": {
      "branch": 87,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6995,
        7004
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3639": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6991,
        7181
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF71"
    },
    "3642": {
      "branch": 87,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6991,
        7181
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3643": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7020,
        7054
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 20,
      "value": "0xE74"
    },
    "3646": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "3667": {
      "offset": [
        920,
        962
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756"
    },
    "3688": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7052,
        7053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3690": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7020,
        7054
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3695": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7020,
        7044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E56"
    },
    "3698": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7020,
        7054
      ],
      "op": "AND",
      "path": "16"
    },
    "3699": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7020,
        7054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3700": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7020,
        7054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3701": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7068,
        7106
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 21,
      "value": "0xEAD"
    },
    "3704": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "3725": {
      "offset": [
        920,
        962
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756"
    },
    "3746": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7100,
        7105
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3747": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7068,
        7106
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3752": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7068,
        7092
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E56"
    },
    "3755": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7068,
        7106
      ],
      "op": "AND",
      "path": "16"
    },
    "3756": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7068,
        7106
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3757": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7068,
        7106
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3758": {
      "offset": [
        920,
        962
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7149
      ],
      "op": "AND",
      "path": "16",
      "statement": 22
    },
    "3788": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7149
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x29B2F34"
    },
    "3793": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3795": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3796": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3797": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "3799": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3800": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3802": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3803": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3804": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7151,
        7152
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3806": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3807": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3808": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3810": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3811": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7154,
        7155
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3813": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3814": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3815": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3817": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3818": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7157,
        7162
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3819": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3820": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3821": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3823": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3824": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7164,
        7165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3826": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3827": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3828": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3829": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7168,
        7169
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3831": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3833": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3834": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3835": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3840": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "AND",
      "path": "16"
    },
    "3841": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3843": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "SHL",
      "path": "16"
    },
    "3844": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3845": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3846": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3848": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3849": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3850": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3851": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3853": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3855": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MUL",
      "path": "16"
    },
    "3856": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3857": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3858": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "JUMPDEST"
    },
    "3862": {
      "op": "DUP4"
    },
    "3863": {
      "op": "DUP2"
    },
    "3864": {
      "op": "LT"
    },
    "3865": {
      "op": "ISZERO"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0xF2D"
    },
    "3869": {
      "op": "JUMPI"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "ADD"
    },
    "3873": {
      "op": "MLOAD"
    },
    "3874": {
      "op": "DUP4"
    },
    "3875": {
      "op": "DUP3"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xF15"
    },
    "3884": {
      "op": "JUMP"
    },
    "3885": {
      "op": "JUMPDEST"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3888": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3889": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3890": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3891": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3892": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3893": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3894": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3895": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3896": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3898": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ADD",
      "path": "16"
    },
    "3899": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3900": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3901": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3902": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3903": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3905": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3907": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3908": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3909": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3910": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "SUB",
      "path": "16"
    },
    "3911": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3912": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3914": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3915": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3916": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3917": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3918": {
      "op": "DUP1"
    },
    "3919": {
      "op": "ISZERO"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "3923": {
      "op": "JUMPI"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3926": {
      "op": "DUP1"
    },
    "3927": {
      "op": "REVERT"
    },
    "3928": {
      "op": "JUMPDEST"
    },
    "3929": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3930": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "GAS",
      "path": "16"
    },
    "3931": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "CALL",
      "path": "16"
    },
    "3932": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3933": {
      "op": "DUP1"
    },
    "3934": {
      "op": "ISZERO"
    },
    "3935": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3938": {
      "op": "JUMPI"
    },
    "3939": {
      "op": "RETURNDATASIZE"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP1"
    },
    "3943": {
      "op": "RETURNDATACOPY"
    },
    "3944": {
      "op": "RETURNDATASIZE"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3947": {
      "op": "REVERT"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3950": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3951": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3952": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7120,
        7170
      ],
      "op": "POP",
      "path": "16"
    },
    "3953": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6991,
        7181
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3954": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3956": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3957": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3958": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3965": {
      "op": "SHL"
    },
    "3966": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3967": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3968": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7237,
        7241
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3969": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3971": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3972": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "ADD",
      "path": "16"
    },
    "3973": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3974": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3975": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3976": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7190,
        7203
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3978": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7190,
        7203
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3981": {
      "op": "DUP1"
    },
    "3982": {
      "op": "MLOAD"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "3988": {
      "op": "DUP4"
    },
    "3989": {
      "op": "CODECOPY"
    },
    "3990": {
      "op": "DUP2"
    },
    "3991": {
      "op": "MLOAD"
    },
    "3992": {
      "op": "SWAP2"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3995": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7228
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "4000": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7228
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4001": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4003": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4004": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4005": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "ADD",
      "path": "16"
    },
    "4006": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4007": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4009": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4010": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4011": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4012": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4013": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4014": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4015": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SUB",
      "path": "16"
    },
    "4016": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "ADD",
      "path": "16"
    },
    "4017": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4018": {
      "offset": [
        743,
        785
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4019": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4020": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4021": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4022": {
      "op": "DUP1"
    },
    "4023": {
      "op": "ISZERO"
    },
    "4024": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4027": {
      "op": "JUMPI"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4030": {
      "op": "DUP1"
    },
    "4031": {
      "op": "REVERT"
    },
    "4032": {
      "op": "JUMPDEST"
    },
    "4033": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "POP",
      "path": "16"
    },
    "4034": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "GAS",
      "path": "16"
    },
    "4035": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4036": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "ISZERO"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4042": {
      "op": "JUMPI"
    },
    "4043": {
      "op": "RETURNDATASIZE"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4046": {
      "op": "DUP1"
    },
    "4047": {
      "op": "RETURNDATACOPY"
    },
    "4048": {
      "op": "RETURNDATASIZE"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "REVERT"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "POP",
      "path": "16"
    },
    "4054": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "POP",
      "path": "16"
    },
    "4055": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "POP",
      "path": "16"
    },
    "4056": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "POP",
      "path": "16"
    },
    "4057": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4059": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4060": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "LT"
    },
    "4065": {
      "op": "ISZERO"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFEA"
    },
    "4069": {
      "op": "JUMPI"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4072": {
      "op": "DUP1"
    },
    "4073": {
      "op": "REVERT"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4077": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7206,
        7243
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7257,
        7266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4080": {
      "branch": 88,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7257,
        7266
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4081": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7253,
        7594
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1102"
    },
    "4084": {
      "branch": 88,
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7253,
        7594
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4085": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7282,
        7294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4087": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7340
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1011"
    },
    "4090": {
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2710"
    },
    "4093": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7319
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "4096": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7307,
        7318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4098": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7307,
        7318
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4099": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7302
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4100": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7306
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D64"
    },
    "4103": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7306
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4104": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7319
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4105": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4106": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7319
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4111": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7319
      ],
      "op": "AND",
      "path": "16"
    },
    "4112": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7297,
        7319
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4113": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7297,
        7340
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4114": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7282,
        7340
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4115": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7282,
        7340
      ],
      "op": "POP",
      "path": "16"
    },
    "4116": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7354,
        7369
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4118": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7420
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1030"
    },
    "4121": {
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2710"
    },
    "4124": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7399
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "4127": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7382,
        7398
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4129": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7382,
        7398
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4130": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7377
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4131": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D64"
    },
    "4134": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7381
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4135": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7399
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4136": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7399
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4137": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7399
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4142": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7399
      ],
      "op": "AND",
      "path": "16"
    },
    "4143": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7372,
        7399
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4144": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7372,
        7420
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4145": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7354,
        7420
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4146": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7354,
        7420
      ],
      "op": "POP",
      "path": "16"
    },
    "4147": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7434,
        7500
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 23,
      "value": "0x10CB"
    },
    "4150": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "4152": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4154": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4155": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4156": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4157": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "4160": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "EXP",
      "path": "16"
    },
    "4161": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4162": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "DIV",
      "path": "16"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "op": "SUB"
    },
    "4171": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7472,
        7482
      ],
      "op": "AND",
      "path": "16"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "op": "SUB"
    },
    "4180": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7491
      ],
      "op": "AND",
      "path": "16"
    },
    "4181": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7491
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9EC5A894"
    },
    "4186": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4188": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4189": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4190": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4195": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "AND",
      "path": "16"
    },
    "4196": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "4198": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "SHL",
      "path": "16"
    },
    "4199": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4200": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4201": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4203": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "ADD",
      "path": "16"
    },
    "4204": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4206": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4208": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4209": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4210": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4211": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "SUB",
      "path": "16"
    },
    "4212": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4213": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4214": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4215": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4216": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4217": {
      "op": "DUP1"
    },
    "4218": {
      "op": "ISZERO"
    },
    "4219": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4222": {
      "op": "JUMPI"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "DUP1"
    },
    "4226": {
      "op": "REVERT"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "POP",
      "path": "16"
    },
    "4229": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "GAS",
      "path": "16"
    },
    "4230": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4231": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4232": {
      "op": "DUP1"
    },
    "4233": {
      "op": "ISZERO"
    },
    "4234": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "4237": {
      "op": "JUMPI"
    },
    "4238": {
      "op": "RETURNDATASIZE"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "DUP1"
    },
    "4242": {
      "op": "RETURNDATACOPY"
    },
    "4243": {
      "op": "RETURNDATASIZE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4246": {
      "op": "REVERT"
    },
    "4247": {
      "op": "JUMPDEST"
    },
    "4248": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "POP",
      "path": "16"
    },
    "4249": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "POP",
      "path": "16"
    },
    "4250": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "POP",
      "path": "16"
    },
    "4251": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "POP",
      "path": "16"
    },
    "4252": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4254": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4255": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4258": {
      "op": "DUP2"
    },
    "4259": {
      "op": "LT"
    },
    "4260": {
      "op": "ISZERO"
    },
    "4261": {
      "op": "PUSH2",
      "value": "0x10AD"
    },
    "4264": {
      "op": "JUMPI"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "DUP1"
    },
    "4268": {
      "op": "REVERT"
    },
    "4269": {
      "op": "JUMPDEST"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7460,
        7493
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "DUP1"
    },
    "4275": {
      "op": "MLOAD"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4278": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "4281": {
      "op": "DUP4"
    },
    "4282": {
      "op": "CODECOPY"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "MLOAD"
    },
    "4285": {
      "op": "SWAP2"
    },
    "4286": {
      "op": "MSTORE"
    },
    "4287": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4288": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7495,
        7499
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4289": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7434,
        7500
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4294": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7434,
        7459
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "4297": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7434,
        7500
      ],
      "op": "AND",
      "path": "16"
    },
    "4298": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7434,
        7500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4299": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7434,
        7500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4300": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7540,
        7550
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x8"
    },
    "4302": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7540,
        7550
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4303": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10F7"
    },
    "4306": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7560
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4309": {
      "op": "DUP1"
    },
    "4310": {
      "op": "MLOAD"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "4316": {
      "op": "DUP4"
    },
    "4317": {
      "op": "CODECOPY"
    },
    "4318": {
      "op": "DUP2"
    },
    "4319": {
      "op": "MLOAD"
    },
    "4320": {
      "op": "SWAP2"
    },
    "4321": {
      "op": "MSTORE"
    },
    "4322": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7540,
        7550
      ],
      "op": "AND",
      "path": "16"
    },
    "4332": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7552,
        7559
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4333": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7560
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4338": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7539
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "4341": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7560
      ],
      "op": "AND",
      "path": "16"
    },
    "4342": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7514,
        7560
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4343": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7514,
        7560
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4344": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7574,
        7583
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 25,
      "value": "0x10FF"
    },
    "4347": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7574,
        7581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AA5"
    },
    "4350": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7574,
        7583
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4351": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7574,
        7583
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4352": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7253,
        7594
      ],
      "op": "POP",
      "path": "16"
    },
    "4353": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7253,
        7594
      ],
      "op": "POP",
      "path": "16"
    },
    "4354": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7253,
        7594
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4355": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 26,
      "value": "0x4"
    },
    "4357": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4358": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4359": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4361": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4362": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4363": {
      "op": "PUSH4",
      "value": "0x7C1E845D"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4372": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4373": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4374": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "op": "SUB"
    },
    "4383": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4384": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4385": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "AND",
      "path": "16"
    },
    "4386": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4387": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7626
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF83D08BA"
    },
    "4392": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7626
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4393": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4394": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4395": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "ADD",
      "path": "16"
    },
    "4396": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4397": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4399": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4400": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4401": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4402": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4403": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "SUB",
      "path": "16"
    },
    "4404": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "ADD",
      "path": "16"
    },
    "4405": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4406": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4407": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7615,
        7620
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4408": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4409": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4410": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "ISZERO"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1145"
    },
    "4416": {
      "op": "JUMPI"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "DUP1"
    },
    "4420": {
      "op": "REVERT"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "POP",
      "path": "16"
    },
    "4423": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "GAS",
      "path": "16"
    },
    "4424": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "CALL",
      "path": "16"
    },
    "4425": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7603,
        7628
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4426": {
      "op": "DUP1"
    },
    "4427": {
      "op": "ISZERO"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1159"
    },
    "4431": {
      "op": "JUMPI"
    },
    "4432": {
      "op": "RETURNDATASIZE"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4435": {
      "op": "DUP1"
    },
    "4436": {
      "op": "RETURNDATACOPY"
    },
    "4437": {
      "op": "RETURNDATASIZE"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4440": {
      "op": "REVERT"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "POP"
    },
    "4444": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 27,
      "value": "0xA"
    },
    "4446": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7653
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4447": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7664
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1171"
    },
    "4450": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7664
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7658,
        7663
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4455": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7664
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4460": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7657
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0A"
    },
    "4463": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7664
      ],
      "op": "AND",
      "path": "16"
    },
    "4464": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "i",
      "offset": [
        7647,
        7664
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4465": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7647,
        7664
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4466": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7638,
        7644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "4468": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7638,
        7664
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4469": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7638,
        7664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4470": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7638,
        7664
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4471": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0x40"
    },
    "4473": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4474": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4475": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4476": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4477": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4478": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4480": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4481": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "ADD",
      "path": "16"
    },
    "4482": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4483": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4484": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4485": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4486": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4487": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4488": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939"
    },
    "4521": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4522": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4523": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4524": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SUB",
      "path": "16"
    },
    "4525": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4526": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4527": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "ADD",
      "path": "16"
    },
    "4528": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4529": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        7679,
        7703
      ],
      "op": "LOG1",
      "path": "16"
    },
    "4530": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "POP",
      "path": "16"
    },
    "4531": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "POP",
      "path": "16"
    },
    "4532": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "offset": [
        6148,
        7710
      ],
      "op": "POP",
      "path": "16"
    },
    "4533": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "o",
      "offset": [
        6148,
        7710
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4534": {
      "offset": [
        1058,
        1141
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4535": {
      "offset": [
        1098,
        1140
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "4556": {
      "offset": [
        1058,
        1141
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4557": {
      "fn": "StrategyCurveBBTCVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1058,
        1141
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4558": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4559": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4327,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x7"
    },
    "4561": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4327,
        4337
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4562": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4278,
        4293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4564": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4278,
        4293
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4571": {
      "op": "SHL"
    },
    "4572": {
      "op": "SUB"
    },
    "4573": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4327,
        4337
      ],
      "op": "AND",
      "path": "16"
    },
    "4574": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4575": {
      "branch": 89,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4313,
        4337
      ],
      "op": "EQ",
      "path": "16"
    },
    "4576": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x121E"
    },
    "4579": {
      "branch": 89,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4580": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4582": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4583": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4590": {
      "op": "SHL"
    },
    "4591": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4592": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4593": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4595": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4597": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4598": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "ADD",
      "path": "16"
    },
    "4599": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4600": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "4602": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4604": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4605": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "ADD",
      "path": "16"
    },
    "4606": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4607": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4624": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4625": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "ADD",
      "path": "16"
    },
    "4626": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4627": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4628": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4629": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4630": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4631": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4632": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "SUB",
      "path": "16"
    },
    "4633": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "4635": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "ADD",
      "path": "16"
    },
    "4636": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4637": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4638": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4305,
        4353
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "MLOAD"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4645": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "4648": {
      "op": "DUP4"
    },
    "4649": {
      "op": "CODECOPY"
    },
    "4650": {
      "op": "DUP2"
    },
    "4651": {
      "op": "MLOAD"
    },
    "4652": {
      "op": "SWAP2"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4660": {
      "op": "SHL"
    },
    "4661": {
      "op": "SUB"
    },
    "4662": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4371,
        4394
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 30
    },
    "4663": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4371,
        4394
      ],
      "op": "AND",
      "path": "16"
    },
    "4664": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4371,
        4394
      ],
      "op": "EQ",
      "path": "16"
    },
    "4665": {
      "branch": 90,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4371,
        4394
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4666": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1273"
    },
    "4669": {
      "branch": 90,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4670": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4672": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4673": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4680": {
      "op": "SHL"
    },
    "4681": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4682": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4683": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4685": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4687": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4688": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4689": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "ADD",
      "path": "16"
    },
    "4690": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4691": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4692": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4693": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4694": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4696": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4697": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "ADD",
      "path": "16"
    },
    "4698": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4699": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4706": {
      "op": "SHL"
    },
    "4707": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4709": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4710": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "ADD",
      "path": "16"
    },
    "4711": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4712": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4713": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4714": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4715": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4716": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4717": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SUB",
      "path": "16"
    },
    "4718": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "4720": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "ADD",
      "path": "16"
    },
    "4721": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4722": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4723": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4363,
        4403
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4724": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4751": {
      "op": "SHL"
    },
    "4752": {
      "op": "SUB"
    },
    "4753": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4421,
        4443
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 31
    },
    "4754": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4421,
        4443
      ],
      "op": "AND",
      "path": "16"
    },
    "4755": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4421,
        4443
      ],
      "op": "EQ",
      "path": "16"
    },
    "4756": {
      "branch": 91,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4421,
        4443
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4757": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CB"
    },
    "4760": {
      "branch": 91,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4761": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4763": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4764": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4771": {
      "op": "SHL"
    },
    "4772": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4773": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4774": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4776": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4778": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4779": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "ADD",
      "path": "16"
    },
    "4780": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4781": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "4783": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4785": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4786": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "ADD",
      "path": "16"
    },
    "4787": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4788": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4794": {
      "op": "SHL"
    },
    "4795": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4797": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4798": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "ADD",
      "path": "16"
    },
    "4799": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4800": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4801": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4802": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4803": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4804": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4805": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "SUB",
      "path": "16"
    },
    "4806": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "4808": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "ADD",
      "path": "16"
    },
    "4809": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4810": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4811": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4413,
        4451
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4812": {
      "offset": [
        1371,
        1413
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "SUB"
    },
    "4841": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4469,
        4492
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 32
    },
    "4842": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4469,
        4492
      ],
      "op": "AND",
      "path": "16"
    },
    "4843": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4469,
        4492
      ],
      "op": "EQ",
      "path": "16"
    },
    "4844": {
      "branch": 92,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4469,
        4492
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4845": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1326"
    },
    "4848": {
      "branch": 92,
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4849": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4851": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4852": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4859": {
      "op": "SHL"
    },
    "4860": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4861": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4862": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4864": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4866": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4867": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4868": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "ADD",
      "path": "16"
    },
    "4869": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4870": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4871": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4872": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4873": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4875": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4876": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "ADD",
      "path": "16"
    },
    "4877": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4878": {
      "op": "PUSH4",
      "value": "0x77627463"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4885": {
      "op": "SHL"
    },
    "4886": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4888": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4889": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "ADD",
      "path": "16"
    },
    "4890": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4891": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4892": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4893": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4894": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4895": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4896": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SUB",
      "path": "16"
    },
    "4897": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "4899": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "ADD",
      "path": "16"
    },
    "4900": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4901": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4902": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4461,
        4501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4903": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 33,
      "value": "0x40"
    },
    "4905": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4906": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4907": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4914": {
      "op": "SHL"
    },
    "4915": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4916": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4917": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4546,
        4550
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4918": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4920": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4921": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "ADD",
      "path": "16"
    },
    "4922": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4923": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4924": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4931": {
      "op": "SHL"
    },
    "4932": {
      "op": "SUB"
    },
    "4933": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4934": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "AND",
      "path": "16"
    },
    "4935": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4936": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "4941": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4942": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4944": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4945": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4946": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "ADD",
      "path": "16"
    },
    "4947": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4948": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4950": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4951": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4952": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4953": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4954": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4955": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SUB",
      "path": "16"
    },
    "4956": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "ADD",
      "path": "16"
    },
    "4957": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4958": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4537
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4959": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4960": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4961": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4962": {
      "op": "DUP1"
    },
    "4963": {
      "op": "ISZERO"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4967": {
      "op": "JUMPI"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4970": {
      "op": "DUP1"
    },
    "4971": {
      "op": "REVERT"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "POP",
      "path": "16"
    },
    "4974": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "GAS",
      "path": "16"
    },
    "4975": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4976": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4977": {
      "op": "DUP1"
    },
    "4978": {
      "op": "ISZERO"
    },
    "4979": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "4982": {
      "op": "JUMPI"
    },
    "4983": {
      "op": "RETURNDATASIZE"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4986": {
      "op": "DUP1"
    },
    "4987": {
      "op": "RETURNDATACOPY"
    },
    "4988": {
      "op": "RETURNDATASIZE"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4991": {
      "op": "REVERT"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "POP",
      "path": "16"
    },
    "4994": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "POP",
      "path": "16"
    },
    "4995": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "POP",
      "path": "16"
    },
    "4996": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "POP",
      "path": "16"
    },
    "4997": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4999": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5000": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5003": {
      "op": "DUP2"
    },
    "5004": {
      "op": "LT"
    },
    "5005": {
      "op": "ISZERO"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x1396"
    },
    "5009": {
      "op": "JUMPI"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5012": {
      "op": "DUP1"
    },
    "5013": {
      "op": "REVERT"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5017": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4582,
        4592
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 34,
      "value": "0x7"
    },
    "5019": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4582,
        4592
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5020": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5021": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5022": {
      "op": "POP"
    },
    "5023": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4602
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13BB"
    },
    "5026": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4602
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "op": "SUB"
    },
    "5035": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4581
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5036": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5037": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4581
      ],
      "op": "AND",
      "path": "16"
    },
    "5038": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4581
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5039": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4582,
        4592
      ],
      "op": "AND",
      "path": "16"
    },
    "5040": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4521,
        4552
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5041": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4602
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5046": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "5049": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4602
      ],
      "op": "AND",
      "path": "16"
    },
    "5050": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4562,
        4602
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5051": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4562,
        4602
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5052": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5053": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5054": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        4227,
        4609
      ],
      "op": "POP",
      "path": "16"
    },
    "5055": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        4227,
        4609
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5056": {
      "offset": [
        1805,
        1830
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5057": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1805,
        1830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "5059": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1805,
        1830
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "op": "SUB"
    },
    "5068": {
      "offset": [
        1805,
        1830
      ],
      "op": "AND",
      "path": "16"
    },
    "5069": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1805,
        1830
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5070": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1805,
        1830
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5071": {
      "offset": [
        1780,
        1798
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5072": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1780,
        1798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "5074": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1780,
        1798
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5081": {
      "op": "SHL"
    },
    "5082": {
      "op": "SUB"
    },
    "5083": {
      "offset": [
        1780,
        1798
      ],
      "op": "AND",
      "path": "16"
    },
    "5084": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "offset": [
        1780,
        1798
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5085": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1780,
        1798
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5086": {
      "offset": [
        792,
        873
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5087": {
      "offset": [
        830,
        872
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "5108": {
      "offset": [
        792,
        873
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5109": {
      "fn": "StrategyCurveBBTCVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        792,
        873
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5110": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5111": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3735,
        3745
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 35,
      "value": "0x8"
    },
    "5113": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3735,
        3745
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5120": {
      "op": "SHL"
    },
    "5121": {
      "op": "SUB"
    },
    "5122": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3735,
        3745
      ],
      "op": "AND",
      "path": "16"
    },
    "5123": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3731
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5124": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3745
      ],
      "op": "EQ",
      "path": "16"
    },
    "5125": {
      "branch": 93,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3745
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5126": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3773
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1419"
    },
    "5129": {
      "branch": 93,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3773
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3763,
        3773
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "5133": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3763,
        3773
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5140": {
      "op": "SHL"
    },
    "5141": {
      "op": "SUB"
    },
    "5142": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3763,
        3773
      ],
      "op": "AND",
      "path": "16"
    },
    "5143": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3749,
        3759
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5144": {
      "branch": 94,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3749,
        3773
      ],
      "op": "EQ",
      "path": "16"
    },
    "5145": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3721,
        3773
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5146": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1458"
    },
    "5149": {
      "branch": 94,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5150": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5152": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5153": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5162": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5163": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5165": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5167": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5168": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "ADD",
      "path": "16"
    },
    "5169": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5170": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5172": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5174": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5175": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "ADD",
      "path": "16"
    },
    "5176": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5177": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5191": {
      "op": "SHL"
    },
    "5192": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5194": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5195": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "ADD",
      "path": "16"
    },
    "5196": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5197": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5198": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5199": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5200": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5201": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5202": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "SUB",
      "path": "16"
    },
    "5203": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "5205": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "ADD",
      "path": "16"
    },
    "5206": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5207": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5208": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3713,
        3789
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5209": {
      "branch": 95,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3803,
        3812
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5210": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5211": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1489"
    },
    "5214": {
      "branch": 95,
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5215": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3831
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 36,
      "value": "0x5"
    },
    "5217": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5218": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5225": {
      "op": "SHL"
    },
    "5226": {
      "op": "SUB"
    },
    "5227": {
      "op": "NOT"
    },
    "5228": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "AND",
      "path": "16"
    },
    "5229": {
      "offset": [
        1190,
        1232
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "5250": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "OR",
      "path": "16"
    },
    "5251": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5252": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3828,
        3841
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5253": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B0"
    },
    "5256": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5257": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5258": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3875
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 37,
      "value": "0x5"
    },
    "5260": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5261": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "SUB"
    },
    "5270": {
      "op": "NOT"
    },
    "5271": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "AND",
      "path": "16"
    },
    "5272": {
      "offset": [
        1283,
        1325
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
    },
    "5293": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "OR",
      "path": "16"
    },
    "5294": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5295": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3872,
        3887
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5296": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3799,
        3898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5297": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "offset": [
        3659,
        3904
      ],
      "op": "POP",
      "path": "16"
    },
    "5298": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "jump": "o",
      "offset": [
        3659,
        3904
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5299": {
      "offset": [
        880,
        963
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5300": {
      "offset": [
        920,
        962
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xC45B2EEE6E09CA176CA3BB5F7EEE7C47BF93C756"
    },
    "5321": {
      "offset": [
        880,
        963
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5322": {
      "fn": "StrategyCurveBBTCVoterProxy.switchDex",
      "jump": "o",
      "offset": [
        880,
        963
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5323": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        7958,
        8069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5324": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8000,
        8007
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5326": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8062
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 38,
      "value": "0x14EC"
    },
    "5329": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8046,
        8061
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14D8"
    },
    "5332": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8046,
        8059
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B8"
    },
    "5335": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        8046,
        8061
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5336": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8046,
        8061
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5337": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8041
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14E0"
    },
    "5340": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19CC"
    },
    "5343": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        8026,
        8041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5344": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5345": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5346": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8062
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5351": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0A"
    },
    "5354": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8062
      ],
      "op": "AND",
      "path": "16"
    },
    "5355": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        8026,
        8062
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5356": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8026,
        8062
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5357": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8019,
        8062
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5358": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        8019,
        8062
      ],
      "op": "POP",
      "path": "16"
    },
    "5359": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "offset": [
        7958,
        8069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5360": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        7958,
        8069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5361": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2691,
        2855
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5362": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2768,
        2778
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0x8"
    },
    "5364": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2768,
        2778
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5371": {
      "op": "SHL"
    },
    "5372": {
      "op": "SUB"
    },
    "5373": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2768,
        2778
      ],
      "op": "AND",
      "path": "16"
    },
    "5374": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2764
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5375": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2778
      ],
      "op": "EQ",
      "path": "16"
    },
    "5376": {
      "branch": 96,
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2778
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5377": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1514"
    },
    "5380": {
      "branch": 96,
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2806
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5381": {
      "op": "POP"
    },
    "5382": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2796,
        2806
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "5384": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2796,
        2806
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5391": {
      "op": "SHL"
    },
    "5392": {
      "op": "SUB"
    },
    "5393": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2796,
        2806
      ],
      "op": "AND",
      "path": "16"
    },
    "5394": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2782,
        2792
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5395": {
      "branch": 97,
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2782,
        2806
      ],
      "op": "EQ",
      "path": "16"
    },
    "5396": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2754,
        2806
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5397": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1553"
    },
    "5400": {
      "branch": 97,
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5401": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5403": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5404": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5413": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5414": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5416": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5418": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5419": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "ADD",
      "path": "16"
    },
    "5420": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5421": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5423": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5425": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5426": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "ADD",
      "path": "16"
    },
    "5427": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5428": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5445": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5446": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "ADD",
      "path": "16"
    },
    "5447": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5448": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5449": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5450": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5451": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5452": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5453": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "SUB",
      "path": "16"
    },
    "5454": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "5456": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "ADD",
      "path": "16"
    },
    "5457": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5458": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5459": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2746,
        2822
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5460": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2838
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 40,
      "value": "0x9"
    },
    "5462": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5463": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5470": {
      "op": "SHL"
    },
    "5471": {
      "op": "SUB"
    },
    "5472": {
      "op": "NOT"
    },
    "5473": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "AND",
      "path": "16"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5480": {
      "op": "SHL"
    },
    "5481": {
      "op": "SUB"
    },
    "5482": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5483": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5484": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5485": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "AND",
      "path": "16"
    },
    "5486": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5487": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5488": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5489": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "OR",
      "path": "16"
    },
    "5490": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5491": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "offset": [
        2832,
        2848
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5492": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeeper",
      "jump": "o",
      "offset": [
        2691,
        2855
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5493": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3177,
        3333
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5494": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3264,
        3274
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 41,
      "value": "0x6"
    },
    "5496": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3264,
        3274
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5503": {
      "op": "SHL"
    },
    "5504": {
      "op": "SUB"
    },
    "5505": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3264,
        3274
      ],
      "op": "AND",
      "path": "16"
    },
    "5506": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3250,
        3260
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5507": {
      "branch": 98,
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3250,
        3274
      ],
      "op": "EQ",
      "path": "16"
    },
    "5508": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15C2"
    },
    "5511": {
      "branch": 98,
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5512": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5514": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5515": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5522": {
      "op": "SHL"
    },
    "5523": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5524": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5525": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5527": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5529": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5530": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "ADD",
      "path": "16"
    },
    "5531": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5532": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5534": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5536": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5537": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "ADD",
      "path": "16"
    },
    "5538": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5539": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5553": {
      "op": "SHL"
    },
    "5554": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5556": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5557": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "ADD",
      "path": "16"
    },
    "5558": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5559": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5560": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5561": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5562": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5563": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5564": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "SUB",
      "path": "16"
    },
    "5565": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "5567": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "ADD",
      "path": "16"
    },
    "5568": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5569": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5570": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3242,
        3290
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5571": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3300,
        3311
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 42,
      "value": "0x1"
    },
    "5573": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        3300,
        3326
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5574": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        3177,
        3333
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5575": {
      "offset": [
        1547,
        1576
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5576": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1547,
        1576
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5578": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1547,
        1576
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5579": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1547,
        1576
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5580": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1547,
        1576
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5581": {
      "offset": [
        1620,
        1656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5582": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1620,
        1656
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "5584": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1620,
        1656
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5585": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "offset": [
        1620,
        1656
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5586": {
      "fn": "StrategyCurveBBTCVoterProxy.setTreasuryFee",
      "jump": "o",
      "offset": [
        1620,
        1656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5587": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5588": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5702,
        5712
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 43,
      "value": "0x7"
    },
    "5590": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5702,
        5712
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5591": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5653,
        5668
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5593": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5653,
        5668
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5600": {
      "op": "SHL"
    },
    "5601": {
      "op": "SUB"
    },
    "5602": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5702,
        5712
      ],
      "op": "AND",
      "path": "16"
    },
    "5603": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5688,
        5698
      ],
      "op": "CALLER",
      "path": "16"
    },
    "5604": {
      "branch": 99,
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5688,
        5712
      ],
      "op": "EQ",
      "path": "16"
    },
    "5605": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1623"
    },
    "5608": {
      "branch": 99,
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5609": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5611": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5612": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5621": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5622": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5624": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5626": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5627": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "ADD",
      "path": "16"
    },
    "5628": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5629": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5631": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5633": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5634": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "ADD",
      "path": "16"
    },
    "5635": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5636": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5653": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5654": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "ADD",
      "path": "16"
    },
    "5655": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5656": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5657": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5658": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5659": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5660": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5661": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "SUB",
      "path": "16"
    },
    "5662": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "5664": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "ADD",
      "path": "16"
    },
    "5665": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5666": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5667": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5680,
        5728
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5668": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5738,
        5752
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 44,
      "value": "0x162B"
    },
    "5671": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5738,
        5750
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F69"
    },
    "5674": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5738,
        5752
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5675": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5738,
        5752
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5676": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x40"
    },
    "5678": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5679": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5680": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5689": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5690": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5804,
        5808
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "5691": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5693": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5694": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "ADD",
      "path": "16"
    },
    "5695": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5696": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5697": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5700": {
      "op": "DUP1"
    },
    "5701": {
      "op": "MLOAD"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "5707": {
      "op": "DUP4"
    },
    "5708": {
      "op": "CODECOPY"
    },
    "5709": {
      "op": "DUP2"
    },
    "5710": {
      "op": "MLOAD"
    },
    "5711": {
      "op": "SWAP2"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5714": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5795
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "5719": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5795
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5720": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5722": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5723": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5724": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "ADD",
      "path": "16"
    },
    "5725": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5726": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5728": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5729": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5730": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5731": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5732": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5733": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SUB",
      "path": "16"
    },
    "5734": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "ADD",
      "path": "16"
    },
    "5735": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5736": {
      "offset": [
        743,
        785
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5737": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5738": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "5739": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5740": {
      "op": "DUP1"
    },
    "5741": {
      "op": "ISZERO"
    },
    "5742": {
      "op": "PUSH2",
      "value": "0x1676"
    },
    "5745": {
      "op": "JUMPI"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5748": {
      "op": "DUP1"
    },
    "5749": {
      "op": "REVERT"
    },
    "5750": {
      "op": "JUMPDEST"
    },
    "5751": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "POP",
      "path": "16"
    },
    "5752": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "GAS",
      "path": "16"
    },
    "5753": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "5754": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5755": {
      "op": "DUP1"
    },
    "5756": {
      "op": "ISZERO"
    },
    "5757": {
      "op": "PUSH2",
      "value": "0x168A"
    },
    "5760": {
      "op": "JUMPI"
    },
    "5761": {
      "op": "RETURNDATASIZE"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5764": {
      "op": "DUP1"
    },
    "5765": {
      "op": "RETURNDATACOPY"
    },
    "5766": {
      "op": "RETURNDATASIZE"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5769": {
      "op": "REVERT"
    },
    "5770": {
      "op": "JUMPDEST"
    },
    "5771": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "POP",
      "path": "16"
    },
    "5772": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "POP",
      "path": "16"
    },
    "5773": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "POP",
      "path": "16"
    },
    "5774": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "POP",
      "path": "16"
    },
    "5775": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5777": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5778": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5781": {
      "op": "DUP2"
    },
    "5782": {
      "op": "LT"
    },
    "5783": {
      "op": "ISZERO"
    },
    "5784": {
      "op": "PUSH2",
      "value": "0x16A0"
    },
    "5787": {
      "op": "JUMPI"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5790": {
      "op": "DUP1"
    },
    "5791": {
      "op": "REVERT"
    },
    "5792": {
      "op": "JUMPDEST"
    },
    "5793": {
      "op": "POP"
    },
    "5794": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5795": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "5797": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5798": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5800": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5801": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5802": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5809": {
      "op": "SHL"
    },
    "5810": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5811": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5814": {
      "op": "DUP1"
    },
    "5815": {
      "op": "MLOAD"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5818": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "5821": {
      "op": "DUP4"
    },
    "5822": {
      "op": "CODECOPY"
    },
    "5823": {
      "op": "DUP2"
    },
    "5824": {
      "op": "MLOAD"
    },
    "5825": {
      "op": "SWAP2"
    },
    "5826": {
      "op": "MSTORE"
    },
    "5827": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5829": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5830": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "ADD",
      "path": "16"
    },
    "5831": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5832": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5833": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5834": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5835": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5821,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5839": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5821,
        5835
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5846": {
      "op": "SHL"
    },
    "5847": {
      "op": "SUB"
    },
    "5848": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5849": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5850": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "AND",
      "path": "16"
    },
    "5851": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5852": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5868
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA622EE7C"
    },
    "5857": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5868
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5858": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5860": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5861": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5862": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "ADD",
      "path": "16"
    },
    "5863": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5864": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5866": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5773,
        5810
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5867": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5868": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5869": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5870": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5871": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5872": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SUB",
      "path": "16"
    },
    "5873": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "ADD",
      "path": "16"
    },
    "5874": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5875": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5850,
        5860
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5876": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5877": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "5878": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5879": {
      "op": "DUP1"
    },
    "5880": {
      "op": "ISZERO"
    },
    "5881": {
      "op": "PUSH2",
      "value": "0x1701"
    },
    "5884": {
      "op": "JUMPI"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5887": {
      "op": "DUP1"
    },
    "5888": {
      "op": "REVERT"
    },
    "5889": {
      "op": "JUMPDEST"
    },
    "5890": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "POP",
      "path": "16"
    },
    "5891": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "GAS",
      "path": "16"
    },
    "5892": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "5893": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5894": {
      "op": "DUP1"
    },
    "5895": {
      "op": "ISZERO"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x1715"
    },
    "5899": {
      "op": "JUMPI"
    },
    "5900": {
      "op": "RETURNDATASIZE"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5903": {
      "op": "DUP1"
    },
    "5904": {
      "op": "RETURNDATACOPY"
    },
    "5905": {
      "op": "RETURNDATASIZE"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5908": {
      "op": "REVERT"
    },
    "5909": {
      "op": "JUMPDEST"
    },
    "5910": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "POP",
      "path": "16"
    },
    "5911": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "POP",
      "path": "16"
    },
    "5912": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "POP",
      "path": "16"
    },
    "5913": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "POP",
      "path": "16"
    },
    "5914": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5916": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5917": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5920": {
      "op": "DUP2"
    },
    "5921": {
      "op": "LT"
    },
    "5922": {
      "op": "ISZERO"
    },
    "5923": {
      "op": "PUSH2",
      "value": "0x172B"
    },
    "5926": {
      "op": "JUMPI"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5929": {
      "op": "DUP1"
    },
    "5930": {
      "op": "REVERT"
    },
    "5931": {
      "op": "JUMPDEST"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5934": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5838,
        5883
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5901,
        5921
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 46
    },
    "5945": {
      "branch": 100,
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5901,
        5921
      ],
      "op": "AND",
      "path": "16"
    },
    "5946": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1773"
    },
    "5949": {
      "branch": 100,
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5950": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5952": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5953": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5962": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5963": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5965": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5967": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5968": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "ADD",
      "path": "16"
    },
    "5969": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5970": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "5972": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "5974": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5975": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "ADD",
      "path": "16"
    },
    "5976": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5977": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5986": {
      "op": "SHL"
    },
    "5987": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5989": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5990": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "ADD",
      "path": "16"
    },
    "5991": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5992": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5993": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5994": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5995": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5996": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5997": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "SUB",
      "path": "16"
    },
    "5998": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6000": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "ADD",
      "path": "16"
    },
    "6001": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6002": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6003": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5893,
        5932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6004": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5994,
        6036
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 47,
      "value": "0x1792"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6009": {
      "op": "DUP1"
    },
    "6010": {
      "op": "MLOAD"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6013": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "6016": {
      "op": "DUP4"
    },
    "6017": {
      "op": "CODECOPY"
    },
    "6018": {
      "op": "DUP2"
    },
    "6019": {
      "op": "MLOAD"
    },
    "6020": {
      "op": "SWAP2"
    },
    "6021": {
      "op": "MSTORE"
    },
    "6022": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        6020,
        6026
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6023": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        6028,
        6035
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6024": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5994,
        6036
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "6029": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5994,
        6019
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "6032": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5994,
        6036
      ],
      "op": "AND",
      "path": "16"
    },
    "6033": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5994,
        6036
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6034": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5994,
        6036
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6035": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "POP",
      "path": "16"
    },
    "6036": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        5612,
        6043
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6037": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        5612,
        6043
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6038": {
      "offset": [
        1662,
        1694
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6039": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        1662,
        1694
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6041": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        1662,
        1694
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6042": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "offset": [
        1662,
        1694
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6043": {
      "fn": "StrategyCurveBBTCVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1662,
        1694
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6044": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8233,
        8385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6045": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8318,
        8328
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x6"
    },
    "6047": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8318,
        8328
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6054": {
      "op": "SHL"
    },
    "6055": {
      "op": "SUB"
    },
    "6056": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8318,
        8328
      ],
      "op": "AND",
      "path": "16"
    },
    "6057": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8304,
        8314
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6058": {
      "branch": 101,
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8304,
        8328
      ],
      "op": "EQ",
      "path": "16"
    },
    "6059": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17E9"
    },
    "6062": {
      "branch": 101,
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6063": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6065": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6066": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6073": {
      "op": "SHL"
    },
    "6074": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6075": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6076": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6078": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6080": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6081": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "ADD",
      "path": "16"
    },
    "6082": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6083": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6085": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6087": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6088": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "ADD",
      "path": "16"
    },
    "6089": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6090": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6104": {
      "op": "SHL"
    },
    "6105": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6107": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6108": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "ADD",
      "path": "16"
    },
    "6109": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6110": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6111": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6112": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6113": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6114": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6115": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "SUB",
      "path": "16"
    },
    "6116": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6118": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "ADD",
      "path": "16"
    },
    "6119": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6120": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6121": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8296,
        8344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6122": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8364
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0x7"
    },
    "6124": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6125": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "op": "SUB"
    },
    "6134": {
      "op": "NOT"
    },
    "6135": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "AND",
      "path": "16"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6142": {
      "op": "SHL"
    },
    "6143": {
      "op": "SUB"
    },
    "6144": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6145": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6146": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6147": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "AND",
      "path": "16"
    },
    "6148": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6149": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6150": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6151": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "OR",
      "path": "16"
    },
    "6152": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6153": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "offset": [
        8354,
        8378
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6154": {
      "fn": "StrategyCurveBBTCVoterProxy.setController",
      "jump": "o",
      "offset": [
        8233,
        8385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6155": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2861,
        3001
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6156": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2940,
        2950
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 50,
      "value": "0x6"
    },
    "6158": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2940,
        2950
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6165": {
      "op": "SHL"
    },
    "6166": {
      "op": "SUB"
    },
    "6167": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2940,
        2950
      ],
      "op": "AND",
      "path": "16"
    },
    "6168": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2926,
        2936
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6169": {
      "branch": 102,
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2926,
        2950
      ],
      "op": "EQ",
      "path": "16"
    },
    "6170": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1858"
    },
    "6173": {
      "branch": 102,
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6174": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6176": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6177": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6186": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6187": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6189": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6191": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6192": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "ADD",
      "path": "16"
    },
    "6193": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6194": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6196": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6198": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6199": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "ADD",
      "path": "16"
    },
    "6200": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6201": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6215": {
      "op": "SHL"
    },
    "6216": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6218": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6219": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "ADD",
      "path": "16"
    },
    "6220": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6221": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6222": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6223": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6224": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6225": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6226": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "SUB",
      "path": "16"
    },
    "6227": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6229": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "ADD",
      "path": "16"
    },
    "6230": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6231": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6232": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2918,
        2966
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6233": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2976,
        2983
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 51,
      "value": "0x0"
    },
    "6235": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "offset": [
        2976,
        2994
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6236": {
      "fn": "StrategyCurveBBTCVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        2861,
        3001
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6237": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3521,
        3653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6238": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3596,
        3606
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 52,
      "value": "0x6"
    },
    "6240": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3596,
        3606
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6247": {
      "op": "SHL"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3596,
        3606
      ],
      "op": "AND",
      "path": "16"
    },
    "6250": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3582,
        3592
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6251": {
      "branch": 103,
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3582,
        3606
      ],
      "op": "EQ",
      "path": "16"
    },
    "6252": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18AA"
    },
    "6255": {
      "branch": 103,
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6256": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6258": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6259": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6266": {
      "op": "SHL"
    },
    "6267": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6268": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6269": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6271": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6273": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6274": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "ADD",
      "path": "16"
    },
    "6275": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6276": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6278": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6280": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6281": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "ADD",
      "path": "16"
    },
    "6282": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6283": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6297": {
      "op": "SHL"
    },
    "6298": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6300": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6301": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "ADD",
      "path": "16"
    },
    "6302": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6303": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6304": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6305": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6306": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6307": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6308": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "SUB",
      "path": "16"
    },
    "6309": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6311": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "ADD",
      "path": "16"
    },
    "6312": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6313": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6314": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3574,
        3622
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6315": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3637
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 53,
      "value": "0x4"
    },
    "6317": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6318": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6325": {
      "op": "SHL"
    },
    "6326": {
      "op": "SUB"
    },
    "6327": {
      "op": "NOT"
    },
    "6328": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "AND",
      "path": "16"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6335": {
      "op": "SHL"
    },
    "6336": {
      "op": "SUB"
    },
    "6337": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6338": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6339": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6340": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "AND",
      "path": "16"
    },
    "6341": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6342": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6343": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6344": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "OR",
      "path": "16"
    },
    "6345": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6346": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "offset": [
        3632,
        3646
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6347": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        3521,
        3653
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6348": {
      "offset": [
        1239,
        1326
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6349": {
      "offset": [
        1283,
        1325
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
    },
    "6370": {
      "offset": [
        1239,
        1326
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6371": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        1239,
        1326
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6372": {
      "offset": [
        969,
        1052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6373": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "6394": {
      "offset": [
        969,
        1052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6395": {
      "fn": "StrategyCurveBBTCVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        969,
        1052
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6396": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8075,
        8227
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6397": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8160,
        8170
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x6"
    },
    "6399": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8160,
        8170
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6406": {
      "op": "SHL"
    },
    "6407": {
      "op": "SUB"
    },
    "6408": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8160,
        8170
      ],
      "op": "AND",
      "path": "16"
    },
    "6409": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8146,
        8156
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6410": {
      "branch": 104,
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8146,
        8170
      ],
      "op": "EQ",
      "path": "16"
    },
    "6411": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1949"
    },
    "6414": {
      "branch": 104,
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6415": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6417": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6418": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6425": {
      "op": "SHL"
    },
    "6426": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6427": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6428": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6430": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6432": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6433": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "ADD",
      "path": "16"
    },
    "6434": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6435": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6437": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6439": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6440": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "ADD",
      "path": "16"
    },
    "6441": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6442": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6456": {
      "op": "SHL"
    },
    "6457": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6459": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6460": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "ADD",
      "path": "16"
    },
    "6461": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6462": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6463": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6464": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6465": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6466": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6467": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "SUB",
      "path": "16"
    },
    "6468": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6470": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "ADD",
      "path": "16"
    },
    "6471": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6472": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6473": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8138,
        8186
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6474": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8206
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x6"
    },
    "6476": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6477": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6484": {
      "op": "SHL"
    },
    "6485": {
      "op": "SUB"
    },
    "6486": {
      "op": "NOT"
    },
    "6487": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "AND",
      "path": "16"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6494": {
      "op": "SHL"
    },
    "6495": {
      "op": "SUB"
    },
    "6496": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6497": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6498": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6499": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "AND",
      "path": "16"
    },
    "6500": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6501": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6502": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6503": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "OR",
      "path": "16"
    },
    "6504": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6505": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "offset": [
        8196,
        8220
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6506": {
      "fn": "StrategyCurveBBTCVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        8075,
        8227
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6507": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3007,
        3171
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6508": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3098,
        3108
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x6"
    },
    "6510": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3098,
        3108
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6517": {
      "op": "SHL"
    },
    "6518": {
      "op": "SUB"
    },
    "6519": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3098,
        3108
      ],
      "op": "AND",
      "path": "16"
    },
    "6520": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3084,
        3094
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6521": {
      "branch": 105,
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3084,
        3108
      ],
      "op": "EQ",
      "path": "16"
    },
    "6522": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19B8"
    },
    "6525": {
      "branch": 105,
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6526": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6528": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6529": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6536": {
      "op": "SHL"
    },
    "6537": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6538": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6539": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6541": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6543": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6544": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "ADD",
      "path": "16"
    },
    "6545": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6546": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6548": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6550": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6551": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "ADD",
      "path": "16"
    },
    "6552": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6553": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6567": {
      "op": "SHL"
    },
    "6568": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6570": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6571": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "ADD",
      "path": "16"
    },
    "6572": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6573": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6574": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6575": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6576": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6577": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6578": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "SUB",
      "path": "16"
    },
    "6579": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6581": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "ADD",
      "path": "16"
    },
    "6582": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6583": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6584": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3076,
        3124
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6585": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3134,
        3147
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0x3"
    },
    "6587": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        3134,
        3164
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6588": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        3007,
        3171
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6589": {
      "offset": [
        1898,
        1919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6590": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        1898,
        1919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "6592": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        1898,
        1919
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "op": "SUB"
    },
    "6601": {
      "offset": [
        1898,
        1919
      ],
      "op": "AND",
      "path": "16"
    },
    "6602": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "offset": [
        1898,
        1919
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6603": {
      "fn": "StrategyCurveBBTCVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        1898,
        1919
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6604": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7716,
        7832
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6605": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0x40"
    },
    "6607": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6608": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6609": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6616": {
      "op": "SHL"
    },
    "6617": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6618": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6619": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7819,
        7823
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "6620": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6622": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6623": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "ADD",
      "path": "16"
    },
    "6624": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6625": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6626": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6627": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7762,
        7769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6629": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7762,
        7769
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6632": {
      "op": "DUP1"
    },
    "6633": {
      "op": "MLOAD"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6636": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "6639": {
      "op": "DUP4"
    },
    "6640": {
      "op": "CODECOPY"
    },
    "6641": {
      "op": "DUP2"
    },
    "6642": {
      "op": "MLOAD"
    },
    "6643": {
      "op": "SWAP2"
    },
    "6644": {
      "op": "MSTORE"
    },
    "6645": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6646": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7810
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "6651": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7810
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6652": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6654": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6655": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6656": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "ADD",
      "path": "16"
    },
    "6657": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6658": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6660": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6661": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6662": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6663": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6664": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6665": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6666": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "SUB",
      "path": "16"
    },
    "6667": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "ADD",
      "path": "16"
    },
    "6668": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6669": {
      "offset": [
        743,
        785
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6670": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6671": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "6672": {
      "fn": "StrategyCurveBBTCVoterProxy.balanceOfWant",
      "offset": [
        7788,
        7825
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6673": {
      "op": "DUP1"
    },
    "6674": {
      "op": "ISZERO"
    },
    "6675": {
      "op": "PUSH2",
      "value": "0x61B"
    },
    "6678": {
      "op": "JUMPI"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6681": {
      "op": "DUP1"
    },
    "6682": {
      "op": "REVERT"
    },
    "6683": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2505,
        2685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6684": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2590,
        2600
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 59,
      "value": "0x8"
    },
    "6686": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2590,
        2600
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6693": {
      "op": "SHL"
    },
    "6694": {
      "op": "SUB"
    },
    "6695": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2590,
        2600
      ],
      "op": "AND",
      "path": "16"
    },
    "6696": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2586
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6697": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2600
      ],
      "op": "EQ",
      "path": "16"
    },
    "6698": {
      "branch": 106,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2600
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6699": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A3E"
    },
    "6702": {
      "branch": 106,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2628
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6703": {
      "op": "POP"
    },
    "6704": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2618,
        2628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "6706": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2618,
        2628
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6713": {
      "op": "SHL"
    },
    "6714": {
      "op": "SUB"
    },
    "6715": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2618,
        2628
      ],
      "op": "AND",
      "path": "16"
    },
    "6716": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2604,
        2614
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6717": {
      "branch": 107,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2604,
        2628
      ],
      "op": "EQ",
      "path": "16"
    },
    "6718": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2576,
        2628
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6719": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A7D"
    },
    "6722": {
      "branch": 107,
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6723": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6725": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6726": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6733": {
      "op": "SHL"
    },
    "6734": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6735": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6736": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6738": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6740": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6741": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "ADD",
      "path": "16"
    },
    "6742": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6743": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6745": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6747": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6748": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "ADD",
      "path": "16"
    },
    "6749": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6750": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6764": {
      "op": "SHL"
    },
    "6765": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "6767": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6768": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "ADD",
      "path": "16"
    },
    "6769": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6770": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6771": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6772": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6773": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6774": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6775": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "SUB",
      "path": "16"
    },
    "6776": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "6778": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "ADD",
      "path": "16"
    },
    "6779": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6780": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "REVERT",
      "path": "16"
    },
    "6781": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2568,
        2644
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6782": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2664
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0x8"
    },
    "6784": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6785": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6792": {
      "op": "SHL"
    },
    "6793": {
      "op": "SUB"
    },
    "6794": {
      "op": "NOT"
    },
    "6795": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "AND",
      "path": "16"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6802": {
      "op": "SHL"
    },
    "6803": {
      "op": "SUB"
    },
    "6804": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6805": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6806": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6807": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "AND",
      "path": "16"
    },
    "6808": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6809": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6810": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6811": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "OR",
      "path": "16"
    },
    "6812": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6813": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        2654,
        2678
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6814": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2505,
        2685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6815": {
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6816": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6818": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        1582,
        1614
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6819": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "offset": [
        1582,
        1614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6820": {
      "fn": "StrategyCurveBBTCVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        1582,
        1614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6821": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3910,
        4147
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6822": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6824": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6825": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6826": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6833": {
      "op": "SHL"
    },
    "6834": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6835": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6836": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3993,
        3997
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "6837": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6839": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6840": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "ADD",
      "path": "16"
    },
    "6841": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6842": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6843": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6844": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3946,
        3959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6846": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3946,
        3959
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6849": {
      "op": "DUP1"
    },
    "6850": {
      "op": "MLOAD"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6853": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "6856": {
      "op": "DUP4"
    },
    "6857": {
      "op": "CODECOPY"
    },
    "6858": {
      "op": "DUP2"
    },
    "6859": {
      "op": "MLOAD"
    },
    "6860": {
      "op": "SWAP2"
    },
    "6861": {
      "op": "MSTORE"
    },
    "6862": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6863": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3984
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "6868": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3984
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6869": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "6871": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6872": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6873": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "ADD",
      "path": "16"
    },
    "6874": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6875": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6877": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6878": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6879": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6880": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6881": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6882": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6883": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SUB",
      "path": "16"
    },
    "6884": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "ADD",
      "path": "16"
    },
    "6885": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6886": {
      "offset": [
        743,
        785
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6887": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6888": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "6889": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6890": {
      "op": "DUP1"
    },
    "6891": {
      "op": "ISZERO"
    },
    "6892": {
      "op": "PUSH2",
      "value": "0x1AF4"
    },
    "6895": {
      "op": "JUMPI"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6898": {
      "op": "DUP1"
    },
    "6899": {
      "op": "REVERT"
    },
    "6900": {
      "op": "JUMPDEST"
    },
    "6901": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "POP",
      "path": "16"
    },
    "6902": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "GAS",
      "path": "16"
    },
    "6903": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "6904": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6905": {
      "op": "DUP1"
    },
    "6906": {
      "op": "ISZERO"
    },
    "6907": {
      "op": "PUSH2",
      "value": "0x1B08"
    },
    "6910": {
      "op": "JUMPI"
    },
    "6911": {
      "op": "RETURNDATASIZE"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6914": {
      "op": "DUP1"
    },
    "6915": {
      "op": "RETURNDATACOPY"
    },
    "6916": {
      "op": "RETURNDATASIZE"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6919": {
      "op": "REVERT"
    },
    "6920": {
      "op": "JUMPDEST"
    },
    "6921": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "POP",
      "path": "16"
    },
    "6922": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "POP",
      "path": "16"
    },
    "6923": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "POP",
      "path": "16"
    },
    "6924": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "POP",
      "path": "16"
    },
    "6925": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6927": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6928": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6931": {
      "op": "DUP2"
    },
    "6932": {
      "op": "LT"
    },
    "6933": {
      "op": "ISZERO"
    },
    "6934": {
      "op": "PUSH2",
      "value": "0x1B1E"
    },
    "6937": {
      "op": "JUMPI"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6940": {
      "op": "DUP1"
    },
    "6941": {
      "op": "REVERT"
    },
    "6942": {
      "op": "JUMPDEST"
    },
    "6943": {
      "op": "POP"
    },
    "6944": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6945": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3962,
        3999
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6946": {
      "op": "POP"
    },
    "6947": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4013,
        4022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6948": {
      "branch": 108,
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4013,
        4022
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6949": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4009,
        4141
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14B0"
    },
    "6952": {
      "branch": 108,
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4009,
        4141
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6953": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4064,
        4069
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x4"
    },
    "6955": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4064,
        4069
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6956": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4077
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B54"
    },
    "6959": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4077
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6962": {
      "op": "DUP1"
    },
    "6963": {
      "op": "MLOAD"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6966": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "6969": {
      "op": "DUP4"
    },
    "6970": {
      "op": "CODECOPY"
    },
    "6971": {
      "op": "DUP2"
    },
    "6972": {
      "op": "MLOAD"
    },
    "6973": {
      "op": "SWAP2"
    },
    "6974": {
      "op": "MSTORE"
    },
    "6975": {
      "offset": [
        743,
        785
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6982": {
      "op": "SHL"
    },
    "6983": {
      "op": "SUB"
    },
    "6984": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4064,
        4069
      ],
      "op": "AND",
      "path": "16"
    },
    "6985": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4071,
        4076
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6986": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4077
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "6991": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DFF"
    },
    "6994": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4077
      ],
      "op": "AND",
      "path": "16"
    },
    "6995": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "i",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6996": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6997": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x4"
    },
    "6999": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7000": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7001": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7003": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7004": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7005": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7012": {
      "op": "SHL"
    },
    "7013": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7014": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7015": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "7036": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7037": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7038": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ADD",
      "path": "16"
    },
    "7039": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7040": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7041": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7042": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7045": {
      "op": "DUP1"
    },
    "7046": {
      "op": "MLOAD"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7049": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "7052": {
      "op": "DUP4"
    },
    "7053": {
      "op": "CODECOPY"
    },
    "7054": {
      "op": "DUP2"
    },
    "7055": {
      "op": "MLOAD"
    },
    "7056": {
      "op": "SWAP2"
    },
    "7057": {
      "op": "MSTORE"
    },
    "7058": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "7060": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7061": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ADD",
      "path": "16"
    },
    "7062": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7063": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7070": {
      "op": "SHL"
    },
    "7071": {
      "op": "SUB"
    },
    "7072": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7073": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7074": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "AND",
      "path": "16"
    },
    "7075": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7076": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4117
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF9609F08"
    },
    "7081": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4117
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7082": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "7084": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7085": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7086": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ADD",
      "path": "16"
    },
    "7087": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7088": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7090": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7091": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7092": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7093": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7094": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7095": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "SUB",
      "path": "16"
    },
    "7096": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ADD",
      "path": "16"
    },
    "7097": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7098": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7099": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4103,
        4108
      ],
      "op": "DUP8",
      "path": "16"
    },
    "7100": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7101": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "7102": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7103": {
      "op": "DUP1"
    },
    "7104": {
      "op": "ISZERO"
    },
    "7105": {
      "op": "PUSH2",
      "value": "0x1BC9"
    },
    "7108": {
      "op": "JUMPI"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7111": {
      "op": "DUP1"
    },
    "7112": {
      "op": "REVERT"
    },
    "7113": {
      "op": "JUMPDEST"
    },
    "7114": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "POP",
      "path": "16"
    },
    "7115": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "GAS",
      "path": "16"
    },
    "7116": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "CALL",
      "path": "16"
    },
    "7117": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7118": {
      "op": "DUP1"
    },
    "7119": {
      "op": "ISZERO"
    },
    "7120": {
      "op": "PUSH2",
      "value": "0x1BDD"
    },
    "7123": {
      "op": "JUMPI"
    },
    "7124": {
      "op": "RETURNDATASIZE"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7127": {
      "op": "DUP1"
    },
    "7128": {
      "op": "RETURNDATACOPY"
    },
    "7129": {
      "op": "RETURNDATASIZE"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7132": {
      "op": "REVERT"
    },
    "7133": {
      "op": "JUMPDEST"
    },
    "7134": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "POP",
      "path": "16"
    },
    "7135": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "POP",
      "path": "16"
    },
    "7136": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "POP",
      "path": "16"
    },
    "7137": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        4091,
        4130
      ],
      "op": "POP",
      "path": "16"
    },
    "7138": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        3910,
        4147
      ],
      "op": "POP",
      "path": "16"
    },
    "7139": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "o",
      "offset": [
        3910,
        4147
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7140": {
      "offset": [
        1926,
        1947
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7141": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1926,
        1947
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "7143": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1926,
        1947
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7144": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1926,
        1947
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7145": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1926,
        1947
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7146": {
      "offset": [
        1700,
        1747
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7147": {
      "offset": [
        1742,
        1747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2710"
    },
    "7150": {
      "offset": [
        1700,
        1747
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7151": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1700,
        1747
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7152": {
      "offset": [
        1754,
        1774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7153": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1754,
        1774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7155": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1754,
        1774
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7162": {
      "op": "SHL"
    },
    "7163": {
      "op": "SUB"
    },
    "7164": {
      "offset": [
        1754,
        1774
      ],
      "op": "AND",
      "path": "16"
    },
    "7165": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1754,
        1774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7166": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1754,
        1774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7167": {
      "offset": [
        1836,
        1861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7168": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1836,
        1861
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "7170": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1836,
        1861
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7177": {
      "op": "SHL"
    },
    "7178": {
      "op": "SUB"
    },
    "7179": {
      "offset": [
        1836,
        1861
      ],
      "op": "AND",
      "path": "16"
    },
    "7180": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "offset": [
        1836,
        1861
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7181": {
      "fn": "StrategyCurveBBTCVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1836,
        1861
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7182": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7183": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7185": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 63,
      "value": "0x1C50"
    },
    "7188": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7189": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7190": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7192": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7193": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7194": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7196": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "7197": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7199": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7200": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7201": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "7203": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7204": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7205": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7207": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "7208": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "7241": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7242": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7243": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "7244": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x200D"
    },
    "7247": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7248": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7249": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7250": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "7251": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7252": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7253": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7254": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "7255": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "7256": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7257": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5399,
        5539
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7258": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 64,
      "value": "0x4"
    },
    "7260": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7261": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7262": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7264": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7265": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7266": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7273": {
      "op": "SHL"
    },
    "7274": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7275": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7276": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "7297": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7298": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7299": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ADD",
      "path": "16"
    },
    "7300": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7301": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7302": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7303": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7306": {
      "op": "DUP1"
    },
    "7307": {
      "op": "MLOAD"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7310": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "7313": {
      "op": "DUP4"
    },
    "7314": {
      "op": "CODECOPY"
    },
    "7315": {
      "op": "DUP2"
    },
    "7316": {
      "op": "MLOAD"
    },
    "7317": {
      "op": "SWAP2"
    },
    "7318": {
      "op": "MSTORE"
    },
    "7319": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "7321": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7322": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ADD",
      "path": "16"
    },
    "7323": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7324": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "7326": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7327": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ADD",
      "path": "16"
    },
    "7328": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7329": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7330": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7331": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7332": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5457,
        5464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7334": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5457,
        5464
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7341": {
      "op": "SHL"
    },
    "7342": {
      "op": "SUB"
    },
    "7343": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7344": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7345": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "AND",
      "path": "16"
    },
    "7346": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7347": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5510
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD9CAED12"
    },
    "7352": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5510
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7353": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "7355": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7356": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7357": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ADD",
      "path": "16"
    },
    "7358": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7359": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7361": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7362": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7363": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7364": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7365": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7366": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SUB",
      "path": "16"
    },
    "7367": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ADD",
      "path": "16"
    },
    "7368": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7369": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5457,
        5464
      ],
      "op": "DUP8",
      "path": "16"
    },
    "7370": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5495,
        5500
      ],
      "op": "DUP8",
      "path": "16"
    },
    "7371": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7372": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "7373": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7374": {
      "op": "DUP1"
    },
    "7375": {
      "op": "ISZERO"
    },
    "7376": {
      "op": "PUSH2",
      "value": "0x1CD8"
    },
    "7379": {
      "op": "JUMPI"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7382": {
      "op": "DUP1"
    },
    "7383": {
      "op": "REVERT"
    },
    "7384": {
      "op": "JUMPDEST"
    },
    "7385": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "POP",
      "path": "16"
    },
    "7386": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "GAS",
      "path": "16"
    },
    "7387": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "CALL",
      "path": "16"
    },
    "7388": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7389": {
      "op": "DUP1"
    },
    "7390": {
      "op": "ISZERO"
    },
    "7391": {
      "op": "PUSH2",
      "value": "0x1CEC"
    },
    "7394": {
      "op": "JUMPI"
    },
    "7395": {
      "op": "RETURNDATASIZE"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7398": {
      "op": "DUP1"
    },
    "7399": {
      "op": "RETURNDATACOPY"
    },
    "7400": {
      "op": "RETURNDATASIZE"
    },
    "7401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7403": {
      "op": "REVERT"
    },
    "7404": {
      "op": "JUMPDEST"
    },
    "7405": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "POP",
      "path": "16"
    },
    "7406": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "POP",
      "path": "16"
    },
    "7407": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "POP",
      "path": "16"
    },
    "7408": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "POP",
      "path": "16"
    },
    "7409": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7411": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7412": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7415": {
      "op": "DUP2"
    },
    "7416": {
      "op": "LT"
    },
    "7417": {
      "op": "ISZERO"
    },
    "7418": {
      "op": "PUSH2",
      "value": "0x1D02"
    },
    "7421": {
      "op": "JUMPI"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7424": {
      "op": "DUP1"
    },
    "7425": {
      "op": "REVERT"
    },
    "7426": {
      "op": "JUMPDEST"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7429": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5483,
        5532
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7430": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "offset": [
        5399,
        5539
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7431": {
      "op": "POP"
    },
    "7432": {
      "op": "POP"
    },
    "7433": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        5399,
        5539
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7434": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7435": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7437": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7438": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7439": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "7440": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 65
    },
    "7441": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7442": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "7443": {
      "branch": 113,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7444": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C50"
    },
    "7447": {
      "branch": 113,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7448": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7450": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7451": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7458": {
      "op": "SHL"
    },
    "7459": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7460": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7461": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7463": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7465": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7466": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7467": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7468": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "7470": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7472": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7473": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7474": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7475": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "7508": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7510": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7511": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7512": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7513": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7514": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7515": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7516": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7517": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7518": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "7519": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "7521": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7522": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7523": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7524": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7525": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7527": {
      "branch": 114,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7528": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D73"
    },
    "7531": {
      "branch": 114,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7532": {
      "op": "POP"
    },
    "7533": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 66,
      "value": "0x0"
    },
    "7535": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C53"
    },
    "7538": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7539": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7540": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7541": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7542": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "7543": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7544": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7545": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7546": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7547": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 67,
      "value": "0x1D80"
    },
    "7550": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7551": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7552": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7553": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "7554": {
      "branch": 115,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "7555": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C50"
    },
    "7558": {
      "branch": 115,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7559": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7561": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7568": {
      "op": "SHL"
    },
    "7569": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7570": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7571": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7573": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7574": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7575": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7576": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7578": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7579": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7580": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7581": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7582": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7583": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7584": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7586": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7587": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7588": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7590": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7591": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7592": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22FE"
    },
    "7595": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7597": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7598": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "7599": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7601": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7602": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7603": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7604": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7605": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7607": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7608": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7609": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7610": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7611": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7612": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7613": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7614": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7616": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 68,
      "value": "0x1C50"
    },
    "7619": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7620": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7621": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7623": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7624": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7625": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7627": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7628": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7630": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7631": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7632": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7634": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7635": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7636": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7638": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7639": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7672": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7673": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7674": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7675": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20A4"
    },
    "7678": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7679": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7680": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x40"
    },
    "7682": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7683": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7690": {
      "op": "SHL"
    },
    "7691": {
      "op": "SUB"
    },
    "7692": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7693": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7694": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7696": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7697": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7698": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7699": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7701": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7702": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7703": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7704": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7705": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7706": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7707": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7708": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7709": {
      "op": "DUP1"
    },
    "7710": {
      "op": "DUP4"
    },
    "7711": {
      "op": "SUB"
    },
    "7712": {
      "op": "SWAP1"
    },
    "7713": {
      "op": "SWAP2"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "op": "DUP2"
    },
    "7716": {
      "op": "MSTORE"
    },
    "7717": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7721": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7723": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7724": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7725": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7727": {
      "op": "DUP2"
    },
    "7728": {
      "op": "ADD"
    },
    "7729": {
      "op": "DUP1"
    },
    "7730": {
      "op": "MLOAD"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7737": {
      "op": "SHL"
    },
    "7738": {
      "op": "SUB"
    },
    "7739": {
      "op": "AND"
    },
    "7740": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7747": {
      "op": "SHL"
    },
    "7748": {
      "op": "OR"
    },
    "7749": {
      "op": "SWAP1"
    },
    "7750": {
      "op": "MSTORE"
    },
    "7751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E51"
    },
    "7754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7757": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2109"
    },
    "7760": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7761": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7762": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7765": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7766": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7767": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 70
    },
    "7768": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7769": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7770": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EDC"
    },
    "7773": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7774": {
      "op": "POP"
    },
    "7775": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7777": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7778": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7779": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7786": {
      "op": "SHL"
    },
    "7787": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7788": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7789": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "7790": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7792": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7793": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7794": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7801": {
      "op": "SHL"
    },
    "7802": {
      "op": "SUB"
    },
    "7803": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7804": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7805": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "7806": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7808": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7809": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7810": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7811": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7812": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7813": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7814": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7815": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "7816": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7817": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "7822": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7823": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7825": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7826": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7827": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7828": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7829": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7831": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7832": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7833": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7834": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7835": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7836": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7837": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "7838": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7839": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7840": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7841": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7842": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7843": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7844": {
      "op": "DUP1"
    },
    "7845": {
      "op": "ISZERO"
    },
    "7846": {
      "op": "PUSH2",
      "value": "0x1EAE"
    },
    "7849": {
      "op": "JUMPI"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7852": {
      "op": "DUP1"
    },
    "7853": {
      "op": "REVERT"
    },
    "7854": {
      "op": "JUMPDEST"
    },
    "7855": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7856": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "7857": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "7858": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7859": {
      "op": "DUP1"
    },
    "7860": {
      "op": "ISZERO"
    },
    "7861": {
      "op": "PUSH2",
      "value": "0x1EC2"
    },
    "7864": {
      "op": "JUMPI"
    },
    "7865": {
      "op": "RETURNDATASIZE"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7868": {
      "op": "DUP1"
    },
    "7869": {
      "op": "RETURNDATACOPY"
    },
    "7870": {
      "op": "RETURNDATASIZE"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7873": {
      "op": "REVERT"
    },
    "7874": {
      "op": "JUMPDEST"
    },
    "7875": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7876": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7877": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7878": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7879": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7881": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7882": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7885": {
      "op": "DUP2"
    },
    "7886": {
      "op": "LT"
    },
    "7887": {
      "op": "ISZERO"
    },
    "7888": {
      "op": "PUSH2",
      "value": "0x1ED8"
    },
    "7891": {
      "op": "JUMPI"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7894": {
      "op": "DUP1"
    },
    "7895": {
      "op": "REVERT"
    },
    "7896": {
      "op": "JUMPDEST"
    },
    "7897": {
      "op": "POP"
    },
    "7898": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7899": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7900": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7901": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F17"
    },
    "7904": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7905": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7907": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7914": {
      "op": "SHL"
    },
    "7915": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7916": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7917": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7919": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7920": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7921": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7922": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7924": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7925": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7926": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7927": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7928": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7929": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7930": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7932": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7933": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7934": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7936": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7937": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7938": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2369"
    },
    "7941": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7943": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7944": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7945": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7947": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7948": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7949": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7950": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7951": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7953": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7954": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7955": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7956": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7957": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7958": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7959": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7960": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 71,
      "value": "0x40"
    },
    "7962": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7963": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "op": "SUB"
    },
    "7972": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7973": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7974": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7976": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7977": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7978": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7979": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7981": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7982": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7983": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7984": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7985": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7986": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7987": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7988": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7989": {
      "op": "DUP1"
    },
    "7990": {
      "op": "DUP4"
    },
    "7991": {
      "op": "SUB"
    },
    "7992": {
      "op": "SWAP1"
    },
    "7993": {
      "op": "SWAP2"
    },
    "7994": {
      "op": "ADD"
    },
    "7995": {
      "op": "DUP2"
    },
    "7996": {
      "op": "MSTORE"
    },
    "7997": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7999": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8000": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8001": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "8002": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8003": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8004": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8005": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8007": {
      "op": "DUP2"
    },
    "8008": {
      "op": "ADD"
    },
    "8009": {
      "op": "DUP1"
    },
    "8010": {
      "op": "MLOAD"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8017": {
      "op": "SHL"
    },
    "8018": {
      "op": "SUB"
    },
    "8019": {
      "op": "AND"
    },
    "8020": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8027": {
      "op": "SHL"
    },
    "8028": {
      "op": "OR"
    },
    "8029": {
      "op": "SWAP1"
    },
    "8030": {
      "op": "MSTORE"
    },
    "8031": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E51"
    },
    "8034": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8035": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8036": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8037": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2109"
    },
    "8040": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8041": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6049,
        6142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8042": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 72,
      "value": "0x4"
    },
    "8044": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8045": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8046": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8048": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8049": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8050": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "8057": {
      "op": "SHL"
    },
    "8058": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8059": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8060": {
      "offset": [
        1009,
        1051
      ],
      "op": "PUSH20",
      "path": "16",
      "value": "0xDFC7ADFA664B08767B735DE28F9E84CD30492AEE"
    },
    "8081": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8082": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8083": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ADD",
      "path": "16"
    },
    "8084": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8085": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8086": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8087": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8090": {
      "op": "DUP1"
    },
    "8091": {
      "op": "MLOAD"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8094": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8097": {
      "op": "DUP4"
    },
    "8098": {
      "op": "CODECOPY"
    },
    "8099": {
      "op": "DUP2"
    },
    "8100": {
      "op": "MLOAD"
    },
    "8101": {
      "op": "SWAP2"
    },
    "8102": {
      "op": "MSTORE"
    },
    "8103": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "8105": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8106": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ADD",
      "path": "16"
    },
    "8107": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8108": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8115": {
      "op": "SHL"
    },
    "8116": {
      "op": "SUB"
    },
    "8117": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8118": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8119": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "AND",
      "path": "16"
    },
    "8120": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8121": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6122
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9CAE2C8"
    },
    "8126": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6122
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8127": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "8129": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8130": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8131": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ADD",
      "path": "16"
    },
    "8132": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8133": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8135": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8136": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8137": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8138": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8139": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8140": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "SUB",
      "path": "16"
    },
    "8141": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ADD",
      "path": "16"
    },
    "8142": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8143": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8145": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6104,
        6109
      ],
      "op": "DUP8",
      "path": "16"
    },
    "8146": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8147": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "8148": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8149": {
      "op": "DUP1"
    },
    "8150": {
      "op": "ISZERO"
    },
    "8151": {
      "op": "PUSH2",
      "value": "0x1FDF"
    },
    "8154": {
      "op": "JUMPI"
    },
    "8155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8157": {
      "op": "DUP1"
    },
    "8158": {
      "op": "REVERT"
    },
    "8159": {
      "op": "JUMPDEST"
    },
    "8160": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "POP",
      "path": "16"
    },
    "8161": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "GAS",
      "path": "16"
    },
    "8162": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "CALL",
      "path": "16"
    },
    "8163": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8164": {
      "op": "DUP1"
    },
    "8165": {
      "op": "ISZERO"
    },
    "8166": {
      "op": "PUSH2",
      "value": "0x1FF3"
    },
    "8169": {
      "op": "JUMPI"
    },
    "8170": {
      "op": "RETURNDATASIZE"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8173": {
      "op": "DUP1"
    },
    "8174": {
      "op": "RETURNDATACOPY"
    },
    "8175": {
      "op": "RETURNDATASIZE"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8178": {
      "op": "REVERT"
    },
    "8179": {
      "op": "JUMPDEST"
    },
    "8180": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "POP",
      "path": "16"
    },
    "8181": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "POP",
      "path": "16"
    },
    "8182": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "POP",
      "path": "16"
    },
    "8183": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "POP",
      "path": "16"
    },
    "8184": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8186": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8187": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "offset": [
        6092,
        6135
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8190": {
      "op": "DUP2"
    },
    "8191": {
      "op": "LT"
    },
    "8192": {
      "op": "ISZERO"
    },
    "8193": {
      "op": "PUSH2",
      "value": "0x2009"
    },
    "8196": {
      "op": "JUMPI"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8199": {
      "op": "DUP1"
    },
    "8200": {
      "op": "REVERT"
    },
    "8201": {
      "op": "JUMPDEST"
    },
    "8202": {
      "op": "POP"
    },
    "8203": {
      "op": "POP"
    },
    "8204": {
      "fn": "StrategyCurveBBTCVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        6049,
        6142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8205": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8206": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8208": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 73
    },
    "8209": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8210": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8211": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "8212": {
      "branch": 116,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8213": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209C"
    },
    "8216": {
      "branch": 116,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8217": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8219": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8226": {
      "op": "SHL"
    },
    "8227": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8228": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8229": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8231": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8232": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8233": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8234": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8236": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8237": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8238": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8239": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8240": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8241": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8242": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8243": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8244": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8245": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8246": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8247": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8248": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8250": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8251": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8252": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8253": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8254": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8255": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8256": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8258": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8259": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8260": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8261": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8262": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8265": {
      "op": "JUMPDEST"
    },
    "8266": {
      "op": "DUP4"
    },
    "8267": {
      "op": "DUP2"
    },
    "8268": {
      "op": "LT"
    },
    "8269": {
      "op": "ISZERO"
    },
    "8270": {
      "op": "PUSH2",
      "value": "0x2061"
    },
    "8273": {
      "op": "JUMPI"
    },
    "8274": {
      "op": "DUP2"
    },
    "8275": {
      "op": "DUP2"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "MLOAD"
    },
    "8278": {
      "op": "DUP4"
    },
    "8279": {
      "op": "DUP3"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "op": "PUSH2",
      "value": "0x2049"
    },
    "8288": {
      "op": "JUMP"
    },
    "8289": {
      "op": "JUMPDEST"
    },
    "8290": {
      "op": "POP"
    },
    "8291": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8292": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8293": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8294": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8295": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8296": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8297": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8298": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8299": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8300": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8302": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8303": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8304": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8305": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x208E"
    },
    "8308": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8309": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8310": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8311": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8312": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8313": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8314": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8316": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8317": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8319": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8320": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8323": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "8324": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8325": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "8326": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8327": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8328": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8329": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8331": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8332": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8333": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8334": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8335": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8336": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8337": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8338": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8339": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8340": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8342": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8343": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8344": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8345": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8346": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8347": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8348": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8349": {
      "op": "POP"
    },
    "8350": {
      "op": "POP"
    },
    "8351": {
      "op": "POP"
    },
    "8352": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8353": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "8354": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8355": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8356": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8357": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8359": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 74
    },
    "8360": {
      "branch": 117,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8361": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F3"
    },
    "8364": {
      "branch": 117,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8365": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8367": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8376": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8377": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8379": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8381": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8382": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8383": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8384": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8385": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8386": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8387": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8388": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8390": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8391": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8392": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8393": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8394": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8395": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8396": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8397": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8398": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8399": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8401": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8402": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8403": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8404": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8405": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8406": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8407": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8408": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8409": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8410": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8411": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8412": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8414": {
      "op": "DUP4"
    },
    "8415": {
      "op": "ISZERO"
    },
    "8416": {
      "op": "PUSH2",
      "value": "0x2061"
    },
    "8419": {
      "op": "JUMPI"
    },
    "8420": {
      "op": "DUP2"
    },
    "8421": {
      "op": "DUP2"
    },
    "8422": {
      "op": "ADD"
    },
    "8423": {
      "op": "MLOAD"
    },
    "8424": {
      "op": "DUP4"
    },
    "8425": {
      "op": "DUP3"
    },
    "8426": {
      "op": "ADD"
    },
    "8427": {
      "op": "MSTORE"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8430": {
      "op": "ADD"
    },
    "8431": {
      "op": "PUSH2",
      "value": "0x2049"
    },
    "8434": {
      "op": "JUMP"
    },
    "8435": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8436": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "8437": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8439": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8440": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8441": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8442": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FF"
    },
    "8445": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8446": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "8447": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8448": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "8449": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "8450": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "op": "POP"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "op": "POP"
    },
    "8456": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8457": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8458": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 75,
      "value": "0x211B"
    },
    "8461": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8468": {
      "op": "SHL"
    },
    "8469": {
      "op": "SUB"
    },
    "8470": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "8471": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C1"
    },
    "8474": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8475": {
      "branch": 109,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8476": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x216C"
    },
    "8479": {
      "branch": 109,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8480": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8482": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8483": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8492": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8493": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8495": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8497": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8498": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8499": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8500": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "8502": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8504": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8505": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8506": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8507": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "8540": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8542": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8543": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8544": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8545": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8546": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8547": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8548": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8549": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8550": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "8551": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8553": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8554": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8555": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8556": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8557": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8559": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "8561": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8568": {
      "op": "SHL"
    },
    "8569": {
      "op": "SUB"
    },
    "8570": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "8571": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8572": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8574": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8575": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8576": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8577": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8578": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8579": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8580": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8582": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8583": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8584": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8585": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8586": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8587": {
      "op": "JUMPDEST"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8590": {
      "op": "DUP4"
    },
    "8591": {
      "op": "LT"
    },
    "8592": {
      "op": "PUSH2",
      "value": "0x21AA"
    },
    "8595": {
      "op": "JUMPI"
    },
    "8596": {
      "op": "DUP1"
    },
    "8597": {
      "op": "MLOAD"
    },
    "8598": {
      "op": "DUP3"
    },
    "8599": {
      "op": "MSTORE"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8602": {
      "op": "NOT"
    },
    "8603": {
      "op": "SWAP1"
    },
    "8604": {
      "op": "SWAP3"
    },
    "8605": {
      "op": "ADD"
    },
    "8606": {
      "op": "SWAP2"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8609": {
      "op": "SWAP2"
    },
    "8610": {
      "op": "DUP3"
    },
    "8611": {
      "op": "ADD"
    },
    "8612": {
      "op": "SWAP2"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "PUSH2",
      "value": "0x218B"
    },
    "8617": {
      "op": "JUMP"
    },
    "8618": {
      "op": "JUMPDEST"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "DUP4"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8624": {
      "op": "SUB"
    },
    "8625": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8628": {
      "op": "EXP"
    },
    "8629": {
      "op": "SUB"
    },
    "8630": {
      "op": "DUP1"
    },
    "8631": {
      "op": "NOT"
    },
    "8632": {
      "op": "DUP3"
    },
    "8633": {
      "op": "MLOAD"
    },
    "8634": {
      "op": "AND"
    },
    "8635": {
      "op": "DUP2"
    },
    "8636": {
      "op": "DUP5"
    },
    "8637": {
      "op": "MLOAD"
    },
    "8638": {
      "op": "AND"
    },
    "8639": {
      "op": "DUP1"
    },
    "8640": {
      "op": "DUP3"
    },
    "8641": {
      "op": "OR"
    },
    "8642": {
      "op": "DUP6"
    },
    "8643": {
      "op": "MSTORE"
    },
    "8644": {
      "op": "POP"
    },
    "8645": {
      "op": "POP"
    },
    "8646": {
      "op": "POP"
    },
    "8647": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8648": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8649": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8650": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8651": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8652": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8653": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8654": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8655": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8656": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8658": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8660": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8661": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8662": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8663": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "8664": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8665": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8667": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8668": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "8669": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "8670": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8671": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8672": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8673": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8674": {
      "op": "DUP1"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8677": {
      "op": "DUP2"
    },
    "8678": {
      "op": "EQ"
    },
    "8679": {
      "op": "PUSH2",
      "value": "0x220C"
    },
    "8682": {
      "op": "JUMPI"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8685": {
      "op": "MLOAD"
    },
    "8686": {
      "op": "SWAP2"
    },
    "8687": {
      "op": "POP"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8690": {
      "op": "NOT"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8693": {
      "op": "RETURNDATASIZE"
    },
    "8694": {
      "op": "ADD"
    },
    "8695": {
      "op": "AND"
    },
    "8696": {
      "op": "DUP3"
    },
    "8697": {
      "op": "ADD"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8700": {
      "op": "MSTORE"
    },
    "8701": {
      "op": "RETURNDATASIZE"
    },
    "8702": {
      "op": "DUP3"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "RETURNDATASIZE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8709": {
      "op": "DUP5"
    },
    "8710": {
      "op": "ADD"
    },
    "8711": {
      "op": "RETURNDATACOPY"
    },
    "8712": {
      "op": "PUSH2",
      "value": "0x2211"
    },
    "8715": {
      "op": "JUMP"
    },
    "8716": {
      "op": "JUMPDEST"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8719": {
      "op": "SWAP2"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "JUMPDEST"
    },
    "8722": {
      "op": "POP"
    },
    "8723": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8724": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8725": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8726": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8727": {
      "branch": 110,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 76
    },
    "8728": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2268"
    },
    "8731": {
      "branch": 110,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8732": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8734": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8735": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8736": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8742": {
      "op": "SHL"
    },
    "8743": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8744": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8745": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8747": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8749": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8750": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8751": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8752": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8753": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8754": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8756": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8757": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8758": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8759": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8792": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8794": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8795": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8796": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8797": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8798": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8799": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8800": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8801": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8802": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8803": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8805": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8806": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8807": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8808": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8809": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8810": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8811": {
      "branch": 111,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8812": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97A"
    },
    "8815": {
      "branch": 111,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8816": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 77
    },
    "8817": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8818": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8820": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8821": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8822": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8825": {
      "op": "DUP2"
    },
    "8826": {
      "op": "LT"
    },
    "8827": {
      "op": "ISZERO"
    },
    "8828": {
      "op": "PUSH2",
      "value": "0x2284"
    },
    "8831": {
      "op": "JUMPI"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8834": {
      "op": "DUP1"
    },
    "8835": {
      "op": "REVERT"
    },
    "8836": {
      "op": "JUMPDEST"
    },
    "8837": {
      "op": "POP"
    },
    "8838": {
      "branch": 112,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8839": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97A"
    },
    "8842": {
      "branch": 112,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8843": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8845": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8852": {
      "op": "SHL"
    },
    "8853": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8854": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8855": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8857": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8858": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8859": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8860": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8862": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8863": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8864": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8865": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8866": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8867": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8868": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8870": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8871": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8872": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8874": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8875": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8876": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233F"
    },
    "8879": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8881": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8882": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8883": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8885": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8886": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8887": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8888": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8889": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8891": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8892": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8893": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8894": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8895": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8896": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8897": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8898": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8900": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8901": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8902": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8935": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 78
    },
    "8936": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8937": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8938": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8939": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8940": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8941": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22F5"
    },
    "8944": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8945": {
      "op": "POP"
    },
    "8946": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8947": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8948": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8949": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8950": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8951": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8952": {
      "op": "POP"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "op": "POP"
    },
    "8955": {
      "op": "POP"
    },
    "8956": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "2afadfa4ab6c5956752cba93b84dfa9940a81f9e",
  "source": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/IVoterProxy.sol\";\n\ncontract StrategyCurveBBTCVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0x410e3E86ef427e30B9235497143881f717d93c2A);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n\n    address public constant curve = address(0xC45b2EEe6e09cA176Ca3bB5f7eEe7C47bF93c756);\n    address public constant gauge = address(0xdFc7AdFa664b08767b735dE28f9E84cd30492aeE);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    address public constant uniswap = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    address public constant sushiswap = address(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\n    address public constant wbtc = address(0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> wbtc route\n\n    uint256 public keepCRV = 1000;\n    uint256 public treasuryFee = 500;\n    uint256 public strategistReward = 50;\n    uint256 public withdrawalFee = 0;\n    uint256 public constant FEE_DENOMINATOR = 10000;\n\n    address public proxy;\n    address public dex;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n    address public keeper;\n\n    uint256 public earned; // lifetime strategy earnings denominated in `want` token\n\n    event Harvested(uint256 wantEarned, uint256 lifetimeEarned);\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        keeper = msg.sender;\n        controller = _controller;\n        // standardize constructor\n        proxy = address(0xC17ADf949f524213a540609c386035D7D685B16F);\n        dex = sushiswap;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveBBTCVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        strategist = _strategist;\n    }\n\n    function setKeeper(address _keeper) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        keeper = _keeper;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setTreasuryFee(uint256 _treasuryFee) external {\n        require(msg.sender == governance, \"!governance\");\n        treasuryFee = _treasuryFee;\n    }\n\n    function setStrategistReward(uint256 _strategistReward) external {\n        require(msg.sender == governance, \"!governance\");\n        strategistReward = _strategistReward;\n    }\n\n    function setProxy(address _proxy) external {\n        require(msg.sender == governance, \"!governance\");\n        proxy = _proxy;\n    }\n\n    function switchDex(bool isUniswap) external {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        if (isUniswap) {\n            dex = uniswap;\n        } else {\n            dex = sushiswap;\n        }\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            IVoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(wbtc != address(_asset), \"wbtc\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(FEE_DENOMINATOR);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return IVoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        IVoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == keeper || msg.sender == strategist || msg.sender == governance, \"!keepers\");\n        IVoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(FEE_DENOMINATOR);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(dex, 0);\n            IERC20(crv).safeApprove(dex, _crv);\n\n            address[] memory path = new address[](3);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = wbtc;\n\n            Uni(dex).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _wbtc = IERC20(wbtc).balanceOf(address(this));\n        if (_wbtc > 0) {\n            IERC20(wbtc).safeApprove(curve, 0);\n            IERC20(wbtc).safeApprove(curve, _wbtc);\n            ICurveFi(curve).add_liquidity([0, 0, _wbtc, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(treasuryFee).div(FEE_DENOMINATOR);\n            uint256 _reward = _want.mul(strategistReward).div(FEE_DENOMINATOR);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            IERC20(want).safeTransfer(strategist, _reward);\n            deposit();\n        }\n        IVoterProxy(proxy).lock();\n        earned = earned.add(_want);\n        emit Harvested(_want, earned);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return IVoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "565:7822:16:-;;;1572:4;1547:29;;1611:3;1582:32;;1654:2;1620:36;;1693:1;1662:32;;2078:305;8:9:-1;5:2;;;30:1;27;20:12;5:2;2078:305:16;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2078:305:16;2128:10;:23;;-1:-1:-1;;;;;;2128:23:16;;;2141:10;2128:23;;;;;;2161:10;:23;;;;;;;;2194:6;:19;;;;;;;;;;2223:10;:24;;-1:-1:-1;;;;;2223:24:16;;;;;;;;;;;;;2292:5;:59;;;;2308:42;2292:59;;;-1:-1:-1;2361:15:16;;;;;1283:42;2361:15;;;565:7822;;;;;;",
  "sourcePath": "contracts/strategies/StrategyCurveBBTCVoterProxy.sol",
  "type": "contract"
}