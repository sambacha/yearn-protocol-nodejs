{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "earn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        }
      ],
      "name": "setMin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAllETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/GSN/Context.sol",
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "3": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
    "4": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20Detailed.sol",
    "48": "contracts/vaults/yWETH.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "65": "interfaces/weth/WETH.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/vaults/yWETH.sol",
    "exportedSymbols": {
      "yWETH": [
        35236
      ]
    },
    "id": 35237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34573,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:48"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 34574,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 35493,
        "src": "26:58:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 34575,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 35424,
        "src": "85:53:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 34576,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 35788,
        "src": "139:53:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 34577,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 35713,
        "src": "193:61:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/ERC20.sol",
        "id": 34578,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 37645,
        "src": "255:57:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 34579,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 37703,
        "src": "313:65:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol",
        "file": "@openzeppelinV2/contracts/ownership/Ownable.sol",
        "id": 34580,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 37845,
        "src": "379:57:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/weth/WETH.sol",
        "file": "../../interfaces/weth/WETH.sol",
        "id": 34581,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 37891,
        "src": "438:40:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 34582,
        "nodeType": "ImportDirective",
        "scope": 35237,
        "sourceUnit": 36182,
        "src": "479:48:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 34583,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37644,
              "src": "645:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$37644",
                "typeString": "contract ERC20"
              }
            },
            "id": 34584,
            "nodeType": "InheritanceSpecifier",
            "src": "645:5:48"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 34585,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37702,
              "src": "652:13:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 34586,
            "nodeType": "InheritanceSpecifier",
            "src": "652:13:48"
          }
        ],
        "contractDependencies": [
          35492,
          37644,
          37702,
          37917
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 35236,
        "linearizedBaseContracts": [
          35236,
          37702,
          37644,
          35492,
          37917
        ],
        "name": "yWETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 34589,
            "libraryName": {
              "contractScope": null,
              "id": 34587,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35712,
              "src": "678:9:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$35712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "672:27:48",
            "typeName": {
              "contractScope": null,
              "id": 34588,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "692:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 34592,
            "libraryName": {
              "contractScope": null,
              "id": 34590,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "710:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "704:26:48",
            "typeName": {
              "id": 34591,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "722:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 34595,
            "libraryName": {
              "contractScope": null,
              "id": 34593,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "741:8:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "735:27:48",
            "typeName": {
              "id": 34594,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "754:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 34597,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 35236,
            "src": "768:19:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$35492",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 34596,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "768:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34600,
            "name": "min",
            "nodeType": "VariableDeclaration",
            "scope": 35236,
            "src": "794:25:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34598,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "794:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "39393930",
              "id": 34599,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "815:4:48",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9990_by_1",
                "typeString": "int_const 9990"
              },
              "value": "9990"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 34603,
            "name": "max",
            "nodeType": "VariableDeclaration",
            "scope": 35236,
            "src": "825:35:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34601,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 34602,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "855:5:48",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34605,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 35236,
            "src": "867:25:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34604,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "867:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34607,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 35236,
            "src": "898:25:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34606,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "898:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34658,
              "nodeType": "Block",
              "src": "1229:106:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34643,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34597,
                      "src": "1239:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35492",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34645,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34609,
                          "src": "1254:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34644,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35492,
                        "src": "1247:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 34646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1247:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35492",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1239:22:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35492",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 34648,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:22:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34649,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34605,
                      "src": "1271:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 34650,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "1284:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1284:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1271:23:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34653,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:23:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34654,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34607,
                      "src": "1304:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34655,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34611,
                      "src": "1317:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1304:24:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34657,
                  "nodeType": "ExpressionStatement",
                  "src": "1304:24:48"
                }
              ]
            },
            "documentation": null,
            "id": 34659,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "796561726e20",
                            "id": 34617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1053:8:48",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            "value": "yearn "
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 34619,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34609,
                                    "src": "1077:6:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 34618,
                                  "name": "ERC20Detailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37702,
                                  "src": "1063:13:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                    "typeString": "type(contract ERC20Detailed)"
                                  }
                                },
                                "id": 34620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1063:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                  "typeString": "contract ERC20Detailed"
                                }
                              },
                              "id": 34621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37685,
                              "src": "1063:26:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 34622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1063:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 34615,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37919,
                            "src": "1036:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1036:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 34623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1036:56:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1029:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 34624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:64:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "79",
                            "id": 34628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1131:3:48",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            "value": "y"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 34630,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34609,
                                    "src": "1150:6:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 34629,
                                  "name": "ERC20Detailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37702,
                                  "src": "1136:13:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                    "typeString": "type(contract ERC20Detailed)"
                                  }
                                },
                                "id": 34631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1136:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                  "typeString": "contract ERC20Detailed"
                                }
                              },
                              "id": 34632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37693,
                              "src": "1136:28:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 34633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1136:30:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 34626,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37919,
                            "src": "1114:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 34627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1114:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 34634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:53:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1107:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 34635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:61:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34637,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34609,
                            "src": "1196:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34636,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37702,
                          "src": "1182:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 34638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 34639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37701,
                      "src": "1182:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 34640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:32:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 34641,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 34613,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37702,
                  "src": "1002:13:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1002:222:48"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34609,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 34659,
                  "src": "942:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34611,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 34659,
                  "src": "958:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "941:37:48"
            },
            "returnParameters": {
              "id": 34642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:48"
            },
            "scope": 35236,
            "src": "930:405:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34681,
              "nodeType": "Block",
              "src": "1390:109:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34676,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34597,
                                "src": "1484:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 34675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1476:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 34677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1476:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34672,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34607,
                                "src": "1454:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34671,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36181,
                              "src": "1442:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 34673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1442:23:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$36181",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 34674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36138,
                          "src": "1442:33:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:49:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34667,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38146,
                                "src": "1431:4:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_yWETH_$35236",
                                  "typeString": "contract yWETH"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_yWETH_$35236",
                                  "typeString": "contract yWETH"
                                }
                              ],
                              "id": 34666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1423:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 34668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1423:13:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 34664,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34597,
                            "src": "1407:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 34665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35437,
                          "src": "1407:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 34670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35263,
                      "src": "1407:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 34679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:85:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34663,
                  "id": 34680,
                  "nodeType": "Return",
                  "src": "1400:92:48"
                }
              ]
            },
            "documentation": null,
            "id": 34682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:2:48"
            },
            "returnParameters": {
              "id": 34663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34682,
                  "src": "1381:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:9:48"
            },
            "scope": 35236,
            "src": "1341:158:48",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34699,
              "nodeType": "Block",
              "src": "1544:85:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34688,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "1562:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1562:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 34690,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1576:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1562:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 34692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:13:48",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 34687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "1554:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34694,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:48:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34695,
                      "name": "min",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34600,
                      "src": "1612:3:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34696,
                      "name": "_min",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34684,
                      "src": "1618:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1612:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34698,
                  "nodeType": "ExpressionStatement",
                  "src": "1612:10:48"
                }
              ]
            },
            "documentation": null,
            "id": 34700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34684,
                  "name": "_min",
                  "nodeType": "VariableDeclaration",
                  "scope": 34700,
                  "src": "1521:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1520:14:48"
            },
            "returnParameters": {
              "id": 34686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:0:48"
            },
            "scope": 35236,
            "src": "1505:124:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 34717,
              "nodeType": "Block",
              "src": "1686:99:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "1704:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1704:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 34708,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1718:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1704:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 34710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:13:48",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 34705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "1696:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34712,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:48:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34713,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34605,
                      "src": "1754:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34714,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34702,
                      "src": "1767:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1754:24:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34716,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:24:48"
                }
              ]
            },
            "documentation": null,
            "id": 34718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34702,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 34718,
                  "src": "1658:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:21:48"
            },
            "returnParameters": {
              "id": 34704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:0:48"
            },
            "scope": 35236,
            "src": "1635:150:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34735,
              "nodeType": "Block",
              "src": "1842:99:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34724,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "1860:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1860:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 34726,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1874:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1860:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 34728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1886:13:48",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 34723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "1852:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34730,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:48:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34731,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34607,
                      "src": "1910:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 34732,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34720,
                      "src": "1923:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1910:24:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34734,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:24:48"
                }
              ]
            },
            "documentation": null,
            "id": 34736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34720,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 34736,
                  "src": "1814:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1813:21:48"
            },
            "returnParameters": {
              "id": 34722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:48"
            },
            "scope": 35236,
            "src": "1791:150:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34754,
              "nodeType": "Block",
              "src": "2140:72:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34751,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34603,
                        "src": "2201:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34748,
                            "name": "min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34600,
                            "src": "2192:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 34744,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38146,
                                    "src": "2181:4:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_yWETH_$35236",
                                      "typeString": "contract yWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_yWETH_$35236",
                                      "typeString": "contract yWETH"
                                    }
                                  ],
                                  "id": 34743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2173:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 34745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2173:13:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 34741,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34597,
                                "src": "2157:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 34742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35437,
                              "src": "2157:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 34746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2157:30:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 34747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "2157:34:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 34749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2157:39:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 34750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "2157:43:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 34752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34740,
                  "id": 34753,
                  "nodeType": "Return",
                  "src": "2150:55:48"
                }
              ]
            },
            "documentation": null,
            "id": 34755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:2:48"
            },
            "returnParameters": {
              "id": 34740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34739,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34755,
                  "src": "2131:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2130:9:48"
            },
            "scope": 35236,
            "src": "2089:123:48",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34780,
              "nodeType": "Block",
              "src": "2241:149:48",
              "statements": [
                {
                  "assignments": [
                    34759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34759,
                      "name": "_bal",
                      "nodeType": "VariableDeclaration",
                      "scope": 34780,
                      "src": "2251:12:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34758,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2251:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34762,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34760,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34755,
                      "src": "2266:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:11:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2251:26:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34766,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34607,
                        "src": "2306:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34767,
                        "name": "_bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34759,
                        "src": "2318:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34763,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "2287:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "2287:18:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 34768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34769,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:36:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34775,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34597,
                            "src": "2370:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 34774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2362:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2362:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34777,
                        "name": "_bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34759,
                        "src": "2378:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34771,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34607,
                            "src": "2345:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34770,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "2333:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 34772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2333:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 34773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "earn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36145,
                      "src": "2333:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:50:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34779,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:50:48"
                }
              ]
            },
            "documentation": null,
            "id": 34781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:2:48"
            },
            "returnParameters": {
              "id": 34757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:48"
            },
            "scope": 35236,
            "src": "2218:172:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34792,
              "nodeType": "Block",
              "src": "2427:53:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 34787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2461:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2461:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 34785,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34597,
                            "src": "2445:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 34786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35437,
                          "src": "2445:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2445:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34784,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34873,
                      "src": "2437:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2437:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34791,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:36:48"
                }
              ]
            },
            "documentation": null,
            "id": 34793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2415:2:48"
            },
            "returnParameters": {
              "id": 34783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2427:0:48"
            },
            "scope": 35236,
            "src": "2396:84:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 34872,
              "nodeType": "Block",
              "src": "2527:524:48",
              "statements": [
                {
                  "assignments": [
                    34799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34799,
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 34872,
                      "src": "2537:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34798,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2537:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34802,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34800,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34682,
                      "src": "2553:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2537:25:48"
                },
                {
                  "assignments": [
                    34804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34804,
                      "name": "_before",
                      "nodeType": "VariableDeclaration",
                      "scope": 34872,
                      "src": "2572:15:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34811,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34808,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "2614:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 34807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2606:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34805,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "2590:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "2590:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:48:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34815,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "2653:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2653:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34818,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "2673:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 34817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2665:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2665:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34820,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34795,
                        "src": "2680:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34812,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "2630:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35550,
                      "src": "2630:22:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 34821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:58:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34822,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:58:48"
                },
                {
                  "assignments": [
                    34824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34824,
                      "name": "_after",
                      "nodeType": "VariableDeclaration",
                      "scope": 34872,
                      "src": "2698:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2698:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34831,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34828,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "2739:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 34827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2731:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2731:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34825,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "2715:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "2715:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2698:47:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34832,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34795,
                      "src": "2755:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34835,
                          "name": "_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34804,
                          "src": "2776:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 34833,
                          "name": "_after",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34824,
                          "src": "2765:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35279,
                        "src": "2765:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 34836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2765:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2755:29:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34838,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:29:48"
                },
                {
                  "assignments": [
                    34840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34840,
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "scope": 34872,
                      "src": "2838:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34839,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2838:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34842,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 34841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2855:1:48",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2838:18:48"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34843,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37271,
                        "src": "2870:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 34844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2870:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 34845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2887:1:48",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2870:18:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34864,
                    "nodeType": "Block",
                    "src": "2937:73:48",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 34852,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34840,
                            "src": "2951:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34860,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34799,
                                "src": "2993:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 34855,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37271,
                                          "src": "2973:11:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 34856,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2973:13:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 34853,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34795,
                                        "src": "2961:7:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 34854,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 35340,
                                      "src": "2961:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 34857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2961:26:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 34858,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2960:28:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 34859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35356,
                              "src": "2960:32:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 34861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2960:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2951:48:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34863,
                        "nodeType": "ExpressionStatement",
                        "src": "2951:48:48"
                      }
                    ]
                  },
                  "id": 34865,
                  "nodeType": "IfStatement",
                  "src": "2866:144:48",
                  "trueBody": {
                    "id": 34851,
                    "nodeType": "Block",
                    "src": "2890:41:48",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 34847,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34840,
                            "src": "2904:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 34848,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34795,
                            "src": "2913:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2904:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34850,
                        "nodeType": "ExpressionStatement",
                        "src": "2904:16:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34867,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "3025:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3025:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34869,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34840,
                        "src": "3037:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34866,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37528,
                      "src": "3019:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3019:25:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34871,
                  "nodeType": "ExpressionStatement",
                  "src": "3019:25:48"
                }
              ]
            },
            "documentation": null,
            "id": 34873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34795,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 34873,
                  "src": "2503:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2502:17:48"
            },
            "returnParameters": {
              "id": 34797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2527:0:48"
            },
            "scope": 35236,
            "src": "2486:565:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34955,
              "nodeType": "Block",
              "src": "3094:548:48",
              "statements": [
                {
                  "assignments": [
                    34877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34877,
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 34955,
                      "src": "3104:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3104:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34880,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34878,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34682,
                      "src": "3120:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3104:25:48"
                },
                {
                  "assignments": [
                    34882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34882,
                      "name": "_before",
                      "nodeType": "VariableDeclaration",
                      "scope": 34955,
                      "src": "3139:15:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3139:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34889,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34886,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "3181:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 34885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3173:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3173:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34883,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "3157:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "3157:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3157:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3139:48:48"
                },
                {
                  "assignments": [
                    34891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34891,
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 34955,
                      "src": "3197:15:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3197:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34894,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 34892,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37932,
                      "src": "3215:3:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 34893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3215:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3197:27:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34902,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34891,
                          "src": "3269:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 34897,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34597,
                                    "src": "3247:5:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$35492",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$35492",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 34896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3239:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 34898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3239:14:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34895,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37890,
                              "src": "3234:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_WETH_$37890_$",
                                "typeString": "type(contract WETH)"
                              }
                            },
                            "id": 34899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WETH_$37890",
                              "typeString": "contract WETH"
                            }
                          },
                          "id": 34900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37872,
                          "src": "3234:28:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 34901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3234:34:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 34903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3234:43:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 34904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:45:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34905,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:45:48"
                },
                {
                  "assignments": [
                    34907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34907,
                      "name": "_after",
                      "nodeType": "VariableDeclaration",
                      "scope": 34955,
                      "src": "3289:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3289:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34914,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 34911,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "3330:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 34910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3322:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 34912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3322:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34908,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "3306:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "3306:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 34913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3289:47:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34915,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34891,
                      "src": "3346:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 34918,
                          "name": "_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34882,
                          "src": "3367:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 34916,
                          "name": "_after",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34907,
                          "src": "3356:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35279,
                        "src": "3356:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 34919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3356:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3346:29:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34921,
                  "nodeType": "ExpressionStatement",
                  "src": "3346:29:48"
                },
                {
                  "assignments": [
                    34923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34923,
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "scope": 34955,
                      "src": "3429:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3429:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34925,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 34924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3446:1:48",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3429:18:48"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34926,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37271,
                        "src": "3461:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 34927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3461:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 34928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3478:1:48",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3461:18:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34947,
                    "nodeType": "Block",
                    "src": "3528:73:48",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 34935,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34923,
                            "src": "3542:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34943,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34877,
                                "src": "3584:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 34938,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37271,
                                          "src": "3564:11:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 34939,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3564:13:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 34936,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34891,
                                        "src": "3552:7:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 34937,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 35340,
                                      "src": "3552:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 34940,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3552:26:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 34941,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3551:28:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 34942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35356,
                              "src": "3551:32:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 34944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3551:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3542:48:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34946,
                        "nodeType": "ExpressionStatement",
                        "src": "3542:48:48"
                      }
                    ]
                  },
                  "id": 34948,
                  "nodeType": "IfStatement",
                  "src": "3457:144:48",
                  "trueBody": {
                    "id": 34934,
                    "nodeType": "Block",
                    "src": "3481:41:48",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 34930,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34923,
                            "src": "3495:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 34931,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34891,
                            "src": "3504:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3495:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34933,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:16:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34950,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "3616:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3616:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34952,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34923,
                        "src": "3628:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34949,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37528,
                      "src": "3610:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:25:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34954,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:25:48"
                }
              ]
            },
            "documentation": null,
            "id": 34956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3076:2:48"
            },
            "returnParameters": {
              "id": 34875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3094:0:48"
            },
            "scope": 35236,
            "src": "3057:585:48",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34966,
              "nodeType": "Block",
              "src": "3680:48:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 34961,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3709:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3709:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 34960,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37283,
                          "src": "3699:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 34963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3699:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34959,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35103,
                      "src": "3690:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:31:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34965,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:31:48"
                }
              ]
            },
            "documentation": null,
            "id": 34967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3668:2:48"
            },
            "returnParameters": {
              "id": 34958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3680:0:48"
            },
            "scope": 35236,
            "src": "3648:80:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 34977,
              "nodeType": "Block",
              "src": "3769:51:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 34972,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "3801:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3801:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 34971,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37283,
                          "src": "3791:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 34974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3791:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34970,
                      "name": "withdrawETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35204,
                      "src": "3779:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:34:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34976,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:34:48"
                }
              ]
            },
            "documentation": null,
            "id": 34978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAllETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3757:2:48"
            },
            "returnParameters": {
              "id": 34969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3769:0:48"
            },
            "scope": 35236,
            "src": "3734:86:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 35010,
              "nodeType": "Block",
              "src": "3970:176:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 34986,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3988:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3988:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 34988,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34607,
                          "src": "4002:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3988:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 34990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4014:13:48",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 34985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3980:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3980:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34992,
                  "nodeType": "ExpressionStatement",
                  "src": "3980:48:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 34994,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34980,
                          "src": "4046:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 34996,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34597,
                              "src": "4065:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 34995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4057:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 34997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4057:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4046:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e",
                        "id": 34999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4073:7:48",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        },
                        "value": "token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        }
                      ],
                      "id": 34993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4038:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:43:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35001,
                  "nodeType": "ExpressionStatement",
                  "src": "4038:43:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35006,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34607,
                        "src": "4120:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35007,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34982,
                        "src": "4132:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 35003,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34980,
                            "src": "4098:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35002,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4091:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 35004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4091:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4091:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 35008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:48:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35009,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:48:48"
                }
              ]
            },
            "documentation": null,
            "id": 35011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34980,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 35011,
                  "src": "3928:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34982,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 35011,
                  "src": "3945:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3927:33:48"
            },
            "returnParameters": {
              "id": 34984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3970:0:48"
            },
            "scope": 35236,
            "src": "3911:235:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 35102,
              "nodeType": "Block",
              "src": "4261:565:48",
              "statements": [
                {
                  "assignments": [
                    35017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35017,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 35102,
                      "src": "4271:9:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4271:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35028,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35025,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "4312:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 35026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4312:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 35021,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35013,
                                "src": "4298:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 35018,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34682,
                                  "src": "4284:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 35019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4284:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 35020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35340,
                              "src": "4284:13:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 35022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4284:22:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 35023,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4283:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 35024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "4283:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 35027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:43:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4271:55:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "4342:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4342:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35032,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35013,
                        "src": "4354:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35029,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37572,
                      "src": "4336:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:26:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35034,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:26:48"
                },
                {
                  "assignments": [
                    35036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35036,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 35102,
                      "src": "4398:9:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4398:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35043,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 35040,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "4434:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 35039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4426:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 35041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4426:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35037,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "4410:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "4410:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 35042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4410:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4398:42:48"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 35044,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35036,
                      "src": "4454:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 35045,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35017,
                      "src": "4458:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4454:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 35093,
                  "nodeType": "IfStatement",
                  "src": "4450:326:48",
                  "trueBody": {
                    "id": 35092,
                    "nodeType": "Block",
                    "src": "4461:315:48",
                    "statements": [
                      {
                        "assignments": [
                          35048
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35048,
                            "name": "_withdraw",
                            "nodeType": "VariableDeclaration",
                            "scope": 35092,
                            "src": "4475:17:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35047,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4475:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35053,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 35051,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35036,
                              "src": "4501:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35049,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35017,
                              "src": "4495:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 35050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "4495:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 35052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4495:8:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4475:28:48"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35059,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34597,
                                  "src": "4558:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$35492",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$35492",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 35058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4550:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 35060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4550:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 35061,
                              "name": "_withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35048,
                              "src": "4566:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35055,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34607,
                                  "src": "4529:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35054,
                                "name": "IController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36181,
                                "src": "4517:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                  "typeString": "type(contract IController)"
                                }
                              },
                              "id": 35056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4517:23:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$36181",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 35057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36131,
                            "src": "4517:32:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 35062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4517:59:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35063,
                        "nodeType": "ExpressionStatement",
                        "src": "4517:59:48"
                      },
                      {
                        "assignments": [
                          35065
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35065,
                            "name": "_after",
                            "nodeType": "VariableDeclaration",
                            "scope": 35092,
                            "src": "4590:14:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35064,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4590:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35072,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35069,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38146,
                                  "src": "4631:4:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_yWETH_$35236",
                                    "typeString": "contract yWETH"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_yWETH_$35236",
                                    "typeString": "contract yWETH"
                                  }
                                ],
                                "id": 35068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4623:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 35070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4623:13:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35066,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34597,
                              "src": "4607:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35437,
                            "src": "4607:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 35071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4607:30:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4590:47:48"
                      },
                      {
                        "assignments": [
                          35074
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35074,
                            "name": "_diff",
                            "nodeType": "VariableDeclaration",
                            "scope": 35092,
                            "src": "4651:13:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35073,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4651:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35079,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 35077,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35036,
                              "src": "4678:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35075,
                              "name": "_after",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35065,
                              "src": "4667:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 35076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "4667:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 35078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4667:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4651:29:48"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 35080,
                            "name": "_diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35074,
                            "src": "4698:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 35081,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35048,
                            "src": "4706:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4698:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 35091,
                        "nodeType": "IfStatement",
                        "src": "4694:72:48",
                        "trueBody": {
                          "id": 35090,
                          "nodeType": "Block",
                          "src": "4717:49:48",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 35088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 35083,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35017,
                                  "src": "4735:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 35086,
                                      "name": "_diff",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35074,
                                      "src": "4745:5:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 35084,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35036,
                                      "src": "4739:1:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 35085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35263,
                                    "src": "4739:5:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 35087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4739:12:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4735:16:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 35089,
                              "nodeType": "ExpressionStatement",
                              "src": "4735:16:48"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35097,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "4805:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4805:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35099,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35017,
                        "src": "4817:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35094,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "4786:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4786:18:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 35100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4786:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35101,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:33:48"
                }
              ]
            },
            "documentation": null,
            "id": 35103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35013,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 35103,
                  "src": "4237:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4236:17:48"
            },
            "returnParameters": {
              "id": 35015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:0:48"
            },
            "scope": 35236,
            "src": "4219:607:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35203,
              "nodeType": "Block",
              "src": "4944:605:48",
              "statements": [
                {
                  "assignments": [
                    35109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35109,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 35203,
                      "src": "4954:9:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4954:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35120,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35117,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "4995:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 35118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4995:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 35113,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35105,
                                "src": "4981:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 35110,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34682,
                                  "src": "4967:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 35111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4967:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 35112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35340,
                              "src": "4967:13:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 35114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4967:22:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 35115,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4966:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 35116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "4966:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 35119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:43:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4954:55:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 35122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "5025:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5025:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35124,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35105,
                        "src": "5037:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35121,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37572,
                      "src": "5019:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 35125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:26:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35126,
                  "nodeType": "ExpressionStatement",
                  "src": "5019:26:48"
                },
                {
                  "assignments": [
                    35128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35128,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 35203,
                      "src": "5081:9:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5081:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 35135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 35132,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38146,
                            "src": "5117:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yWETH_$35236",
                              "typeString": "contract yWETH"
                            }
                          ],
                          "id": 35131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5109:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 35133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5109:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35129,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34597,
                        "src": "5093:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "5093:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 35134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5081:42:48"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 35136,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35128,
                      "src": "5137:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 35137,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35109,
                      "src": "5141:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5137:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 35185,
                  "nodeType": "IfStatement",
                  "src": "5133:326:48",
                  "trueBody": {
                    "id": 35184,
                    "nodeType": "Block",
                    "src": "5144:315:48",
                    "statements": [
                      {
                        "assignments": [
                          35140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35140,
                            "name": "_withdraw",
                            "nodeType": "VariableDeclaration",
                            "scope": 35184,
                            "src": "5158:17:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5158:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35145,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 35143,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35128,
                              "src": "5184:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35141,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35109,
                              "src": "5178:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 35142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "5178:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 35144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5178:8:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5158:28:48"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35151,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34597,
                                  "src": "5241:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$35492",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$35492",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 35150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5233:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 35152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5233:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 35153,
                              "name": "_withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35140,
                              "src": "5249:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35147,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34607,
                                  "src": "5212:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35146,
                                "name": "IController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36181,
                                "src": "5200:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                  "typeString": "type(contract IController)"
                                }
                              },
                              "id": 35148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5200:23:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$36181",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 35149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36131,
                            "src": "5200:32:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 35154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5200:59:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35155,
                        "nodeType": "ExpressionStatement",
                        "src": "5200:59:48"
                      },
                      {
                        "assignments": [
                          35157
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35157,
                            "name": "_after",
                            "nodeType": "VariableDeclaration",
                            "scope": 35184,
                            "src": "5273:14:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35156,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5273:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35164,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 35161,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38146,
                                  "src": "5314:4:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_yWETH_$35236",
                                    "typeString": "contract yWETH"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_yWETH_$35236",
                                    "typeString": "contract yWETH"
                                  }
                                ],
                                "id": 35160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5306:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 35162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5306:13:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35158,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34597,
                              "src": "5290:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35437,
                            "src": "5290:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 35163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5290:30:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5273:47:48"
                      },
                      {
                        "assignments": [
                          35166
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35166,
                            "name": "_diff",
                            "nodeType": "VariableDeclaration",
                            "scope": 35184,
                            "src": "5334:13:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35165,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5334:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 35171,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 35169,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35128,
                              "src": "5361:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 35167,
                              "name": "_after",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35157,
                              "src": "5350:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 35168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "5350:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 35170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5350:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5334:29:48"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 35172,
                            "name": "_diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35166,
                            "src": "5381:5:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 35173,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35140,
                            "src": "5389:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5381:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 35183,
                        "nodeType": "IfStatement",
                        "src": "5377:72:48",
                        "trueBody": {
                          "id": 35182,
                          "nodeType": "Block",
                          "src": "5400:49:48",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 35180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 35175,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35109,
                                  "src": "5418:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 35178,
                                      "name": "_diff",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35166,
                                      "src": "5428:5:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 35176,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35128,
                                      "src": "5422:1:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 35177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35263,
                                    "src": "5422:5:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 35179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5422:12:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5418:16:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 35181,
                              "nodeType": "ExpressionStatement",
                              "src": "5418:16:48"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35192,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35109,
                        "src": "5499:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 35188,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34597,
                                "src": "5482:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 35187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5474:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 35189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5474:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35186,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37890,
                          "src": "5469:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_WETH_$37890_$",
                            "typeString": "type(contract WETH)"
                          }
                        },
                        "id": 35190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5469:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$37890",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 35191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37877,
                      "src": "5469:29:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 35193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5469:32:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35194,
                  "nodeType": "ExpressionStatement",
                  "src": "5469:32:48"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35200,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35109,
                        "src": "5540:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 35196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "5519:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 35197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5519:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 35195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5511:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 35198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5511:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 35199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5511:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 35201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5511:31:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35202,
                  "nodeType": "ExpressionStatement",
                  "src": "5511:31:48"
                }
              ]
            },
            "documentation": null,
            "id": 35204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35105,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 35204,
                  "src": "4920:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4919:17:48"
            },
            "returnParameters": {
              "id": 35107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4944:0:48"
            },
            "scope": 35236,
            "src": "4899:650:48",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35219,
              "nodeType": "Block",
              "src": "5617:62:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35215,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "5658:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 35216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5658:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 35212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5648:4:48",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35209,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34682,
                              "src": "5634:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 35210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5634:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 35211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "5634:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 35213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5634:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 35214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "5634:23:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 35217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5634:38:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35208,
                  "id": 35218,
                  "nodeType": "Return",
                  "src": "5627:45:48"
                }
              ]
            },
            "documentation": null,
            "id": 35220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:2:48"
            },
            "returnParameters": {
              "id": 35208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35207,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35220,
                  "src": "5608:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5608:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5607:9:48"
            },
            "scope": 35236,
            "src": "5555:124:48",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35234,
              "nodeType": "Block",
              "src": "5713:87:48",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 35223,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "5727:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 35224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5727:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 35226,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34597,
                          "src": "5749:5:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 35225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5741:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 35227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5741:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5727:28:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 35233,
                  "nodeType": "IfStatement",
                  "src": "5723:71:48",
                  "trueBody": {
                    "id": 35232,
                    "nodeType": "Block",
                    "src": "5757:37:48",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35229,
                            "name": "depositETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34956,
                            "src": "5771:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 35230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35231,
                        "nodeType": "ExpressionStatement",
                        "src": "5771:12:48"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 35235,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5693:2:48"
            },
            "returnParameters": {
              "id": 35222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5713:0:48"
            },
            "scope": 35236,
            "src": "5685:115:48",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 35237,
        "src": "627:5175:48"
      }
    ],
    "src": "0:5803:48"
  },
  "bytecode": "60806040526127066006553480156200001757600080fd5b506040516200270c3803806200270c833981810160405260408110156200003d57600080fd5b508051602090910151604080516306fdde0360e01b815290516001600160a01b038416916306fdde03916004808301926000929190829003018186803b1580156200008757600080fd5b505afa1580156200009c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015620000c657600080fd5b8101908080516040519392919084640100000000821115620000e757600080fd5b908301906020820185811115620000fd57600080fd5b82516401000000008111828201881017156200011857600080fd5b82525081516020918201929091019080838360005b83811015620001475781810151838201526020016200012d565b50505050905090810190601f168015620001755780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806503cb2b0b937160d51b81525060060182805190602001908083835b60208310620001c15780518252601f199092019160209182019101620001a0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200022f57600080fd5b505afa15801562000244573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200026e57600080fd5b81019080805160405193929190846401000000008211156200028f57600080fd5b908301906020820185811115620002a557600080fd5b8251640100000000811182820188101715620002c057600080fd5b82525081516020918201929091019080838360005b83811015620002ef578181015183820152602001620002d5565b50505050905090810190601f1680156200031d5780820380516001836020036101000a031916815260200191505b506040525050506040516020018080607960f81b81525060010182805190602001908083835b60208310620003645780518252601f19909201916020918201910162000343565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620003d257600080fd5b505afa158015620003e7573d6000803e3d6000fd5b505050506040513d6020811015620003fe57600080fd5b505182516200041590600390602086019062000486565b5081516200042b90600490602085019062000486565b506005805460ff191660ff9290921691909117610100600160a81b0319166101006001600160a01b0396871602179055505060078054336001600160a01b03199182161790915560088054909116919092161790556200052b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004c957805160ff1916838001178555620004f9565b82800160010185558215620004f9579182015b82811115620004f9578251825591602001919060010190620004dc565b50620005079291506200050b565b5090565b6200052891905b8082111562000507576000815560010162000512565b90565b6121d1806200053b6000396000f3fe6080604052600436106101d85760003560e01c806390386bbf11610102578063d389800f11610095578063f6326fb311610064578063f6326fb3146106b3578063f77c4791146106bb578063f8897945146106d0578063fc0c546a146106e5576101d8565b8063d389800f14610624578063dd62ed3e14610639578063de5f626814610674578063f14210a614610689576101d8565b8063a9059cbb116100d1578063a9059cbb14610579578063ab033ea9146105b2578063b69ef8a8146105e5578063b6b55f25146105fa576101d8565b806390386bbf146104e357806392eefe9b146104f857806395d89b411461052b578063a457c2d714610540576101d8565b8063395093511161017a5780636ac5db19116101495780636ac5db191461047157806370a082311461048657806377c7b8fc146104b9578063853828b6146104ce576101d8565b806339509351146103c857806345dc3dd81461040157806348a0d7541461042b5780635aa6e67514610440576101d8565b806318160ddd116101b657806318160ddd1461030957806323b872dd146103305780632e1a7d4d14610373578063313ce5671461039d576101d8565b8063018ee9b7146101f957806306fdde0314610232578063095ea7b3146102bc575b60055461010090046001600160a01b031633146101f7576101f76106fa565b005b34801561020557600080fd5b506101f76004803603604081101561021c57600080fd5b506001600160a01b0381351690602001356108d1565b34801561023e57600080fd5b50610247610992565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610281578181015183820152602001610269565b50505050905090810190601f1680156102ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c857600080fd5b506102f5600480360360408110156102df57600080fd5b506001600160a01b038135169060200135610a28565b604080519115158252519081900360200190f35b34801561031557600080fd5b5061031e610a46565b60408051918252519081900360200190f35b34801561033c57600080fd5b506102f56004803603606081101561035357600080fd5b506001600160a01b03813581169160208101359091169060400135610a4c565b34801561037f57600080fd5b506101f76004803603602081101561039657600080fd5b5035610ad9565b3480156103a957600080fd5b506103b2610cec565b6040805160ff9092168252519081900360200190f35b3480156103d457600080fd5b506102f5600480360360408110156103eb57600080fd5b506001600160a01b038135169060200135610cf5565b34801561040d57600080fd5b506101f76004803603602081101561042457600080fd5b5035610d49565b34801561043757600080fd5b5061031e610d9b565b34801561044c57600080fd5b50610455610e51565b604080516001600160a01b039092168252519081900360200190f35b34801561047d57600080fd5b5061031e610e60565b34801561049257600080fd5b5061031e600480360360208110156104a957600080fd5b50356001600160a01b0316610e66565b3480156104c557600080fd5b5061031e610e81565b3480156104da57600080fd5b506101f7610ea2565b3480156104ef57600080fd5b506101f7610eb5565b34801561050457600080fd5b506101f76004803603602081101561051b57600080fd5b50356001600160a01b0316610ec6565b34801561053757600080fd5b50610247610f35565b34801561054c57600080fd5b506102f56004803603604081101561056357600080fd5b506001600160a01b038135169060200135610f96565b34801561058557600080fd5b506102f56004803603604081101561059c57600080fd5b506001600160a01b038135169060200135611004565b3480156105be57600080fd5b506101f7600480360360208110156105d557600080fd5b50356001600160a01b0316611018565b3480156105f157600080fd5b5061031e611087565b34801561060657600080fd5b506101f76004803603602081101561061d57600080fd5b5035611193565b34801561063057600080fd5b506101f76112ff565b34801561064557600080fd5b5061031e6004803603604081101561065c57600080fd5b506001600160a01b03813581169160200135166113a5565b34801561068057600080fd5b506101f76113d0565b34801561069557600080fd5b506101f7600480360360208110156106ac57600080fd5b5035611452565b6101f76106fa565b3480156106c757600080fd5b506104556116d2565b3480156106dc57600080fd5b5061031e6116e1565b3480156106f157600080fd5b506104556116e7565b6000610704611087565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b15801561075957600080fd5b505afa15801561076d573d6000803e3d6000fd5b505050506040513d602081101561078357600080fd5b505160055460408051630d0e30db60e41b8152905192935034926101009092046001600160a01b03169163d0e30db0918491600480830192600092919082900301818588803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600095506101009092046001600160a01b031693506370a082319250602480820192602092909190829003018186803b15801561084057600080fd5b505afa158015610854573d6000803e3d6000fd5b505050506040513d602081101561086a57600080fd5b5051905061087e818463ffffffff6116fb16565b9150600061088a610a46565b6108955750816108c0565b6108bd856108b16108a4610a46565b869063ffffffff61174416565b9063ffffffff61179d16565b90505b6108ca33826117df565b5050505050565b6008546001600160a01b0316331461091e576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b0383811661010090920416141561096e576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b60085461098e906001600160a01b0384811691168363ffffffff6118cf16565b5050565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b5050505050905090565b6000610a3c610a35611921565b8484611925565b5060015b92915050565b60025490565b6000610a59848484611a11565b610acf84610a65611921565b610aca856040518060600160405280602881526020016120bc602891396001600160a01b038a16600090815260016020526040812090610aa3611921565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611b6d16565b611925565b5060019392505050565b6000610afe610ae6610a46565b6108b184610af2611087565b9063ffffffff61174416565b9050610b0a3383611c04565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610b5a57600080fd5b505afa158015610b6e573d6000803e3d6000fd5b505050506040513d6020811015610b8457600080fd5b5051905081811015610ccb576000610ba2838363ffffffff6116fb16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d6020811015610c9457600080fd5b505190506000610caa828563ffffffff6116fb16565b905082811015610cc757610cc4848263ffffffff611d0016565b94505b5050505b600554610ce79061010090046001600160a01b031633846118cf565b505050565b60055460ff1690565b6000610a3c610d02611921565b84610aca8560016000610d13611921565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611d0016565b6007546001600160a01b03163314610d96576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600655565b6000610e4c6127106108b1600654600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d6020811015610e3e57600080fd5b50519063ffffffff61174416565b905090565b6007546001600160a01b031681565b61271081565b6001600160a01b031660009081526020819052604090205490565b6000610e4c610e8e610a46565b6108b1670de0b6b3a7640000610af2611087565b610eb3610eae33610e66565b610ad9565b565b610eb3610ec133610e66565b611452565b6007546001600160a01b03163314610f13576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a1e5780601f106109f357610100808354040283529160200191610a1e565b6000610a3c610fa3611921565b84610aca856040518060600160405280602581526020016121786025913960016000610fcd611921565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611b6d16565b6000610a3c611011611921565b8484611a11565b6007546001600160a01b03163314611065576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854600554604080516370a0823160e01b81526001600160a01b03610100909304831660048201529051600093610e4c9316916370a08231916024808301926020929190829003018186803b1580156110e057600080fd5b505afa1580156110f4573d6000803e3d6000fd5b505050506040513d602081101561110a57600080fd5b5051600554604080516370a0823160e01b815230600482015290516101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b15801561115b57600080fd5b505afa15801561116f573d6000803e3d6000fd5b505050506040513d602081101561118557600080fd5b50519063ffffffff611d0016565b600061119d611087565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b1580156111f257600080fd5b505afa158015611206573d6000803e3d6000fd5b505050506040513d602081101561121c57600080fd5b505160055490915061123e9061010090046001600160a01b0316333086611d5a565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561128e57600080fd5b505afa1580156112a2573d6000803e3d6000fd5b505050506040513d60208110156112b857600080fd5b505190506112cc818363ffffffff6116fb16565b935060006112d8610a46565b6112e35750836108c0565b6108bd846108b16112f2610a46565b889063ffffffff61174416565b6000611309610d9b565b6008546005549192506113349161010090046001600160a01b0390811691168363ffffffff6118cf16565b6008546005546040805163b02bf4b960e01b81526101009092046001600160a01b03908116600484015260248301859052905192169163b02bf4b99160448082019260009290919082900301818387803b15801561139157600080fd5b505af11580156108ca573d6000803e3d6000fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554604080516370a0823160e01b81523360048201529051610eb39261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561142157600080fd5b505afa158015611435573d6000803e3d6000fd5b505050506040513d602081101561144b57600080fd5b5051611193565b600061145f610ae6610a46565b905061146b3383611c04565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156114bb57600080fd5b505afa1580156114cf573d6000803e3d6000fd5b505050506040513d60208110156114e557600080fd5b505190508181101561162c576000611503838363ffffffff6116fb16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561156257600080fd5b505af1158015611576573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519050600061160b828563ffffffff6116fb16565b90508281101561162857611625848263ffffffff611d0016565b94505b5050505b600560019054906101000a90046001600160a01b03166001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561168757600080fd5b505af115801561169b573d6000803e3d6000fd5b505060405133925084156108fc02915084906000818181858888f193505050501580156116cc573d6000803e3d6000fd5b50505050565b6008546001600160a01b031681565b60065481565b60055461010090046001600160a01b031681565b600061173d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b6d565b9392505050565b60008261175357506000610a40565b8282028284828161176057fe5b041461173d5760405162461bcd60e51b815260040180806020018281038252602181526020018061209b6021913960400191505060405180910390fd5b600061173d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611db4565b6001600160a01b03821661183a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461184d908263ffffffff611d0016565b6002556001600160a01b038216600090815260208190526040902054611879908263ffffffff611d0016565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ce7908490611e19565b3390565b6001600160a01b03831661196a5760405162461bcd60e51b815260040180806020018281038252602481526020018061212a6024913960400191505060405180910390fd5b6001600160a01b0382166119af5760405162461bcd60e51b81526004018080602001828103825260228152602001806120536022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611a565760405162461bcd60e51b81526004018080602001828103825260258152602001806121056025913960400191505060405180910390fd5b6001600160a01b038216611a9b5760405162461bcd60e51b815260040180806020018281038252602381526020018061200e6023913960400191505060405180910390fd5b611ade81604051806060016040528060268152602001612075602691396001600160a01b038616600090815260208190526040902054919063ffffffff611b6d16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611b13908263ffffffff611d0016565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611bfc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bc1578181015183820152602001611ba9565b50505050905090810190601f168015611bee5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216611c495760405162461bcd60e51b81526004018080602001828103825260218152602001806120e46021913960400191505060405180910390fd5b611c8c81604051806060016040528060228152602001612031602291396001600160a01b038516600090815260208190526040902054919063ffffffff611b6d16565b6001600160a01b038316600090815260208190526040902055600254611cb8908263ffffffff6116fb16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008282018381101561173d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116cc908590611e19565b60008183611e035760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bc1578181015183820152602001611ba9565b506000838581611e0f57fe5b0495945050505050565b611e2b826001600160a01b0316611fd1565b611e7c576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611eba5780518252601f199092019160209182019101611e9b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f1c576040519150601f19603f3d011682016040523d82523d6000602084013e611f21565b606091505b509150915081611f78576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156116cc57808060200190516020811015611f9457600080fd5b50516116cc5760405162461bcd60e51b815260040180806020018281038252602a81526020018061214e602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061200557508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820aa8ce4cfc9b3f4af59e406b71572157d1a03ff4b684fd1badc2624dccb50c6e364736f6c63430005110032",
  "bytecodeSha1": "a69825bde5838885d51ceaf35471ffd574605fd9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "yWETH",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "104": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "105": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "101": [
            2458,
            2464,
            false
          ],
          "102": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "103": [
            1845,
            1851,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "92": [
            7443,
            7462,
            true
          ],
          "93": [
            7521,
            7542,
            true
          ]
        },
        "ERC20._burn": {
          "96": [
            6658,
            6679,
            true
          ]
        },
        "ERC20._mint": {
          "91": [
            6037,
            6058,
            true
          ]
        },
        "ERC20._transfer": {
          "94": [
            5325,
            5345,
            true
          ],
          "95": [
            5405,
            5428,
            true
          ]
        }
      },
      "4": {},
      "48": {
        "yWETH.<fallback>": {
          "81": [
            5727,
            5755,
            false
          ]
        },
        "yWETH.harvest": {
          "82": [
            3988,
            4012,
            true
          ],
          "83": [
            4046,
            4071,
            true
          ]
        },
        "yWETH.setController": {
          "87": [
            1860,
            1884,
            true
          ]
        },
        "yWETH.setGovernance": {
          "88": [
            1704,
            1728,
            true
          ]
        },
        "yWETH.setMin": {
          "86": [
            1562,
            1586,
            true
          ]
        },
        "yWETH.withdraw": {
          "84": [
            4454,
            4459,
            false
          ],
          "85": [
            4698,
            4715,
            false
          ]
        },
        "yWETH.withdrawETH": {
          "89": [
            5137,
            5142,
            false
          ],
          "90": [
            5381,
            5398,
            false
          ]
        }
      },
      "5": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "97": [
            3261,
            3288,
            true
          ],
          "98": [
            3479,
            3486,
            true
          ],
          "99": [
            3538,
            3559,
            false
          ],
          "100": [
            3667,
            3697,
            true
          ]
        }
      },
      "65": {},
      "66": {},
      "7": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "59": [
            860,
            877
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "74": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "53": [
            3150,
            3196
          ],
          "76": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "51": [
            2480,
            2488
          ],
          "52": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "50": [
            1351,
            1401
          ],
          "69": [
            1837,
            1866
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "60": [
            7435,
            7503
          ],
          "61": [
            7513,
            7581
          ],
          "62": [
            7592,
            7628
          ],
          "63": [
            7638,
            7675
          ]
        },
        "ERC20._burn": {
          "70": [
            6650,
            6717
          ],
          "71": [
            6728,
            6817
          ],
          "72": [
            6827,
            6866
          ],
          "73": [
            6876,
            6918
          ]
        },
        "ERC20._mint": {
          "54": [
            6029,
            6094
          ],
          "55": [
            6105,
            6144
          ],
          "56": [
            6154,
            6205
          ],
          "57": [
            6215,
            6257
          ]
        },
        "ERC20._transfer": {
          "64": [
            5317,
            5387
          ],
          "65": [
            5397,
            5468
          ],
          "66": [
            5479,
            5570
          ],
          "67": [
            5580,
            5635
          ],
          "68": [
            5645,
            5685
          ]
        },
        "ERC20.allowance": {
          "43": [
            2321,
            2355
          ]
        },
        "ERC20.approve": {
          "10": [
            2582,
            2621
          ],
          "11": [
            2631,
            2642
          ]
        },
        "ERC20.balanceOf": {
          "25": [
            1782,
            1807
          ]
        },
        "ERC20.decreaseAllowance": {
          "32": [
            4597,
            4726
          ]
        },
        "ERC20.increaseAllowance": {
          "21": [
            3898,
            3981
          ]
        },
        "ERC20.totalSupply": {
          "12": [
            1622,
            1641
          ]
        },
        "ERC20.transfer": {
          "33": [
            2102,
            2144
          ]
        },
        "ERC20.transferFrom": {
          "13": [
            3212,
            3248
          ],
          "14": [
            3258,
            3379
          ],
          "15": [
            3389,
            3400
          ]
        }
      },
      "4": {
        "ERC20Detailed.decimals": {
          "20": [
            1530,
            1546
          ]
        },
        "ERC20Detailed.name": {
          "9": [
            706,
            718
          ]
        },
        "ERC20Detailed.symbol": {
          "31": [
            902,
            916
          ]
        }
      },
      "48": {
        "yWETH.<fallback>": {
          "0": [
            5771,
            5783
          ]
        },
        "yWETH.available": {
          "24": [
            2150,
            2205
          ]
        },
        "yWETH.balance": {
          "36": [
            1400,
            1492
          ]
        },
        "yWETH.deposit": {
          "37": [
            2630,
            2688
          ],
          "38": [
            2755,
            2784
          ],
          "39": [
            2904,
            2920
          ],
          "40": [
            2951,
            2999
          ]
        },
        "yWETH.depositAll": {
          "44": [
            2437,
            2473
          ]
        },
        "yWETH.depositETH": {
          "1": [
            3234,
            3279
          ],
          "2": [
            3346,
            3375
          ],
          "3": [
            3495,
            3511
          ],
          "4": [
            3542,
            3590
          ],
          "5": [
            3610,
            3635
          ]
        },
        "yWETH.earn": {
          "41": [
            2287,
            2323
          ],
          "42": [
            2333,
            2383
          ]
        },
        "yWETH.getPricePerFullShare": {
          "26": [
            5627,
            5672
          ]
        },
        "yWETH.harvest": {
          "6": [
            3980,
            4028
          ],
          "7": [
            4038,
            4081
          ],
          "8": [
            4091,
            4139
          ]
        },
        "yWETH.setController": {
          "29": [
            1852,
            1900
          ],
          "30": [
            1910,
            1934
          ]
        },
        "yWETH.setGovernance": {
          "34": [
            1696,
            1744
          ],
          "35": [
            1754,
            1778
          ]
        },
        "yWETH.setMin": {
          "22": [
            1554,
            1602
          ],
          "23": [
            1612,
            1622
          ]
        },
        "yWETH.withdraw": {
          "16": [
            4336,
            4362
          ],
          "17": [
            4517,
            4576
          ],
          "18": [
            4735,
            4751
          ],
          "19": [
            4786,
            4819
          ]
        },
        "yWETH.withdrawAll": {
          "27": [
            3690,
            3721
          ]
        },
        "yWETH.withdrawAllETH": {
          "28": [
            3779,
            3813
          ]
        },
        "yWETH.withdrawETH": {
          "45": [
            5019,
            5045
          ],
          "46": [
            5200,
            5259
          ],
          "47": [
            5418,
            5434
          ],
          "48": [
            5469,
            5501
          ],
          "49": [
            5511,
            5542
          ]
        }
      },
      "5": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "77": [
            3253,
            3324
          ],
          "78": [
            3471,
            3523
          ],
          "79": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeTransfer": {
          "58": [
            744,
            829
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "75": [
            942,
            1037
          ]
        }
      },
      "65": {},
      "66": {},
      "7": {
        "Address.isContract": {
          "80": [
            1238,
            1289
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Context",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/ERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/ERC20Detailed",
    "IController",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "WETH"
  ],
  "deployedBytecode": "6080604052600436106101d85760003560e01c806390386bbf11610102578063d389800f11610095578063f6326fb311610064578063f6326fb3146106b3578063f77c4791146106bb578063f8897945146106d0578063fc0c546a146106e5576101d8565b8063d389800f14610624578063dd62ed3e14610639578063de5f626814610674578063f14210a614610689576101d8565b8063a9059cbb116100d1578063a9059cbb14610579578063ab033ea9146105b2578063b69ef8a8146105e5578063b6b55f25146105fa576101d8565b806390386bbf146104e357806392eefe9b146104f857806395d89b411461052b578063a457c2d714610540576101d8565b8063395093511161017a5780636ac5db19116101495780636ac5db191461047157806370a082311461048657806377c7b8fc146104b9578063853828b6146104ce576101d8565b806339509351146103c857806345dc3dd81461040157806348a0d7541461042b5780635aa6e67514610440576101d8565b806318160ddd116101b657806318160ddd1461030957806323b872dd146103305780632e1a7d4d14610373578063313ce5671461039d576101d8565b8063018ee9b7146101f957806306fdde0314610232578063095ea7b3146102bc575b60055461010090046001600160a01b031633146101f7576101f76106fa565b005b34801561020557600080fd5b506101f76004803603604081101561021c57600080fd5b506001600160a01b0381351690602001356108d1565b34801561023e57600080fd5b50610247610992565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610281578181015183820152602001610269565b50505050905090810190601f1680156102ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c857600080fd5b506102f5600480360360408110156102df57600080fd5b506001600160a01b038135169060200135610a28565b604080519115158252519081900360200190f35b34801561031557600080fd5b5061031e610a46565b60408051918252519081900360200190f35b34801561033c57600080fd5b506102f56004803603606081101561035357600080fd5b506001600160a01b03813581169160208101359091169060400135610a4c565b34801561037f57600080fd5b506101f76004803603602081101561039657600080fd5b5035610ad9565b3480156103a957600080fd5b506103b2610cec565b6040805160ff9092168252519081900360200190f35b3480156103d457600080fd5b506102f5600480360360408110156103eb57600080fd5b506001600160a01b038135169060200135610cf5565b34801561040d57600080fd5b506101f76004803603602081101561042457600080fd5b5035610d49565b34801561043757600080fd5b5061031e610d9b565b34801561044c57600080fd5b50610455610e51565b604080516001600160a01b039092168252519081900360200190f35b34801561047d57600080fd5b5061031e610e60565b34801561049257600080fd5b5061031e600480360360208110156104a957600080fd5b50356001600160a01b0316610e66565b3480156104c557600080fd5b5061031e610e81565b3480156104da57600080fd5b506101f7610ea2565b3480156104ef57600080fd5b506101f7610eb5565b34801561050457600080fd5b506101f76004803603602081101561051b57600080fd5b50356001600160a01b0316610ec6565b34801561053757600080fd5b50610247610f35565b34801561054c57600080fd5b506102f56004803603604081101561056357600080fd5b506001600160a01b038135169060200135610f96565b34801561058557600080fd5b506102f56004803603604081101561059c57600080fd5b506001600160a01b038135169060200135611004565b3480156105be57600080fd5b506101f7600480360360208110156105d557600080fd5b50356001600160a01b0316611018565b3480156105f157600080fd5b5061031e611087565b34801561060657600080fd5b506101f76004803603602081101561061d57600080fd5b5035611193565b34801561063057600080fd5b506101f76112ff565b34801561064557600080fd5b5061031e6004803603604081101561065c57600080fd5b506001600160a01b03813581169160200135166113a5565b34801561068057600080fd5b506101f76113d0565b34801561069557600080fd5b506101f7600480360360208110156106ac57600080fd5b5035611452565b6101f76106fa565b3480156106c757600080fd5b506104556116d2565b3480156106dc57600080fd5b5061031e6116e1565b3480156106f157600080fd5b506104556116e7565b6000610704611087565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b15801561075957600080fd5b505afa15801561076d573d6000803e3d6000fd5b505050506040513d602081101561078357600080fd5b505160055460408051630d0e30db60e41b8152905192935034926101009092046001600160a01b03169163d0e30db0918491600480830192600092919082900301818588803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600095506101009092046001600160a01b031693506370a082319250602480820192602092909190829003018186803b15801561084057600080fd5b505afa158015610854573d6000803e3d6000fd5b505050506040513d602081101561086a57600080fd5b5051905061087e818463ffffffff6116fb16565b9150600061088a610a46565b6108955750816108c0565b6108bd856108b16108a4610a46565b869063ffffffff61174416565b9063ffffffff61179d16565b90505b6108ca33826117df565b5050505050565b6008546001600160a01b0316331461091e576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b0383811661010090920416141561096e576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b60085461098e906001600160a01b0384811691168363ffffffff6118cf16565b5050565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a1e5780601f106109f357610100808354040283529160200191610a1e565b820191906000526020600020905b815481529060010190602001808311610a0157829003601f168201915b5050505050905090565b6000610a3c610a35611921565b8484611925565b5060015b92915050565b60025490565b6000610a59848484611a11565b610acf84610a65611921565b610aca856040518060600160405280602881526020016120bc602891396001600160a01b038a16600090815260016020526040812090610aa3611921565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611b6d16565b611925565b5060019392505050565b6000610afe610ae6610a46565b6108b184610af2611087565b9063ffffffff61174416565b9050610b0a3383611c04565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610b5a57600080fd5b505afa158015610b6e573d6000803e3d6000fd5b505050506040513d6020811015610b8457600080fd5b5051905081811015610ccb576000610ba2838363ffffffff6116fb16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d6020811015610c9457600080fd5b505190506000610caa828563ffffffff6116fb16565b905082811015610cc757610cc4848263ffffffff611d0016565b94505b5050505b600554610ce79061010090046001600160a01b031633846118cf565b505050565b60055460ff1690565b6000610a3c610d02611921565b84610aca8560016000610d13611921565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611d0016565b6007546001600160a01b03163314610d96576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600655565b6000610e4c6127106108b1600654600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d6020811015610e3e57600080fd5b50519063ffffffff61174416565b905090565b6007546001600160a01b031681565b61271081565b6001600160a01b031660009081526020819052604090205490565b6000610e4c610e8e610a46565b6108b1670de0b6b3a7640000610af2611087565b610eb3610eae33610e66565b610ad9565b565b610eb3610ec133610e66565b611452565b6007546001600160a01b03163314610f13576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a1e5780601f106109f357610100808354040283529160200191610a1e565b6000610a3c610fa3611921565b84610aca856040518060600160405280602581526020016121786025913960016000610fcd611921565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611b6d16565b6000610a3c611011611921565b8484611a11565b6007546001600160a01b03163314611065576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854600554604080516370a0823160e01b81526001600160a01b03610100909304831660048201529051600093610e4c9316916370a08231916024808301926020929190829003018186803b1580156110e057600080fd5b505afa1580156110f4573d6000803e3d6000fd5b505050506040513d602081101561110a57600080fd5b5051600554604080516370a0823160e01b815230600482015290516101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b15801561115b57600080fd5b505afa15801561116f573d6000803e3d6000fd5b505050506040513d602081101561118557600080fd5b50519063ffffffff611d0016565b600061119d611087565b600554604080516370a0823160e01b815230600482015290519293506000926101009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b1580156111f257600080fd5b505afa158015611206573d6000803e3d6000fd5b505050506040513d602081101561121c57600080fd5b505160055490915061123e9061010090046001600160a01b0316333086611d5a565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561128e57600080fd5b505afa1580156112a2573d6000803e3d6000fd5b505050506040513d60208110156112b857600080fd5b505190506112cc818363ffffffff6116fb16565b935060006112d8610a46565b6112e35750836108c0565b6108bd846108b16112f2610a46565b889063ffffffff61174416565b6000611309610d9b565b6008546005549192506113349161010090046001600160a01b0390811691168363ffffffff6118cf16565b6008546005546040805163b02bf4b960e01b81526101009092046001600160a01b03908116600484015260248301859052905192169163b02bf4b99160448082019260009290919082900301818387803b15801561139157600080fd5b505af11580156108ca573d6000803e3d6000fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554604080516370a0823160e01b81523360048201529051610eb39261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561142157600080fd5b505afa158015611435573d6000803e3d6000fd5b505050506040513d602081101561144b57600080fd5b5051611193565b600061145f610ae6610a46565b905061146b3383611c04565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156114bb57600080fd5b505afa1580156114cf573d6000803e3d6000fd5b505050506040513d60208110156114e557600080fd5b505190508181101561162c576000611503838363ffffffff6116fb16565b6008546005546040805163f3fef3a360e01b81526001600160a01b036101009093048316600482015260248101859052905193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561156257600080fd5b505af1158015611576573d6000803e3d6000fd5b5050600554604080516370a0823160e01b81523060048201529051600094506101009092046001600160a01b031692506370a08231916024808301926020929190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519050600061160b828563ffffffff6116fb16565b90508281101561162857611625848263ffffffff611d0016565b94505b5050505b600560019054906101000a90046001600160a01b03166001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561168757600080fd5b505af115801561169b573d6000803e3d6000fd5b505060405133925084156108fc02915084906000818181858888f193505050501580156116cc573d6000803e3d6000fd5b50505050565b6008546001600160a01b031681565b60065481565b60055461010090046001600160a01b031681565b600061173d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b6d565b9392505050565b60008261175357506000610a40565b8282028284828161176057fe5b041461173d5760405162461bcd60e51b815260040180806020018281038252602181526020018061209b6021913960400191505060405180910390fd5b600061173d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611db4565b6001600160a01b03821661183a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461184d908263ffffffff611d0016565b6002556001600160a01b038216600090815260208190526040902054611879908263ffffffff611d0016565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ce7908490611e19565b3390565b6001600160a01b03831661196a5760405162461bcd60e51b815260040180806020018281038252602481526020018061212a6024913960400191505060405180910390fd5b6001600160a01b0382166119af5760405162461bcd60e51b81526004018080602001828103825260228152602001806120536022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611a565760405162461bcd60e51b81526004018080602001828103825260258152602001806121056025913960400191505060405180910390fd5b6001600160a01b038216611a9b5760405162461bcd60e51b815260040180806020018281038252602381526020018061200e6023913960400191505060405180910390fd5b611ade81604051806060016040528060268152602001612075602691396001600160a01b038616600090815260208190526040902054919063ffffffff611b6d16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611b13908263ffffffff611d0016565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611bfc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bc1578181015183820152602001611ba9565b50505050905090810190601f168015611bee5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216611c495760405162461bcd60e51b81526004018080602001828103825260218152602001806120e46021913960400191505060405180910390fd5b611c8c81604051806060016040528060228152602001612031602291396001600160a01b038516600090815260208190526040902054919063ffffffff611b6d16565b6001600160a01b038316600090815260208190526040902055600254611cb8908263ffffffff6116fb16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008282018381101561173d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116cc908590611e19565b60008183611e035760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bc1578181015183820152602001611ba9565b506000838581611e0f57fe5b0495945050505050565b611e2b826001600160a01b0316611fd1565b611e7c576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611eba5780518252601f199092019160209182019101611e9b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f1c576040519150601f19603f3d011682016040523d82523d6000602084013e611f21565b606091505b509150915081611f78576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156116cc57808060200190516020811015611f9457600080fd5b50516116cc5760405162461bcd60e51b815260040180806020018281038252602a81526020018061214e602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061200557508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820aa8ce4cfc9b3f4af59e406b71572157d1a03ff4b684fd1badc2624dccb50c6e364736f6c63430005110032",
  "deployedSourceMap": "627:5175:48:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5749:5;;;;;-1:-1:-1;;;;;5749:5:48;5727:10;:28;5723:71;;5771:12;:10;:12::i;:::-;627:5175;3911:235;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3911:235:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3911:235:48;;;;;;;;:::i;644:81:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2500:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2500:149:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1559:89:3;;;:::i;:::-;;;;;;;;;;;;;;;;3107:300;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3107:300:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3107:300:3;;;;;;;;;;;;;;;;;:::i;4219:607:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4219:607:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4219:607:48;;:::i;1472:81:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1472:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3802:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:3;;;;;;;;:::i;1505:124:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1505:124:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1505:124:48;;:::i;2089:123::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2089:123:48;;;:::i;867:25::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:25:48;;;:::i;:::-;;;;-1:-1:-1;;;;;867:25:48;;;;;;;;;;;;;;825:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:35:48;;;:::i;1706:108:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1706:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:3;-1:-1:-1;;;;;1706:108:3;;:::i;5555:124:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5555:124:48;;;:::i;3648:80::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3648:80:48;;;:::i;3734:86::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3734:86:48;;;:::i;1791:150::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1791:150:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1791:150:48;-1:-1:-1;;;;;1791:150:48;;:::i;838:85:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:85:4;;;:::i;4496:258:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4496:258:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:3;;;;;;;;:::i;2017:155::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:155:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2017:155:3;;;;;;;;:::i;1635:150:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1635:150:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1635:150:48;-1:-1:-1;;;;;1635:150:48;;:::i;1341:158::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1341:158:48;;;:::i;2486:565::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2486:565:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2486:565:48;;:::i;2218:172::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2218:172:48;;;:::i;2230:132:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2230:132:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:3;;;;;;;;;;:::i;2396:84:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:84:48;;;:::i;4899:650::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4899:650:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4899:650:48;;:::i;3057:585::-;;;:::i;898:25::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;898:25:48;;;:::i;794:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:25:48;;;:::i;768:19::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;768:19:48;;;:::i;3057:585::-;3104:13;3120:9;:7;:9::i;:::-;3157:5;;:30;;;-1:-1:-1;;;3157:30:48;;3181:4;3157:30;;;;;;3104:25;;-1:-1:-1;;;3157:5:48;;;;-1:-1:-1;;;;;3157:5:48;;:15;;:30;;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3157:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3157:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3157:30:48;3247:5;;3234:45;;;-1:-1:-1;;;3234:45:48;;;;3157:30;;-1:-1:-1;3215:9:48;;3247:5;;;;-1:-1:-1;;;;;3247:5:48;;3234:28;;3215:9;;3234:45;;;;;3197:15;;3234:45;;;;;;;3215:9;3247:5;3234:45;;;5:2:-1;;;;30:1;27;20:12;5:2;3234:45:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3306:5:48;;:30;;;-1:-1:-1;;;3306:30:48;;3330:4;3306:30;;;;;;-1:-1:-1;;;3306:5:48;;;;-1:-1:-1;;;;;3306:5:48;;-1:-1:-1;3306:15:48;;-1:-1:-1;3306:30:48;;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3306:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3306:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3306:30:48;;-1:-1:-1;3356:19:48;3306:30;3367:7;3356:19;:10;:19;:::i;:::-;3346:29;-1:-1:-1;3429:14:48;3461:13;:11;:13::i;:::-;3457:144;;-1:-1:-1;3504:7:48;3457:144;;;3551:39;3584:5;3552:26;3564:13;:11;:13::i;:::-;3552:7;;:26;:11;:26;:::i;:::-;3551:32;:39;:32;:39;:::i;:::-;3542:48;;3457:144;3610:25;3616:10;3628:6;3610:5;:25::i;:::-;3057:585;;;;;:::o;3911:235::-;4002:10;;-1:-1:-1;;;;;4002:10:48;3988;:24;3980:48;;;;;-1:-1:-1;;;3980:48:48;;;;;;;;;;;;-1:-1:-1;;;3980:48:48;;;;;;;;;;;;;;;4065:5;;-1:-1:-1;;;;;4046:25:48;;;4065:5;;;;;4046:25;;4038:43;;;;;-1:-1:-1;;;4038:43:48;;;;;;;;;;;;-1:-1:-1;;;4038:43:48;;;;;;;;;;;;;;;4120:10;;4091:48;;-1:-1:-1;;;;;4091:28:48;;;;4120:10;4132:6;4091:48;:28;:48;:::i;:::-;3911:235;;:::o;644:81:4:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2500:149:3:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:3;2500:149;;;;;:::o;1559:89::-;1629:12;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:3;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:3;;;;;;;;;;;;-1:-1:-1;3289:33:3;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:3;3107:300;;;;;:::o;4219:607:48:-;4271:9;4283:43;4312:13;:11;:13::i;:::-;4284:22;4298:7;4284:9;:7;:9::i;:::-;:13;:22;:13;:22;:::i;4283:43::-;4271:55;;4336:26;4342:10;4354:7;4336:5;:26::i;:::-;4410:5;;:30;;;-1:-1:-1;;;4410:30:48;;4434:4;4410:30;;;;;;-1:-1:-1;;4410:5:48;;;-1:-1:-1;;;;;4410:5:48;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;4410:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4410:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4410:30:48;;-1:-1:-1;4454:5:48;;;4450:326;;;4475:17;4495:8;:1;4501;4495:8;:5;:8;:::i;:::-;4529:10;;4558:5;;4517:59;;;-1:-1:-1;;;4517:59:48;;-1:-1:-1;;;;;4529:10:48;4558:5;;;;;4517:59;;;;;;;;;;;;;;-1:-1:-1;4529:10:48;;;4517:32;;:59;;;;;-1:-1:-1;;4517:59:48;;;;;;;;-1:-1:-1;4529:10:48;4517:59;;;5:2:-1;;;;30:1;27;20:12;5:2;4517:59:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4607:5:48;;:30;;;-1:-1:-1;;;4607:30:48;;4631:4;4607:30;;;;;;-1:-1:-1;;;4607:5:48;;;;-1:-1:-1;;;;;4607:5:48;;-1:-1:-1;4607:15:48;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;4607:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4607:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4607:30:48;;-1:-1:-1;4651:13:48;4667;4607:30;4678:1;4667:13;:10;:13;:::i;:::-;4651:29;;4706:9;4698:5;:17;4694:72;;;4739:12;:1;4745:5;4739:12;:5;:12;:::i;:::-;4735:16;;4694:72;4450:326;;;;4786:5;;:33;;:5;;;-1:-1:-1;;;;;4786:5:48;4805:10;4817:1;4786:18;:33::i;:::-;4219:607;;;:::o;1472:81:4:-;1537:9;;;;1472:81;:::o;3802:207:3:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:3;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1505:124:48:-;1576:10;;-1:-1:-1;;;;;1576:10:48;1562;:24;1554:48;;;;;-1:-1:-1;;;1554:48:48;;;;;;;;;;;;-1:-1:-1;;;1554:48:48;;;;;;;;;;;;;;;1612:3;:10;1505:124::o;2089:123::-;2131:7;2157:48;855:5;2157:39;2192:3;;2157:5;;;;;;;;;-1:-1:-1;;;;;2157:5:48;-1:-1:-1;;;;;2157:15:48;;2181:4;2157:30;;;;;;;;;;;;;-1:-1:-1;;;;;2157:30:48;-1:-1:-1;;;;;2157:30:48;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2157:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2157:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2157:30:48;;:39;:34;:39;:::i;:48::-;2150:55;;2089:123;:::o;867:25::-;;;-1:-1:-1;;;;;867:25:48;;:::o;825:35::-;855:5;825:35;:::o;1706:108:3:-;-1:-1:-1;;;;;1789:18:3;1763:7;1789:18;;;;;;;;;;;;1706:108::o;5555:124:48:-;5608:7;5634:38;5658:13;:11;:13::i;:::-;5634:19;5648:4;5634:9;:7;:9::i;3648:80::-;3690:31;3699:21;3709:10;3699:9;:21::i;:::-;3690:8;:31::i;:::-;3648:80::o;3734:86::-;3779:34;3791:21;3801:10;3791:9;:21::i;:::-;3779:11;:34::i;1791:150::-;1874:10;;-1:-1:-1;;;;;1874:10:48;1860;:24;1852:48;;;;;-1:-1:-1;;;1852:48:48;;;;;;;;;;;;-1:-1:-1;;;1852:48:48;;;;;;;;;;;;;;;1910:10;:24;;-1:-1:-1;;;;;;1910:24:48;-1:-1:-1;;;;;1910:24:48;;;;;;;;;;1791:150::o;838:85:4:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4496:258:3;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:3;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;1635:150:48:-;1718:10;;-1:-1:-1;;;;;1718:10:48;1704;:24;1696:48;;;;;-1:-1:-1;;;1696:48:48;;;;;;;;;;;;-1:-1:-1;;;1696:48:48;;;;;;;;;;;;;;;1754:10;:24;;-1:-1:-1;;;;;;1754:24:48;-1:-1:-1;;;;;1754:24:48;;;;;;;;;;1635:150::o;1341:158::-;1454:10;;1484:5;;1442:49;;;-1:-1:-1;;;1442:49:48;;-1:-1:-1;;;;;1454:10:48;1484:5;;;;;1442:49;;;;;;-1:-1:-1;;1407:85:48;;1454:10;;1442:33;;:49;;;;;;;;;;;;;;1454:10;1442:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1442:49:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1442:49:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1442:49:48;1407:5;;:30;;;-1:-1:-1;;;1407:30:48;;1431:4;1407:30;;;;;;:5;;;;-1:-1:-1;;;;;1407:5:48;;:15;;:30;;;;;1442:49;;1407:30;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;1407:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1407:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1407:30:48;;:85;:34;:85;:::i;2486:565::-;2537:13;2553:9;:7;:9::i;:::-;2590:5;;:30;;;-1:-1:-1;;;2590:30:48;;2614:4;2590:30;;;;;;2537:25;;-1:-1:-1;;;2590:5:48;;;;-1:-1:-1;;;;;2590:5:48;;:15;;:30;;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2590:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2590:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2590:30:48;2630:5;;2590:30;;-1:-1:-1;2630:58:48;;:5;;;-1:-1:-1;;;;;2630:5:48;2653:10;2673:4;2680:7;2630:22;:58::i;:::-;2715:5;;:30;;;-1:-1:-1;;;2715:30:48;;2739:4;2715:30;;;;;;-1:-1:-1;;2715:5:48;;;-1:-1:-1;;;;;2715:5:48;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2715:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2715:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2715:30:48;;-1:-1:-1;2765:19:48;2715:30;2776:7;2765:19;:10;:19;:::i;:::-;2755:29;-1:-1:-1;2838:14:48;2870:13;:11;:13::i;:::-;2866:144;;-1:-1:-1;2913:7:48;2866:144;;;2960:39;2993:5;2961:26;2973:13;:11;:13::i;:::-;2961:7;;:26;:11;:26;:::i;2218:172::-;2251:12;2266:11;:9;:11::i;:::-;2306:10;;2287:5;;2251:26;;-1:-1:-1;2287:36:48;;2306:10;2287:5;;-1:-1:-1;;;;;2287:5:48;;;;2306:10;2251:26;2287:36;:18;:36;:::i;:::-;2345:10;;2370:5;;2333:50;;;-1:-1:-1;;;2333:50:48;;2345:10;2370:5;;;-1:-1:-1;;;;;2370:5:48;;;2333:50;;;;;;;;;;;;2345:10;;;2333:28;;:50;;;;;2345:10;;2333:50;;;;;;;;2345:10;;2333:50;;;5:2:-1;;;;30:1;27;20:12;5:2;2333:50:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;2230:132:3;-1:-1:-1;;;;;2328:18:3;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;2396:84:48:-;2445:5;;:27;;;-1:-1:-1;;;2445:27:48;;2461:10;2445:27;;;;;;2437:36;;2445:5;;;-1:-1:-1;;;;;2445:5:48;;:15;;:27;;;;;;;;;;;;;;:5;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;2445:27:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2445:27:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2445:27:48;2437:7;:36::i;4899:650::-;4954:9;4966:43;4995:13;:11;:13::i;4966:43::-;4954:55;;5019:26;5025:10;5037:7;5019:5;:26::i;:::-;5093:5;;:30;;;-1:-1:-1;;;5093:30:48;;5117:4;5093:30;;;;;;-1:-1:-1;;5093:5:48;;;-1:-1:-1;;;;;5093:5:48;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;5093:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5093:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5093:30:48;;-1:-1:-1;5137:5:48;;;5133:326;;;5158:17;5178:8;:1;5184;5178:8;:5;:8;:::i;:::-;5212:10;;5241:5;;5200:59;;;-1:-1:-1;;;5200:59:48;;-1:-1:-1;;;;;5212:10:48;5241:5;;;;;5200:59;;;;;;;;;;;;;;-1:-1:-1;5212:10:48;;;5200:32;;:59;;;;;-1:-1:-1;;5200:59:48;;;;;;;;-1:-1:-1;5212:10:48;5200:59;;;5:2:-1;;;;30:1;27;20:12;5:2;5200:59:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5290:5:48;;:30;;;-1:-1:-1;;;5290:30:48;;5314:4;5290:30;;;;;;-1:-1:-1;;;5290:5:48;;;;-1:-1:-1;;;;;5290:5:48;;-1:-1:-1;5290:15:48;;:30;;;;;;;;;;;;;;:5;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;5290:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5290:30:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5290:30:48;;-1:-1:-1;5334:13:48;5350;5290:30;5361:1;5350:13;:10;:13;:::i;:::-;5334:29;;5389:9;5381:5;:17;5377:72;;;5422:12;:1;5428:5;5422:12;:5;:12;:::i;:::-;5418:16;;5377:72;5133:326;;;;5482:5;;;;;;;;;-1:-1:-1;;;;;5482:5:48;-1:-1:-1;;;;;5469:29:48;;5499:1;5469:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:32:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5511:31:48;;5519:10;;-1:-1:-1;5511:31:48;;;;;-1:-1:-1;5540:1:48;;5511:31;;;;5540:1;5519:10;5511:31;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5511:31:48;4899:650;;;:::o;898:25::-;;;-1:-1:-1;;;;;898:25:48;;:::o;794:::-;;;;:::o;768:19::-;;;;;;-1:-1:-1;;;;;768:19:48;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:1:o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;5962:302:3:-;-1:-1:-1;;;;;6037:21:3;;6029:65;;;;;-1:-1:-1;;;6029:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:3;;:9;:18;;;;;;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6154:18:3;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;788:96:0:-;867:10;788:96;:::o;7350:332:3:-;-1:-1:-1;;;;;7443:19:3;;7435:68;;;;-1:-1:-1;;;7435:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7521:21:3;;7513:68;;;;-1:-1:-1;;;7513:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7592:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7643:32;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:3;;5317:70;;;;-1:-1:-1;;;5317:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:3;;5397:71;;;;-1:-1:-1;;;5397:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:3;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:3;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;6583:342:3:-;-1:-1:-1;;;;;6658:21:3;;6650:67;;;;-1:-1:-1;;;6650:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6749:68;6772:6;6749:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6749:18:3;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6728:18:3;;:9;:18;;;;;;;;;;:89;6842:12;;:24;;6859:6;6842:24;:16;:24;:::i;:::-;6827:12;:39;6881:37;;;;;;;;6907:1;;-1:-1:-1;;;;;6881:37:3;;;;;;;;;;;;6583:342;;:::o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;842:202:6;968:68;;;-1:-1:-1;;;;;968:68:6;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:6;;961:5;;942:18;:95::i;3718:338:1:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "offset": [
    627,
    5802
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90386BBF GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD389800F GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF6326FB3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x6E5 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xD389800F EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xDE5F6268 EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x689 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x5FA JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x90386BBF EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x540 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x6AC5DB19 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x4CE JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x45DC3DD8 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x48A0D754 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x440 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x39D JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x18EE9B7 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BC JUMPI JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F7 JUMPI PUSH2 0x1F7 PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x281 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x269 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xA4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xD9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xE60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0xE81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0xEA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0xEB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0xF35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1004 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1018 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x1087 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1193 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x12FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x13A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x6FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x16D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x16E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP CALLVALUE SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD0E30DB0 SWAP2 DUP5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP6 POP PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH4 0x70A08231 SWAP3 POP PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x87E DUP2 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x88A PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x895 JUMPI POP DUP2 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8BD DUP6 PUSH2 0x8B1 PUSH2 0x8A4 PUSH2 0xA46 JUMP JUMPDEST DUP7 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1744 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x179D AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x8CA CALLER DUP3 PUSH2 0x17DF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x96E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x98E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18CF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA01 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0xA35 PUSH2 0x1921 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1925 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP5 DUP5 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0xACF DUP5 PUSH2 0xA65 PUSH2 0x1921 JUMP JUMPDEST PUSH2 0xACA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20BC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xAA3 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B6D AND JUMP JUMPDEST PUSH2 0x1925 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFE PUSH2 0xAE6 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x8B1 DUP5 PUSH2 0xAF2 PUSH2 0x1087 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1744 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB0A CALLER DUP4 PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 PUSH2 0xBA2 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xF3FEF3A3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP5 POP PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xCAA DUP3 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xCC7 JUMPI PUSH2 0xCC4 DUP5 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xCE7 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x18CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0xD02 PUSH2 0x1921 JUMP JUMPDEST DUP5 PUSH2 0xACA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD13 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4C PUSH2 0x2710 PUSH2 0x8B1 PUSH1 0x6 SLOAD PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1744 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4C PUSH2 0xE8E PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x8B1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xAF2 PUSH2 0x1087 JUMP JUMPDEST PUSH2 0xEB3 PUSH2 0xEAE CALLER PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEB3 PUSH2 0xEC1 CALLER PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0xFA3 PUSH2 0x1921 JUMP JUMPDEST DUP5 PUSH2 0xACA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2178 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xFCD PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B6D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0x1011 PUSH2 0x1921 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1065 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH2 0xE4C SWAP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119D PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1206 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x123E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x12CC DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x12D8 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x12E3 JUMPI POP DUP4 PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8BD DUP5 PUSH2 0x8B1 PUSH2 0x12F2 PUSH2 0xA46 JUMP JUMPDEST DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1744 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1309 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD SWAP2 SWAP3 POP PUSH2 0x1334 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18CF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB02BF4B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP2 PUSH4 0xB02BF4B9 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0xEB3 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1435 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145F PUSH2 0xAE6 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP PUSH2 0x146B CALLER DUP4 PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 PUSH2 0x1503 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0xF3FEF3A3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP5 POP PUSH2 0x100 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x160B DUP3 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1625 DUP5 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x169B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x16CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1B6D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1753 JUMPI POP PUSH1 0x0 PUSH2 0xA40 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x173D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x209B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x183A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x184D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1879 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xCE7 SWAP1 DUP5 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x196A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x212A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2053 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2105 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x200E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ADE DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2075 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1B13 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1D00 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BC1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BA9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BEE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20E4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C8C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2031 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B6D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x1CB8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x16FB AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x173D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x16CC SWAP1 DUP6 SWAP1 PUSH2 0x1E19 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1BC1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BA9 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1E0F JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E2B DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x1E7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1EBA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F1C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1F78 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16CC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x214E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2005 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA265627A7A72315820 0xAA DUP13 0xE4 0xCF 0xC9 0xB3 DELEGATECALL 0xAF MSIZE 0xE4 MOD 0xB7 ISZERO PUSH19 0x157D1A03FF4B684FD1BADC2624DCCB50C6E364 PUSH20 0x6F6C634300051100320000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        627,
        5802
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "8": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "LT",
      "path": "48"
    },
    "9": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "12": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "13": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "16": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "SHR",
      "path": "48"
    },
    "19": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "20": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x90386BBF"
    },
    "25": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "26": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x102"
    },
    "29": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "30": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "31": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xD389800F"
    },
    "36": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "37": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "41": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "42": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF6326FB3"
    },
    "47": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "48": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "52": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "53": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF6326FB3"
    },
    "58": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "59": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6B3"
    },
    "62": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "63": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "64": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF77C4791"
    },
    "69": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "70": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6BB"
    },
    "73": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "74": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "75": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF8897945"
    },
    "80": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "81": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6D0"
    },
    "84": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "85": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "86": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFC0C546A"
    },
    "91": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "92": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6E5"
    },
    "95": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "96": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "99": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "100": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "101": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "102": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xD389800F"
    },
    "107": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "108": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x624"
    },
    "111": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "112": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "113": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xDD62ED3E"
    },
    "118": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "119": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x639"
    },
    "122": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "123": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "124": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xDE5F6268"
    },
    "129": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "130": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x674"
    },
    "133": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "134": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "135": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF14210A6"
    },
    "140": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "141": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x689"
    },
    "144": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "145": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "148": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "149": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "150": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "151": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xA9059CBB"
    },
    "156": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "157": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "161": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "162": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xA9059CBB"
    },
    "167": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "168": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x579"
    },
    "171": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "172": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "173": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xAB033EA9"
    },
    "178": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "179": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x5B2"
    },
    "182": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "183": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "184": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xB69EF8A8"
    },
    "189": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "190": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x5E5"
    },
    "193": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "194": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "195": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xB6B55F25"
    },
    "200": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "201": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x5FA"
    },
    "204": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "205": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "208": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "209": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "210": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "211": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x90386BBF"
    },
    "216": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "217": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4E3"
    },
    "220": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "221": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "222": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x92EEFE9B"
    },
    "227": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "228": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4F8"
    },
    "231": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "232": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "233": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x95D89B41"
    },
    "238": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "239": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x52B"
    },
    "242": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "243": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "244": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xA457C2D7"
    },
    "249": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "250": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x540"
    },
    "253": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "254": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "257": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "258": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "259": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "260": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x39509351"
    },
    "265": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "266": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "270": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "271": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x6AC5DB19"
    },
    "276": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "277": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "281": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "282": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x6AC5DB19"
    },
    "287": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "288": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x471"
    },
    "291": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "292": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "293": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "298": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "299": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x486"
    },
    "302": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "303": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "304": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x77C7B8FC"
    },
    "309": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "310": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4B9"
    },
    "313": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "314": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "315": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x853828B6"
    },
    "320": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "321": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4CE"
    },
    "324": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "325": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "328": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "329": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "330": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "331": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x39509351"
    },
    "336": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "337": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x3C8"
    },
    "340": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "341": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "342": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x45DC3DD8"
    },
    "347": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "348": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x401"
    },
    "351": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "352": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "353": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x48A0D754"
    },
    "358": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "359": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x42B"
    },
    "362": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "363": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "364": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x5AA6E675"
    },
    "369": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "370": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x440"
    },
    "373": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "374": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "377": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "378": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "379": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "380": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x18160DDD"
    },
    "385": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "GT",
      "path": "48"
    },
    "386": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "390": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "391": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x18160DDD"
    },
    "396": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "397": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x309"
    },
    "400": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "401": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "402": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x23B872DD"
    },
    "407": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "408": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x330"
    },
    "411": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "412": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "413": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x2E1A7D4D"
    },
    "418": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "419": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x373"
    },
    "422": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "423": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "424": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x313CE567"
    },
    "429": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "430": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x39D"
    },
    "433": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "434": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D8"
    },
    "437": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMP",
      "path": "48"
    },
    "438": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "439": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "440": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x18EE9B7"
    },
    "445": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "446": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F9"
    },
    "449": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "450": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "451": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x6FDDE03"
    },
    "456": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "457": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x232"
    },
    "460": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "461": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "DUP1",
      "path": "48"
    },
    "462": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x95EA7B3"
    },
    "467": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "EQ",
      "path": "48"
    },
    "468": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2BC"
    },
    "471": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "472": {
      "fn": null,
      "offset": [
        627,
        5802
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "473": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "475": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "476": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "479": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "480": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "DIV",
      "path": "48"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5749,
        5754
      ],
      "op": "AND",
      "path": "48"
    },
    "490": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5727,
        5737
      ],
      "op": "CALLER",
      "path": "48"
    },
    "491": {
      "branch": 81,
      "fn": "yWETH.<fallback>",
      "offset": [
        5727,
        5755
      ],
      "op": "EQ",
      "path": "48"
    },
    "492": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5723,
        5794
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "495": {
      "branch": 81,
      "fn": "yWETH.<fallback>",
      "offset": [
        5723,
        5794
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "496": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5771,
        5783
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 0,
      "value": "0x1F7"
    },
    "499": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5771,
        5781
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6FA"
    },
    "502": {
      "fn": "yWETH.<fallback>",
      "jump": "i",
      "offset": [
        5771,
        5783
      ],
      "op": "JUMP",
      "path": "48"
    },
    "503": {
      "fn": "yWETH.<fallback>",
      "offset": [
        5771,
        5783
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "504": {
      "offset": [
        627,
        5802
      ],
      "op": "STOP",
      "path": "48"
    },
    "505": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "506": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "507": {
      "op": "DUP1"
    },
    "508": {
      "op": "ISZERO"
    },
    "509": {
      "op": "PUSH2",
      "value": "0x205"
    },
    "512": {
      "op": "JUMPI"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "DUP1"
    },
    "516": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "REVERT",
      "path": "48"
    },
    "517": {
      "op": "JUMPDEST"
    },
    "518": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "POP",
      "path": "48"
    },
    "519": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "522": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "524": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "DUP1",
      "path": "48"
    },
    "525": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "526": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "SUB",
      "path": "48"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "529": {
      "op": "DUP2"
    },
    "530": {
      "op": "LT"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "535": {
      "op": "JUMPI"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "538": {
      "op": "DUP1"
    },
    "539": {
      "op": "REVERT"
    },
    "540": {
      "op": "JUMPDEST"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "DUP2",
      "path": "48"
    },
    "551": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "552": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "AND",
      "path": "48"
    },
    "553": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "554": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "556": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "ADD",
      "path": "48"
    },
    "557": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "558": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8D1"
    },
    "561": {
      "fn": "yWETH.harvest",
      "jump": "i",
      "offset": [
        3911,
        4146
      ],
      "op": "JUMP",
      "path": "48"
    },
    "562": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "563": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "564": {
      "op": "DUP1"
    },
    "565": {
      "op": "ISZERO"
    },
    "566": {
      "op": "PUSH2",
      "value": "0x23E"
    },
    "569": {
      "op": "JUMPI"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "572": {
      "op": "DUP1"
    },
    "573": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "REVERT",
      "path": "4"
    },
    "574": {
      "op": "JUMPDEST"
    },
    "575": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "576": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x247"
    },
    "579": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x992"
    },
    "582": {
      "fn": "ERC20Detailed.name",
      "jump": "i",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "583": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "584": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "586": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "587": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "588": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "590": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "591": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "592": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "593": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "594": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "595": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "596": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "597": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "598": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "599": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "600": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "601": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "602": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "603": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "604": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "605": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "606": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "607": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "608": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "609": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP6",
      "path": "4"
    },
    "610": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "611": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "612": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "613": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "614": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "615": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "617": {
      "op": "JUMPDEST"
    },
    "618": {
      "op": "DUP4"
    },
    "619": {
      "op": "DUP2"
    },
    "620": {
      "op": "LT"
    },
    "621": {
      "op": "ISZERO"
    },
    "622": {
      "op": "PUSH2",
      "value": "0x281"
    },
    "625": {
      "op": "JUMPI"
    },
    "626": {
      "op": "DUP2"
    },
    "627": {
      "op": "DUP2"
    },
    "628": {
      "op": "ADD"
    },
    "629": {
      "op": "MLOAD"
    },
    "630": {
      "op": "DUP4"
    },
    "631": {
      "op": "DUP3"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "op": "MSTORE"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "640": {
      "op": "JUMP"
    },
    "641": {
      "op": "JUMPDEST"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "644": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "645": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "646": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "647": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "648": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "649": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "650": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "651": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "652": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "654": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "4"
    },
    "655": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "656": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "657": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AE"
    },
    "660": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "661": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "662": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "663": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "664": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "665": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "666": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "668": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "669": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "671": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "672": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "675": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "EXP",
      "path": "4"
    },
    "676": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "677": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "NOT",
      "path": "4"
    },
    "678": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "4"
    },
    "679": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "680": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "681": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "683": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "684": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "685": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "686": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "687": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "688": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "689": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "690": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "691": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "692": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "694": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "695": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "696": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "697": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "698": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "699": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "RETURN",
      "path": "4"
    },
    "700": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "701": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "702": {
      "op": "DUP1"
    },
    "703": {
      "op": "ISZERO"
    },
    "704": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "707": {
      "op": "JUMPI"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "710": {
      "op": "DUP1"
    },
    "711": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "REVERT",
      "path": "3"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "714": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5"
    },
    "717": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "719": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "721": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "724": {
      "op": "DUP2"
    },
    "725": {
      "op": "LT"
    },
    "726": {
      "op": "ISZERO"
    },
    "727": {
      "op": "PUSH2",
      "value": "0x2DF"
    },
    "730": {
      "op": "JUMPI"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "733": {
      "op": "DUP1"
    },
    "734": {
      "op": "REVERT"
    },
    "735": {
      "op": "JUMPDEST"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "747": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "AND",
      "path": "3"
    },
    "748": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "749": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "751": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "752": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "753": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA28"
    },
    "756": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "757": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "758": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "760": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "761": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "762": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "763": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "764": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "765": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP3",
      "path": "3"
    },
    "766": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "767": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "768": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "769": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "770": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "771": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "772": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "774": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "775": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "776": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "RETURN",
      "path": "3"
    },
    "777": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "778": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "779": {
      "op": "DUP1"
    },
    "780": {
      "op": "ISZERO"
    },
    "781": {
      "op": "PUSH2",
      "value": "0x315"
    },
    "784": {
      "op": "JUMPI"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "DUP1"
    },
    "788": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "REVERT",
      "path": "3"
    },
    "789": {
      "op": "JUMPDEST"
    },
    "790": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "POP",
      "path": "3"
    },
    "791": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31E"
    },
    "794": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA46"
    },
    "797": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "798": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "799": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "801": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "802": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "803": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "804": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "805": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "806": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "807": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "808": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "809": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "810": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SUB",
      "path": "3"
    },
    "811": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "813": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "ADD",
      "path": "3"
    },
    "814": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "815": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "RETURN",
      "path": "3"
    },
    "816": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "818": {
      "op": "DUP1"
    },
    "819": {
      "op": "ISZERO"
    },
    "820": {
      "op": "PUSH2",
      "value": "0x33C"
    },
    "823": {
      "op": "JUMPI"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "826": {
      "op": "DUP1"
    },
    "827": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "REVERT",
      "path": "3"
    },
    "828": {
      "op": "JUMPDEST"
    },
    "829": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "830": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5"
    },
    "833": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "835": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "836": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "837": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SUB",
      "path": "3"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "840": {
      "op": "DUP2"
    },
    "841": {
      "op": "LT"
    },
    "842": {
      "op": "ISZERO"
    },
    "843": {
      "op": "PUSH2",
      "value": "0x353"
    },
    "846": {
      "op": "JUMPI"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "849": {
      "op": "DUP1"
    },
    "850": {
      "op": "REVERT"
    },
    "851": {
      "op": "JUMPDEST"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "862": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "863": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "865": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "866": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "868": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "870": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "871": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "872": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "873": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "877": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "878": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4C"
    },
    "882": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "883": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "884": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "885": {
      "op": "DUP1"
    },
    "886": {
      "op": "ISZERO"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x37F"
    },
    "890": {
      "op": "JUMPI"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "893": {
      "op": "DUP1"
    },
    "894": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "REVERT",
      "path": "48"
    },
    "895": {
      "op": "JUMPDEST"
    },
    "896": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "POP",
      "path": "48"
    },
    "897": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "900": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "902": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "DUP1",
      "path": "48"
    },
    "903": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "904": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "SUB",
      "path": "48"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "907": {
      "op": "DUP2"
    },
    "908": {
      "op": "LT"
    },
    "909": {
      "op": "ISZERO"
    },
    "910": {
      "op": "PUSH2",
      "value": "0x396"
    },
    "913": {
      "op": "JUMPI"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "916": {
      "op": "DUP1"
    },
    "917": {
      "op": "REVERT"
    },
    "918": {
      "op": "JUMPDEST"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "921": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAD9"
    },
    "924": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4219,
        4826
      ],
      "op": "JUMP",
      "path": "48"
    },
    "925": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "926": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "927": {
      "op": "DUP1"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "PUSH2",
      "value": "0x3A9"
    },
    "932": {
      "op": "JUMPI"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "935": {
      "op": "DUP1"
    },
    "936": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "REVERT",
      "path": "4"
    },
    "937": {
      "op": "JUMPDEST"
    },
    "938": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "POP",
      "path": "4"
    },
    "939": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3B2"
    },
    "942": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCEC"
    },
    "945": {
      "fn": "ERC20Detailed.decimals",
      "jump": "i",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "946": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "947": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "949": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP1",
      "path": "4"
    },
    "950": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "951": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "953": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "954": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "955": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "AND",
      "path": "4"
    },
    "956": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP3",
      "path": "4"
    },
    "957": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "958": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "959": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "960": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP2",
      "path": "4"
    },
    "961": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "962": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SUB",
      "path": "4"
    },
    "963": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "965": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "ADD",
      "path": "4"
    },
    "966": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "967": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "RETURN",
      "path": "4"
    },
    "968": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "969": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "970": {
      "op": "DUP1"
    },
    "971": {
      "op": "ISZERO"
    },
    "972": {
      "op": "PUSH2",
      "value": "0x3D4"
    },
    "975": {
      "op": "JUMPI"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "978": {
      "op": "DUP1"
    },
    "979": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "REVERT",
      "path": "3"
    },
    "980": {
      "op": "JUMPDEST"
    },
    "981": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "POP",
      "path": "3"
    },
    "982": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5"
    },
    "985": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "987": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "988": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "989": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SUB",
      "path": "3"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "992": {
      "op": "DUP2"
    },
    "993": {
      "op": "LT"
    },
    "994": {
      "op": "ISZERO"
    },
    "995": {
      "op": "PUSH2",
      "value": "0x3EB"
    },
    "998": {
      "op": "JUMPI"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1001": {
      "op": "DUP1"
    },
    "1002": {
      "op": "REVERT"
    },
    "1003": {
      "op": "JUMPDEST"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1014": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1015": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "AND",
      "path": "3"
    },
    "1016": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1017": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1019": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "ADD",
      "path": "3"
    },
    "1020": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1021": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF5"
    },
    "1024": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1025": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1026": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "op": "ISZERO"
    },
    "1029": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1032": {
      "op": "JUMPI"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1035": {
      "op": "DUP1"
    },
    "1036": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "POP",
      "path": "48"
    },
    "1039": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1042": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1044": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1045": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "1046": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "SUB",
      "path": "48"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "LT"
    },
    "1051": {
      "op": "ISZERO"
    },
    "1052": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1055": {
      "op": "JUMPI"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1058": {
      "op": "DUP1"
    },
    "1059": {
      "op": "REVERT"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1063": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD49"
    },
    "1066": {
      "fn": "yWETH.setMin",
      "jump": "i",
      "offset": [
        1505,
        1629
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1067": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1068": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1069": {
      "op": "DUP1"
    },
    "1070": {
      "op": "ISZERO"
    },
    "1071": {
      "op": "PUSH2",
      "value": "0x437"
    },
    "1074": {
      "op": "JUMPI"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1077": {
      "op": "DUP1"
    },
    "1078": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1079": {
      "op": "JUMPDEST"
    },
    "1080": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "POP",
      "path": "48"
    },
    "1081": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x31E"
    },
    "1084": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD9B"
    },
    "1087": {
      "fn": "yWETH.available",
      "jump": "i",
      "offset": [
        2089,
        2212
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1088": {
      "offset": [
        867,
        892
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1089": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1090": {
      "op": "DUP1"
    },
    "1091": {
      "op": "ISZERO"
    },
    "1092": {
      "op": "PUSH2",
      "value": "0x44C"
    },
    "1095": {
      "op": "JUMPI"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "DUP1"
    },
    "1099": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1100": {
      "op": "JUMPDEST"
    },
    "1101": {
      "offset": [
        867,
        892
      ],
      "op": "POP",
      "path": "48"
    },
    "1102": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x455"
    },
    "1105": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE51"
    },
    "1108": {
      "fn": "yWETH.available",
      "jump": "i",
      "offset": [
        867,
        892
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1109": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1110": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1112": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1113": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "op": "SUB"
    },
    "1122": {
      "offset": [
        867,
        892
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1123": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1124": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "AND",
      "path": "48"
    },
    "1125": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1126": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1127": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1128": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1129": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1130": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1131": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SUB",
      "path": "48"
    },
    "1132": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1134": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "ADD",
      "path": "48"
    },
    "1135": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1136": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "RETURN",
      "path": "48"
    },
    "1137": {
      "offset": [
        825,
        860
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1138": {
      "fn": "yWETH.available",
      "offset": [
        825,
        860
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.available",
      "offset": [
        825,
        860
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "offset": [
        825,
        860
      ],
      "op": "POP",
      "path": "48"
    },
    "1151": {
      "fn": "yWETH.available",
      "offset": [
        825,
        860
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x31E"
    },
    "1154": {
      "fn": "yWETH.available",
      "offset": [
        825,
        860
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE60"
    },
    "1157": {
      "fn": "yWETH.available",
      "jump": "i",
      "offset": [
        825,
        860
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1158": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1160": {
      "op": "DUP1"
    },
    "1161": {
      "op": "ISZERO"
    },
    "1162": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "1165": {
      "op": "JUMPI"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1168": {
      "op": "DUP1"
    },
    "1169": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1170": {
      "op": "JUMPDEST"
    },
    "1171": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "POP",
      "path": "3"
    },
    "1172": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31E"
    },
    "1175": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1177": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1178": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1179": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "SUB",
      "path": "3"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1182": {
      "op": "DUP2"
    },
    "1183": {
      "op": "LT"
    },
    "1184": {
      "op": "ISZERO"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1188": {
      "op": "JUMPI"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1191": {
      "op": "DUP1"
    },
    "1192": {
      "op": "REVERT"
    },
    "1193": {
      "op": "JUMPDEST"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "AND",
      "path": "3"
    },
    "1205": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE66"
    },
    "1208": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1209": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1210": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1211": {
      "op": "DUP1"
    },
    "1212": {
      "op": "ISZERO"
    },
    "1213": {
      "op": "PUSH2",
      "value": "0x4C5"
    },
    "1216": {
      "op": "JUMPI"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1219": {
      "op": "DUP1"
    },
    "1220": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1221": {
      "op": "JUMPDEST"
    },
    "1222": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "POP",
      "path": "48"
    },
    "1223": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x31E"
    },
    "1226": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE81"
    },
    "1229": {
      "fn": "yWETH.getPricePerFullShare",
      "jump": "i",
      "offset": [
        5555,
        5679
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1230": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1231": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1232": {
      "op": "DUP1"
    },
    "1233": {
      "op": "ISZERO"
    },
    "1234": {
      "op": "PUSH2",
      "value": "0x4DA"
    },
    "1237": {
      "op": "JUMPI"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1240": {
      "op": "DUP1"
    },
    "1241": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1242": {
      "op": "JUMPDEST"
    },
    "1243": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "POP",
      "path": "48"
    },
    "1244": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1247": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEA2"
    },
    "1250": {
      "fn": "yWETH.withdrawAll",
      "jump": "i",
      "offset": [
        3648,
        3728
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1251": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1252": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1253": {
      "op": "DUP1"
    },
    "1254": {
      "op": "ISZERO"
    },
    "1255": {
      "op": "PUSH2",
      "value": "0x4EF"
    },
    "1258": {
      "op": "JUMPI"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1261": {
      "op": "DUP1"
    },
    "1262": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1263": {
      "op": "JUMPDEST"
    },
    "1264": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "POP",
      "path": "48"
    },
    "1265": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1268": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEB5"
    },
    "1271": {
      "fn": "yWETH.withdrawAllETH",
      "jump": "i",
      "offset": [
        3734,
        3820
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1272": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1273": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1274": {
      "op": "DUP1"
    },
    "1275": {
      "op": "ISZERO"
    },
    "1276": {
      "op": "PUSH2",
      "value": "0x504"
    },
    "1279": {
      "op": "JUMPI"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1282": {
      "op": "DUP1"
    },
    "1283": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1284": {
      "op": "JUMPDEST"
    },
    "1285": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "POP",
      "path": "48"
    },
    "1286": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1289": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1291": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1292": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "1293": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "SUB",
      "path": "48"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1296": {
      "op": "DUP2"
    },
    "1297": {
      "op": "LT"
    },
    "1298": {
      "op": "ISZERO"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1302": {
      "op": "JUMPI"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1305": {
      "op": "DUP1"
    },
    "1306": {
      "op": "REVERT"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "AND",
      "path": "48"
    },
    "1319": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEC6"
    },
    "1322": {
      "fn": "yWETH.setController",
      "jump": "i",
      "offset": [
        1791,
        1941
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1323": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1324": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1325": {
      "op": "DUP1"
    },
    "1326": {
      "op": "ISZERO"
    },
    "1327": {
      "op": "PUSH2",
      "value": "0x537"
    },
    "1330": {
      "op": "JUMPI"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1333": {
      "op": "DUP1"
    },
    "1334": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1335": {
      "op": "JUMPDEST"
    },
    "1336": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "POP",
      "path": "4"
    },
    "1337": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x247"
    },
    "1340": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF35"
    },
    "1343": {
      "fn": "ERC20Detailed.symbol",
      "jump": "i",
      "offset": [
        838,
        923
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1346": {
      "op": "DUP1"
    },
    "1347": {
      "op": "ISZERO"
    },
    "1348": {
      "op": "PUSH2",
      "value": "0x54C"
    },
    "1351": {
      "op": "JUMPI"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1354": {
      "op": "DUP1"
    },
    "1355": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1356": {
      "op": "JUMPDEST"
    },
    "1357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "POP",
      "path": "3"
    },
    "1358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5"
    },
    "1361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1364": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1365": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SUB",
      "path": "3"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1368": {
      "op": "DUP2"
    },
    "1369": {
      "op": "LT"
    },
    "1370": {
      "op": "ISZERO"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x563"
    },
    "1374": {
      "op": "JUMPI"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1377": {
      "op": "DUP1"
    },
    "1378": {
      "op": "REVERT"
    },
    "1379": {
      "op": "JUMPDEST"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1390": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1391": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "AND",
      "path": "3"
    },
    "1392": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1393": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1395": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1396": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1397": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF96"
    },
    "1400": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1401": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1402": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1403": {
      "op": "DUP1"
    },
    "1404": {
      "op": "ISZERO"
    },
    "1405": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "1408": {
      "op": "JUMPI"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1411": {
      "op": "DUP1"
    },
    "1412": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1413": {
      "op": "JUMPDEST"
    },
    "1414": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "POP",
      "path": "3"
    },
    "1415": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F5"
    },
    "1418": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1420": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1421": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1422": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SUB",
      "path": "3"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1425": {
      "op": "DUP2"
    },
    "1426": {
      "op": "LT"
    },
    "1427": {
      "op": "ISZERO"
    },
    "1428": {
      "op": "PUSH2",
      "value": "0x59C"
    },
    "1431": {
      "op": "JUMPI"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1434": {
      "op": "DUP1"
    },
    "1435": {
      "op": "REVERT"
    },
    "1436": {
      "op": "JUMPDEST"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "op": "SUB"
    },
    "1446": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1447": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1448": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "AND",
      "path": "3"
    },
    "1449": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1450": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1452": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "ADD",
      "path": "3"
    },
    "1453": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1454": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1004"
    },
    "1457": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1458": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1459": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1460": {
      "op": "DUP1"
    },
    "1461": {
      "op": "ISZERO"
    },
    "1462": {
      "op": "PUSH2",
      "value": "0x5BE"
    },
    "1465": {
      "op": "JUMPI"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1468": {
      "op": "DUP1"
    },
    "1469": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1470": {
      "op": "JUMPDEST"
    },
    "1471": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "POP",
      "path": "48"
    },
    "1472": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1475": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1477": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1478": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "1479": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "SUB",
      "path": "48"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "DUP2"
    },
    "1483": {
      "op": "LT"
    },
    "1484": {
      "op": "ISZERO"
    },
    "1485": {
      "op": "PUSH2",
      "value": "0x5D5"
    },
    "1488": {
      "op": "JUMPI"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "DUP1"
    },
    "1492": {
      "op": "REVERT"
    },
    "1493": {
      "op": "JUMPDEST"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "AND",
      "path": "48"
    },
    "1505": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1018"
    },
    "1508": {
      "fn": "yWETH.setGovernance",
      "jump": "i",
      "offset": [
        1635,
        1785
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1509": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1510": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1511": {
      "op": "DUP1"
    },
    "1512": {
      "op": "ISZERO"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "1516": {
      "op": "JUMPI"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1519": {
      "op": "DUP1"
    },
    "1520": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1521": {
      "op": "JUMPDEST"
    },
    "1522": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "POP",
      "path": "48"
    },
    "1523": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x31E"
    },
    "1526": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1087"
    },
    "1529": {
      "fn": "yWETH.balance",
      "jump": "i",
      "offset": [
        1341,
        1499
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1530": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1531": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1532": {
      "op": "DUP1"
    },
    "1533": {
      "op": "ISZERO"
    },
    "1534": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1537": {
      "op": "JUMPI"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1542": {
      "op": "JUMPDEST"
    },
    "1543": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "POP",
      "path": "48"
    },
    "1544": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1547": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1549": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1550": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "1551": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "SUB",
      "path": "48"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "LT"
    },
    "1556": {
      "op": "ISZERO"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1560": {
      "op": "JUMPI"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1563": {
      "op": "DUP1"
    },
    "1564": {
      "op": "REVERT"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1568": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1193"
    },
    "1571": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2486,
        3051
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1572": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1573": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1574": {
      "op": "DUP1"
    },
    "1575": {
      "op": "ISZERO"
    },
    "1576": {
      "op": "PUSH2",
      "value": "0x630"
    },
    "1579": {
      "op": "JUMPI"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1582": {
      "op": "DUP1"
    },
    "1583": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1584": {
      "op": "JUMPDEST"
    },
    "1585": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "POP",
      "path": "48"
    },
    "1586": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1589": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12FF"
    },
    "1592": {
      "fn": "yWETH.earn",
      "jump": "i",
      "offset": [
        2218,
        2390
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1593": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1594": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1595": {
      "op": "DUP1"
    },
    "1596": {
      "op": "ISZERO"
    },
    "1597": {
      "op": "PUSH2",
      "value": "0x645"
    },
    "1600": {
      "op": "JUMPI"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "DUP1"
    },
    "1604": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1605": {
      "op": "JUMPDEST"
    },
    "1606": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "POP",
      "path": "3"
    },
    "1607": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31E"
    },
    "1610": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1612": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1613": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1614": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SUB",
      "path": "3"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1617": {
      "op": "DUP2"
    },
    "1618": {
      "op": "LT"
    },
    "1619": {
      "op": "ISZERO"
    },
    "1620": {
      "op": "PUSH2",
      "value": "0x65C"
    },
    "1623": {
      "op": "JUMPI"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1626": {
      "op": "DUP1"
    },
    "1627": {
      "op": "REVERT"
    },
    "1628": {
      "op": "JUMPDEST"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1639": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1640": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1641": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "1642": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1643": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1645": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "ADD",
      "path": "3"
    },
    "1646": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1647": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "1648": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A5"
    },
    "1651": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1652": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1653": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1654": {
      "op": "DUP1"
    },
    "1655": {
      "op": "ISZERO"
    },
    "1656": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1659": {
      "op": "JUMPI"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "DUP1"
    },
    "1663": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "POP",
      "path": "48"
    },
    "1666": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1669": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x13D0"
    },
    "1672": {
      "fn": "yWETH.depositAll",
      "jump": "i",
      "offset": [
        2396,
        2480
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1673": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1674": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1675": {
      "op": "DUP1"
    },
    "1676": {
      "op": "ISZERO"
    },
    "1677": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1680": {
      "op": "JUMPI"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1683": {
      "op": "DUP1"
    },
    "1684": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1685": {
      "op": "JUMPDEST"
    },
    "1686": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "POP",
      "path": "48"
    },
    "1687": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1690": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1692": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1693": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "CALLDATASIZE",
      "path": "48"
    },
    "1694": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "SUB",
      "path": "48"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1697": {
      "op": "DUP2"
    },
    "1698": {
      "op": "LT"
    },
    "1699": {
      "op": "ISZERO"
    },
    "1700": {
      "op": "PUSH2",
      "value": "0x6AC"
    },
    "1703": {
      "op": "JUMPI"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1706": {
      "op": "DUP1"
    },
    "1707": {
      "op": "REVERT"
    },
    "1708": {
      "op": "JUMPDEST"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "CALLDATALOAD",
      "path": "48"
    },
    "1711": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1452"
    },
    "1714": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        4899,
        5549
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1715": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1716": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F7"
    },
    "1719": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6FA"
    },
    "1722": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3057,
        3642
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1723": {
      "offset": [
        898,
        923
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1724": {
      "fn": "yWETH.depositETH",
      "offset": [
        898,
        923
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1725": {
      "op": "DUP1"
    },
    "1726": {
      "op": "ISZERO"
    },
    "1727": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1730": {
      "op": "JUMPI"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1733": {
      "op": "DUP1"
    },
    "1734": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.depositETH",
      "offset": [
        898,
        923
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "offset": [
        898,
        923
      ],
      "op": "POP",
      "path": "48"
    },
    "1737": {
      "fn": "yWETH.depositETH",
      "offset": [
        898,
        923
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x455"
    },
    "1740": {
      "fn": "yWETH.depositETH",
      "offset": [
        898,
        923
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16D2"
    },
    "1743": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        898,
        923
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1744": {
      "offset": [
        794,
        819
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1745": {
      "fn": "yWETH.depositETH",
      "offset": [
        794,
        819
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1746": {
      "op": "DUP1"
    },
    "1747": {
      "op": "ISZERO"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6DC"
    },
    "1751": {
      "op": "JUMPI"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1754": {
      "op": "DUP1"
    },
    "1755": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.depositETH",
      "offset": [
        794,
        819
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1756": {
      "op": "JUMPDEST"
    },
    "1757": {
      "offset": [
        794,
        819
      ],
      "op": "POP",
      "path": "48"
    },
    "1758": {
      "fn": "yWETH.depositETH",
      "offset": [
        794,
        819
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x31E"
    },
    "1761": {
      "fn": "yWETH.depositETH",
      "offset": [
        794,
        819
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16E1"
    },
    "1764": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        794,
        819
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1765": {
      "offset": [
        768,
        787
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1766": {
      "fn": "yWETH.depositETH",
      "offset": [
        768,
        787
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1767": {
      "op": "DUP1"
    },
    "1768": {
      "op": "ISZERO"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1772": {
      "op": "JUMPI"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1775": {
      "op": "DUP1"
    },
    "1776": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "yWETH.depositETH",
      "offset": [
        768,
        787
      ],
      "op": "REVERT",
      "path": "48"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "offset": [
        768,
        787
      ],
      "op": "POP",
      "path": "48"
    },
    "1779": {
      "fn": "yWETH.depositETH",
      "offset": [
        768,
        787
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x455"
    },
    "1782": {
      "fn": "yWETH.depositETH",
      "offset": [
        768,
        787
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16E7"
    },
    "1785": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        768,
        787
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1786": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1787": {
      "fn": "yWETH.depositETH",
      "offset": [
        3104,
        3117
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "1789": {
      "fn": "yWETH.depositETH",
      "offset": [
        3120,
        3129
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x704"
    },
    "1792": {
      "fn": "yWETH.depositETH",
      "offset": [
        3120,
        3127
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1087"
    },
    "1795": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3120,
        3129
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1796": {
      "fn": "yWETH.depositETH",
      "offset": [
        3120,
        3129
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1797": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "1799": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "1800": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1802": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1803": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1804": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1813": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1814": {
      "fn": "yWETH.depositETH",
      "offset": [
        3181,
        3185
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "1815": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1817": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1818": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "ADD",
      "path": "48"
    },
    "1819": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1820": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1821": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1822": {
      "fn": "yWETH.depositETH",
      "offset": [
        3104,
        3129
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1823": {
      "fn": "yWETH.depositETH",
      "offset": [
        3104,
        3129
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "SWAP3"
    },
    "1828": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "1831": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1832": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1833": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "DIV",
      "path": "48"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "op": "SUB"
    },
    "1842": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "AND",
      "path": "48"
    },
    "1843": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1844": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3172
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "1849": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3172
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1850": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "1852": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1853": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1854": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "ADD",
      "path": "48"
    },
    "1855": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1856": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1858": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1859": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1860": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1861": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1862": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1863": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1864": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SUB",
      "path": "48"
    },
    "1865": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "ADD",
      "path": "48"
    },
    "1866": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1867": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3162
      ],
      "op": "DUP7",
      "path": "48"
    },
    "1868": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1869": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "1870": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "1871": {
      "op": "DUP1"
    },
    "1872": {
      "op": "ISZERO"
    },
    "1873": {
      "op": "PUSH2",
      "value": "0x759"
    },
    "1876": {
      "op": "JUMPI"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1879": {
      "op": "DUP1"
    },
    "1880": {
      "op": "REVERT"
    },
    "1881": {
      "op": "JUMPDEST"
    },
    "1882": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "POP",
      "path": "48"
    },
    "1883": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "GAS",
      "path": "48"
    },
    "1884": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "1885": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "ISZERO"
    },
    "1888": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1891": {
      "op": "JUMPI"
    },
    "1892": {
      "op": "RETURNDATASIZE"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1895": {
      "op": "DUP1"
    },
    "1896": {
      "op": "RETURNDATACOPY"
    },
    "1897": {
      "op": "RETURNDATASIZE"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1900": {
      "op": "REVERT"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "POP",
      "path": "48"
    },
    "1903": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "POP",
      "path": "48"
    },
    "1904": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "POP",
      "path": "48"
    },
    "1905": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "POP",
      "path": "48"
    },
    "1906": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1908": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1909": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1912": {
      "op": "DUP2"
    },
    "1913": {
      "op": "LT"
    },
    "1914": {
      "op": "ISZERO"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x783"
    },
    "1918": {
      "op": "JUMPI"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "REVERT"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1926": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 1,
      "value": "0x5"
    },
    "1928": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "1929": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1931": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1932": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1933": {
      "op": "PUSH4",
      "value": "0xD0E30DB"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1940": {
      "op": "SHL"
    },
    "1941": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1942": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1943": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1944": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1945": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1946": {
      "fn": "yWETH.depositETH",
      "offset": [
        3157,
        3187
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "fn": "yWETH.depositETH",
      "offset": [
        3215,
        3224
      ],
      "op": "CALLVALUE",
      "path": "48"
    },
    "1949": {
      "fn": "yWETH.depositETH",
      "offset": [
        3215,
        3224
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1950": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "1953": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1954": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1955": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "DIV",
      "path": "48"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "AND",
      "path": "48"
    },
    "1965": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1966": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3262
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xD0E30DB0"
    },
    "1971": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3262
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1972": {
      "fn": "yWETH.depositETH",
      "offset": [
        3215,
        3224
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1973": {
      "fn": "yWETH.depositETH",
      "offset": [
        3215,
        3224
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1974": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "1976": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1977": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1978": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "ADD",
      "path": "48"
    },
    "1979": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1980": {
      "fn": "yWETH.depositETH",
      "offset": [
        3197,
        3212
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "1982": {
      "fn": "yWETH.depositETH",
      "offset": [
        3197,
        3212
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1983": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1984": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1985": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1986": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1987": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "SUB",
      "path": "48"
    },
    "1988": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "ADD",
      "path": "48"
    },
    "1989": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1990": {
      "fn": "yWETH.depositETH",
      "offset": [
        3215,
        3224
      ],
      "op": "DUP6",
      "path": "48"
    },
    "1991": {
      "fn": "yWETH.depositETH",
      "offset": [
        3247,
        3252
      ],
      "op": "DUP9",
      "path": "48"
    },
    "1992": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1993": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "1994": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "1995": {
      "op": "DUP1"
    },
    "1996": {
      "op": "ISZERO"
    },
    "1997": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "2000": {
      "op": "JUMPI"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2003": {
      "op": "DUP1"
    },
    "2004": {
      "op": "REVERT"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "POP",
      "path": "48"
    },
    "2007": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "GAS",
      "path": "48"
    },
    "2008": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "CALL",
      "path": "48"
    },
    "2009": {
      "fn": "yWETH.depositETH",
      "offset": [
        3234,
        3279
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2010": {
      "op": "DUP1"
    },
    "2011": {
      "op": "ISZERO"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E9"
    },
    "2015": {
      "op": "JUMPI"
    },
    "2016": {
      "op": "RETURNDATASIZE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2019": {
      "op": "DUP1"
    },
    "2020": {
      "op": "RETURNDATACOPY"
    },
    "2021": {
      "op": "RETURNDATASIZE"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "REVERT"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "2030": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2031": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2033": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2034": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2035": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2044": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2045": {
      "fn": "yWETH.depositETH",
      "offset": [
        3330,
        3334
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "2046": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "2048": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2049": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "ADD",
      "path": "48"
    },
    "2050": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2051": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2052": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2055": {
      "op": "SWAP6"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "2060": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2061": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2062": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "DIV",
      "path": "48"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "AND",
      "path": "48"
    },
    "2072": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3321
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "2079": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3321
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "2083": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2084": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2085": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "ADD",
      "path": "48"
    },
    "2086": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2087": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2089": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2090": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2091": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2092": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2093": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2094": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2095": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SUB",
      "path": "48"
    },
    "2096": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "ADD",
      "path": "48"
    },
    "2097": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2098": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3311
      ],
      "op": "DUP7",
      "path": "48"
    },
    "2099": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2100": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "2101": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2102": {
      "op": "DUP1"
    },
    "2103": {
      "op": "ISZERO"
    },
    "2104": {
      "op": "PUSH2",
      "value": "0x840"
    },
    "2107": {
      "op": "JUMPI"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2110": {
      "op": "DUP1"
    },
    "2111": {
      "op": "REVERT"
    },
    "2112": {
      "op": "JUMPDEST"
    },
    "2113": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "POP",
      "path": "48"
    },
    "2114": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "GAS",
      "path": "48"
    },
    "2115": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "2116": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2117": {
      "op": "DUP1"
    },
    "2118": {
      "op": "ISZERO"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x854"
    },
    "2122": {
      "op": "JUMPI"
    },
    "2123": {
      "op": "RETURNDATASIZE"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2126": {
      "op": "DUP1"
    },
    "2127": {
      "op": "RETURNDATACOPY"
    },
    "2128": {
      "op": "RETURNDATASIZE"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "REVERT"
    },
    "2132": {
      "op": "JUMPDEST"
    },
    "2133": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "POP",
      "path": "48"
    },
    "2134": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "POP",
      "path": "48"
    },
    "2135": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "POP",
      "path": "48"
    },
    "2136": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "POP",
      "path": "48"
    },
    "2137": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2139": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2140": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2143": {
      "op": "DUP2"
    },
    "2144": {
      "op": "LT"
    },
    "2145": {
      "op": "ISZERO"
    },
    "2146": {
      "op": "PUSH2",
      "value": "0x86A"
    },
    "2149": {
      "op": "JUMPI"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2152": {
      "op": "DUP1"
    },
    "2153": {
      "op": "REVERT"
    },
    "2154": {
      "op": "JUMPDEST"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2157": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "fn": "yWETH.depositETH",
      "offset": [
        3356,
        3375
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 2,
      "value": "0x87E"
    },
    "2162": {
      "fn": "yWETH.depositETH",
      "offset": [
        3306,
        3336
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2163": {
      "fn": "yWETH.depositETH",
      "offset": [
        3367,
        3374
      ],
      "op": "DUP5",
      "path": "48"
    },
    "2164": {
      "fn": "yWETH.depositETH",
      "offset": [
        3356,
        3375
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2169": {
      "fn": "yWETH.depositETH",
      "offset": [
        3356,
        3366
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "2172": {
      "fn": "yWETH.depositETH",
      "offset": [
        3356,
        3375
      ],
      "op": "AND",
      "path": "48"
    },
    "2173": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3356,
        3375
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2174": {
      "fn": "yWETH.depositETH",
      "offset": [
        3356,
        3375
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2175": {
      "fn": "yWETH.depositETH",
      "offset": [
        3346,
        3375
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "fn": "yWETH.depositETH",
      "offset": [
        3429,
        3443
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "2179": {
      "fn": "yWETH.depositETH",
      "offset": [
        3461,
        3474
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x88A"
    },
    "2182": {
      "fn": "yWETH.depositETH",
      "offset": [
        3461,
        3472
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "2185": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3461,
        3474
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2186": {
      "fn": "yWETH.depositETH",
      "offset": [
        3461,
        3474
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2187": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x895"
    },
    "2190": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "fn": "yWETH.depositETH",
      "offset": [
        3504,
        3511
      ],
      "op": "DUP2",
      "path": "48",
      "statement": 3
    },
    "2193": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8C0"
    },
    "2196": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2197": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2198": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3590
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 4,
      "value": "0x8BD"
    },
    "2201": {
      "fn": "yWETH.depositETH",
      "offset": [
        3584,
        3589
      ],
      "op": "DUP6",
      "path": "48"
    },
    "2202": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3578
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8B1"
    },
    "2205": {
      "fn": "yWETH.depositETH",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8A4"
    },
    "2208": {
      "fn": "yWETH.depositETH",
      "offset": [
        3564,
        3575
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "2211": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3564,
        3577
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2212": {
      "fn": "yWETH.depositETH",
      "offset": [
        3564,
        3577
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2213": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3559
      ],
      "op": "DUP7",
      "path": "48"
    },
    "2214": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3559
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2215": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3578
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2220": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3563
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1744"
    },
    "2223": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3578
      ],
      "op": "AND",
      "path": "48"
    },
    "2224": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3552,
        3578
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2225": {
      "fn": "yWETH.depositETH",
      "offset": [
        3552,
        3578
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2226": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3583
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2227": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3590
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2232": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3583
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x179D"
    },
    "2235": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3590
      ],
      "op": "AND",
      "path": "48"
    },
    "2236": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3551,
        3590
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2237": {
      "fn": "yWETH.depositETH",
      "offset": [
        3551,
        3590
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2238": {
      "fn": "yWETH.depositETH",
      "offset": [
        3542,
        3590
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2239": {
      "fn": "yWETH.depositETH",
      "offset": [
        3542,
        3590
      ],
      "op": "POP",
      "path": "48"
    },
    "2240": {
      "fn": "yWETH.depositETH",
      "offset": [
        3457,
        3601
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2241": {
      "fn": "yWETH.depositETH",
      "offset": [
        3610,
        3635
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 5,
      "value": "0x8CA"
    },
    "2244": {
      "fn": "yWETH.depositETH",
      "offset": [
        3616,
        3626
      ],
      "op": "CALLER",
      "path": "48"
    },
    "2245": {
      "fn": "yWETH.depositETH",
      "offset": [
        3628,
        3634
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2246": {
      "fn": "yWETH.depositETH",
      "offset": [
        3610,
        3615
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x17DF"
    },
    "2249": {
      "fn": "yWETH.depositETH",
      "jump": "i",
      "offset": [
        3610,
        3635
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2250": {
      "fn": "yWETH.depositETH",
      "offset": [
        3610,
        3635
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2251": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "POP",
      "path": "48"
    },
    "2252": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "POP",
      "path": "48"
    },
    "2253": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "POP",
      "path": "48"
    },
    "2254": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "POP",
      "path": "48"
    },
    "2255": {
      "fn": "yWETH.depositETH",
      "offset": [
        3057,
        3642
      ],
      "op": "POP",
      "path": "48"
    },
    "2256": {
      "fn": "yWETH.depositETH",
      "jump": "o",
      "offset": [
        3057,
        3642
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2257": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2258": {
      "fn": "yWETH.harvest",
      "offset": [
        4002,
        4012
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 6,
      "value": "0x8"
    },
    "2260": {
      "fn": "yWETH.harvest",
      "offset": [
        4002,
        4012
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "yWETH.harvest",
      "offset": [
        4002,
        4012
      ],
      "op": "AND",
      "path": "48"
    },
    "2270": {
      "fn": "yWETH.harvest",
      "offset": [
        3988,
        3998
      ],
      "op": "CALLER",
      "path": "48"
    },
    "2271": {
      "branch": 82,
      "fn": "yWETH.harvest",
      "offset": [
        3988,
        4012
      ],
      "op": "EQ",
      "path": "48"
    },
    "2272": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x91E"
    },
    "2275": {
      "branch": 82,
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "2276": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2278": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2279": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2286": {
      "op": "SHL"
    },
    "2287": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2288": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2289": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2291": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "2293": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2294": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "ADD",
      "path": "48"
    },
    "2295": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2296": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xB"
    },
    "2298": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "2300": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2301": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "ADD",
      "path": "48"
    },
    "2302": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2303": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "2320": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2321": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "ADD",
      "path": "48"
    },
    "2322": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2323": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2324": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2325": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2326": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2327": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2328": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "SUB",
      "path": "48"
    },
    "2329": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x64"
    },
    "2331": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "ADD",
      "path": "48"
    },
    "2332": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2333": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "REVERT",
      "path": "48"
    },
    "2334": {
      "fn": "yWETH.harvest",
      "offset": [
        3980,
        4028
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2335": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 7,
      "value": "0x5"
    },
    "2337": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "yWETH.harvest",
      "offset": [
        4046,
        4071
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2347": {
      "fn": "yWETH.harvest",
      "offset": [
        4046,
        4071
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2348": {
      "fn": "yWETH.harvest",
      "offset": [
        4046,
        4071
      ],
      "op": "AND",
      "path": "48"
    },
    "2349": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "2352": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2353": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2354": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "DIV",
      "path": "48"
    },
    "2355": {
      "fn": "yWETH.harvest",
      "offset": [
        4065,
        4070
      ],
      "op": "AND",
      "path": "48"
    },
    "2356": {
      "fn": "yWETH.harvest",
      "offset": [
        4046,
        4071
      ],
      "op": "EQ",
      "path": "48"
    },
    "2357": {
      "branch": 83,
      "fn": "yWETH.harvest",
      "offset": [
        4046,
        4071
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2358": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x96E"
    },
    "2361": {
      "branch": 83,
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "2362": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2364": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2365": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2374": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2375": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2377": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "2379": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2380": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "ADD",
      "path": "48"
    },
    "2381": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2382": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "2384": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "2386": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2387": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "ADD",
      "path": "48"
    },
    "2388": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2389": {
      "op": "PUSH5",
      "value": "0x3A37B5B2B7"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "2400": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2401": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "ADD",
      "path": "48"
    },
    "2402": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2403": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2404": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2405": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2406": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2407": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2408": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "SUB",
      "path": "48"
    },
    "2409": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x64"
    },
    "2411": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "ADD",
      "path": "48"
    },
    "2412": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2413": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "REVERT",
      "path": "48"
    },
    "2414": {
      "fn": "yWETH.harvest",
      "offset": [
        4038,
        4081
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2415": {
      "fn": "yWETH.harvest",
      "offset": [
        4120,
        4130
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 8,
      "value": "0x8"
    },
    "2417": {
      "fn": "yWETH.harvest",
      "offset": [
        4120,
        4130
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2418": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4139
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x98E"
    },
    "2421": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4139
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4119
      ],
      "op": "DUP5",
      "path": "48"
    },
    "2431": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4119
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2432": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4119
      ],
      "op": "AND",
      "path": "48"
    },
    "2433": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4119
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2434": {
      "fn": "yWETH.harvest",
      "offset": [
        4120,
        4130
      ],
      "op": "AND",
      "path": "48"
    },
    "2435": {
      "fn": "yWETH.harvest",
      "offset": [
        4132,
        4138
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2436": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4139
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2441": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4119
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x18CF"
    },
    "2444": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4139
      ],
      "op": "AND",
      "path": "48"
    },
    "2445": {
      "fn": "yWETH.harvest",
      "jump": "i",
      "offset": [
        4091,
        4139
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2446": {
      "fn": "yWETH.harvest",
      "offset": [
        4091,
        4139
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2447": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "POP",
      "path": "48"
    },
    "2448": {
      "fn": "yWETH.harvest",
      "offset": [
        3911,
        4146
      ],
      "op": "POP",
      "path": "48"
    },
    "2449": {
      "fn": "yWETH.harvest",
      "jump": "o",
      "offset": [
        3911,
        4146
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2450": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2451": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x3"
    },
    "2453": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2454": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2455": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2457": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2458": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2459": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2461": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2463": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2467": {
      "op": "NOT"
    },
    "2468": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2471": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2473": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2474": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2475": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2476": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2477": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2478": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2479": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2480": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2481": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2482": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2483": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2484": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2485": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2486": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2487": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2488": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2489": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2490": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2491": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2492": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2493": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2494": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2495": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2496": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2497": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2498": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2499": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2500": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2501": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2502": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2503": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2505": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2506": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2507": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2508": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2509": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2510": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2511": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2512": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2513": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2514": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2515": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2516": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1E"
    },
    "2519": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2520": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2521": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2523": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "LT",
      "path": "4"
    },
    "2524": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F3"
    },
    "2527": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2528": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2531": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2532": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2533": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2534": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2535": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2536": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2537": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2538": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2539": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2542": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2543": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1E"
    },
    "2546": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2547": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2548": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2549": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2550": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2551": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2552": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2554": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2555": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2559": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2560": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2561": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2562": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2563": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2564": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2565": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2566": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2567": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2569": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2570": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2571": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2573": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2574": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2575": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2576": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "GT",
      "path": "4"
    },
    "2577": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA01"
    },
    "2580": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2581": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2582": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2583": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SUB",
      "path": "4"
    },
    "2584": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2586": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2587": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2588": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2589": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2590": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2591": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2592": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2593": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2594": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2595": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2596": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2597": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2598": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2599": {
      "fn": "ERC20Detailed.name",
      "jump": "o",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2600": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2601": {
      "fn": "ERC20.approve",
      "offset": [
        2566,
        2570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2603": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0xA3C"
    },
    "2606": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA35"
    },
    "2609": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "2612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2613": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2614": {
      "fn": "ERC20.approve",
      "offset": [
        2605,
        2612
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2615": {
      "fn": "ERC20.approve",
      "offset": [
        2614,
        2620
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2616": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1925"
    },
    "2619": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2620": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2621": {
      "op": "POP"
    },
    "2622": {
      "fn": "ERC20.approve",
      "offset": [
        2638,
        2642
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x1"
    },
    "2624": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2625": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2626": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2627": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "2628": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "2629": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2630": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2631": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x2"
    },
    "2633": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2634": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2635": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3196,
        3200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0xA59"
    },
    "2642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3222,
        3228
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3230,
        3239
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3247
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A11"
    },
    "2648": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 14,
      "value": "0xACF"
    },
    "2653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3267,
        3273
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA65"
    },
    "2657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "2660": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "2665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3327,
        3333
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "2673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "2679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "2684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20BC"
    },
    "2687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "2689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "SUB"
    },
    "2699": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP11",
      "path": "3"
    },
    "2700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "AND",
      "path": "3"
    },
    "2701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2704": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA3"
    },
    "2719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3319
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "2722": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "op": "SUB"
    },
    "2732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "AND",
      "path": "3"
    },
    "2733": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "2739": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6D"
    },
    "2760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "AND",
      "path": "3"
    },
    "2761": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1925"
    },
    "2766": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3396,
        3400
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x1"
    },
    "2771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "2774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "2775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "2776": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2777": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2778": {
      "fn": "yWETH.withdraw",
      "offset": [
        4271,
        4280
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "2780": {
      "fn": "yWETH.withdraw",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAFE"
    },
    "2783": {
      "fn": "yWETH.withdraw",
      "offset": [
        4312,
        4325
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAE6"
    },
    "2786": {
      "fn": "yWETH.withdraw",
      "offset": [
        4312,
        4323
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "2789": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4312,
        4325
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2790": {
      "fn": "yWETH.withdraw",
      "offset": [
        4312,
        4325
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2791": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4306
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8B1"
    },
    "2794": {
      "fn": "yWETH.withdraw",
      "offset": [
        4298,
        4305
      ],
      "op": "DUP5",
      "path": "48"
    },
    "2795": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4293
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAF2"
    },
    "2798": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4291
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1087"
    },
    "2801": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4284,
        4293
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2802": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4293
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2803": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4297
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2804": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4306
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2809": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4297
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1744"
    },
    "2812": {
      "fn": "yWETH.withdraw",
      "offset": [
        4284,
        4306
      ],
      "op": "AND",
      "path": "48"
    },
    "2813": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4284,
        4306
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2814": {
      "fn": "yWETH.withdraw",
      "offset": [
        4283,
        4326
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2815": {
      "fn": "yWETH.withdraw",
      "offset": [
        4271,
        4326
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2816": {
      "fn": "yWETH.withdraw",
      "offset": [
        4271,
        4326
      ],
      "op": "POP",
      "path": "48"
    },
    "2817": {
      "fn": "yWETH.withdraw",
      "offset": [
        4336,
        4362
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 16,
      "value": "0xB0A"
    },
    "2820": {
      "fn": "yWETH.withdraw",
      "offset": [
        4342,
        4352
      ],
      "op": "CALLER",
      "path": "48"
    },
    "2821": {
      "fn": "yWETH.withdraw",
      "offset": [
        4354,
        4361
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2822": {
      "fn": "yWETH.withdraw",
      "offset": [
        4336,
        4341
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1C04"
    },
    "2825": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4336,
        4362
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2826": {
      "fn": "yWETH.withdraw",
      "offset": [
        4336,
        4362
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2827": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "2829": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2830": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2832": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2833": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2834": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2843": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2844": {
      "fn": "yWETH.withdraw",
      "offset": [
        4434,
        4438
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "2845": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "2847": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2848": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "ADD",
      "path": "48"
    },
    "2849": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2850": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2851": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "SWAP3"
    },
    "2855": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "2858": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2859": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "DIV",
      "path": "48"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "op": "SUB"
    },
    "2868": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "AND",
      "path": "48"
    },
    "2869": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2870": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4425
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "2875": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4425
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2876": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "2878": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2879": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2880": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "ADD",
      "path": "48"
    },
    "2881": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2882": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2884": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2885": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2886": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2887": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2888": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2889": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SUB",
      "path": "48"
    },
    "2890": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "ADD",
      "path": "48"
    },
    "2891": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2892": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4415
      ],
      "op": "DUP7",
      "path": "48"
    },
    "2893": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2894": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "2895": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2896": {
      "op": "DUP1"
    },
    "2897": {
      "op": "ISZERO"
    },
    "2898": {
      "op": "PUSH2",
      "value": "0xB5A"
    },
    "2901": {
      "op": "JUMPI"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2904": {
      "op": "DUP1"
    },
    "2905": {
      "op": "REVERT"
    },
    "2906": {
      "op": "JUMPDEST"
    },
    "2907": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "POP",
      "path": "48"
    },
    "2908": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "GAS",
      "path": "48"
    },
    "2909": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "2910": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2911": {
      "op": "DUP1"
    },
    "2912": {
      "op": "ISZERO"
    },
    "2913": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "2916": {
      "op": "JUMPI"
    },
    "2917": {
      "op": "RETURNDATASIZE"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2920": {
      "op": "DUP1"
    },
    "2921": {
      "op": "RETURNDATACOPY"
    },
    "2922": {
      "op": "RETURNDATASIZE"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2925": {
      "op": "REVERT"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "POP",
      "path": "48"
    },
    "2928": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "POP",
      "path": "48"
    },
    "2929": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "POP",
      "path": "48"
    },
    "2930": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "POP",
      "path": "48"
    },
    "2931": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2933": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2934": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2937": {
      "op": "DUP2"
    },
    "2938": {
      "op": "LT"
    },
    "2939": {
      "op": "ISZERO"
    },
    "2940": {
      "op": "PUSH2",
      "value": "0xB84"
    },
    "2943": {
      "op": "JUMPI"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "REVERT"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2951": {
      "fn": "yWETH.withdraw",
      "offset": [
        4410,
        4440
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "fn": "yWETH.withdraw",
      "offset": [
        4454,
        4459
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2954": {
      "fn": "yWETH.withdraw",
      "offset": [
        4454,
        4459
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2955": {
      "branch": 84,
      "fn": "yWETH.withdraw",
      "offset": [
        4454,
        4459
      ],
      "op": "LT",
      "path": "48"
    },
    "2956": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "2957": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xCCB"
    },
    "2960": {
      "branch": 84,
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "2961": {
      "fn": "yWETH.withdraw",
      "offset": [
        4475,
        4492
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "2963": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4503
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xBA2"
    },
    "2966": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4496
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2967": {
      "fn": "yWETH.withdraw",
      "offset": [
        4501,
        4502
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2968": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4503
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "2973": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4500
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "2976": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4503
      ],
      "op": "AND",
      "path": "48"
    },
    "2977": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4495,
        4503
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2978": {
      "fn": "yWETH.withdraw",
      "offset": [
        4495,
        4503
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2979": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 17,
      "value": "0x8"
    },
    "2981": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2982": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "2984": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "2985": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2987": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2988": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2989": {
      "op": "PUSH4",
      "value": "0xF3FEF3A3"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2998": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "3010": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3011": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "3012": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "DIV",
      "path": "48"
    },
    "3013": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3014": {
      "fn": "yWETH.withdraw",
      "offset": [
        4558,
        4563
      ],
      "op": "AND",
      "path": "48"
    },
    "3015": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "3017": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3018": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ADD",
      "path": "48"
    },
    "3019": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3020": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "3022": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3023": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ADD",
      "path": "48"
    },
    "3024": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP6",
      "path": "48"
    },
    "3025": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3026": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3027": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3028": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3029": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "3030": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP5",
      "path": "48"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3033": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "AND",
      "path": "48"
    },
    "3034": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3035": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4549
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF3FEF3A3"
    },
    "3040": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4549
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3041": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "3043": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3044": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3045": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ADD",
      "path": "48"
    },
    "3046": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3049": {
      "op": "SWAP3"
    },
    "3050": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3051": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3052": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3053": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3054": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3055": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "SUB",
      "path": "48"
    },
    "3056": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ADD",
      "path": "48"
    },
    "3057": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3058": {
      "op": "DUP4"
    },
    "3059": {
      "fn": "yWETH.withdraw",
      "offset": [
        4529,
        4539
      ],
      "op": "DUP8",
      "path": "48"
    },
    "3060": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3061": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "3062": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3063": {
      "op": "DUP1"
    },
    "3064": {
      "op": "ISZERO"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xC01"
    },
    "3068": {
      "op": "JUMPI"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "DUP1"
    },
    "3072": {
      "op": "REVERT"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "POP",
      "path": "48"
    },
    "3075": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "GAS",
      "path": "48"
    },
    "3076": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "CALL",
      "path": "48"
    },
    "3077": {
      "fn": "yWETH.withdraw",
      "offset": [
        4517,
        4576
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3078": {
      "op": "DUP1"
    },
    "3079": {
      "op": "ISZERO"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "RETURNDATASIZE"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3087": {
      "op": "DUP1"
    },
    "3088": {
      "op": "RETURNDATACOPY"
    },
    "3089": {
      "op": "RETURNDATASIZE"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3092": {
      "op": "REVERT"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3098": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3099": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3101": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3102": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3103": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3112": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3113": {
      "fn": "yWETH.withdraw",
      "offset": [
        4631,
        4635
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "3114": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "3116": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3117": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "ADD",
      "path": "48"
    },
    "3118": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3119": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3120": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "SWAP5"
    },
    "3124": {
      "op": "POP"
    },
    "3125": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "3128": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3129": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3130": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "DIV",
      "path": "48"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "AND",
      "path": "48"
    },
    "3140": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4622
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "3147": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4622
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3148": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "3150": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3151": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3152": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "ADD",
      "path": "48"
    },
    "3153": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3154": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3156": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3157": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3158": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3159": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3160": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3161": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SUB",
      "path": "48"
    },
    "3162": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "ADD",
      "path": "48"
    },
    "3163": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3164": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4612
      ],
      "op": "DUP7",
      "path": "48"
    },
    "3165": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3166": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "3167": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3168": {
      "op": "DUP1"
    },
    "3169": {
      "op": "ISZERO"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3173": {
      "op": "JUMPI"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3176": {
      "op": "DUP1"
    },
    "3177": {
      "op": "REVERT"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "POP",
      "path": "48"
    },
    "3180": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "GAS",
      "path": "48"
    },
    "3181": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "3182": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3183": {
      "op": "DUP1"
    },
    "3184": {
      "op": "ISZERO"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC7E"
    },
    "3188": {
      "op": "JUMPI"
    },
    "3189": {
      "op": "RETURNDATASIZE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3192": {
      "op": "DUP1"
    },
    "3193": {
      "op": "RETURNDATACOPY"
    },
    "3194": {
      "op": "RETURNDATASIZE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "REVERT"
    },
    "3198": {
      "op": "JUMPDEST"
    },
    "3199": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "POP",
      "path": "48"
    },
    "3200": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "POP",
      "path": "48"
    },
    "3201": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "POP",
      "path": "48"
    },
    "3202": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "POP",
      "path": "48"
    },
    "3203": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3205": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3206": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3209": {
      "op": "DUP2"
    },
    "3210": {
      "op": "LT"
    },
    "3211": {
      "op": "ISZERO"
    },
    "3212": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3215": {
      "op": "JUMPI"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3218": {
      "op": "DUP1"
    },
    "3219": {
      "op": "REVERT"
    },
    "3220": {
      "op": "JUMPDEST"
    },
    "3221": {
      "op": "POP"
    },
    "3222": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3223": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "fn": "yWETH.withdraw",
      "offset": [
        4651,
        4664
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "3227": {
      "fn": "yWETH.withdraw",
      "offset": [
        4667,
        4680
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xCAA"
    },
    "3230": {
      "fn": "yWETH.withdraw",
      "offset": [
        4607,
        4637
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3231": {
      "fn": "yWETH.withdraw",
      "offset": [
        4678,
        4679
      ],
      "op": "DUP6",
      "path": "48"
    },
    "3232": {
      "fn": "yWETH.withdraw",
      "offset": [
        4667,
        4680
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "3237": {
      "fn": "yWETH.withdraw",
      "offset": [
        4667,
        4677
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "3240": {
      "fn": "yWETH.withdraw",
      "offset": [
        4667,
        4680
      ],
      "op": "AND",
      "path": "48"
    },
    "3241": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4667,
        4680
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3242": {
      "fn": "yWETH.withdraw",
      "offset": [
        4667,
        4680
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3243": {
      "fn": "yWETH.withdraw",
      "offset": [
        4651,
        4680
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3244": {
      "fn": "yWETH.withdraw",
      "offset": [
        4651,
        4680
      ],
      "op": "POP",
      "path": "48"
    },
    "3245": {
      "fn": "yWETH.withdraw",
      "offset": [
        4706,
        4715
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3246": {
      "fn": "yWETH.withdraw",
      "offset": [
        4698,
        4703
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3247": {
      "branch": 85,
      "fn": "yWETH.withdraw",
      "offset": [
        4698,
        4715
      ],
      "op": "LT",
      "path": "48"
    },
    "3248": {
      "fn": "yWETH.withdraw",
      "offset": [
        4694,
        4766
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3249": {
      "fn": "yWETH.withdraw",
      "offset": [
        4694,
        4766
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xCC7"
    },
    "3252": {
      "branch": 85,
      "fn": "yWETH.withdraw",
      "offset": [
        4694,
        4766
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "3253": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4751
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 18,
      "value": "0xCC4"
    },
    "3256": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4740
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3257": {
      "fn": "yWETH.withdraw",
      "offset": [
        4745,
        4750
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3258": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4751
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "3263": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4744
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D00"
    },
    "3266": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4751
      ],
      "op": "AND",
      "path": "48"
    },
    "3267": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4739,
        4751
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3268": {
      "fn": "yWETH.withdraw",
      "offset": [
        4739,
        4751
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3269": {
      "fn": "yWETH.withdraw",
      "offset": [
        4735,
        4751
      ],
      "op": "SWAP5",
      "path": "48"
    },
    "3270": {
      "fn": "yWETH.withdraw",
      "offset": [
        4735,
        4751
      ],
      "op": "POP",
      "path": "48"
    },
    "3271": {
      "fn": "yWETH.withdraw",
      "offset": [
        4694,
        4766
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3272": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "POP",
      "path": "48"
    },
    "3273": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "POP",
      "path": "48"
    },
    "3274": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "POP",
      "path": "48"
    },
    "3275": {
      "fn": "yWETH.withdraw",
      "offset": [
        4450,
        4776
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3276": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 19,
      "value": "0x5"
    },
    "3278": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3279": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4819
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xCE7"
    },
    "3282": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4819
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3283": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "3286": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3287": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "DIV",
      "path": "48"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4791
      ],
      "op": "AND",
      "path": "48"
    },
    "3297": {
      "fn": "yWETH.withdraw",
      "offset": [
        4805,
        4815
      ],
      "op": "CALLER",
      "path": "48"
    },
    "3298": {
      "fn": "yWETH.withdraw",
      "offset": [
        4817,
        4818
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3299": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4804
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x18CF"
    },
    "3302": {
      "fn": "yWETH.withdraw",
      "jump": "i",
      "offset": [
        4786,
        4819
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3303": {
      "fn": "yWETH.withdraw",
      "offset": [
        4786,
        4819
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3304": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "POP",
      "path": "48"
    },
    "3305": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "POP",
      "path": "48"
    },
    "3306": {
      "fn": "yWETH.withdraw",
      "offset": [
        4219,
        4826
      ],
      "op": "POP",
      "path": "48"
    },
    "3307": {
      "fn": "yWETH.withdraw",
      "jump": "o",
      "offset": [
        4219,
        4826
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3308": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3309": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x5"
    },
    "3311": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3312": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "3314": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "AND",
      "path": "4"
    },
    "3315": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3316": {
      "fn": "ERC20Detailed.decimals",
      "jump": "o",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3318": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3882,
        3886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3320": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3898,
        3981
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xA3C"
    },
    "3323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD02"
    },
    "3326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "3329": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3921,
        3928
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3332": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "3335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3969,
        3979
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3338": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3340": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD13"
    },
    "3343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "3346": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3347": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3357": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3358": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "AND",
      "path": "3"
    },
    "3359": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3360": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3361": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3363": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3364": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "3366": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3367": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3369": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3370": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3372": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3373": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3374": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3378": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3379": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3380": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3381": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP13",
      "path": "3"
    },
    "3382": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "AND",
      "path": "3"
    },
    "3383": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3384": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3385": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3386": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3387": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3388": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3389": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3390": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3391": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3396": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3968
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D00"
    },
    "3399": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "AND",
      "path": "3"
    },
    "3400": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3930,
        3980
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3401": {
      "fn": "yWETH.setMin",
      "offset": [
        1505,
        1629
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3402": {
      "fn": "yWETH.setMin",
      "offset": [
        1576,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 22,
      "value": "0x7"
    },
    "3404": {
      "fn": "yWETH.setMin",
      "offset": [
        1576,
        1586
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "op": "SUB"
    },
    "3413": {
      "fn": "yWETH.setMin",
      "offset": [
        1576,
        1586
      ],
      "op": "AND",
      "path": "48"
    },
    "3414": {
      "fn": "yWETH.setMin",
      "offset": [
        1562,
        1572
      ],
      "op": "CALLER",
      "path": "48"
    },
    "3415": {
      "branch": 86,
      "fn": "yWETH.setMin",
      "offset": [
        1562,
        1586
      ],
      "op": "EQ",
      "path": "48"
    },
    "3416": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD96"
    },
    "3419": {
      "branch": 86,
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "3420": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3422": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3423": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3432": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3433": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3435": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "3437": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3438": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "ADD",
      "path": "48"
    },
    "3439": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3440": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xB"
    },
    "3442": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "3444": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3445": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "ADD",
      "path": "48"
    },
    "3446": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3447": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "3464": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3465": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "ADD",
      "path": "48"
    },
    "3466": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3467": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3468": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3469": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3470": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3471": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3472": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "SUB",
      "path": "48"
    },
    "3473": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x64"
    },
    "3475": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "ADD",
      "path": "48"
    },
    "3476": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3477": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "REVERT",
      "path": "48"
    },
    "3478": {
      "fn": "yWETH.setMin",
      "offset": [
        1554,
        1602
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3479": {
      "fn": "yWETH.setMin",
      "offset": [
        1612,
        1615
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 23,
      "value": "0x6"
    },
    "3481": {
      "fn": "yWETH.setMin",
      "offset": [
        1612,
        1622
      ],
      "op": "SSTORE",
      "path": "48"
    },
    "3482": {
      "fn": "yWETH.setMin",
      "jump": "o",
      "offset": [
        1505,
        1629
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3483": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3484": {
      "fn": "yWETH.available",
      "offset": [
        2131,
        2138
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "3486": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2205
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 24,
      "value": "0xE4C"
    },
    "3489": {
      "offset": [
        855,
        860
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2710"
    },
    "3492": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2196
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8B1"
    },
    "3495": {
      "fn": "yWETH.available",
      "offset": [
        2192,
        2195
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x6"
    },
    "3497": {
      "fn": "yWETH.available",
      "offset": [
        2192,
        2195
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3498": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3500": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "3502": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3503": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3504": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3505": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "3508": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "EXP",
      "path": "48"
    },
    "3509": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3510": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "DIV",
      "path": "48"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "op": "SUB"
    },
    "3519": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2162
      ],
      "op": "AND",
      "path": "48"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3526": {
      "op": "SHL"
    },
    "3527": {
      "op": "SUB"
    },
    "3528": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2172
      ],
      "op": "AND",
      "path": "48"
    },
    "3529": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2172
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "3534": {
      "fn": "yWETH.available",
      "offset": [
        2181,
        2185
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "3535": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3537": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3538": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3539": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "3544": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "AND",
      "path": "48"
    },
    "3545": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xE0"
    },
    "3547": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "SHL",
      "path": "48"
    },
    "3548": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3549": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3550": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "3552": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "ADD",
      "path": "48"
    },
    "3553": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3554": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "op": "SUB"
    },
    "3563": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "AND",
      "path": "48"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3570": {
      "op": "SHL"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "AND",
      "path": "48"
    },
    "3573": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3574": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3575": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3577": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "ADD",
      "path": "48"
    },
    "3578": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3579": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3580": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3581": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3583": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3585": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3586": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3587": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3588": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "SUB",
      "path": "48"
    },
    "3589": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3590": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP7",
      "path": "48"
    },
    "3591": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3592": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "3593": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "ISZERO"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xE14"
    },
    "3599": {
      "op": "JUMPI"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3602": {
      "op": "DUP1"
    },
    "3603": {
      "op": "REVERT"
    },
    "3604": {
      "op": "JUMPDEST"
    },
    "3605": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3606": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "GAS",
      "path": "48"
    },
    "3607": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "3608": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "ISZERO"
    },
    "3611": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3614": {
      "op": "JUMPI"
    },
    "3615": {
      "op": "RETURNDATASIZE"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "RETURNDATACOPY"
    },
    "3620": {
      "op": "RETURNDATASIZE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3623": {
      "op": "REVERT"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3626": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3627": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3628": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "POP",
      "path": "48"
    },
    "3629": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3631": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3632": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3635": {
      "op": "DUP2"
    },
    "3636": {
      "op": "LT"
    },
    "3637": {
      "op": "ISZERO"
    },
    "3638": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3641": {
      "op": "JUMPI"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3644": {
      "op": "DUP1"
    },
    "3645": {
      "op": "REVERT"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "POP"
    },
    "3648": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3649": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3650": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2196
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "3655": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2191
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1744"
    },
    "3658": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2196
      ],
      "op": "AND",
      "path": "48"
    },
    "3659": {
      "fn": "yWETH.available",
      "jump": "i",
      "offset": [
        2157,
        2196
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3660": {
      "fn": "yWETH.available",
      "offset": [
        2157,
        2205
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3661": {
      "fn": "yWETH.available",
      "offset": [
        2150,
        2205
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3662": {
      "fn": "yWETH.available",
      "offset": [
        2150,
        2205
      ],
      "op": "POP",
      "path": "48"
    },
    "3663": {
      "fn": "yWETH.available",
      "offset": [
        2089,
        2212
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3664": {
      "fn": "yWETH.available",
      "jump": "o",
      "offset": [
        2089,
        2212
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3665": {
      "offset": [
        867,
        892
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3666": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x7"
    },
    "3668": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "op": "SUB"
    },
    "3677": {
      "offset": [
        867,
        892
      ],
      "op": "AND",
      "path": "48"
    },
    "3678": {
      "fn": "yWETH.available",
      "offset": [
        867,
        892
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3679": {
      "fn": "yWETH.available",
      "jump": "o",
      "offset": [
        867,
        892
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3680": {
      "offset": [
        825,
        860
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3681": {
      "offset": [
        855,
        860
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2710"
    },
    "3684": {
      "offset": [
        825,
        860
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3685": {
      "fn": "yWETH.available",
      "jump": "o",
      "offset": [
        825,
        860
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3686": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "op": "SUB"
    },
    "3695": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "AND",
      "path": "3",
      "statement": 25
    },
    "3696": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1763,
        1770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3698": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3699": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3701": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3703": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3704": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3705": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3706": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3708": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3709": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3711": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3712": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3713": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5555,
        5679
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3714": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5608,
        5615
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "3716": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5634,
        5672
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 26,
      "value": "0xE4C"
    },
    "3719": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5658,
        5671
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE8E"
    },
    "3722": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5658,
        5669
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "3725": {
      "fn": "yWETH.getPricePerFullShare",
      "jump": "i",
      "offset": [
        5658,
        5671
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3726": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5658,
        5671
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3727": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5634,
        5653
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8B1"
    },
    "3730": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5648,
        5652
      ],
      "op": "PUSH8",
      "path": "48",
      "value": "0xDE0B6B3A7640000"
    },
    "3739": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5634,
        5643
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAF2"
    },
    "3742": {
      "fn": "yWETH.getPricePerFullShare",
      "offset": [
        5634,
        5641
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1087"
    },
    "3745": {
      "fn": "yWETH.getPricePerFullShare",
      "jump": "i",
      "offset": [
        5634,
        5643
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3746": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3648,
        3728
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3747": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3690,
        3721
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 27,
      "value": "0xEB3"
    },
    "3750": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3699,
        3720
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEAE"
    },
    "3753": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3709,
        3719
      ],
      "op": "CALLER",
      "path": "48"
    },
    "3754": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3699,
        3708
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE66"
    },
    "3757": {
      "fn": "yWETH.withdrawAll",
      "jump": "i",
      "offset": [
        3699,
        3720
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3758": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3699,
        3720
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3759": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3690,
        3698
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAD9"
    },
    "3762": {
      "fn": "yWETH.withdrawAll",
      "jump": "i",
      "offset": [
        3690,
        3721
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3763": {
      "fn": "yWETH.withdrawAll",
      "offset": [
        3690,
        3721
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3764": {
      "fn": "yWETH.withdrawAll",
      "jump": "o",
      "offset": [
        3648,
        3728
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3765": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3734,
        3820
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3766": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3779,
        3813
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 28,
      "value": "0xEB3"
    },
    "3769": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3791,
        3812
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEC1"
    },
    "3772": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3801,
        3811
      ],
      "op": "CALLER",
      "path": "48"
    },
    "3773": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3791,
        3800
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE66"
    },
    "3776": {
      "fn": "yWETH.withdrawAllETH",
      "jump": "i",
      "offset": [
        3791,
        3812
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3777": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3791,
        3812
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3778": {
      "fn": "yWETH.withdrawAllETH",
      "offset": [
        3779,
        3790
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1452"
    },
    "3781": {
      "fn": "yWETH.withdrawAllETH",
      "jump": "i",
      "offset": [
        3779,
        3813
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3782": {
      "fn": "yWETH.setController",
      "offset": [
        1791,
        1941
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3783": {
      "fn": "yWETH.setController",
      "offset": [
        1874,
        1884
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 29,
      "value": "0x7"
    },
    "3785": {
      "fn": "yWETH.setController",
      "offset": [
        1874,
        1884
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "op": "SUB"
    },
    "3794": {
      "fn": "yWETH.setController",
      "offset": [
        1874,
        1884
      ],
      "op": "AND",
      "path": "48"
    },
    "3795": {
      "fn": "yWETH.setController",
      "offset": [
        1860,
        1870
      ],
      "op": "CALLER",
      "path": "48"
    },
    "3796": {
      "branch": 87,
      "fn": "yWETH.setController",
      "offset": [
        1860,
        1884
      ],
      "op": "EQ",
      "path": "48"
    },
    "3797": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xF13"
    },
    "3800": {
      "branch": 87,
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "3801": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3803": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3804": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3813": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3814": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3816": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "3818": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3819": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "ADD",
      "path": "48"
    },
    "3820": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3821": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xB"
    },
    "3823": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "3825": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3826": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "ADD",
      "path": "48"
    },
    "3827": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3828": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3842": {
      "op": "SHL"
    },
    "3843": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "3845": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3846": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "ADD",
      "path": "48"
    },
    "3847": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3848": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3849": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3850": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3851": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3852": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3853": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "SUB",
      "path": "48"
    },
    "3854": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x64"
    },
    "3856": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "ADD",
      "path": "48"
    },
    "3857": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3858": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "REVERT",
      "path": "48"
    },
    "3859": {
      "fn": "yWETH.setController",
      "offset": [
        1852,
        1900
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3860": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1920
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 30,
      "value": "0x8"
    },
    "3862": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3863": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3870": {
      "op": "SHL"
    },
    "3871": {
      "op": "SUB"
    },
    "3872": {
      "op": "NOT"
    },
    "3873": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "AND",
      "path": "48"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "op": "SUB"
    },
    "3882": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3883": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3884": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3885": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "AND",
      "path": "48"
    },
    "3886": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3887": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3888": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3889": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "OR",
      "path": "48"
    },
    "3890": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3891": {
      "fn": "yWETH.setController",
      "offset": [
        1910,
        1934
      ],
      "op": "SSTORE",
      "path": "48"
    },
    "3892": {
      "fn": "yWETH.setController",
      "jump": "o",
      "offset": [
        1791,
        1941
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3893": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3894": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x4"
    },
    "3896": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3897": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3898": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3900": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3901": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3902": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3904": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3906": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "NOT"
    },
    "3911": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "3914": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3916": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP9",
      "path": "4"
    },
    "3917": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "4"
    },
    "3918": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3919": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "3920": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3921": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3922": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3923": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "4"
    },
    "3924": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3925": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3926": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3927": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "3928": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3929": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3930": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3931": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3932": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3933": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "3934": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3935": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "3936": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3937": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3938": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3939": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3940": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3941": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3942": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3943": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3944": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3945": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3946": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3948": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3949": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3950": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3951": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3952": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3953": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3954": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3955": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3956": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3957": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3958": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3959": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1E"
    },
    "3962": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3963": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3964": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3966": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "4"
    },
    "3967": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F3"
    },
    "3970": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3971": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "3974": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3975": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3976": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3977": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "3978": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "3979": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3980": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3981": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3982": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3984": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3985": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3986": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1E"
    },
    "3989": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3990": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3991": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4581,
        4585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4597,
        4726
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 32,
      "value": "0xA3C"
    },
    "3996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA3"
    },
    "3999": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "4002": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4620,
        4627
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "4008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4668,
        4683
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "4016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "4027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2178"
    },
    "4030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4034": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4036": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4038": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCD"
    },
    "4041": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "4044": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4045": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4055": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "AND",
      "path": "3"
    },
    "4057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "4064": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP14",
      "path": "3"
    },
    "4080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "AND",
      "path": "3"
    },
    "4081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6D"
    },
    "4098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "AND",
      "path": "3"
    },
    "4099": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4629,
        4725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4100": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4101": {
      "fn": "ERC20.transfer",
      "offset": [
        2086,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4103": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2144
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 33,
      "value": "0xA3C"
    },
    "4106": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1011"
    },
    "4109": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2122
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1921"
    },
    "4112": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4113": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4114": {
      "fn": "ERC20.transfer",
      "offset": [
        2126,
        2135
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4115": {
      "fn": "ERC20.transfer",
      "offset": [
        2137,
        2143
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4116": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A11"
    },
    "4119": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2102,
        2144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4120": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1635,
        1785
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4121": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1718,
        1728
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 34,
      "value": "0x7"
    },
    "4123": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1718,
        1728
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "SUB"
    },
    "4132": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1718,
        1728
      ],
      "op": "AND",
      "path": "48"
    },
    "4133": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1704,
        1714
      ],
      "op": "CALLER",
      "path": "48"
    },
    "4134": {
      "branch": 88,
      "fn": "yWETH.setGovernance",
      "offset": [
        1704,
        1728
      ],
      "op": "EQ",
      "path": "48"
    },
    "4135": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1065"
    },
    "4138": {
      "branch": 88,
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4139": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4141": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4142": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4149": {
      "op": "SHL"
    },
    "4150": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4151": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4152": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4154": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4156": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4157": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "ADD",
      "path": "48"
    },
    "4158": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4159": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xB"
    },
    "4161": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4163": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4164": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "ADD",
      "path": "48"
    },
    "4165": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4166": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4180": {
      "op": "SHL"
    },
    "4181": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "4183": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4184": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "ADD",
      "path": "48"
    },
    "4185": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4186": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4187": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4188": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4189": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4190": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4191": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "SUB",
      "path": "48"
    },
    "4192": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x64"
    },
    "4194": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "ADD",
      "path": "48"
    },
    "4195": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4196": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "REVERT",
      "path": "48"
    },
    "4197": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1696,
        1744
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4198": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1764
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 35,
      "value": "0x7"
    },
    "4200": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4201": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "op": "NOT"
    },
    "4211": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "AND",
      "path": "48"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4218": {
      "op": "SHL"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4221": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4222": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4223": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "AND",
      "path": "48"
    },
    "4224": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4225": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4226": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4227": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "OR",
      "path": "48"
    },
    "4228": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4229": {
      "fn": "yWETH.setGovernance",
      "offset": [
        1754,
        1778
      ],
      "op": "SSTORE",
      "path": "48"
    },
    "4230": {
      "fn": "yWETH.setGovernance",
      "jump": "o",
      "offset": [
        1635,
        1785
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4231": {
      "fn": "yWETH.balance",
      "offset": [
        1341,
        1499
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4232": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 36,
      "value": "0x8"
    },
    "4234": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4235": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4237": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4238": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4240": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4241": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4242": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4251": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "op": "SUB"
    },
    "4260": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4263": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4264": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4265": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "DIV",
      "path": "48"
    },
    "4266": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4267": {
      "fn": "yWETH.balance",
      "offset": [
        1484,
        1489
      ],
      "op": "AND",
      "path": "48"
    },
    "4268": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4270": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4271": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "ADD",
      "path": "48"
    },
    "4272": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4273": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4274": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4277": {
      "op": "SWAP4"
    },
    "4278": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1492
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE4C"
    },
    "4281": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1492
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4282": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "AND",
      "path": "48"
    },
    "4283": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4284": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1475
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "4289": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1475
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4290": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4292": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4293": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4294": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "ADD",
      "path": "48"
    },
    "4295": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4296": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4298": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4299": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4300": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4301": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4302": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4303": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SUB",
      "path": "48"
    },
    "4304": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "ADD",
      "path": "48"
    },
    "4305": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4306": {
      "fn": "yWETH.balance",
      "offset": [
        1454,
        1464
      ],
      "op": "DUP7",
      "path": "48"
    },
    "4307": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4308": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "4309": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4310": {
      "op": "DUP1"
    },
    "4311": {
      "op": "ISZERO"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10E0"
    },
    "4315": {
      "op": "JUMPI"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4318": {
      "op": "DUP1"
    },
    "4319": {
      "op": "REVERT"
    },
    "4320": {
      "op": "JUMPDEST"
    },
    "4321": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "POP",
      "path": "48"
    },
    "4322": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "GAS",
      "path": "48"
    },
    "4323": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "4324": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4325": {
      "op": "DUP1"
    },
    "4326": {
      "op": "ISZERO"
    },
    "4327": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4330": {
      "op": "JUMPI"
    },
    "4331": {
      "op": "RETURNDATASIZE"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4334": {
      "op": "DUP1"
    },
    "4335": {
      "op": "RETURNDATACOPY"
    },
    "4336": {
      "op": "RETURNDATASIZE"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4339": {
      "op": "REVERT"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "POP",
      "path": "48"
    },
    "4342": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "POP",
      "path": "48"
    },
    "4343": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "POP",
      "path": "48"
    },
    "4344": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "POP",
      "path": "48"
    },
    "4345": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4347": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4348": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4351": {
      "op": "DUP2"
    },
    "4352": {
      "op": "LT"
    },
    "4353": {
      "op": "ISZERO"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x110A"
    },
    "4357": {
      "op": "JUMPI"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4360": {
      "op": "DUP1"
    },
    "4361": {
      "op": "REVERT"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4365": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4367": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4368": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4370": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4371": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4372": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4379": {
      "op": "SHL"
    },
    "4380": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4381": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4382": {
      "fn": "yWETH.balance",
      "offset": [
        1431,
        1435
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "4383": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4385": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4386": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "ADD",
      "path": "48"
    },
    "4387": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4388": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4389": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4390": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4393": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4394": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4395": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "DIV",
      "path": "48"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4402": {
      "op": "SHL"
    },
    "4403": {
      "op": "SUB"
    },
    "4404": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "AND",
      "path": "48"
    },
    "4405": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4406": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1422
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "4411": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1422
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4412": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4414": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4415": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4416": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "ADD",
      "path": "48"
    },
    "4417": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4418": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4420": {
      "fn": "yWETH.balance",
      "offset": [
        1442,
        1491
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4421": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4422": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4423": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4424": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4425": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4426": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SUB",
      "path": "48"
    },
    "4427": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "ADD",
      "path": "48"
    },
    "4428": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4429": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1412
      ],
      "op": "DUP7",
      "path": "48"
    },
    "4430": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4431": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "4432": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4433": {
      "op": "DUP1"
    },
    "4434": {
      "op": "ISZERO"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4438": {
      "op": "JUMPI"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4441": {
      "op": "DUP1"
    },
    "4442": {
      "op": "REVERT"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "POP",
      "path": "48"
    },
    "4445": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "GAS",
      "path": "48"
    },
    "4446": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "4447": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4448": {
      "op": "DUP1"
    },
    "4449": {
      "op": "ISZERO"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "RETURNDATASIZE"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "DUP1"
    },
    "4458": {
      "op": "RETURNDATACOPY"
    },
    "4459": {
      "op": "RETURNDATASIZE"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4462": {
      "op": "REVERT"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "POP",
      "path": "48"
    },
    "4465": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "POP",
      "path": "48"
    },
    "4466": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "POP",
      "path": "48"
    },
    "4467": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "POP",
      "path": "48"
    },
    "4468": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4470": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4471": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4474": {
      "op": "DUP2"
    },
    "4475": {
      "op": "LT"
    },
    "4476": {
      "op": "ISZERO"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x1185"
    },
    "4480": {
      "op": "JUMPI"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP1"
    },
    "4484": {
      "op": "REVERT"
    },
    "4485": {
      "op": "JUMPDEST"
    },
    "4486": {
      "op": "POP"
    },
    "4487": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4488": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1437
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4489": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1492
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "4494": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1441
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D00"
    },
    "4497": {
      "fn": "yWETH.balance",
      "offset": [
        1407,
        1492
      ],
      "op": "AND",
      "path": "48"
    },
    "4498": {
      "fn": "yWETH.balance",
      "jump": "i",
      "offset": [
        1407,
        1492
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4499": {
      "fn": "yWETH.deposit",
      "offset": [
        2486,
        3051
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4500": {
      "fn": "yWETH.deposit",
      "offset": [
        2537,
        2550
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4502": {
      "fn": "yWETH.deposit",
      "offset": [
        2553,
        2562
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x119D"
    },
    "4505": {
      "fn": "yWETH.deposit",
      "offset": [
        2553,
        2560
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1087"
    },
    "4508": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2553,
        2562
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4509": {
      "fn": "yWETH.deposit",
      "offset": [
        2553,
        2562
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4510": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4512": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4513": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4515": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4516": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4517": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4524": {
      "op": "SHL"
    },
    "4525": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4526": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4527": {
      "fn": "yWETH.deposit",
      "offset": [
        2614,
        2618
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "4528": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4530": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4531": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "ADD",
      "path": "48"
    },
    "4532": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4533": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4534": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4535": {
      "fn": "yWETH.deposit",
      "offset": [
        2537,
        2562
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4536": {
      "fn": "yWETH.deposit",
      "offset": [
        2537,
        2562
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4540": {
      "op": "SWAP3"
    },
    "4541": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4544": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4545": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4546": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "DIV",
      "path": "48"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4553": {
      "op": "SHL"
    },
    "4554": {
      "op": "SUB"
    },
    "4555": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "AND",
      "path": "48"
    },
    "4556": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4557": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2605
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "4562": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2605
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4563": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4565": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4566": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4567": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "ADD",
      "path": "48"
    },
    "4568": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4569": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4571": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4572": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4573": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4574": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4575": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4576": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4577": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SUB",
      "path": "48"
    },
    "4578": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "ADD",
      "path": "48"
    },
    "4579": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4580": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2595
      ],
      "op": "DUP7",
      "path": "48"
    },
    "4581": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4582": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "4583": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4584": {
      "op": "DUP1"
    },
    "4585": {
      "op": "ISZERO"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x11F2"
    },
    "4589": {
      "op": "JUMPI"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4592": {
      "op": "DUP1"
    },
    "4593": {
      "op": "REVERT"
    },
    "4594": {
      "op": "JUMPDEST"
    },
    "4595": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "POP",
      "path": "48"
    },
    "4596": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "GAS",
      "path": "48"
    },
    "4597": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "4598": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4599": {
      "op": "DUP1"
    },
    "4600": {
      "op": "ISZERO"
    },
    "4601": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4604": {
      "op": "JUMPI"
    },
    "4605": {
      "op": "RETURNDATASIZE"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "RETURNDATACOPY"
    },
    "4610": {
      "op": "RETURNDATASIZE"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4613": {
      "op": "REVERT"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "POP",
      "path": "48"
    },
    "4616": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "POP",
      "path": "48"
    },
    "4617": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "POP",
      "path": "48"
    },
    "4618": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "POP",
      "path": "48"
    },
    "4619": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4621": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4622": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "LT"
    },
    "4627": {
      "op": "ISZERO"
    },
    "4628": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4631": {
      "op": "JUMPI"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4634": {
      "op": "DUP1"
    },
    "4635": {
      "op": "REVERT"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4639": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 37,
      "value": "0x5"
    },
    "4641": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4642": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4643": {
      "fn": "yWETH.deposit",
      "offset": [
        2590,
        2620
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4644": {
      "op": "POP"
    },
    "4645": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2688
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x123E"
    },
    "4648": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2688
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4649": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4652": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4653": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "DIV",
      "path": "48"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4660": {
      "op": "SHL"
    },
    "4661": {
      "op": "SUB"
    },
    "4662": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2635
      ],
      "op": "AND",
      "path": "48"
    },
    "4663": {
      "fn": "yWETH.deposit",
      "offset": [
        2653,
        2663
      ],
      "op": "CALLER",
      "path": "48"
    },
    "4664": {
      "fn": "yWETH.deposit",
      "offset": [
        2673,
        2677
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "4665": {
      "fn": "yWETH.deposit",
      "offset": [
        2680,
        2687
      ],
      "op": "DUP7",
      "path": "48"
    },
    "4666": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2652
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D5A"
    },
    "4669": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2630,
        2688
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4670": {
      "fn": "yWETH.deposit",
      "offset": [
        2630,
        2688
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4671": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4673": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4674": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4676": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4677": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4678": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4687": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4688": {
      "fn": "yWETH.deposit",
      "offset": [
        2739,
        2743
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "4689": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4691": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4692": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "ADD",
      "path": "48"
    },
    "4693": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4694": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4695": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4698": {
      "op": "SWAP3"
    },
    "4699": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4702": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4703": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "DIV",
      "path": "48"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4710": {
      "op": "SHL"
    },
    "4711": {
      "op": "SUB"
    },
    "4712": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "AND",
      "path": "48"
    },
    "4713": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4714": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2730
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "4719": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2730
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4720": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4722": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4723": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4724": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "ADD",
      "path": "48"
    },
    "4725": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4726": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4728": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4729": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4730": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4731": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4732": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4733": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SUB",
      "path": "48"
    },
    "4734": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "ADD",
      "path": "48"
    },
    "4735": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4736": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2720
      ],
      "op": "DUP7",
      "path": "48"
    },
    "4737": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4738": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "4739": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4740": {
      "op": "DUP1"
    },
    "4741": {
      "op": "ISZERO"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x128E"
    },
    "4745": {
      "op": "JUMPI"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4748": {
      "op": "DUP1"
    },
    "4749": {
      "op": "REVERT"
    },
    "4750": {
      "op": "JUMPDEST"
    },
    "4751": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "POP",
      "path": "48"
    },
    "4752": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "GAS",
      "path": "48"
    },
    "4753": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "4754": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4755": {
      "op": "DUP1"
    },
    "4756": {
      "op": "ISZERO"
    },
    "4757": {
      "op": "PUSH2",
      "value": "0x12A2"
    },
    "4760": {
      "op": "JUMPI"
    },
    "4761": {
      "op": "RETURNDATASIZE"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4764": {
      "op": "DUP1"
    },
    "4765": {
      "op": "RETURNDATACOPY"
    },
    "4766": {
      "op": "RETURNDATASIZE"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4769": {
      "op": "REVERT"
    },
    "4770": {
      "op": "JUMPDEST"
    },
    "4771": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "POP",
      "path": "48"
    },
    "4772": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "POP",
      "path": "48"
    },
    "4773": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "POP",
      "path": "48"
    },
    "4774": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "POP",
      "path": "48"
    },
    "4775": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4777": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4778": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4781": {
      "op": "DUP2"
    },
    "4782": {
      "op": "LT"
    },
    "4783": {
      "op": "ISZERO"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x12B8"
    },
    "4787": {
      "op": "JUMPI"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4790": {
      "op": "DUP1"
    },
    "4791": {
      "op": "REVERT"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4795": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4796": {
      "op": "POP"
    },
    "4797": {
      "fn": "yWETH.deposit",
      "offset": [
        2765,
        2784
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 38,
      "value": "0x12CC"
    },
    "4800": {
      "fn": "yWETH.deposit",
      "offset": [
        2715,
        2745
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4801": {
      "fn": "yWETH.deposit",
      "offset": [
        2776,
        2783
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4802": {
      "fn": "yWETH.deposit",
      "offset": [
        2765,
        2784
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "4807": {
      "fn": "yWETH.deposit",
      "offset": [
        2765,
        2775
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "4810": {
      "fn": "yWETH.deposit",
      "offset": [
        2765,
        2784
      ],
      "op": "AND",
      "path": "48"
    },
    "4811": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2765,
        2784
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4812": {
      "fn": "yWETH.deposit",
      "offset": [
        2765,
        2784
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4813": {
      "fn": "yWETH.deposit",
      "offset": [
        2755,
        2784
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "fn": "yWETH.deposit",
      "offset": [
        2838,
        2852
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4817": {
      "fn": "yWETH.deposit",
      "offset": [
        2870,
        2883
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12D8"
    },
    "4820": {
      "fn": "yWETH.deposit",
      "offset": [
        2870,
        2881
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "4823": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2870,
        2883
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4824": {
      "fn": "yWETH.deposit",
      "offset": [
        2870,
        2883
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4825": {
      "fn": "yWETH.deposit",
      "offset": [
        2866,
        3010
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12E3"
    },
    "4828": {
      "fn": "yWETH.deposit",
      "offset": [
        2866,
        3010
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "fn": "yWETH.deposit",
      "offset": [
        2913,
        2920
      ],
      "op": "DUP4",
      "path": "48",
      "statement": 39
    },
    "4831": {
      "fn": "yWETH.deposit",
      "offset": [
        2866,
        3010
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8C0"
    },
    "4834": {
      "fn": "yWETH.deposit",
      "offset": [
        2866,
        3010
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4835": {
      "fn": "yWETH.deposit",
      "offset": [
        2866,
        3010
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4836": {
      "fn": "yWETH.deposit",
      "offset": [
        2960,
        2999
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 40,
      "value": "0x8BD"
    },
    "4839": {
      "fn": "yWETH.deposit",
      "offset": [
        2993,
        2998
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4840": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8B1"
    },
    "4843": {
      "fn": "yWETH.deposit",
      "offset": [
        2973,
        2986
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12F2"
    },
    "4846": {
      "fn": "yWETH.deposit",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "4849": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2973,
        2986
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4850": {
      "fn": "yWETH.deposit",
      "offset": [
        2973,
        2986
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4851": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2968
      ],
      "op": "DUP9",
      "path": "48"
    },
    "4852": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2968
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4853": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "4858": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2972
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1744"
    },
    "4861": {
      "fn": "yWETH.deposit",
      "offset": [
        2961,
        2987
      ],
      "op": "AND",
      "path": "48"
    },
    "4862": {
      "fn": "yWETH.deposit",
      "jump": "i",
      "offset": [
        2961,
        2987
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4863": {
      "fn": "yWETH.earn",
      "offset": [
        2218,
        2390
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4864": {
      "fn": "yWETH.earn",
      "offset": [
        2251,
        2263
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4866": {
      "fn": "yWETH.earn",
      "offset": [
        2266,
        2277
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1309"
    },
    "4869": {
      "fn": "yWETH.earn",
      "offset": [
        2266,
        2275
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD9B"
    },
    "4872": {
      "fn": "yWETH.earn",
      "jump": "i",
      "offset": [
        2266,
        2277
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4873": {
      "fn": "yWETH.earn",
      "offset": [
        2266,
        2277
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4874": {
      "fn": "yWETH.earn",
      "offset": [
        2306,
        2316
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 41,
      "value": "0x8"
    },
    "4876": {
      "fn": "yWETH.earn",
      "offset": [
        2306,
        2316
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4877": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4879": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4880": {
      "fn": "yWETH.earn",
      "offset": [
        2251,
        2277
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4881": {
      "fn": "yWETH.earn",
      "offset": [
        2251,
        2277
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4882": {
      "op": "POP"
    },
    "4883": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2323
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1334"
    },
    "4886": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2323
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4887": {
      "fn": "yWETH.earn",
      "offset": [
        2306,
        2316
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4890": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4891": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "DIV",
      "path": "48"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4898": {
      "op": "SHL"
    },
    "4899": {
      "op": "SUB"
    },
    "4900": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4901": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4902": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "AND",
      "path": "48"
    },
    "4903": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2292
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4904": {
      "fn": "yWETH.earn",
      "offset": [
        2306,
        2316
      ],
      "op": "AND",
      "path": "48"
    },
    "4905": {
      "fn": "yWETH.earn",
      "offset": [
        2251,
        2277
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4906": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2323
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "4911": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2305
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x18CF"
    },
    "4914": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2323
      ],
      "op": "AND",
      "path": "48"
    },
    "4915": {
      "fn": "yWETH.earn",
      "jump": "i",
      "offset": [
        2287,
        2323
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4916": {
      "fn": "yWETH.earn",
      "offset": [
        2287,
        2323
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4917": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 42,
      "value": "0x8"
    },
    "4919": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4920": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4922": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "4923": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4925": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4926": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4927": {
      "op": "PUSH4",
      "value": "0xB02BF4B9"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4936": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4937": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "4940": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4941": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4942": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "DIV",
      "path": "48"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4949": {
      "op": "SHL"
    },
    "4950": {
      "op": "SUB"
    },
    "4951": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4952": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4953": {
      "fn": "yWETH.earn",
      "offset": [
        2370,
        2375
      ],
      "op": "AND",
      "path": "48"
    },
    "4954": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "4956": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4957": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ADD",
      "path": "48"
    },
    "4958": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4959": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "4961": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4962": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ADD",
      "path": "48"
    },
    "4963": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP6",
      "path": "48"
    },
    "4964": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4965": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4966": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4967": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4968": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4969": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "AND",
      "path": "48"
    },
    "4970": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4971": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2361
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xB02BF4B9"
    },
    "4976": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2361
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4977": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "4979": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4980": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4981": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ADD",
      "path": "48"
    },
    "4982": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4983": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4985": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4986": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4987": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4988": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4989": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4990": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4991": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "SUB",
      "path": "48"
    },
    "4992": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ADD",
      "path": "48"
    },
    "4993": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4994": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4995": {
      "fn": "yWETH.earn",
      "offset": [
        2345,
        2355
      ],
      "op": "DUP8",
      "path": "48"
    },
    "4996": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4997": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "4998": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4999": {
      "op": "DUP1"
    },
    "5000": {
      "op": "ISZERO"
    },
    "5001": {
      "op": "PUSH2",
      "value": "0x1391"
    },
    "5004": {
      "op": "JUMPI"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5007": {
      "op": "DUP1"
    },
    "5008": {
      "op": "REVERT"
    },
    "5009": {
      "op": "JUMPDEST"
    },
    "5010": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "POP",
      "path": "48"
    },
    "5011": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "GAS",
      "path": "48"
    },
    "5012": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "CALL",
      "path": "48"
    },
    "5013": {
      "fn": "yWETH.earn",
      "offset": [
        2333,
        2383
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5014": {
      "op": "DUP1"
    },
    "5015": {
      "op": "ISZERO"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x8CA"
    },
    "5019": {
      "op": "JUMPI"
    },
    "5020": {
      "op": "RETURNDATASIZE"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5023": {
      "op": "DUP1"
    },
    "5024": {
      "op": "RETURNDATACOPY"
    },
    "5025": {
      "op": "RETURNDATASIZE"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5028": {
      "fn": "yWETH.earn",
      "offset": [
        2230,
        2362
      ],
      "op": "REVERT",
      "path": "48"
    },
    "5029": {
      "fn": "yWETH.earn",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "SHL"
    },
    "5037": {
      "op": "SUB"
    },
    "5038": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 43
    },
    "5039": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5040": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "AND",
      "path": "3"
    },
    "5041": {
      "fn": "ERC20.allowance",
      "offset": [
        2302,
        2309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5043": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5044": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5045": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5046": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5048": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5050": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5051": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5052": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5053": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5055": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5056": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5057": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5058": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5059": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5060": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5061": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "AND",
      "path": "3"
    },
    "5062": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5063": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5064": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5065": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5066": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5067": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5068": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5069": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5070": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5071": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5072": {
      "fn": "yWETH.depositAll",
      "offset": [
        2396,
        2480
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5073": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 44,
      "value": "0x5"
    },
    "5075": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5076": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5078": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5079": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5080": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5087": {
      "op": "SHL"
    },
    "5088": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5089": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5090": {
      "fn": "yWETH.depositAll",
      "offset": [
        2461,
        2471
      ],
      "op": "CALLER",
      "path": "48"
    },
    "5091": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "5093": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5094": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "48"
    },
    "5095": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5096": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5097": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5098": {
      "fn": "yWETH.depositAll",
      "offset": [
        2437,
        2473
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEB3"
    },
    "5101": {
      "fn": "yWETH.depositAll",
      "offset": [
        2437,
        2473
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5102": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5105": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5106": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "DIV",
      "path": "48"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "op": "SUB"
    },
    "5115": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "AND",
      "path": "48"
    },
    "5116": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5117": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2460
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "5122": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2460
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5123": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "5125": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5126": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5127": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "48"
    },
    "5128": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5129": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5131": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5132": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5133": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5134": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5135": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5136": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "SUB",
      "path": "48"
    },
    "5137": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "48"
    },
    "5138": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5139": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2450
      ],
      "op": "DUP7",
      "path": "48"
    },
    "5140": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5141": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "5142": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5143": {
      "op": "DUP1"
    },
    "5144": {
      "op": "ISZERO"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1421"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5151": {
      "op": "DUP1"
    },
    "5152": {
      "op": "REVERT"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "48"
    },
    "5155": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "GAS",
      "path": "48"
    },
    "5156": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "5157": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5158": {
      "op": "DUP1"
    },
    "5159": {
      "op": "ISZERO"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0x1435"
    },
    "5163": {
      "op": "JUMPI"
    },
    "5164": {
      "op": "RETURNDATASIZE"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5167": {
      "op": "DUP1"
    },
    "5168": {
      "op": "RETURNDATACOPY"
    },
    "5169": {
      "op": "RETURNDATASIZE"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5172": {
      "op": "REVERT"
    },
    "5173": {
      "op": "JUMPDEST"
    },
    "5174": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "48"
    },
    "5175": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "48"
    },
    "5176": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "48"
    },
    "5177": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "48"
    },
    "5178": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5180": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5181": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5184": {
      "op": "DUP2"
    },
    "5185": {
      "op": "LT"
    },
    "5186": {
      "op": "ISZERO"
    },
    "5187": {
      "op": "PUSH2",
      "value": "0x144B"
    },
    "5190": {
      "op": "JUMPI"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5193": {
      "op": "DUP1"
    },
    "5194": {
      "op": "REVERT"
    },
    "5195": {
      "op": "JUMPDEST"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "fn": "yWETH.depositAll",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5198": {
      "fn": "yWETH.depositAll",
      "offset": [
        2437,
        2444
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1193"
    },
    "5201": {
      "fn": "yWETH.depositAll",
      "jump": "i",
      "offset": [
        2437,
        2473
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5202": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5203": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4954,
        4963
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5205": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4966,
        5009
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x145F"
    },
    "5208": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4995,
        5008
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xAE6"
    },
    "5211": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4995,
        5006
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA46"
    },
    "5214": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        4995,
        5008
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5215": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4966,
        5009
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5216": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4954,
        5009
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5217": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4954,
        5009
      ],
      "op": "POP",
      "path": "48"
    },
    "5218": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5019,
        5045
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 45,
      "value": "0x146B"
    },
    "5221": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5025,
        5035
      ],
      "op": "CALLER",
      "path": "48"
    },
    "5222": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5037,
        5044
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5223": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5019,
        5024
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1C04"
    },
    "5226": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        5019,
        5045
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5227": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5019,
        5045
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5228": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5230": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5231": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5233": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5234": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5235": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5242": {
      "op": "SHL"
    },
    "5243": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5244": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5245": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5117,
        5121
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "5246": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "5248": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5249": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "ADD",
      "path": "48"
    },
    "5250": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5251": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5252": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5255": {
      "op": "SWAP3"
    },
    "5256": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5259": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5260": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "DIV",
      "path": "48"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5267": {
      "op": "SHL"
    },
    "5268": {
      "op": "SUB"
    },
    "5269": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "AND",
      "path": "48"
    },
    "5270": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5271": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5108
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "5276": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5108
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5277": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "5279": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5280": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5281": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "ADD",
      "path": "48"
    },
    "5282": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5283": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5285": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5286": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5287": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5288": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5289": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5290": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SUB",
      "path": "48"
    },
    "5291": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "ADD",
      "path": "48"
    },
    "5292": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5293": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5098
      ],
      "op": "DUP7",
      "path": "48"
    },
    "5294": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5295": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "5296": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5297": {
      "op": "DUP1"
    },
    "5298": {
      "op": "ISZERO"
    },
    "5299": {
      "op": "PUSH2",
      "value": "0x14BB"
    },
    "5302": {
      "op": "JUMPI"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5305": {
      "op": "DUP1"
    },
    "5306": {
      "op": "REVERT"
    },
    "5307": {
      "op": "JUMPDEST"
    },
    "5308": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "POP",
      "path": "48"
    },
    "5309": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "GAS",
      "path": "48"
    },
    "5310": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "5311": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5312": {
      "op": "DUP1"
    },
    "5313": {
      "op": "ISZERO"
    },
    "5314": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5317": {
      "op": "JUMPI"
    },
    "5318": {
      "op": "RETURNDATASIZE"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "DUP1"
    },
    "5322": {
      "op": "RETURNDATACOPY"
    },
    "5323": {
      "op": "RETURNDATASIZE"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5326": {
      "op": "REVERT"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "POP",
      "path": "48"
    },
    "5329": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "POP",
      "path": "48"
    },
    "5330": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "POP",
      "path": "48"
    },
    "5331": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "POP",
      "path": "48"
    },
    "5332": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5334": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5335": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5338": {
      "op": "DUP2"
    },
    "5339": {
      "op": "LT"
    },
    "5340": {
      "op": "ISZERO"
    },
    "5341": {
      "op": "PUSH2",
      "value": "0x14E5"
    },
    "5344": {
      "op": "JUMPI"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5347": {
      "op": "DUP1"
    },
    "5348": {
      "op": "REVERT"
    },
    "5349": {
      "op": "JUMPDEST"
    },
    "5350": {
      "op": "POP"
    },
    "5351": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5352": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5093,
        5123
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5137,
        5142
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5355": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5137,
        5142
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5356": {
      "branch": 89,
      "fn": "yWETH.withdrawETH",
      "offset": [
        5137,
        5142
      ],
      "op": "LT",
      "path": "48"
    },
    "5357": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5358": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x162C"
    },
    "5361": {
      "branch": 89,
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "5362": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5158,
        5175
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5364": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5186
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1503"
    },
    "5367": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5179
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5368": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5184,
        5185
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5369": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5186
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "5374": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5183
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "5377": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5186
      ],
      "op": "AND",
      "path": "48"
    },
    "5378": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        5178,
        5186
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5379": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5178,
        5186
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5380": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 46,
      "value": "0x8"
    },
    "5382": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5383": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5385": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5386": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5388": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5389": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5390": {
      "op": "PUSH4",
      "value": "0xF3FEF3A3"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5397": {
      "op": "SHL"
    },
    "5398": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5399": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5411": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5412": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "5413": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "DIV",
      "path": "48"
    },
    "5414": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5415": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5241,
        5246
      ],
      "op": "AND",
      "path": "48"
    },
    "5416": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "5418": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5419": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ADD",
      "path": "48"
    },
    "5420": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5421": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "5423": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5424": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ADD",
      "path": "48"
    },
    "5425": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP6",
      "path": "48"
    },
    "5426": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5427": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5428": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5429": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5430": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "5431": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP5",
      "path": "48"
    },
    "5432": {
      "op": "POP"
    },
    "5433": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5434": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "AND",
      "path": "48"
    },
    "5435": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5436": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5232
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xF3FEF3A3"
    },
    "5441": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5232
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5442": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x44"
    },
    "5444": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5445": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5446": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ADD",
      "path": "48"
    },
    "5447": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5450": {
      "op": "SWAP3"
    },
    "5451": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5452": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5453": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5454": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5455": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5456": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "SUB",
      "path": "48"
    },
    "5457": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ADD",
      "path": "48"
    },
    "5458": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5459": {
      "op": "DUP4"
    },
    "5460": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5212,
        5222
      ],
      "op": "DUP8",
      "path": "48"
    },
    "5461": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5462": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "5463": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5464": {
      "op": "DUP1"
    },
    "5465": {
      "op": "ISZERO"
    },
    "5466": {
      "op": "PUSH2",
      "value": "0x1562"
    },
    "5469": {
      "op": "JUMPI"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5472": {
      "op": "DUP1"
    },
    "5473": {
      "op": "REVERT"
    },
    "5474": {
      "op": "JUMPDEST"
    },
    "5475": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "POP",
      "path": "48"
    },
    "5476": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "GAS",
      "path": "48"
    },
    "5477": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "CALL",
      "path": "48"
    },
    "5478": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5200,
        5259
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5479": {
      "op": "DUP1"
    },
    "5480": {
      "op": "ISZERO"
    },
    "5481": {
      "op": "PUSH2",
      "value": "0x1576"
    },
    "5484": {
      "op": "JUMPI"
    },
    "5485": {
      "op": "RETURNDATASIZE"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5488": {
      "op": "DUP1"
    },
    "5489": {
      "op": "RETURNDATACOPY"
    },
    "5490": {
      "op": "RETURNDATASIZE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5493": {
      "op": "REVERT"
    },
    "5494": {
      "op": "JUMPDEST"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5499": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5500": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5502": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5503": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5504": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5511": {
      "op": "SHL"
    },
    "5512": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5513": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5514": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5314,
        5318
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "5515": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "5517": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5518": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "ADD",
      "path": "48"
    },
    "5519": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5520": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5521": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5524": {
      "op": "SWAP5"
    },
    "5525": {
      "op": "POP"
    },
    "5526": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5529": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5530": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5531": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "DIV",
      "path": "48"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5538": {
      "op": "SHL"
    },
    "5539": {
      "op": "SUB"
    },
    "5540": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "AND",
      "path": "48"
    },
    "5541": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5305
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x70A08231"
    },
    "5548": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5305
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5549": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x24"
    },
    "5551": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5552": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5553": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "ADD",
      "path": "48"
    },
    "5554": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5555": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5557": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5558": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5559": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5560": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5561": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5562": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SUB",
      "path": "48"
    },
    "5563": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "ADD",
      "path": "48"
    },
    "5564": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5565": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5295
      ],
      "op": "DUP7",
      "path": "48"
    },
    "5566": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5567": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "5568": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5569": {
      "op": "DUP1"
    },
    "5570": {
      "op": "ISZERO"
    },
    "5571": {
      "op": "PUSH2",
      "value": "0x15CB"
    },
    "5574": {
      "op": "JUMPI"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "REVERT"
    },
    "5579": {
      "op": "JUMPDEST"
    },
    "5580": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "POP",
      "path": "48"
    },
    "5581": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "GAS",
      "path": "48"
    },
    "5582": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "STATICCALL",
      "path": "48"
    },
    "5583": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5584": {
      "op": "DUP1"
    },
    "5585": {
      "op": "ISZERO"
    },
    "5586": {
      "op": "PUSH2",
      "value": "0x15DF"
    },
    "5589": {
      "op": "JUMPI"
    },
    "5590": {
      "op": "RETURNDATASIZE"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5593": {
      "op": "DUP1"
    },
    "5594": {
      "op": "RETURNDATACOPY"
    },
    "5595": {
      "op": "RETURNDATASIZE"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5598": {
      "op": "REVERT"
    },
    "5599": {
      "op": "JUMPDEST"
    },
    "5600": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "POP",
      "path": "48"
    },
    "5601": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "POP",
      "path": "48"
    },
    "5602": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "POP",
      "path": "48"
    },
    "5603": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "POP",
      "path": "48"
    },
    "5604": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5606": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5607": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "RETURNDATASIZE",
      "path": "48"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5610": {
      "op": "DUP2"
    },
    "5611": {
      "op": "LT"
    },
    "5612": {
      "op": "ISZERO"
    },
    "5613": {
      "op": "PUSH2",
      "value": "0x15F5"
    },
    "5616": {
      "op": "JUMPI"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5619": {
      "op": "DUP1"
    },
    "5620": {
      "op": "REVERT"
    },
    "5621": {
      "op": "JUMPDEST"
    },
    "5622": {
      "op": "POP"
    },
    "5623": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5624": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5625": {
      "op": "POP"
    },
    "5626": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5334,
        5347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5628": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5350,
        5363
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x160B"
    },
    "5631": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5290,
        5320
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5632": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5361,
        5362
      ],
      "op": "DUP6",
      "path": "48"
    },
    "5633": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5350,
        5363
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "5638": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5350,
        5360
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16FB"
    },
    "5641": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5350,
        5363
      ],
      "op": "AND",
      "path": "48"
    },
    "5642": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        5350,
        5363
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5643": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5350,
        5363
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5644": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5334,
        5363
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5645": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5334,
        5363
      ],
      "op": "POP",
      "path": "48"
    },
    "5646": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5389,
        5398
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5647": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5381,
        5386
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5648": {
      "branch": 90,
      "fn": "yWETH.withdrawETH",
      "offset": [
        5381,
        5398
      ],
      "op": "LT",
      "path": "48"
    },
    "5649": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5377,
        5449
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5650": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5377,
        5449
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1628"
    },
    "5653": {
      "branch": 90,
      "fn": "yWETH.withdrawETH",
      "offset": [
        5377,
        5449
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "5654": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5434
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 47,
      "value": "0x1625"
    },
    "5657": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5423
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5658": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5428,
        5433
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5659": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5434
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "5664": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5427
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D00"
    },
    "5667": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5434
      ],
      "op": "AND",
      "path": "48"
    },
    "5668": {
      "fn": "yWETH.withdrawETH",
      "jump": "i",
      "offset": [
        5422,
        5434
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5669": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5422,
        5434
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5670": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5418,
        5434
      ],
      "op": "SWAP5",
      "path": "48"
    },
    "5671": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5418,
        5434
      ],
      "op": "POP",
      "path": "48"
    },
    "5672": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5377,
        5449
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5673": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "POP",
      "path": "48"
    },
    "5674": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "POP",
      "path": "48"
    },
    "5675": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "POP",
      "path": "48"
    },
    "5676": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5133,
        5459
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5677": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 48,
      "value": "0x5"
    },
    "5679": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "5681": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5682": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5683": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5684": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5687": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "EXP",
      "path": "48"
    },
    "5688": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5689": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "DIV",
      "path": "48"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5482,
        5487
      ],
      "op": "AND",
      "path": "48"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5705": {
      "op": "SHL"
    },
    "5706": {
      "op": "SUB"
    },
    "5707": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5498
      ],
      "op": "AND",
      "path": "48"
    },
    "5708": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5498
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0x2E1A7D4D"
    },
    "5713": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5499,
        5500
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5714": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5716": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5717": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5718": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH4",
      "path": "48",
      "value": "0xFFFFFFFF"
    },
    "5723": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "AND",
      "path": "48"
    },
    "5724": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xE0"
    },
    "5726": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "SHL",
      "path": "48"
    },
    "5727": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5728": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5729": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "5731": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "ADD",
      "path": "48"
    },
    "5732": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5733": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5734": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5735": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5736": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5738": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "ADD",
      "path": "48"
    },
    "5739": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5740": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "POP",
      "path": "48"
    },
    "5741": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "POP",
      "path": "48"
    },
    "5742": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5744": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5746": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5747": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5748": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5749": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "SUB",
      "path": "48"
    },
    "5750": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5751": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5753": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP8",
      "path": "48"
    },
    "5754": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5755": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "EXTCODESIZE",
      "path": "48"
    },
    "5756": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5757": {
      "op": "DUP1"
    },
    "5758": {
      "op": "ISZERO"
    },
    "5759": {
      "op": "PUSH2",
      "value": "0x1687"
    },
    "5762": {
      "op": "JUMPI"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5765": {
      "op": "DUP1"
    },
    "5766": {
      "op": "REVERT"
    },
    "5767": {
      "op": "JUMPDEST"
    },
    "5768": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "POP",
      "path": "48"
    },
    "5769": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "GAS",
      "path": "48"
    },
    "5770": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "CALL",
      "path": "48"
    },
    "5771": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5469,
        5501
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5772": {
      "op": "DUP1"
    },
    "5773": {
      "op": "ISZERO"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x169B"
    },
    "5777": {
      "op": "JUMPI"
    },
    "5778": {
      "op": "RETURNDATASIZE"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5781": {
      "op": "DUP1"
    },
    "5782": {
      "op": "RETURNDATACOPY"
    },
    "5783": {
      "op": "RETURNDATASIZE"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5786": {
      "op": "REVERT"
    },
    "5787": {
      "op": "JUMPDEST"
    },
    "5788": {
      "op": "POP"
    },
    "5789": {
      "op": "POP"
    },
    "5790": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 49,
      "value": "0x40"
    },
    "5792": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5793": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5519,
        5529
      ],
      "op": "CALLER",
      "path": "48"
    },
    "5794": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5519,
        5529
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5797": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5798": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x8FC"
    },
    "5801": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "MUL",
      "path": "48"
    },
    "5802": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5803": {
      "op": "POP"
    },
    "5804": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5540,
        5541
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5805": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5540,
        5541
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5806": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "5808": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5809": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5810": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5811": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5540,
        5541
      ],
      "op": "DUP6",
      "path": "48"
    },
    "5812": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5519,
        5529
      ],
      "op": "DUP9",
      "path": "48"
    },
    "5813": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "DUP9",
      "path": "48"
    },
    "5814": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "CALL",
      "path": "48"
    },
    "5815": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "5816": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "POP",
      "path": "48"
    },
    "5817": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "POP",
      "path": "48"
    },
    "5818": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "POP",
      "path": "48"
    },
    "5819": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "POP",
      "path": "48"
    },
    "5820": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "5821": {
      "op": "DUP1"
    },
    "5822": {
      "op": "ISZERO"
    },
    "5823": {
      "op": "PUSH2",
      "value": "0x16CC"
    },
    "5826": {
      "op": "JUMPI"
    },
    "5827": {
      "op": "RETURNDATASIZE"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5830": {
      "op": "DUP1"
    },
    "5831": {
      "op": "RETURNDATACOPY"
    },
    "5832": {
      "op": "RETURNDATASIZE"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5835": {
      "op": "REVERT"
    },
    "5836": {
      "op": "JUMPDEST"
    },
    "5837": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        5511,
        5542
      ],
      "op": "POP",
      "path": "48"
    },
    "5838": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "POP",
      "path": "48"
    },
    "5839": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "POP",
      "path": "48"
    },
    "5840": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        4899,
        5549
      ],
      "op": "POP",
      "path": "48"
    },
    "5841": {
      "fn": "yWETH.withdrawETH",
      "jump": "o",
      "offset": [
        4899,
        5549
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5842": {
      "offset": [
        898,
        923
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5843": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        898,
        923
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x8"
    },
    "5845": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        898,
        923
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "offset": [
        898,
        923
      ],
      "op": "AND",
      "path": "48"
    },
    "5855": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        898,
        923
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5856": {
      "fn": "yWETH.withdrawETH",
      "jump": "o",
      "offset": [
        898,
        923
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5857": {
      "offset": [
        794,
        819
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5858": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        794,
        819
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x6"
    },
    "5860": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        794,
        819
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5861": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        794,
        819
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5862": {
      "fn": "yWETH.withdrawETH",
      "jump": "o",
      "offset": [
        794,
        819
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5863": {
      "offset": [
        768,
        787
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5864": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5866": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "SLOAD",
      "path": "48"
    },
    "5867": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x100"
    },
    "5870": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5871": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "DIV",
      "path": "48"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5878": {
      "op": "SHL"
    },
    "5879": {
      "op": "SUB"
    },
    "5880": {
      "offset": [
        768,
        787
      ],
      "op": "AND",
      "path": "48"
    },
    "5881": {
      "fn": "yWETH.withdrawETH",
      "offset": [
        768,
        787
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5882": {
      "fn": "yWETH.withdrawETH",
      "jump": "o",
      "offset": [
        768,
        787
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5883": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5884": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5886": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 50,
      "value": "0x173D"
    },
    "5889": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5890": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5891": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5893": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5894": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5895": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5897": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "5898": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5900": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5901": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5902": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "5904": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5905": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5906": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5908": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "5909": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5942": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5943": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5944": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "5945": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B6D"
    },
    "5948": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5949": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5950": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5951": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5956": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5957": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5959": {
      "branch": 101,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5960": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1753"
    },
    "5963": {
      "branch": 101,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0x0"
    },
    "5967": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA40"
    },
    "5970": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5971": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5972": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5973": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5974": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "5975": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5976": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5977": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5978": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5979": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 52,
      "value": "0x1760"
    },
    "5982": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5983": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "5984": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5985": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "5986": {
      "branch": 102,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "5987": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x173D"
    },
    "5990": {
      "branch": 102,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5991": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5993": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6000": {
      "op": "SHL"
    },
    "6001": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6002": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6003": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6005": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6006": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6007": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6008": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6010": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6011": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6012": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6013": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "6014": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6015": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6016": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6018": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6019": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6020": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6022": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6023": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6024": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209B"
    },
    "6027": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6029": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6030": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "6031": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6033": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6034": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6035": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "6036": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "6037": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6039": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6040": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6041": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6042": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "6043": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6044": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6045": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6046": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6048": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 53,
      "value": "0x173D"
    },
    "6051": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6052": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6053": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6055": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6056": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6057": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6059": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "6060": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6062": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6063": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6064": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "6066": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6067": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6068": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6070": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "6071": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "6104": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6105": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6106": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "6107": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DB4"
    },
    "6110": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6111": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6118": {
      "op": "SHL"
    },
    "6119": {
      "op": "SUB"
    },
    "6120": {
      "fn": "ERC20._mint",
      "offset": [
        6037,
        6058
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 54
    },
    "6121": {
      "branch": 91,
      "fn": "ERC20._mint",
      "offset": [
        6037,
        6058
      ],
      "op": "AND",
      "path": "3"
    },
    "6122": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x183A"
    },
    "6125": {
      "branch": 91,
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6126": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6128": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6129": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6136": {
      "op": "SHL"
    },
    "6137": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6138": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6139": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6141": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6143": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6144": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6145": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6146": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6148": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "6150": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6151": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6152": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6153": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "6186": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "6188": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6189": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6190": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6191": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6192": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6193": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6194": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6195": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6196": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SUB",
      "path": "3"
    },
    "6197": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "6199": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6200": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6201": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6202": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6203": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 55,
      "value": "0x2"
    },
    "6205": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6132
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6206": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184D"
    },
    "6209": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6210": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6143
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6211": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6216": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D00"
    },
    "6219": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "AND",
      "path": "3"
    },
    "6220": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6120,
        6144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6221": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6222": {
      "fn": "ERC20._mint",
      "offset": [
        6105,
        6117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6224": {
      "fn": "ERC20._mint",
      "offset": [
        6105,
        6144
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "op": "SUB"
    },
    "6233": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 56
    },
    "6234": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "AND",
      "path": "3"
    },
    "6235": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6237": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6238": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6239": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6240": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6242": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6243": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6244": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6245": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6247": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6248": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6249": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6250": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1879"
    },
    "6253": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6254": {
      "fn": "ERC20._mint",
      "offset": [
        6198,
        6204
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6255": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6260": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D00"
    },
    "6263": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "AND",
      "path": "3"
    },
    "6264": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6175,
        6205
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6265": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6272": {
      "op": "SHL"
    },
    "6273": {
      "op": "SUB"
    },
    "6274": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6275": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "AND",
      "path": "3"
    },
    "6276": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6278": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6279": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6280": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6281": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6283": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6284": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6285": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6286": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6288": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6289": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6290": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6291": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6292": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6293": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6294": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6295": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 57
    },
    "6296": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6297": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6298": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6299": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6300": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6301": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6302": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6303": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6304": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6305": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6306": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6339": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6340": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6341": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6342": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SUB",
      "path": "3"
    },
    "6343": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6344": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6345": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "ADD",
      "path": "3"
    },
    "6346": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6347": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "LOG3",
      "path": "3"
    },
    "6348": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "POP",
      "path": "3"
    },
    "6349": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "POP",
      "path": "3"
    },
    "6350": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        5962,
        6264
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 58,
      "value": "0x40"
    },
    "6354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6355": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6362": {
      "op": "SHL"
    },
    "6363": {
      "op": "SUB"
    },
    "6364": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6365": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "6366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "6370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6374": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6375": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "6376": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6377": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6378": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6381": {
      "op": "DUP1"
    },
    "6382": {
      "op": "DUP4"
    },
    "6383": {
      "op": "SUB"
    },
    "6384": {
      "op": "SWAP1"
    },
    "6385": {
      "op": "SWAP2"
    },
    "6386": {
      "op": "ADD"
    },
    "6387": {
      "op": "DUP2"
    },
    "6388": {
      "op": "MSTORE"
    },
    "6389": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "6391": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6393": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "6394": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6395": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6396": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6399": {
      "op": "DUP2"
    },
    "6400": {
      "op": "ADD"
    },
    "6401": {
      "op": "DUP1"
    },
    "6402": {
      "op": "MLOAD"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6409": {
      "op": "SHL"
    },
    "6410": {
      "op": "SUB"
    },
    "6411": {
      "op": "AND"
    },
    "6412": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6419": {
      "op": "SHL"
    },
    "6420": {
      "op": "OR"
    },
    "6421": {
      "op": "SWAP1"
    },
    "6422": {
      "op": "MSTORE"
    },
    "6423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE7"
    },
    "6426": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6427": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6428": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6429": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E19"
    },
    "6432": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6433": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6434": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 59
    },
    "6435": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6436": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6437": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6444": {
      "op": "SHL"
    },
    "6445": {
      "op": "SUB"
    },
    "6446": {
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 60
    },
    "6447": {
      "branch": 92,
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "AND",
      "path": "3"
    },
    "6448": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x196A"
    },
    "6451": {
      "branch": 92,
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6452": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6454": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6461": {
      "op": "SHL"
    },
    "6462": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6463": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6464": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6466": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "6467": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6468": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6469": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6471": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "6472": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6473": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6474": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "6475": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6476": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6477": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "6479": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6480": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6481": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6483": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "6484": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6485": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212A"
    },
    "6488": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "6490": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6491": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6492": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6494": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "6495": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6496": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "6497": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "6498": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6500": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6501": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6502": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6503": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "6504": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6505": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6506": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6513": {
      "op": "SHL"
    },
    "6514": {
      "op": "SUB"
    },
    "6515": {
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 61
    },
    "6516": {
      "branch": 93,
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "AND",
      "path": "3"
    },
    "6517": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19AF"
    },
    "6520": {
      "branch": 93,
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6521": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6523": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6530": {
      "op": "SHL"
    },
    "6531": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6532": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6533": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6535": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "6536": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6537": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6538": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6540": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "6541": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6542": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6543": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "6544": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6545": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6546": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "6548": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6549": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6550": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6552": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "6553": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6554": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2053"
    },
    "6557": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "6559": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6560": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6561": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6563": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "6564": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6565": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "6566": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "6567": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6569": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6570": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6571": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6572": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "6573": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6574": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6575": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6582": {
      "op": "SHL"
    },
    "6583": {
      "op": "SUB"
    },
    "6584": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 62
    },
    "6585": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6586": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "AND",
      "path": "3"
    },
    "6587": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6589": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6590": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6591": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6592": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6594": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6596": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6597": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6598": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6599": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6601": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6602": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6603": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6604": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6605": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6606": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "AND",
      "path": "3"
    },
    "6607": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6608": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6609": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6610": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6611": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6612": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6613": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6614": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6615": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6616": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6617": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6618": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6619": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6620": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 63
    },
    "6621": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6622": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6623": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6624": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6625": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6626": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6627": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6660": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6661": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6662": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6663": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SUB",
      "path": "3"
    },
    "6664": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6665": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6666": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "ADD",
      "path": "3"
    },
    "6667": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6668": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "LOG3",
      "path": "3"
    },
    "6669": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "6670": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "6671": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "6672": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6673": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6680": {
      "op": "SHL"
    },
    "6681": {
      "op": "SUB"
    },
    "6682": {
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 64
    },
    "6683": {
      "branch": 94,
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "AND",
      "path": "3"
    },
    "6684": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A56"
    },
    "6687": {
      "branch": 94,
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6688": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6690": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6691": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6697": {
      "op": "SHL"
    },
    "6698": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6699": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6700": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6702": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "6703": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6704": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6705": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6707": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "6708": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6709": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6710": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "6711": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6712": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6713": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "6715": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6716": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6717": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6719": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "6720": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6721": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2105"
    },
    "6724": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "6726": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6727": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6728": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6730": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "6731": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6732": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "6733": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "6734": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6736": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6737": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6738": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6739": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "6740": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6741": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6742": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6749": {
      "op": "SHL"
    },
    "6750": {
      "op": "SUB"
    },
    "6751": {
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 65
    },
    "6752": {
      "branch": 95,
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "AND",
      "path": "3"
    },
    "6753": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A9B"
    },
    "6756": {
      "branch": 95,
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6757": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6759": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6766": {
      "op": "SHL"
    },
    "6767": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6768": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6769": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6771": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "6772": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6773": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6774": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6776": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "6777": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6778": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6779": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "6780": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6781": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6782": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "6784": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6785": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6786": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6788": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "6789": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6790": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200E"
    },
    "6793": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "6795": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6796": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6797": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6799": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "6800": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6801": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "6802": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "6803": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6805": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6806": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6807": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6808": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "6809": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6810": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6811": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6812": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 66,
      "value": "0x1ADE"
    },
    "6815": {
      "fn": "ERC20._transfer",
      "offset": [
        5521,
        5527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6816": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6818": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6819": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6820": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6822": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "6823": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6825": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6826": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6827": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "6829": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6830": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6831": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6833": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "6834": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2075"
    },
    "6837": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "6839": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6840": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "op": "SUB"
    },
    "6849": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6850": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "AND",
      "path": "3"
    },
    "6851": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5508
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6853": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6854": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6855": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6856": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6858": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6859": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6860": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6861": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6863": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6864": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6865": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6866": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6867": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6868": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6873": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6D"
    },
    "6876": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "AND",
      "path": "3"
    },
    "6877": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6878": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6885": {
      "op": "SHL"
    },
    "6886": {
      "op": "SUB"
    },
    "6887": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6888": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6889": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "AND",
      "path": "3"
    },
    "6890": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6892": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6893": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6894": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6895": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6897": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6898": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6899": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6900": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6902": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6903": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6904": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6905": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6906": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6907": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6908": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6909": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 67
    },
    "6910": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6911": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "AND",
      "path": "3"
    },
    "6912": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6913": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6914": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6915": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6916": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B13"
    },
    "6919": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6920": {
      "fn": "ERC20._transfer",
      "offset": [
        5628,
        5634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6921": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6926": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D00"
    },
    "6929": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "AND",
      "path": "3"
    },
    "6930": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6931": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6938": {
      "op": "SHL"
    },
    "6939": {
      "op": "SUB"
    },
    "6940": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6941": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6942": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "AND",
      "path": "3"
    },
    "6943": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6945": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6946": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6947": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6948": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6950": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6951": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6952": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6953": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6955": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6956": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6957": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6958": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6959": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6960": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6961": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6962": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6963": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 68
    },
    "6964": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6965": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6966": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6967": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6968": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6969": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6970": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6971": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6972": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6973": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6974": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "AND",
      "path": "3"
    },
    "6975": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6976": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7009": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7010": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7011": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7012": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7013": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SUB",
      "path": "3"
    },
    "7014": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "ADD",
      "path": "3"
    },
    "7015": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7016": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "LOG3",
      "path": "3"
    },
    "7017": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "7018": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "7019": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "7020": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7021": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7022": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7024": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 69
    },
    "7025": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7026": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7027": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7028": {
      "branch": 103,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7029": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BFC"
    },
    "7032": {
      "branch": 103,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7033": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7035": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7042": {
      "op": "SHL"
    },
    "7043": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7044": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7045": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7047": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7048": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7049": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7050": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7052": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7053": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7054": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7055": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7056": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7057": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7058": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7059": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7060": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7061": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7062": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7063": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7064": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7066": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7067": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7068": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7069": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7070": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7071": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7072": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7074": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7075": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7076": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7077": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7078": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7081": {
      "op": "JUMPDEST"
    },
    "7082": {
      "op": "DUP4"
    },
    "7083": {
      "op": "DUP2"
    },
    "7084": {
      "op": "LT"
    },
    "7085": {
      "op": "ISZERO"
    },
    "7086": {
      "op": "PUSH2",
      "value": "0x1BC1"
    },
    "7089": {
      "op": "JUMPI"
    },
    "7090": {
      "op": "DUP2"
    },
    "7091": {
      "op": "DUP2"
    },
    "7092": {
      "op": "ADD"
    },
    "7093": {
      "op": "MLOAD"
    },
    "7094": {
      "op": "DUP4"
    },
    "7095": {
      "op": "DUP3"
    },
    "7096": {
      "op": "ADD"
    },
    "7097": {
      "op": "MSTORE"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "PUSH2",
      "value": "0x1BA9"
    },
    "7104": {
      "op": "JUMP"
    },
    "7105": {
      "op": "JUMPDEST"
    },
    "7106": {
      "op": "POP"
    },
    "7107": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7108": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7109": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7110": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7111": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7112": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7113": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7114": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7115": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7116": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7118": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7119": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7120": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7121": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BEE"
    },
    "7124": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7125": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7126": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7127": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7128": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7129": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7130": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7132": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7133": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7135": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7136": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7139": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "7140": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7141": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "7142": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7143": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7144": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7145": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7147": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7148": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7149": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7150": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7151": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7152": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7153": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7154": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7155": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7156": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7158": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7159": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7160": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7161": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7162": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7163": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7164": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7165": {
      "op": "POP"
    },
    "7166": {
      "op": "POP"
    },
    "7167": {
      "op": "POP"
    },
    "7168": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7169": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "7170": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7171": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7172": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "op": "SUB"
    },
    "7181": {
      "fn": "ERC20._burn",
      "offset": [
        6658,
        6679
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 70
    },
    "7182": {
      "branch": 96,
      "fn": "ERC20._burn",
      "offset": [
        6658,
        6679
      ],
      "op": "AND",
      "path": "3"
    },
    "7183": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C49"
    },
    "7186": {
      "branch": 96,
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7187": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7189": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7196": {
      "op": "SHL"
    },
    "7197": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7198": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7199": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7201": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "7202": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7203": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7204": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7206": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "7207": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7208": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7209": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SUB",
      "path": "3"
    },
    "7210": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7211": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7212": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "7214": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7215": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7216": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7218": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "7219": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7220": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E4"
    },
    "7223": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "7225": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7226": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7227": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7229": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "7230": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7231": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "POP",
      "path": "3"
    },
    "7232": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "POP",
      "path": "3"
    },
    "7233": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7235": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7236": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7237": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7238": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SUB",
      "path": "3"
    },
    "7239": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7240": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7241": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7242": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x1C8C"
    },
    "7245": {
      "fn": "ERC20._burn",
      "offset": [
        6772,
        6778
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7246": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7248": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7249": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7250": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7252": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "ADD",
      "path": "3"
    },
    "7253": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7255": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7256": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7257": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "7259": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7260": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7261": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7263": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "ADD",
      "path": "3"
    },
    "7264": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2031"
    },
    "7267": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "7269": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7270": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7277": {
      "op": "SHL"
    },
    "7278": {
      "op": "SUB"
    },
    "7279": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7280": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "AND",
      "path": "3"
    },
    "7281": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7283": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7284": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7285": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7286": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7288": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7289": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7290": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7291": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7293": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7294": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7295": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7296": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7297": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7298": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7303": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6771
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6D"
    },
    "7306": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "AND",
      "path": "3"
    },
    "7307": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6749,
        6817
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7308": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "op": "SUB"
    },
    "7317": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7318": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "AND",
      "path": "3"
    },
    "7319": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7321": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7322": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7323": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7324": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7326": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7327": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7328": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7329": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7331": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7332": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7333": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6817
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7334": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6854
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0x2"
    },
    "7336": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7337": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB8"
    },
    "7340": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7341": {
      "fn": "ERC20._burn",
      "offset": [
        6859,
        6865
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7342": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7347": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16FB"
    },
    "7350": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "AND",
      "path": "3"
    },
    "7351": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6842,
        6866
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7352": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7353": {
      "fn": "ERC20._burn",
      "offset": [
        6827,
        6839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7355": {
      "fn": "ERC20._burn",
      "offset": [
        6827,
        6866
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7356": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x40"
    },
    "7358": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7359": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7360": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7361": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7362": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7363": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7364": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7365": {
      "fn": "ERC20._burn",
      "offset": [
        6907,
        6908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7367": {
      "fn": "ERC20._burn",
      "offset": [
        6907,
        6908
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7374": {
      "op": "SHL"
    },
    "7375": {
      "op": "SUB"
    },
    "7376": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7377": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "AND",
      "path": "3"
    },
    "7378": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7379": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7412": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7413": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7414": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7415": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SUB",
      "path": "3"
    },
    "7416": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7418": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "ADD",
      "path": "3"
    },
    "7419": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7420": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "LOG3",
      "path": "3"
    },
    "7421": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "POP",
      "path": "3"
    },
    "7422": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "POP",
      "path": "3"
    },
    "7423": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        6583,
        6925
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7424": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7425": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7427": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7428": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7429": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "7430": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 74
    },
    "7431": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7432": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "7433": {
      "branch": 104,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7434": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x173D"
    },
    "7437": {
      "branch": 104,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7438": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7440": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7441": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7448": {
      "op": "SHL"
    },
    "7449": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7450": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7451": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7453": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7455": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7456": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7457": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7458": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "7460": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7462": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7463": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7464": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7465": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "7498": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7500": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7501": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7502": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7503": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7504": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7505": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7506": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7507": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7508": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "7509": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "7511": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7512": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7513": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7514": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        842,
        1044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7515": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 75,
      "value": "0x40"
    },
    "7517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7518": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7525": {
      "op": "SHL"
    },
    "7526": {
      "op": "SUB"
    },
    "7527": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7528": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "AND",
      "path": "6"
    },
    "7530": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7532": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7533": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "7534": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7535": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7536": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "AND",
      "path": "6"
    },
    "7537": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7539": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7540": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "7541": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7542": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "7547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7549": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7551": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7552": {
      "op": "DUP1"
    },
    "7553": {
      "op": "DUP4"
    },
    "7554": {
      "op": "SUB"
    },
    "7555": {
      "op": "SWAP1"
    },
    "7556": {
      "op": "SWAP2"
    },
    "7557": {
      "op": "ADD"
    },
    "7558": {
      "op": "DUP2"
    },
    "7559": {
      "op": "MSTORE"
    },
    "7560": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x84"
    },
    "7562": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7563": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7564": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "7565": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7566": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7567": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7568": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7570": {
      "op": "DUP2"
    },
    "7571": {
      "op": "ADD"
    },
    "7572": {
      "op": "DUP1"
    },
    "7573": {
      "op": "MLOAD"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7580": {
      "op": "SHL"
    },
    "7581": {
      "op": "SUB"
    },
    "7582": {
      "op": "AND"
    },
    "7583": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7590": {
      "op": "SHL"
    },
    "7591": {
      "op": "OR"
    },
    "7592": {
      "op": "SWAP1"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16CC"
    },
    "7597": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1037
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7598": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        961,
        966
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7599": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        961,
        966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7600": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E19"
    },
    "7603": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        942,
        1037
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7604": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7605": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7607": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 76
    },
    "7608": {
      "branch": 105,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7609": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E03"
    },
    "7612": {
      "branch": 105,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7613": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7615": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7622": {
      "op": "SHL"
    },
    "7623": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7624": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7625": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7627": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7629": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7630": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7631": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7632": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7633": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7634": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7635": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7636": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7638": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7639": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7640": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7641": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7642": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7643": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7644": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7645": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7646": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7647": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7649": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7650": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7651": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7652": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7653": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7654": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7655": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7656": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7657": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7658": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7659": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7660": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7662": {
      "op": "DUP4"
    },
    "7663": {
      "op": "ISZERO"
    },
    "7664": {
      "op": "PUSH2",
      "value": "0x1BC1"
    },
    "7667": {
      "op": "JUMPI"
    },
    "7668": {
      "op": "DUP2"
    },
    "7669": {
      "op": "DUP2"
    },
    "7670": {
      "op": "ADD"
    },
    "7671": {
      "op": "MLOAD"
    },
    "7672": {
      "op": "DUP4"
    },
    "7673": {
      "op": "DUP3"
    },
    "7674": {
      "op": "ADD"
    },
    "7675": {
      "op": "MSTORE"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "PUSH2",
      "value": "0x1BA9"
    },
    "7682": {
      "op": "JUMP"
    },
    "7683": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7684": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "7685": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7687": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7688": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7689": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7690": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E0F"
    },
    "7693": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7694": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7695": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7696": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "7697": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "7698": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7699": {
      "op": "POP"
    },
    "7700": {
      "op": "POP"
    },
    "7701": {
      "op": "POP"
    },
    "7702": {
      "op": "POP"
    },
    "7703": {
      "op": "POP"
    },
    "7704": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7705": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7706": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 77,
      "value": "0x1E2B"
    },
    "7709": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "SUB"
    },
    "7718": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "7719": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD1"
    },
    "7722": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7723": {
      "branch": 97,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7724": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E7C"
    },
    "7727": {
      "branch": 97,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7728": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7730": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7731": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7738": {
      "op": "SHL"
    },
    "7739": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7740": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7741": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7743": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7745": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7746": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7747": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7748": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7750": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7752": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7753": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7754": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7755": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "7788": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7790": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7791": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7792": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7793": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7794": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7795": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7796": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7797": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7798": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "7799": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7801": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7802": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7803": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7804": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7805": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7807": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7809": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7816": {
      "op": "SHL"
    },
    "7817": {
      "op": "SUB"
    },
    "7818": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "7819": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7820": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7822": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7823": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7824": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7825": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7826": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7827": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7828": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7830": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "7831": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7832": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7833": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7834": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7835": {
      "op": "JUMPDEST"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7838": {
      "op": "DUP4"
    },
    "7839": {
      "op": "LT"
    },
    "7840": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "7843": {
      "op": "JUMPI"
    },
    "7844": {
      "op": "DUP1"
    },
    "7845": {
      "op": "MLOAD"
    },
    "7846": {
      "op": "DUP3"
    },
    "7847": {
      "op": "MSTORE"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7850": {
      "op": "NOT"
    },
    "7851": {
      "op": "SWAP1"
    },
    "7852": {
      "op": "SWAP3"
    },
    "7853": {
      "op": "ADD"
    },
    "7854": {
      "op": "SWAP2"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7857": {
      "op": "SWAP2"
    },
    "7858": {
      "op": "DUP3"
    },
    "7859": {
      "op": "ADD"
    },
    "7860": {
      "op": "SWAP2"
    },
    "7861": {
      "op": "ADD"
    },
    "7862": {
      "op": "PUSH2",
      "value": "0x1E9B"
    },
    "7865": {
      "op": "JUMP"
    },
    "7866": {
      "op": "JUMPDEST"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7869": {
      "op": "DUP4"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7872": {
      "op": "SUB"
    },
    "7873": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7876": {
      "op": "EXP"
    },
    "7877": {
      "op": "SUB"
    },
    "7878": {
      "op": "DUP1"
    },
    "7879": {
      "op": "NOT"
    },
    "7880": {
      "op": "DUP3"
    },
    "7881": {
      "op": "MLOAD"
    },
    "7882": {
      "op": "AND"
    },
    "7883": {
      "op": "DUP2"
    },
    "7884": {
      "op": "DUP5"
    },
    "7885": {
      "op": "MLOAD"
    },
    "7886": {
      "op": "AND"
    },
    "7887": {
      "op": "DUP1"
    },
    "7888": {
      "op": "DUP3"
    },
    "7889": {
      "op": "OR"
    },
    "7890": {
      "op": "DUP6"
    },
    "7891": {
      "op": "MSTORE"
    },
    "7892": {
      "op": "POP"
    },
    "7893": {
      "op": "POP"
    },
    "7894": {
      "op": "POP"
    },
    "7895": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7896": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7897": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7898": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7899": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7900": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "7901": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7902": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7903": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7904": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7906": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7908": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7909": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7910": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7911": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "7912": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7913": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7915": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7916": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "7917": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "7918": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7919": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7920": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7921": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7922": {
      "op": "DUP1"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7925": {
      "op": "DUP2"
    },
    "7926": {
      "op": "EQ"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x1F1C"
    },
    "7930": {
      "op": "JUMPI"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7933": {
      "op": "MLOAD"
    },
    "7934": {
      "op": "SWAP2"
    },
    "7935": {
      "op": "POP"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7938": {
      "op": "NOT"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7941": {
      "op": "RETURNDATASIZE"
    },
    "7942": {
      "op": "ADD"
    },
    "7943": {
      "op": "AND"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "ADD"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7948": {
      "op": "MSTORE"
    },
    "7949": {
      "op": "RETURNDATASIZE"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "MSTORE"
    },
    "7952": {
      "op": "RETURNDATASIZE"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7957": {
      "op": "DUP5"
    },
    "7958": {
      "op": "ADD"
    },
    "7959": {
      "op": "RETURNDATACOPY"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "7963": {
      "op": "JUMP"
    },
    "7964": {
      "op": "JUMPDEST"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7967": {
      "op": "SWAP2"
    },
    "7968": {
      "op": "POP"
    },
    "7969": {
      "op": "JUMPDEST"
    },
    "7970": {
      "op": "POP"
    },
    "7971": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7972": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7973": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7974": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7975": {
      "branch": 98,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 78
    },
    "7976": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F78"
    },
    "7979": {
      "branch": 98,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7980": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7982": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7983": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7990": {
      "op": "SHL"
    },
    "7991": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7992": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7993": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7995": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7997": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7998": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "7999": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8000": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8001": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8002": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8004": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8005": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8006": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8007": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8040": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8042": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8043": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8044": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8045": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8046": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8047": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8048": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8049": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8050": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8051": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8053": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8054": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8055": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8056": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8057": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8058": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8059": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8060": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16CC"
    },
    "8063": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8064": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 79
    },
    "8065": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8066": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8068": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8069": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8070": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8073": {
      "op": "DUP2"
    },
    "8074": {
      "op": "LT"
    },
    "8075": {
      "op": "ISZERO"
    },
    "8076": {
      "op": "PUSH2",
      "value": "0x1F94"
    },
    "8079": {
      "op": "JUMPI"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8082": {
      "op": "DUP1"
    },
    "8083": {
      "op": "REVERT"
    },
    "8084": {
      "op": "JUMPDEST"
    },
    "8085": {
      "op": "POP"
    },
    "8086": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8087": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16CC"
    },
    "8090": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8091": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8093": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8100": {
      "op": "SHL"
    },
    "8101": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8102": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8103": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8105": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8106": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8107": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8108": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8110": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8111": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8112": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8113": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8114": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8115": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8116": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8118": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8119": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8120": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8122": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8123": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8124": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x214E"
    },
    "8127": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8129": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8130": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8131": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8133": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8134": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8135": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8136": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8137": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8139": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8140": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8141": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8142": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8143": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8144": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8145": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8146": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8148": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8149": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8150": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8183": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 80
    },
    "8184": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8185": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8186": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8187": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8188": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8189": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2005"
    },
    "8192": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8193": {
      "op": "POP"
    },
    "8194": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8195": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8196": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8197": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8198": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8199": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8200": {
      "op": "POP"
    },
    "8201": {
      "op": "POP"
    },
    "8202": {
      "op": "POP"
    },
    "8203": {
      "op": "POP"
    },
    "8204": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "4f871ffe5e5bd2053e2396ac103206b2f41afac2",
  "source": "pragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelinV2/contracts/ownership/Ownable.sol\";\n\nimport \"../../interfaces/weth/WETH.sol\";\nimport \"../../interfaces/yearn/IController.sol\";\n\n// NOTE: The name of this contract was modified from yVault so as not to conflict with yVault.sol\ncontract yWETH is ERC20, ERC20Detailed {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    IERC20 public token;\n\n    uint256 public min = 9990;\n    uint256 public constant max = 10000;\n\n    address public governance;\n    address public controller;\n\n    constructor(address _token, address _controller)\n        public\n        ERC20Detailed(\n            string(abi.encodePacked(\"yearn \", ERC20Detailed(_token).name())),\n            string(abi.encodePacked(\"y\", ERC20Detailed(_token).symbol())),\n            ERC20Detailed(_token).decimals()\n        )\n    {\n        token = IERC20(_token);\n        governance = msg.sender;\n        controller = _controller;\n    }\n\n    function balance() public view returns (uint256) {\n        return token.balanceOf(address(this)).add(IController(controller).balanceOf(address(token)));\n    }\n\n    function setMin(uint256 _min) external {\n        require(msg.sender == governance, \"!governance\");\n        min = _min;\n    }\n\n    function setGovernance(address _governance) public {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) public {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n\n    // Custom logic in here for how much the vault allows to be borrowed\n    // Sets minimum required on-hand to keep small withdrawals cheap\n    function available() public view returns (uint256) {\n        return token.balanceOf(address(this)).mul(min).div(max);\n    }\n\n    function earn() public {\n        uint256 _bal = available();\n        token.safeTransfer(controller, _bal);\n        IController(controller).earn(address(token), _bal);\n    }\n\n    function depositAll() external {\n        deposit(token.balanceOf(msg.sender));\n    }\n\n    function deposit(uint256 _amount) public {\n        uint256 _pool = balance();\n        uint256 _before = token.balanceOf(address(this));\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n        uint256 _after = token.balanceOf(address(this));\n        _amount = _after.sub(_before); // Additional check for deflationary tokens\n        uint256 shares = 0;\n        if (totalSupply() == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount.mul(totalSupply())).div(_pool);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    function depositETH() public payable {\n        uint256 _pool = balance();\n        uint256 _before = token.balanceOf(address(this));\n        uint256 _amount = msg.value;\n        WETH(address(token)).deposit.value(_amount)();\n        uint256 _after = token.balanceOf(address(this));\n        _amount = _after.sub(_before); // Additional check for deflationary tokens\n        uint256 shares = 0;\n        if (totalSupply() == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount.mul(totalSupply())).div(_pool);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    function withdrawAll() external {\n        withdraw(balanceOf(msg.sender));\n    }\n\n    function withdrawAllETH() external {\n        withdrawETH(balanceOf(msg.sender));\n    }\n\n    // Used to swap any borrowed reserve over the debt limit to liquidate to 'token'\n    function harvest(address reserve, uint256 amount) external {\n        require(msg.sender == controller, \"!controller\");\n        require(reserve != address(token), \"token\");\n        IERC20(reserve).safeTransfer(controller, amount);\n    }\n\n    // No rebalance implementation for lower fees and faster swaps\n    function withdraw(uint256 _shares) public {\n        uint256 r = (balance().mul(_shares)).div(totalSupply());\n        _burn(msg.sender, _shares);\n\n        // Check balance\n        uint256 b = token.balanceOf(address(this));\n        if (b < r) {\n            uint256 _withdraw = r.sub(b);\n            IController(controller).withdraw(address(token), _withdraw);\n            uint256 _after = token.balanceOf(address(this));\n            uint256 _diff = _after.sub(b);\n            if (_diff < _withdraw) {\n                r = b.add(_diff);\n            }\n        }\n\n        token.safeTransfer(msg.sender, r);\n    }\n\n    // No rebalance implementation for lower fees and faster swaps\n    function withdrawETH(uint256 _shares) public {\n        uint256 r = (balance().mul(_shares)).div(totalSupply());\n        _burn(msg.sender, _shares);\n\n        // Check balance\n        uint256 b = token.balanceOf(address(this));\n        if (b < r) {\n            uint256 _withdraw = r.sub(b);\n            IController(controller).withdraw(address(token), _withdraw);\n            uint256 _after = token.balanceOf(address(this));\n            uint256 _diff = _after.sub(b);\n            if (_diff < _withdraw) {\n                r = b.add(_diff);\n            }\n        }\n\n        WETH(address(token)).withdraw(r);\n        address(msg.sender).transfer(r);\n    }\n\n    function getPricePerFullShare() public view returns (uint256) {\n        return balance().mul(1e18).div(totalSupply());\n    }\n\n    function() external payable {\n        if (msg.sender != address(token)) {\n            depositETH();\n        }\n    }\n}\n",
  "sourceMap": "627:5175:48:-;;;815:4;794:25;;930:405;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:405:48;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;930:405:48;;;;;;;;1063:28;;-1:-1:-1;;;1063:28:48;;;;-1:-1:-1;;;;;1063:26:48;;;;;:28;;;;;;;;;;;;;;:26;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1063:28:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1063:28:48;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1063:28:48;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1063:28:48;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1063:28:48;;420:4:-1;411:14;;;;1063:28:48;;;;;411:14:-1;1063:28:48;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1063:28:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1036:56;;;;;;-1:-1:-1;;;1036:56:48;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1036:56:48;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1036:56:48;;;1150:6;-1:-1:-1;;;;;1136:28:48;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1136:30:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1136:30:48;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1136:30:48;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1136:30:48;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1136:30:48;;420:4:-1;411:14;;;;1136:30:48;;;;;411:14:-1;1136:30:48;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1136:30:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:53;;;;;;-1:-1:-1;;;1114:53:48;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1114:53:48;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1114:53:48;;;1196:6;-1:-1:-1;;;;;1182:30:48;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1182:32:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1182:32:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1182:32:48;504:12:4;;;;:5;;1182:32:48;504:12:4;;;;:::i;:::-;-1:-1:-1;526:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:4;:20;;-1:-1:-1;;552:20:4;;;;;;;;;;-1:-1:-1;;;;;;1239:22:48;552:20:4;-1:-1:-1;;;;;1239:22:48;;;;;;;-1:-1:-1;;1271:10:48;:23;;1284:10;-1:-1:-1;;;;;;1271:23:48;;;;;;;1304:10;:24;;;;;;;;;;;;627:5175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:5175:48;;;-1:-1:-1;627:5175:48;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/vaults/yWETH.sol",
  "type": "contract"
}