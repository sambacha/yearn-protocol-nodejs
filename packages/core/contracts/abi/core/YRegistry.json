{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addDelegatedVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addWrappedVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "getVaultInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isWrapped",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isDelegated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaultsInfo",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "vaultsAddresses",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "controllerArray",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokenArray",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "strategyArray",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "isWrappedArray",
          "type": "bool[]"
        },
        {
          "internalType": "bool[]",
          "name": "isDelegatedArray",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaultsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDelegatedVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "removeVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernance",
          "type": "address"
        }
      ],
      "name": "setPendingGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "12": "contracts/registries/YRegistry.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "72": "interfaces/yearn/IStrategy.sol",
    "74": "interfaces/yearn/IVault.sol",
    "76": "interfaces/yearn/IWrappedVault.sol",
    "8": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/EnumerableSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/registries/YRegistry.sol",
    "exportedSymbols": {
      "YRegistry": [
        2340
      ]
    },
    "id": 2341,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1619,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:12"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 1620,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 35424,
        "src": "59:53:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 1621,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 35788,
        "src": "113:53:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelinV2/contracts/utils/EnumerableSet.sol",
        "id": 1622,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 36123,
        "src": "167:59:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 1623,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 36182,
        "src": "228:48:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IStrategy.sol",
        "file": "../../interfaces/yearn/IStrategy.sol",
        "id": 1624,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 35876,
        "src": "277:46:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVault.sol",
        "file": "../../interfaces/yearn/IVault.sol",
        "id": 1625,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 36241,
        "src": "324:43:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IWrappedVault.sol",
        "file": "../../interfaces/yearn/IWrappedVault.sol",
        "id": 1626,
        "nodeType": "ImportDirective",
        "scope": 2341,
        "sourceUnit": 36279,
        "src": "368:50:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2340,
        "linearizedBaseContracts": [
          2340
        ],
        "name": "YRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1629,
            "libraryName": {
              "contractScope": null,
              "id": 1627,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "451:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "445:26:12",
            "typeName": {
              "id": 1628,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1632,
            "libraryName": {
              "contractScope": null,
              "id": 1630,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "482:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "476:27:12",
            "typeName": {
              "id": 1631,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "495:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1635,
            "libraryName": {
              "contractScope": null,
              "id": 1633,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36122,
              "src": "514:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$36122",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "508:49:12",
            "typeName": {
              "contractScope": null,
              "id": 1634,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35917,
              "src": "532:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$35917_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": false,
            "id": 1637,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "563:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1636,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1639,
            "name": "pendingGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "594:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1638,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1641,
            "name": "vaults",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "633:39:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 1640,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35917,
              "src": "633:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$35917_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1643,
            "name": "controllers",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "678:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 1642,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35917,
              "src": "678:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$35917_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1647,
            "name": "wrappedVaults",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "729:49:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1646,
              "keyType": {
                "id": 1644,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "737:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "729:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "748:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1651,
            "name": "isDelegatedVault",
            "nodeType": "VariableDeclaration",
            "scope": 2340,
            "src": "785:48:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1650,
              "keyType": {
                "id": 1648,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "785:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1649,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "804:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1669,
              "nodeType": "Block",
              "src": "880:107:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1657,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "898:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "921:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "913:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "913:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "898:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d697373696e6720476f7665726e616e6365",
                        "id": 1662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:20:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45ea615f0e9962cd03526c4a1fb700afb1f51eea208079264719f0955757cb9a",
                          "typeString": "literal_string \"Missing Governance\""
                        },
                        "value": "Missing Governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45ea615f0e9962cd03526c4a1fb700afb1f51eea208079264719f0955757cb9a",
                          "typeString": "literal_string \"Missing Governance\""
                        }
                      ],
                      "id": 1656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "890:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "890:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1664,
                  "nodeType": "ExpressionStatement",
                  "src": "890:56:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1665,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "956:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1666,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "969:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "956:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "956:24:12"
                }
              ]
            },
            "documentation": null,
            "id": 1670,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1670,
                  "src": "852:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "851:21:12"
            },
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:12"
            },
            "scope": 2340,
            "src": "840:147:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1677,
              "nodeType": "Block",
              "src": "1050:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "595265676973747279",
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1067:11:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_962d8d9332ec7ec42cc62fabb2b026ef6d00a731307b34a1dd08854b92809193",
                      "typeString": "literal_string \"YRegistry\""
                    },
                    "value": "YRegistry"
                  },
                  "functionReturnParameters": 1674,
                  "id": 1676,
                  "nodeType": "Return",
                  "src": "1060:18:12"
                }
              ]
            },
            "documentation": null,
            "id": 1678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:12"
            },
            "returnParameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1673,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "1035:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:15:12"
            },
            "scope": 2340,
            "src": "993:92:12",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1699,
              "nodeType": "Block",
              "src": "1147:131:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1686,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "1166:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1685,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "1157:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1688,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:16:12"
                },
                {
                  "assignments": [
                    1690,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1690,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 1699,
                      "src": "1185:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1185:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1694,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "1228:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1691,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1215:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1184:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1696,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1690,
                        "src": "1260:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1695,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1841,
                      "src": "1246:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:25:12"
                }
              ]
            },
            "documentation": null,
            "id": 1700,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1683,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1682,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2327,
                  "src": "1132:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:14:12"
              }
            ],
            "name": "addVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1680,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "1109:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:16:12"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:12"
            },
            "scope": 2340,
            "src": "1091:187:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1734,
              "nodeType": "Block",
              "src": "1347:414:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1708,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "1366:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1707,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "1357:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:16:12"
                },
                {
                  "assignments": [
                    1712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1712,
                      "name": "wrappedVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 1734,
                      "src": "1383:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1711,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1383:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1718,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1714,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1702,
                            "src": "1420:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1713,
                          "name": "IWrappedVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36278,
                          "src": "1406:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWrappedVault_$36278_$",
                            "typeString": "type(contract IWrappedVault)"
                          }
                        },
                        "id": 1715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWrappedVault_$36278",
                          "typeString": "contract IWrappedVault"
                        }
                      },
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36272,
                      "src": "1406:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1383:52:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1720,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "1461:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1721,
                        "name": "wrappedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "1469:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1719,
                      "name": "setWrappedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1810,
                      "src": "1445:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1723,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:37:12"
                },
                {
                  "assignments": [
                    1725,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1725,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 1734,
                      "src": "1494:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1724,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1729,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1727,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "1537:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1726,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1524:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1493:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1731,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1725,
                        "src": "1606:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1730,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1841,
                      "src": "1592:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1733,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:25:12"
                }
              ]
            },
            "documentation": null,
            "id": 1735,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1705,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1704,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2327,
                  "src": "1332:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:14:12"
              }
            ],
            "name": "addWrappedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1702,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1735,
                  "src": "1309:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1308:16:12"
            },
            "returnParameters": {
              "id": 1706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:12"
            },
            "scope": 2340,
            "src": "1284:477:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1760,
              "nodeType": "Block",
              "src": "1832:340:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1743,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "1851:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1742,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "1842:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1747,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "1886:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1746,
                      "name": "setDelegatedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "1868:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1749,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:25:12"
                },
                {
                  "assignments": [
                    1751,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1751,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 1760,
                      "src": "1905:18:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1905:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1755,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1753,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "1948:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1752,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1935:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 1754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1904:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1757,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1751,
                        "src": "2017:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1756,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1841,
                      "src": "2003:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1759,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:25:12"
                }
              ]
            },
            "documentation": null,
            "id": 1761,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1740,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1739,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2327,
                  "src": "1817:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1817:14:12"
              }
            ],
            "name": "addDelegatedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1737,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1761,
                  "src": "1794:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1793:16:12"
            },
            "returnParameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:0:12"
            },
            "scope": 2340,
            "src": "1767:405:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1788,
              "nodeType": "Block",
              "src": "2221:264:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1767,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "2239:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35739,
                          "src": "2239:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2239:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206973206e6f74206120636f6e7472616374",
                        "id": 1770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:25:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61d42454773f334f65e71e5c1fc77de617e9e1369b9ead17791de36a255dc42",
                          "typeString": "literal_string \"Vault is not a contract\""
                        },
                        "value": "Vault is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61d42454773f334f65e71e5c1fc77de617e9e1369b9ead17791de36a255dc42",
                          "typeString": "literal_string \"Vault is not a contract\""
                        }
                      ],
                      "id": 1766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2231:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1772,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:55:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2355:24:12",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1776,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "2372:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1774,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "2356:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36049,
                            "src": "2356:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                            }
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2356:23:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c7420616c726561647920657869737473",
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:22:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0999fb05a1dd68f23363525f070b845ff85dd897a9c25a08bb1f7d5db13d8b1",
                          "typeString": "literal_string \"Vault already exists\""
                        },
                        "value": "Vault already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0999fb05a1dd68f23363525f070b845ff85dd897a9c25a08bb1f7d5db13d8b1",
                          "typeString": "literal_string \"Vault already exists\""
                        }
                      ],
                      "id": 1773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2347:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:57:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1785,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "2471:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1782,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "2460:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35951,
                      "src": "2460:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$35917_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1787,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:18:12"
                }
              ]
            },
            "documentation": null,
            "id": 1789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "2196:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2195:16:12"
            },
            "returnParameters": {
              "id": 1765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:12"
            },
            "scope": 2340,
            "src": "2178:307:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "2564:133:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1797,
                            "name": "_wrappedVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1793,
                            "src": "2582:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35739,
                          "src": "2582:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "577261707065645661756c74206973206e6f74206120636f6e7472616374",
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:32:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2531cb441c3145628d812cd291e20ccdd41aa5e6af3a099b2b21f46e155d22fb",
                          "typeString": "literal_string \"WrappedVault is not a contract\""
                        },
                        "value": "WrappedVault is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2531cb441c3145628d812cd291e20ccdd41aa5e6af3a099b2b21f46e155d22fb",
                          "typeString": "literal_string \"WrappedVault is not a contract\""
                        }
                      ],
                      "id": 1796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2574:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2574:69:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "2574:69:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1803,
                        "name": "wrappedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "2653:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1805,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1804,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1791,
                        "src": "2667:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1806,
                      "name": "_wrappedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "2677:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2653:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:37:12"
                }
              ]
            },
            "documentation": null,
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWrappedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1791,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "2516:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1793,
                  "name": "_wrappedVault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "2532:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2515:39:12"
            },
            "returnParameters": {
              "id": 1795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2564:0:12"
            },
            "scope": 2340,
            "src": "2491:206:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1821,
              "nodeType": "Block",
              "src": "2755:114:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1815,
                        "name": "isDelegatedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1651,
                        "src": "2831:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1817,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1816,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "2848:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2831:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2858:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2831:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:31:12"
                }
              ]
            },
            "documentation": null,
            "id": 1822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDelegatedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1812,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "2730:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2730:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2729:16:12"
            },
            "returnParameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:0:12"
            },
            "scope": 2340,
            "src": "2703:166:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "2928:157:12",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2990:34:12",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1829,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "3012:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1827,
                          "name": "controllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "2991:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 1828,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contains",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36049,
                        "src": "2991:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                        }
                      },
                      "id": 1830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2991:33:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1839,
                  "nodeType": "IfStatement",
                  "src": "2986:93:12",
                  "trueBody": {
                    "id": 1838,
                    "nodeType": "Block",
                    "src": "3026:53:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1835,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1824,
                              "src": "3056:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1832,
                              "name": "controllers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1643,
                              "src": "3040:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35951,
                            "src": "3040:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$35917_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3040:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1837,
                        "nodeType": "ExpressionStatement",
                        "src": "3040:28:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1841,
                  "src": "2898:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2897:21:12"
            },
            "returnParameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:0:12"
            },
            "scope": 2340,
            "src": "2875:210:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1854,
              "nodeType": "Block",
              "src": "3150:38:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1851,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1843,
                        "src": "3174:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1848,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "3160:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36032,
                      "src": "3160:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$35917_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:21:12"
                }
              ]
            },
            "documentation": null,
            "id": 1855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1846,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1845,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2327,
                  "src": "3135:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3135:14:12"
              }
            ],
            "name": "removeVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1843,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1855,
                  "src": "3112:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3112:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3111:16:12"
            },
            "returnParameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:0:12"
            },
            "scope": 2340,
            "src": "3091:97:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2038,
              "nodeType": "Block",
              "src": "3440:1652:12",
              "statements": [
                {
                  "assignments": [
                    1871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1871,
                      "name": "vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 2038,
                      "src": "3450:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1870,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3450:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1873,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1872,
                    "name": "_vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1857,
                    "src": "3466:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1874,
                      "name": "isWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1866,
                      "src": "3482:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1875,
                          "name": "wrappedVaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1647,
                          "src": "3494:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 1877,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1876,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1857,
                          "src": "3508:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3494:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3527:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3519:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3519:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3494:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3482:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1883,
                  "nodeType": "ExpressionStatement",
                  "src": "3482:47:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1884,
                    "name": "isWrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1866,
                    "src": "3543:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1892,
                  "nodeType": "IfStatement",
                  "src": "3539:69:12",
                  "trueBody": {
                    "id": 1891,
                    "nodeType": "Block",
                    "src": "3554:54:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1885,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "3568:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1886,
                              "name": "wrappedVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1647,
                              "src": "3576:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1888,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1887,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "3590:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3576:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3568:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1890,
                        "nodeType": "ExpressionStatement",
                        "src": "3568:29:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1893,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1868,
                      "src": "3617:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1894,
                        "name": "isDelegatedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1651,
                        "src": "3631:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1896,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1895,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "3648:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3631:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3617:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1898,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:37:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1899,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "3703:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1901,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "3723:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1900,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36240,
                            "src": "3716:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$36240_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3716:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$36240",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36213,
                        "src": "3716:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 1904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3716:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3703:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "3703:39:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1907,
                      "name": "isWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1866,
                      "src": "3756:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1909,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1871,
                                "src": "3776:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1908,
                              "name": "IVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36240,
                              "src": "3769:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVault_$36240_$",
                                "typeString": "type(contract IVault)"
                              }
                            },
                            "id": 1910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3769:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$36240",
                              "typeString": "contract IVault"
                            }
                          },
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "underlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36193,
                          "src": "3769:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:26:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3807:1:12",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3799:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3799:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3769:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3756:53:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1935,
                    "nodeType": "Block",
                    "src": "3897:54:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1927,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "3911:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1929,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1871,
                                    "src": "3926:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1928,
                                  "name": "IVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36240,
                                  "src": "3919:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$36240_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 1930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3919:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$36240",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36188,
                              "src": "3919:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3919:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3911:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1934,
                        "nodeType": "ExpressionStatement",
                        "src": "3911:29:12"
                      }
                    ]
                  },
                  "id": 1936,
                  "nodeType": "IfStatement",
                  "src": "3752:199:12",
                  "trueBody": {
                    "id": 1926,
                    "nodeType": "Block",
                    "src": "3811:80:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1918,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "3825:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1920,
                                    "name": "_vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1857,
                                    "src": "3840:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1919,
                                  "name": "IVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36240,
                                  "src": "3833:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$36240_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 1921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3833:14:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$36240",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36188,
                              "src": "3833:20:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3833:22:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3825:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1925,
                        "nodeType": "ExpressionStatement",
                        "src": "3825:30:12"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1937,
                    "name": "isDelegated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1868,
                    "src": "3965:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1957,
                    "nodeType": "Block",
                    "src": "4061:77:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1948,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "4075:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1953,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "4121:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1950,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1860,
                                    "src": "4098:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1949,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36181,
                                  "src": "4086:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4086:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$36181",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36171,
                              "src": "4086:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4086:41:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4075:52:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1956,
                        "nodeType": "ExpressionStatement",
                        "src": "4075:52:12"
                      }
                    ]
                  },
                  "id": 1958,
                  "nodeType": "IfStatement",
                  "src": "3961:177:12",
                  "trueBody": {
                    "id": 1947,
                    "nodeType": "Block",
                    "src": "3978:77:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1938,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "3992:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1943,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1871,
                                "src": "4038:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1940,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1860,
                                    "src": "4015:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1939,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36181,
                                  "src": "4003:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4003:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$36181",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36171,
                              "src": "4003:34:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4003:41:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3992:52:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1946,
                        "nodeType": "ExpressionStatement",
                        "src": "3992:52:12"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1960,
                      "name": "controllerVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 2038,
                      "src": "4205:23:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4205:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1964,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4231:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4205:36:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1965,
                    "name": "isDelegated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1868,
                    "src": "4255:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1985,
                    "nodeType": "Block",
                    "src": "4357:80:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1976,
                            "name": "controllerVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "4371:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1981,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "4420:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1978,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1860,
                                    "src": "4401:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1977,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36181,
                                  "src": "4389:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4389:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$36181",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaults",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36164,
                              "src": "4389:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4389:37:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4371:55:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1984,
                        "nodeType": "ExpressionStatement",
                        "src": "4371:55:12"
                      }
                    ]
                  },
                  "id": 1986,
                  "nodeType": "IfStatement",
                  "src": "4251:186:12",
                  "trueBody": {
                    "id": 1975,
                    "nodeType": "Block",
                    "src": "4268:83:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1966,
                            "name": "controllerVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "4282:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1971,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1864,
                                "src": "4331:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1968,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1860,
                                    "src": "4312:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1967,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36181,
                                  "src": "4300:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4300:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$36181",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaults",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36164,
                              "src": "4300:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4300:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4282:58:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1974,
                        "nodeType": "ExpressionStatement",
                        "src": "4282:58:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1988,
                          "name": "controllerVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1960,
                          "src": "4454:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1989,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1871,
                          "src": "4473:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4454:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726f6c6c6572207661756c74206164647265737320646f6573206e6f74206d61746368",
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4480:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3946f4f7066d800a56f1ef8b6cdc6f269876ddfdb66ed23918c2e46c8810de4",
                          "typeString": "literal_string \"Controller vault address does not match\""
                        },
                        "value": "Controller vault address does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3946f4f7066d800a56f1ef8b6cdc6f269876ddfdb66ed23918c2e46c8810de4",
                          "typeString": "literal_string \"Controller vault address does not match\""
                        }
                      ],
                      "id": 1987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4446:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4446:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1993,
                  "nodeType": "ExpressionStatement",
                  "src": "4446:76:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1994,
                    "name": "isWrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1866,
                    "src": "4626:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "id": 2012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4823:12:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2011,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "4824:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 2029,
                    "nodeType": "IfStatement",
                    "src": "4819:196:12",
                    "trueBody": {
                      "id": 2028,
                      "nodeType": "Block",
                      "src": "4837:178:12",
                      "statements": [
                        {
                          "assignments": [
                            2014
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2014,
                              "name": "strategyToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 2028,
                              "src": "4851:21:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "typeName": {
                                "id": 2013,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4851:7:12",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2020,
                          "initialValue": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2016,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1864,
                                    "src": "4885:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2015,
                                  "name": "IStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35875,
                                  "src": "4875:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStrategy_$35875_$",
                                    "typeString": "type(contract IStrategy)"
                                  }
                                },
                                "id": 2017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4875:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$35875",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "want",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35843,
                              "src": "4875:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 2019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4875:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4851:50:12"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2022,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1862,
                                  "src": "4923:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2023,
                                  "name": "strategyToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2014,
                                  "src": "4932:13:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4923:22:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "537472617465677920746f6b656e206164647265737320646f6573206e6f74206d61746368",
                                "id": 2025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4947:39:12",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_14f8402d4f48397d7db894569fad1db16049c3e7d55c0e69233eca05d54ffe87",
                                  "typeString": "literal_string \"Strategy token address does not match\""
                                },
                                "value": "Strategy token address does not match"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_14f8402d4f48397d7db894569fad1db16049c3e7d55c0e69233eca05d54ffe87",
                                  "typeString": "literal_string \"Strategy token address does not match\""
                                }
                              ],
                              "id": 2021,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                37935,
                                37936
                              ],
                              "referencedDeclaration": 37936,
                              "src": "4915:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4915:72:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2027,
                          "nodeType": "ExpressionStatement",
                          "src": "4915:72:12"
                        }
                      ]
                    }
                  },
                  "id": 2030,
                  "nodeType": "IfStatement",
                  "src": "4622:393:12",
                  "trueBody": {
                    "id": 2010,
                    "nodeType": "Block",
                    "src": "4637:176:12",
                    "statements": [
                      {
                        "assignments": [
                          1996
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1996,
                            "name": "underlying",
                            "nodeType": "VariableDeclaration",
                            "scope": 2010,
                            "src": "4651:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1995,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4651:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2002,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1998,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1871,
                                  "src": "4679:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1997,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36240,
                                "src": "4672:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$36240_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4672:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$36240",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 2000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36193,
                            "src": "4672:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4672:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4651:47:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2004,
                                "name": "underlying",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1996,
                                "src": "4720:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2005,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "4734:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4720:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "577261707065645661756c7420746f6b656e206164647265737320646f6573206e6f74206d61746368",
                              "id": 2007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:43:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a64613fd1e5f13c533499913111df92eadd390fdeec2e499f6fdbd914dd6017",
                                "typeString": "literal_string \"WrappedVault token address does not match\""
                              },
                              "value": "WrappedVault token address does not match"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a64613fd1e5f13c533499913111df92eadd390fdeec2e499f6fdbd914dd6017",
                                "typeString": "literal_string \"WrappedVault token address does not match\""
                              }
                            ],
                            "id": 2003,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              37935,
                              37936
                            ],
                            "referencedDeclaration": 37936,
                            "src": "4712:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4712:73:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2009,
                        "nodeType": "ExpressionStatement",
                        "src": "4712:73:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2031,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1860,
                        "src": "5033:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2032,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "5045:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2033,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "5052:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2034,
                        "name": "isWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1866,
                        "src": "5062:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2035,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "5073:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2036,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5032:53:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 1869,
                  "id": 2037,
                  "nodeType": "Return",
                  "src": "5025:60:12"
                }
              ]
            },
            "documentation": null,
            "id": 2039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1857,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3216:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3216:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3215:16:12"
            },
            "returnParameters": {
              "id": 1869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1860,
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3292:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1862,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3324:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3351:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1866,
                  "name": "isWrapped",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3381:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1868,
                  "name": "isDelegated",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "3409:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:157:12"
            },
            "scope": 2340,
            "src": "3194:1898:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2051,
              "nodeType": "Block",
              "src": "5191:41:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2048,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "5219:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "5208:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36121,
                      "src": "5208:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5208:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2045,
                  "id": 2050,
                  "nodeType": "Return",
                  "src": "5201:24:12"
                }
              ]
            },
            "documentation": null,
            "id": 2052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2041,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2052,
                  "src": "5138:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5138:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5137:15:12"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "name": "vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 2052,
                  "src": "5176:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5176:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5175:15:12"
            },
            "scope": 2340,
            "src": "5120:112:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "5297:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "5314:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36106,
                      "src": "5314:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5314:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2056,
                  "id": 2060,
                  "nodeType": "Return",
                  "src": "5307:22:12"
                }
              ]
            },
            "documentation": null,
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5262:2:12"
            },
            "returnParameters": {
              "id": 2056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2055,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "5288:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5287:9:12"
            },
            "scope": 2340,
            "src": "5238:98:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2105,
              "nodeType": "Block",
              "src": "5404:216:12",
              "statements": [
                {
                  "assignments": [
                    2071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2071,
                      "name": "vaultsArray",
                      "nodeType": "VariableDeclaration",
                      "scope": 2105,
                      "src": "5414:28:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5414:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2070,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5414:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2079,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2075,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "5459:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36106,
                          "src": "5459:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5459:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5445:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5449:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2073,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5449:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5445:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5414:61:12"
                },
                {
                  "body": {
                    "id": 2101,
                    "nodeType": "Block",
                    "src": "5531:55:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2092,
                              "name": "vaultsArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "5545:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2094,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2093,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2081,
                              "src": "5557:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5545:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2097,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2081,
                                "src": "5573:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2095,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1641,
                                "src": "5562:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36121,
                              "src": "5562:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                              }
                            },
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5562:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5545:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2100,
                        "nodeType": "ExpressionStatement",
                        "src": "5545:30:12"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2084,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2081,
                      "src": "5505:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2085,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "5509:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36106,
                        "src": "5509:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5509:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5505:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2102,
                  "initializationExpression": {
                    "assignments": [
                      2081
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2081,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2102,
                        "src": "5490:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2080,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5490:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2083,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5502:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5490:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5526:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2089,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2081,
                        "src": "5526:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2091,
                    "nodeType": "ExpressionStatement",
                    "src": "5526:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "5485:101:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2103,
                    "name": "vaultsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2071,
                    "src": "5602:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 2067,
                  "id": 2104,
                  "nodeType": "Return",
                  "src": "5595:18:12"
                }
              ]
            },
            "documentation": null,
            "id": 2106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5360:2:12"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2106,
                  "src": "5386:16:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2064,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5386:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2065,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5386:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5385:18:12"
            },
            "scope": 2340,
            "src": "5342:278:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "5872:163:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2121,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2111,
                          "src": "5883:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2122,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2113,
                          "src": "5895:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2123,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2115,
                          "src": "5902:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2124,
                          "name": "isWrapped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "5912:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2125,
                          "name": "isDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2119,
                          "src": "5923:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2126,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5882:53:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,address,address,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2128,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2108,
                          "src": "5951:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2127,
                        "name": "getVaultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "5938:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                          "typeString": "function (address) view returns (address,address,address,bool,bool)"
                        }
                      },
                      "id": 2129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5938:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,address,address,bool,bool)"
                      }
                    },
                    "src": "5882:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "5882:76:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2132,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2111,
                        "src": "5976:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2133,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "5988:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2134,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "5995:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2135,
                        "name": "isWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "6005:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2136,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "6016:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2137,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5975:53:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 2120,
                  "id": 2138,
                  "nodeType": "Return",
                  "src": "5968:60:12"
                }
              ]
            },
            "documentation": null,
            "id": 2140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5648:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5647:16:12"
            },
            "returnParameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2111,
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5724:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5724:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2113,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5756:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2115,
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5783:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5783:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "name": "isWrapped",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5813:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5813:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "name": "isDelegated",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "5841:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5841:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5710:157:12"
            },
            "scope": 2340,
            "src": "5626:409:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2291,
              "nodeType": "Block",
              "src": "6390:809:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2161,
                      "name": "vaultsAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "6400:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2165,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6432:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2166,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6432:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6432:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6418:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6422:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2163,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6422:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6418:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6400:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "6400:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2171,
                      "name": "controllerArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2147,
                      "src": "6458:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2175,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6490:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6490:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6490:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6476:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2172,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6480:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2173,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6480:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 2178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6476:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6458:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2180,
                  "nodeType": "ExpressionStatement",
                  "src": "6458:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2181,
                      "name": "tokenArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "6516:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2185,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6543:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6543:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6543:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6529:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6533:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2183,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6533:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 2188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6529:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6516:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "6516:43:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2191,
                      "name": "strategyArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2153,
                      "src": "6569:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2195,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6599:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6599:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6599:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6585:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6589:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2193,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6589:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6585:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6569:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "6569:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2201,
                      "name": "isWrappedArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2156,
                      "src": "6625:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2205,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6653:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6653:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6653:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6642:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2202,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6646:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2203,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6646:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6642:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "6625:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 2210,
                  "nodeType": "ExpressionStatement",
                  "src": "6625:44:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2211,
                      "name": "isDelegatedArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "6679:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2215,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1641,
                              "src": "6709:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 2216,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36106,
                            "src": "6709:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6709:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6698:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2212,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6702:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2213,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6702:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6698:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "6679:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:46:12"
                },
                {
                  "body": {
                    "id": 2289,
                    "nodeType": "Block",
                    "src": "6782:411:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2233,
                              "name": "vaultsAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "6796:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2235,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2234,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "6812:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6796:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2238,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2222,
                                "src": "6828:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2236,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1641,
                                "src": "6817:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 2237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36121,
                              "src": "6817:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                              }
                            },
                            "id": 2239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6817:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6796:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2241,
                        "nodeType": "ExpressionStatement",
                        "src": "6796:34:12"
                      },
                      {
                        "assignments": [
                          2243,
                          2245,
                          2247,
                          2249,
                          2251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2243,
                            "name": "_controller",
                            "nodeType": "VariableDeclaration",
                            "scope": 2289,
                            "src": "6845:19:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2242,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6845:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2245,
                            "name": "_token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2289,
                            "src": "6866:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6866:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2247,
                            "name": "_strategy",
                            "nodeType": "VariableDeclaration",
                            "scope": 2289,
                            "src": "6882:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2246,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6882:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2249,
                            "name": "_isWrapped",
                            "nodeType": "VariableDeclaration",
                            "scope": 2289,
                            "src": "6901:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2248,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6901:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2251,
                            "name": "_isDelegated",
                            "nodeType": "VariableDeclaration",
                            "scope": 2289,
                            "src": "6918:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2250,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6918:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2258,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2255,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2222,
                                  "src": "6963:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2253,
                                  "name": "vaults",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1641,
                                  "src": "6952:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 2254,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "get",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36121,
                                "src": "6952:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                }
                              },
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6952:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2252,
                            "name": "getVaultData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "6939:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                              "typeString": "function (address) view returns (address,address,address,bool,bool)"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6939:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(address,address,address,bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6844:122:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2259,
                              "name": "controllerArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "6980:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2261,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2260,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "6996:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6980:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2262,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "7001:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6980:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2264,
                        "nodeType": "ExpressionStatement",
                        "src": "6980:32:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2265,
                              "name": "tokenArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2150,
                              "src": "7026:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2267,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2266,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "7037:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7026:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2268,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2245,
                            "src": "7042:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7026:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2270,
                        "nodeType": "ExpressionStatement",
                        "src": "7026:22:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2271,
                              "name": "strategyArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2153,
                              "src": "7062:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2273,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2272,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "7076:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7062:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2274,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2247,
                            "src": "7081:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7062:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2276,
                        "nodeType": "ExpressionStatement",
                        "src": "7062:28:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2277,
                              "name": "isWrappedArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "7104:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 2279,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2278,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "7119:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7104:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2280,
                            "name": "_isWrapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "7124:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7104:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2282,
                        "nodeType": "ExpressionStatement",
                        "src": "7104:30:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2283,
                              "name": "isDelegatedArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "7148:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 2285,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2284,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "7165:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7148:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2286,
                            "name": "_isDelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "7170:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7148:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2288,
                        "nodeType": "ExpressionStatement",
                        "src": "7148:34:12"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2225,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2222,
                      "src": "6756:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2226,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "6760:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$35917_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36106,
                        "src": "6760:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$35917_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$35917_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 2228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6760:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6756:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2290,
                  "initializationExpression": {
                    "assignments": [
                      2222
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2222,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2290,
                        "src": "6741:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6741:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2224,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6753:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6741:13:12"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6777:3:12",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2230,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "6777:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2232,
                    "nodeType": "ExpressionStatement",
                    "src": "6777:3:12"
                  },
                  "nodeType": "ForStatement",
                  "src": "6736:457:12"
                }
              ]
            },
            "documentation": null,
            "id": 2292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6063:2:12"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "name": "vaultsAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6126:32:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2142,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6126:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2143,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6126:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2147,
                  "name": "controllerArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6172:32:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2145,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6172:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2146,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6172:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2150,
                  "name": "tokenArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6218:27:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2148,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6218:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2149,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6218:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2153,
                  "name": "strategyArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6259:30:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2151,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6259:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2152,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6259:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2156,
                  "name": "isWrappedArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6303:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2154,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6303:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2155,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6303:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2159,
                  "name": "isDelegatedArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 2292,
                  "src": "6345:30:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2157,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6345:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6345:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6112:273:12"
            },
            "scope": 2340,
            "src": "6041:1158:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2303,
              "nodeType": "Block",
              "src": "7313:55:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2299,
                      "name": "pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "7323:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2300,
                      "name": "_pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "7343:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7323:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2302,
                  "nodeType": "ExpressionStatement",
                  "src": "7323:38:12"
                }
              ]
            },
            "documentation": null,
            "id": 2304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2297,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2296,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2327,
                  "src": "7298:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7298:14:12"
              }
            ],
            "name": "setPendingGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2294,
                  "name": "_pendingGovernance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "7261:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7260:28:12"
            },
            "returnParameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7313:0:12"
            },
            "scope": 2340,
            "src": "7231:137:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2314,
              "nodeType": "Block",
              "src": "7433:40:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2309,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "7443:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2310,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "7456:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7456:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7443:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2313,
                  "nodeType": "ExpressionStatement",
                  "src": "7443:23:12"
                }
              ]
            },
            "documentation": null,
            "id": 2315,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2307,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2306,
                  "name": "onlyPendingGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2339,
                  "src": "7411:21:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7411:21:12"
              }
            ],
            "name": "acceptGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7399:2:12"
            },
            "returnParameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7433:0:12"
            },
            "scope": 2340,
            "src": "7374:99:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "7503:104:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "7521:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7521:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2320,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1637,
                          "src": "7535:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7521:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920676f7665726e616e63652063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 2322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7547:41:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6edffbb24176ced5a1ec4d5f82731db711fe8dfda4eaf44f3d7f07ce857a6ce",
                          "typeString": "literal_string \"Only governance can call this function.\""
                        },
                        "value": "Only governance can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6edffbb24176ced5a1ec4d5f82731db711fe8dfda4eaf44f3d7f07ce857a6ce",
                          "typeString": "literal_string \"Only governance can call this function.\""
                        }
                      ],
                      "id": 2317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7513:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2324,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:76:12"
                },
                {
                  "id": 2325,
                  "nodeType": "PlaceholderStatement",
                  "src": "7599:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 2327,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7503:0:12"
            },
            "src": "7479:128:12",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2338,
              "nodeType": "Block",
              "src": "7643:118:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2330,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "7661:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7661:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2332,
                          "name": "pendingGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "7675:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7661:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792070656e64696e67476f7665726e616e63652063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7694:48:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dafc7e589c51c517cba86cb3d0e33ddc564c6dd07cf0c153696f5229b397087f",
                          "typeString": "literal_string \"Only pendingGovernance can call this function.\""
                        },
                        "value": "Only pendingGovernance can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dafc7e589c51c517cba86cb3d0e33ddc564c6dd07cf0c153696f5229b397087f",
                          "typeString": "literal_string \"Only pendingGovernance can call this function.\""
                        }
                      ],
                      "id": 2329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7653:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:90:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:90:12"
                },
                {
                  "id": 2337,
                  "nodeType": "PlaceholderStatement",
                  "src": "7753:1:12"
                }
              ]
            },
            "documentation": null,
            "id": 2339,
            "name": "onlyPendingGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7643:0:12"
            },
            "src": "7612:149:12",
            "visibility": "internal"
          }
        ],
        "scope": 2341,
        "src": "420:7343:12"
      }
    ],
    "src": "33:7731:12"
  },
  "bytecode": "",
  "bytecodeSha1": "25b57385479a394a8c15e970389a3c0e2d7778f5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "YRegistry",
  "coverageMap": {
    "branches": {
      "1": {},
      "12": {
        "YRegistry.getVaultData": {
          "64": [
            3756,
            3765,
            false
          ],
          "65": [
            3769,
            3809,
            false
          ],
          "66": [
            3965,
            3976,
            false
          ],
          "67": [
            4454,
            4478,
            true
          ],
          "68": [
            4626,
            4635,
            false
          ],
          "69": [
            4720,
            4739,
            true
          ],
          "70": [
            4824,
            4835,
            false
          ],
          "71": [
            4923,
            4945,
            true
          ]
        },
        "YRegistry.setController": {
          "72": [
            2991,
            3024,
            false
          ]
        },
        "YRegistry.setVault": {
          "62": [
            2239,
            2258,
            true
          ],
          "63": [
            2355,
            2379,
            true
          ]
        },
        "YRegistry.setWrappedVault": {
          "73": [
            2582,
            2608,
            true
          ]
        }
      },
      "66": {},
      "7": {},
      "72": {},
      "74": {},
      "76": {},
      "8": {
        "EnumerableSet.add": {
          "76": [
            1034,
            1054,
            false
          ]
        },
        "EnumerableSet.remove": {
          "74": [
            1438,
            1458,
            false
          ],
          "75": [
            1696,
            1722,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "12": {
        "YRegistry.acceptGovernance": {
          "5": [
            7443,
            7466
          ]
        },
        "YRegistry.addDelegatedVault": {
          "2": [
            1842,
            1858
          ],
          "3": [
            1868,
            1893
          ],
          "4": [
            2003,
            2028
          ]
        },
        "YRegistry.addVault": {
          "6": [
            1157,
            1173
          ]
        },
        "YRegistry.addWrappedVault": {
          "11": [
            1357,
            1373
          ],
          "12": [
            1445,
            1482
          ],
          "13": [
            1592,
            1617
          ]
        },
        "YRegistry.getName": {
          "1": [
            1060,
            1078
          ]
        },
        "YRegistry.getVault": {
          "28": [
            5201,
            5225
          ]
        },
        "YRegistry.getVaultData": {
          "34": [
            3482,
            3529
          ],
          "35": [
            3568,
            3597
          ],
          "36": [
            3617,
            3654
          ],
          "37": [
            3703,
            3742
          ],
          "38": [
            3825,
            3855
          ],
          "39": [
            3911,
            3940
          ],
          "40": [
            3992,
            4044
          ],
          "41": [
            4075,
            4127
          ],
          "42": [
            4282,
            4340
          ],
          "43": [
            4371,
            4426
          ],
          "44": [
            4446,
            4522
          ],
          "45": [
            4712,
            4785
          ],
          "46": [
            4915,
            4987
          ]
        },
        "YRegistry.getVaultInfo": {
          "27": [
            5882,
            5958
          ]
        },
        "YRegistry.getVaults": {
          "8": [
            5545,
            5575
          ],
          "9": [
            5526,
            5529
          ],
          "10": [
            5595,
            5613
          ]
        },
        "YRegistry.getVaultsInfo": {
          "14": [
            6400,
            6448
          ],
          "15": [
            6458,
            6506
          ],
          "16": [
            6516,
            6559
          ],
          "17": [
            6569,
            6615
          ],
          "18": [
            6625,
            6669
          ],
          "19": [
            6679,
            6725
          ],
          "20": [
            6796,
            6830
          ],
          "21": [
            6980,
            7012
          ],
          "22": [
            7026,
            7048
          ],
          "23": [
            7062,
            7090
          ],
          "24": [
            7104,
            7134
          ],
          "25": [
            7148,
            7182
          ],
          "26": [
            6777,
            6780
          ]
        },
        "YRegistry.getVaultsLength": {
          "7": [
            5307,
            5329
          ]
        },
        "YRegistry.removeVault": {
          "29": [
            3160,
            3181
          ]
        },
        "YRegistry.setController": {
          "47": [
            3040,
            3068
          ]
        },
        "YRegistry.setDelegatedVault": {
          "33": [
            2831,
            2862
          ]
        },
        "YRegistry.setPendingGovernance": {
          "0": [
            7323,
            7361
          ]
        },
        "YRegistry.setVault": {
          "30": [
            2231,
            2286
          ],
          "31": [
            2347,
            2404
          ],
          "32": [
            2460,
            2478
          ]
        },
        "YRegistry.setWrappedVault": {
          "50": [
            2574,
            2643
          ],
          "51": [
            2653,
            2690
          ]
        }
      },
      "66": {},
      "7": {
        "Address.isContract": {
          "58": [
            1238,
            1289
          ]
        }
      },
      "72": {},
      "74": {},
      "76": {},
      "8": {
        "EnumerableSet.add": {
          "60": [
            1069,
            1110
          ],
          "61": [
            1124,
            1135
          ]
        },
        "EnumerableSet.contains": {
          "59": [
            2549,
            2577
          ]
        },
        "EnumerableSet.get": {
          "49": [
            3917,
            3941
          ]
        },
        "EnumerableSet.length": {
          "48": [
            3442,
            3466
          ]
        },
        "EnumerableSet.remove": {
          "52": [
            1881,
            1918
          ],
          "53": [
            1992,
            2032
          ],
          "54": [
            2148,
            2171
          ],
          "55": [
            2242,
            2258
          ],
          "56": [
            2273,
            2284
          ],
          "57": [
            2315,
            2327
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/EnumerableSet",
    "IController",
    "IStrategy",
    "IVault",
    "IWrappedVault",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "420:7343:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:7343:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7231:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7231:137:12;-1:-1:-1;;;;;7231:137:12;;:::i;:::-;;993:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;993:92:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:405;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1767:405:12;-1:-1:-1;;;;;1767:405:12;;:::i;7374:99::-;;;:::i;1091:187::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1091:187:12;-1:-1:-1;;;;;1091:187:12;;:::i;785:48::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;785:48:12;-1:-1:-1;;;;;785:48:12;;:::i;:::-;;;;;;;;;;;;;;;;;;5238:98;;;:::i;:::-;;;;;;;;;;;;;;;;5342:278;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5342:278:12;;;;;;;;;;;;;;;;;563:25;;;:::i;:::-;;;;-1:-1:-1;;;;;563:25:12;;;;;;;;;;;;;;1284:477;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1284:477:12;-1:-1:-1;;;;;1284:477:12;;:::i;6041:1158::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6041:1158:12;;;;;;;;;;;;;;;;;;;;;;;;;;;5626:409;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5626:409:12;-1:-1:-1;;;;;5626:409:12;;:::i;:::-;;;;-1:-1:-1;;;;;5626:409:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5120:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5120:112:12;;:::i;3091:97::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3091:97:12;-1:-1:-1;;;;;3091:97:12;;:::i;594:32::-;;;:::i;7231:137::-;7535:10;;-1:-1:-1;;;;;7535:10:12;7521;:24;7513:76;;;;-1:-1:-1;;;7513:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7323:17;:38;;-1:-1:-1;;;;;;7323:38:12;-1:-1:-1;;;;;7323:38:12;;;;;;;;;;7231:137::o;993:92::-;1060:18;;;;;;;;;;;;-1:-1:-1;;;1060:18:12;;;;993:92;:::o;1767:405::-;7535:10;;-1:-1:-1;;;;;7535:10:12;7521;:24;7513:76;;;;-1:-1:-1;;;7513:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:16;1851:6;1842:8;:16::i;:::-;1868:25;1886:6;1868:17;:25::i;:::-;1905:18;1935:20;1948:6;1935:12;:20::i;:::-;1904:51;;;;;;2003:25;2017:10;2003:13;:25::i;:::-;7599:1;1767:405;:::o;7374:99::-;7675:17;;-1:-1:-1;;;;;7675:17:12;7661:10;:31;7653:90;;;;-1:-1:-1;;;7653:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7443:10;:23;;-1:-1:-1;;;;;;7443:23:12;7456:10;7443:23;;;7374:99::o;1091:187::-;7535:10;;-1:-1:-1;;;;;7535:10:12;7521;:24;7513:76;;;;-1:-1:-1;;;7513:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:16;1166:6;1157:8;:16::i;785:48::-;;;;;;;;;;;;;;;:::o;5238:98::-;5288:7;5314:15;:6;:13;:15::i;:::-;5307:22;;5238:98;:::o;5342:278::-;5386:16;5414:28;5459:15;:6;:13;:15::i;:::-;5445:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5445:30:12;-1:-1:-1;5414:61:12;-1:-1:-1;5490:9:12;5485:101;5509:15;:6;:13;:15::i;:::-;5505:1;:19;5485:101;;;5562:13;:6;5573:1;5562:13;:10;:13;:::i;:::-;5545:11;5557:1;5545:14;;;;;;;;-1:-1:-1;;;;;5545:30:12;;;:14;;;;;;;;;;;:30;5526:3;;5485:101;;;-1:-1:-1;5602:11:12;-1:-1:-1;5342:278:12;:::o;563:25::-;;;-1:-1:-1;;;;;563:25:12;;:::o;1284:477::-;7535:10;;-1:-1:-1;;;;;7535:10:12;7521;:24;7513:76;;;;-1:-1:-1;;;7513:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:16;1366:6;1357:8;:16::i;:::-;1383:20;1420:6;-1:-1:-1;;;;;1406:27:12;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:29:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:29:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1406:29:12;;-1:-1:-1;1445:37:12;1461:6;1406:29;1445:15;:37::i;:::-;1494:18;1524:20;1537:6;1524:12;:20::i;:::-;1493:51;;;;;;1592:25;1606:10;1592:13;:25::i;:::-;7599:1;;1284:477;:::o;6041:1158::-;6126:32;6172;6218:27;6259:30;6303:28;6345:30;6432:15;:6;:13;:15::i;:::-;6418:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6418:30:12;;6400:48;;6490:15;:6;:13;:15::i;:::-;6476:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6476:30:12;;6458:48;;6543:15;:6;:13;:15::i;:::-;6529:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6529:30:12;;6516:43;;6599:15;:6;:13;:15::i;:::-;6585:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6585:30:12;;6569:46;;6653:15;:6;:13;:15::i;:::-;6642:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6642:27:12;;6625:44;;6709:15;:6;:13;:15::i;:::-;6698:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6698:27:12;-1:-1:-1;6679:46:12;-1:-1:-1;6741:9:12;6736:457;6760:15;:6;:13;:15::i;:::-;6756:1;:19;6736:457;;;6817:13;:6;6828:1;6817:13;:10;:13;:::i;:::-;6796:15;6812:1;6796:18;;;;;;;;-1:-1:-1;;;;;6796:34:12;;;:18;;;;;;;;;;;:34;6845:19;;;;;6939:27;6952:13;:6;6963:1;6952:13;:10;:13;:::i;:::-;6939:12;:27::i;:::-;6844:122;;;;;;;;;;7001:11;6980:15;6996:1;6980:18;;;;;;;;;;;;;:32;-1:-1:-1;;;;;6980:32:12;;;-1:-1:-1;;;;;6980:32:12;;;;;7042:6;7026:10;7037:1;7026:13;;;;;;;;;;;;;:22;-1:-1:-1;;;;;7026:22:12;;;-1:-1:-1;;;;;7026:22:12;;;;;7081:9;7062:13;7076:1;7062:16;;;;;;;;;;;;;:28;-1:-1:-1;;;;;7062:28:12;;;-1:-1:-1;;;;;7062:28:12;;;;;7124:10;7104:14;7119:1;7104:17;;;;;;;;;;;;;:30;;;;;;;;;;;7170:12;7148:16;7165:1;7148:19;;;;;;;;:34;;;:19;;;;;;;;;;;:34;-1:-1:-1;;6777:3:12;;;;;-1:-1:-1;6736:457:12;;-1:-1:-1;;6736:457:12;;;6041:1158;;;;;;:::o;5626:409::-;5724:18;5756:13;5783:16;5813:14;5841:16;5938:20;5951:6;5938:12;:20::i;:::-;5882:76;;;;-1:-1:-1;5882:76:12;;-1:-1:-1;5882:76:12;-1:-1:-1;5882:76:12;;-1:-1:-1;5626:409:12;-1:-1:-1;;5626:409:12:o;5120:112::-;5176:13;5208:17;:6;5219:5;5208:17;:10;:17;:::i;:::-;5201:24;5120:112;-1:-1:-1;;5120:112:12:o;3091:97::-;7535:10;;-1:-1:-1;;;;;7535:10:12;7521;:24;7513:76;;;;-1:-1:-1;;;7513:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:21;:6;3174;3160:21;:13;:21;:::i;594:32::-;;;-1:-1:-1;;;;;594:32:12;;:::o;2178:307::-;2239:19;:6;-1:-1:-1;;;;;2239:17:12;;:19::i;:::-;2231:55;;;;;-1:-1:-1;;;2231:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:23;:6;2372;2356:23;:15;:23;:::i;:::-;2355:24;2347:57;;;;;-1:-1:-1;;;2347:57:12;;;;;;;;;;;;-1:-1:-1;;;2347:57:12;;;;;;;;;;;;;;;2460:18;:6;2471;2460:18;:10;:18;:::i;2703:166::-;-1:-1:-1;;;;;2831:24:12;;;;;:16;:24;;;;;:31;;-1:-1:-1;;2831:31:12;2858:4;2831:31;;;2703:166::o;3194:1898::-;-1:-1:-1;;;;;3494:21:12;;;3292:18;3494:21;;;:13;:21;;;;;;3292:18;;;;;;3494:21;:35;;;;3292:18;;3466:6;;3539:69;;-1:-1:-1;;;;;;3576:21:12;;;;;;;:13;:21;;;;;;;3539:69;-1:-1:-1;;;;;3631:23:12;;;;;;:16;:23;;;;;;;;;;3716:26;;-1:-1:-1;;;3716:26:12;;;;3631:23;;;;;-1:-1:-1;3716:24:12;;:26;;;;;3631:23;3716:26;;;;;;3631:23;3716:26;;;5:2:-1;;;;30:1;27;20:12;5:2;3716:26:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3716:26:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3716:26:12;;-1:-1:-1;3756:9:12;:53;;;;;3807:1;-1:-1:-1;;;;;3769:40:12;3776:5;-1:-1:-1;;;;;3769:24:12;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3769:26:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3769:26:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3769:26:12;-1:-1:-1;;;;;3769:40:12;;;3756:53;3752:199;;;3840:6;-1:-1:-1;;;;;3833:20:12;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3833:22:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3833:22:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3833:22:12;;-1:-1:-1;3752:199:12;;;3926:5;-1:-1:-1;;;;;3919:19:12;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3919:21:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3919:21:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3919:21:12;;-1:-1:-1;3752:199:12;3965:11;3961:177;;;4015:10;-1:-1:-1;;;;;4003:34:12;;4038:5;4003:41;;;;;;;;;;;;;-1:-1:-1;;;;;4003:41:12;-1:-1:-1;;;;;4003:41:12;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4003:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4003:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4003:41:12;;-1:-1:-1;3961:177:12;;;4098:10;-1:-1:-1;;;;;4086:34:12;;4121:5;4086:41;;;;;;;;;;;;;-1:-1:-1;;;;;4086:41:12;-1:-1:-1;;;;;4086:41:12;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4086:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4086:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4086:41:12;;-1:-1:-1;3961:177:12;4205:23;4251:186;;;;4312:10;-1:-1:-1;;;;;4300:30:12;;4331:8;4300:40;;;;;;;;;;;;;-1:-1:-1;;;;;4300:40:12;-1:-1:-1;;;;;4300:40:12;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4300:40:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4300:40:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4300:40:12;;-1:-1:-1;4251:186:12;;;4401:10;-1:-1:-1;;;;;4389:30:12;;4420:5;4389:37;;;;;;;;;;;;;-1:-1:-1;;;;;4389:37:12;-1:-1:-1;;;;;4389:37:12;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4389:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4389:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4389:37:12;;-1:-1:-1;4251:186:12;4473:5;-1:-1:-1;;;;;4454:24:12;:15;-1:-1:-1;;;;;4454:24:12;;4446:76;;;;-1:-1:-1;;;4446:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4626:9;4622:393;;;4651:18;4679:5;-1:-1:-1;;;;;4672:24:12;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4672:26:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4672:26:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4672:26:12;;-1:-1:-1;;;;;;4720:19:12;;;;;;;4712:73;;;;-1:-1:-1;;;4712:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4622:393;;;;4824:11;4819:196;;4851:21;4885:8;-1:-1:-1;;;;;4875:24:12;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4875:26:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4875:26:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4875:26:12;;-1:-1:-1;;;;;;4923:22:12;;;;;;;4915:72;;;;-1:-1:-1;;;4915:72:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4819:196;;-1:-1:-1;;3194:1898:12;;;;;;;:::o;2875:210::-;2991:33;:11;3012;2991:33;:20;:33;:::i;:::-;2986:93;;3040:28;:11;3056;3040:28;:15;:28;:::i;2986:93::-;2875:210;:::o;3332:141:8:-;3449:10;;:17;;3332:141::o;3795:153::-;3894:7;3924:3;:10;;3935:5;3924:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3924:17:8;;3795:153;-1:-1:-1;;;3795:153:8:o;2491:206:12:-;2582:26;:13;-1:-1:-1;;;;;2582:24:12;;:26::i;:::-;2574:69;;;;;-1:-1:-1;;;2574:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2653:21:12;;;;;;;:13;:21;;;;;:37;;-1:-1:-1;;;;;;2653:37:12;;;;;;;;2491:206::o;1325:1019:8:-;1414:4;1438:20;1447:3;1452:5;1438:8;:20::i;:::-;1434:904;;;-1:-1:-1;;;;;1497:16:8;;1473:21;1497:16;;;;;;;;;;;1516:1;1551:10;;:17;-1:-1:-1;;1497:20:8;;;;1551:21;1696:26;;;1692:382;;1742:17;1762:3;:10;;1773:9;1762:21;;;;;;;;;;;;;;;;;;;1881:10;;:25;;-1:-1:-1;;;;;1762:21:8;;;;-1:-1:-1;1762:21:8;;1892:13;;1881:25;;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;;;;1881:37:8;-1:-1:-1;;;;;1881:37:8;;;;;;1992:20;;;;;;;;;;;;;-1:-1:-1;2015:17:8;;1992:40;;1692:382;-1:-1:-1;;;;;2155:16:8;;:9;:16;;;;;;;;;;2148:23;2242:10;;;:16;;;;;;;;;;;;;;;;-1:-1:-1;;2242:16:8;;;;;-1:-1:-1;;;;;;2242:16:8;;;;;;-1:-1:-1;2242:16:8;;-1:-1:-1;2273:11:8;;-1:-1:-1;2273:11:8;1434:904;-1:-1:-1;2322:5:8;2315:12;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o;2425:159:8:-;-1:-1:-1;;;;;2556:16:8;2529:4;2556:16;;;;;;;;;;;;:21;;;2425:159::o;923:272::-;1009:4;1034:20;1043:3;1048:5;1034:8;:20::i;:::-;1029:160;;-1:-1:-1;1088:10:8;;;;27::-1;;23:18;;;45:23;;;-1:-1;1088:22:8;;;;;;;;;;;;-1:-1:-1;;;;;;1088:22:8;-1:-1:-1;;;;;1088:22:8;;;;;;;;1069:16;;;;;;;;;;:41;1124:11;",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    420,
    7763
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44D00F82 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x90229AF7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x90229AF7 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x9403B634 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xCEB68C23 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xF39C38A0 EQ PUSH2 0x543 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x44D00F82 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x61DE8389 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6B708788 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x238EFCBC GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x256B5A02 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x44064BE7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x44B19DFC EQ PUSH2 0x22D JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xABB6035 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x2019C75A EQ PUSH2 0x19F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x54B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x164 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x191 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x273 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP8 DUP2 SUB DUP8 MSTORE DUP14 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x345 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP8 DUP2 SUB DUP7 MSTORE DUP13 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x384 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x36C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP8 DUP2 SUB DUP6 MSTORE DUP12 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3AB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP8 DUP2 SUB DUP5 MSTORE DUP11 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x402 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3EA JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP8 DUP2 SUB DUP4 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x441 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x429 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP8 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x480 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x468 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x120 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x165B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x595265676973747279 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x165B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH2 0x634 DUP2 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63F DUP3 PUSH2 0xCDD JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x64E DUP2 PUSH2 0x1304 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1606 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x165B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x634 DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x734 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x75D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x76D PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x785 PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1334 AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x791 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x763 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x165B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x818 DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x88B DUP3 DUP3 PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP4 PUSH2 0xCDD JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x8A5 DUP2 PUSH2 0x1304 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH2 0x8BD PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP PUSH2 0x8F3 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP PUSH2 0x929 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x952 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH2 0x95F PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x988 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x995 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x9CB PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xA04 PUSH1 0x2 PUSH2 0x132D JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB3D JUMPI PUSH2 0xA1C PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1334 AND JUMP JUMPDEST DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA28 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH2 0xA5F PUSH2 0xA5A PUSH1 0x2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x1334 AND JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP5 DUP12 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xA76 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xAA3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xAFD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xB1C JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x9FA SWAP2 POP POP JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB57 DUP7 PUSH2 0xCDD JUMP JUMPDEST SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7C PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1334 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x165B PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64E PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13F2 AND JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBFD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1505 JUMP JUMPDEST PUSH2 0xC4E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74206973206E6F74206120636F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC5F PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1541 AND JUMP JUMPDEST ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5661756C7420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x64E PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x155F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 DUP3 SWAP2 AND ISZERO DUP1 ISZERO SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xD27 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH4 0xF77C4791 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP PUSH4 0xF77C4791 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP6 POP DUP3 DUP1 ISZERO PUSH2 0xE2D JUMPI POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE9E JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP PUSH2 0xF06 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP JUMPDEST DUP2 ISZERO PUSH2 0xF95 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x39EBF823 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x101A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x39EBF823 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP JUMPDEST PUSH1 0x0 DUP3 ISZERO PUSH2 0x10AB JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA622EE7C DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x1130 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA622EE7C DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1115 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1634 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x123F JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP9 AND EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15DD PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x12F9 JUMP JUMPDEST DUP3 PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F1FCD51 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP1 DUP3 AND EQ PUSH2 0x12F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15B8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1315 PUSH1 0x4 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1541 AND JUMP JUMPDEST PUSH2 0x132A JUMPI PUSH2 0x64E PUSH1 0x4 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x155F AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1345 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1373 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x13C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x577261707065645661756C74206973206E6F74206120636F6E74726163740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP4 DUP4 PUSH2 0x1541 JUMP JUMPDEST ISZERO PUSH2 0x14FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x0 NOT SWAP2 DUP3 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP6 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1441 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x146C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP6 ADD DUP1 SLOAD DUP1 PUSH2 0x14CF JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0xB7C SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x1539 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156B DUP4 DUP4 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x14FD JUMPI POP PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE SWAP1 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xB7C JUMP INVALID MSTORE8 PUSH21 0x72617465677920746F6B656E206164647265737320 PUSH5 0x6F6573206E PUSH16 0x74206D61746368577261707065645661 PUSH22 0x6C7420746F6B656E206164647265737320646F657320 PUSH15 0x6F74206D617463684F6E6C79207065 PUSH15 0x64696E67476F7665726E616E636520 PUSH4 0x616E2063 PUSH2 0x6C6C KECCAK256 PUSH21 0x6869732066756E6374696F6E2E436F6E74726F6C6C PUSH6 0x72207661756C PUSH21 0x206164647265737320646F6573206E6F74206D6174 PUSH4 0x684F6E6C PUSH26 0x20676F7665726E616E63652063616E2063616C6C207468697320 PUSH7 0x756E6374696F6E 0x2E LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAB ADDRESS SWAP11 0xD0 0xA9 0x2C DUP12 0xD0 SIGNEXTEND 0xD7 LOG3 0xBF 0xA5 0xCA 0xBD 0x4F 0xAE PUSH2 0x191C PUSH9 0xFA518680A5A32DEFA0 CALLER PUSH21 0x64736F6C6343000511003200000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        420,
        7763
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44D00F82"
    },
    "38": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90229AF7"
    },
    "49": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x90229AF7"
    },
    "60": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49E"
    },
    "64": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9403B634"
    },
    "71": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x500"
    },
    "75": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCEB68C23"
    },
    "82": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x51D"
    },
    "86": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF39C38A0"
    },
    "93": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x543"
    },
    "97": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMP",
      "path": "12"
    },
    "102": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "104": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44D00F82"
    },
    "109": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x247"
    },
    "113": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5AA6E675"
    },
    "120": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29F"
    },
    "124": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x61DE8389"
    },
    "131": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C3"
    },
    "135": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6B708788"
    },
    "142": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E9"
    },
    "146": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMP",
      "path": "12"
    },
    "151": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "153": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x238EFCBC"
    },
    "158": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "GT",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "163": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "164": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x238EFCBC"
    },
    "169": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C5"
    },
    "173": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "174": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "175": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x256B5A02"
    },
    "180": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "181": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CD"
    },
    "184": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "185": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44064BE7"
    },
    "191": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "192": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F3"
    },
    "195": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "196": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x44B19DFC"
    },
    "202": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "203": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22D"
    },
    "206": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "207": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMP",
      "path": "12"
    },
    "211": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "213": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xABB6035"
    },
    "218": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "219": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "223": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "224": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x17D7DE7C"
    },
    "229": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x122"
    },
    "233": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "234": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "235": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2019C75A"
    },
    "240": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "EQ",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19F"
    },
    "244": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "245": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "246": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "DUP1",
      "path": "12"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        420,
        7763
      ],
      "op": "REVERT",
      "path": "12"
    },
    "250": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "251": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "254": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "256": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "DUP1",
      "path": "12"
    },
    "257": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "258": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "SUB",
      "path": "12"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "261": {
      "op": "DUP2"
    },
    "262": {
      "op": "LT"
    },
    "263": {
      "op": "ISZERO"
    },
    "264": {
      "op": "PUSH2",
      "value": "0x110"
    },
    "267": {
      "op": "JUMPI"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "270": {
      "op": "DUP1"
    },
    "271": {
      "op": "REVERT"
    },
    "272": {
      "op": "JUMPDEST"
    },
    "273": {
      "op": "POP"
    },
    "274": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "281": {
      "op": "SHL"
    },
    "282": {
      "op": "SUB"
    },
    "283": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "AND",
      "path": "12"
    },
    "284": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x54B"
    },
    "287": {
      "fn": "YRegistry.setPendingGovernance",
      "jump": "i",
      "offset": [
        7231,
        7368
      ],
      "op": "JUMP",
      "path": "12"
    },
    "288": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "289": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "STOP",
      "path": "12"
    },
    "290": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "291": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12A"
    },
    "294": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B6"
    },
    "297": {
      "fn": "YRegistry.getName",
      "jump": "i",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "298": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "299": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "301": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "302": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "303": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "305": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "306": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP3",
      "path": "12"
    },
    "307": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "308": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "309": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "310": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "12"
    },
    "311": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "312": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "12"
    },
    "313": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "314": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "315": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "316": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "317": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "318": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "319": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "320": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "321": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "322": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "12"
    },
    "323": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "324": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP6",
      "path": "12"
    },
    "325": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "12"
    },
    "326": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "327": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "328": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "329": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "330": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "332": {
      "op": "JUMPDEST"
    },
    "333": {
      "op": "DUP4"
    },
    "334": {
      "op": "DUP2"
    },
    "335": {
      "op": "LT"
    },
    "336": {
      "op": "ISZERO"
    },
    "337": {
      "op": "PUSH2",
      "value": "0x164"
    },
    "340": {
      "op": "JUMPI"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "DUP2"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MLOAD"
    },
    "345": {
      "op": "DUP4"
    },
    "346": {
      "op": "DUP3"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "PUSH2",
      "value": "0x14C"
    },
    "355": {
      "op": "JUMP"
    },
    "356": {
      "op": "JUMPDEST"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "359": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "360": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "361": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "362": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "363": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "364": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "12"
    },
    "365": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "12"
    },
    "366": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "367": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "369": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "AND",
      "path": "12"
    },
    "370": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "371": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "372": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x191"
    },
    "375": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "376": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "377": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP3",
      "path": "12"
    },
    "378": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "12"
    },
    "379": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "380": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "381": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "383": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "12"
    },
    "384": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "386": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "12"
    },
    "387": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "390": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "EXP",
      "path": "12"
    },
    "391": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "12"
    },
    "392": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "NOT",
      "path": "12"
    },
    "393": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "AND",
      "path": "12"
    },
    "394": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "12"
    },
    "395": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "396": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "398": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "12"
    },
    "399": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "400": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "401": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "402": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "403": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "404": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "405": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "406": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "12"
    },
    "407": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "409": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "410": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "12"
    },
    "411": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "412": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "12"
    },
    "413": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "414": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "RETURN",
      "path": "12"
    },
    "415": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "416": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "419": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "421": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "DUP1",
      "path": "12"
    },
    "422": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "423": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "SUB",
      "path": "12"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "426": {
      "op": "DUP2"
    },
    "427": {
      "op": "LT"
    },
    "428": {
      "op": "ISZERO"
    },
    "429": {
      "op": "PUSH2",
      "value": "0x1B5"
    },
    "432": {
      "op": "JUMPI"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "435": {
      "op": "DUP1"
    },
    "436": {
      "op": "REVERT"
    },
    "437": {
      "op": "JUMPDEST"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "AND",
      "path": "12"
    },
    "449": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D9"
    },
    "452": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMP",
      "path": "12"
    },
    "453": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7374,
        7473
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "454": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7374,
        7473
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "457": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7374,
        7473
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x652"
    },
    "460": {
      "fn": "YRegistry.acceptGovernance",
      "jump": "i",
      "offset": [
        7374,
        7473
      ],
      "op": "JUMP",
      "path": "12"
    },
    "461": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "462": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "465": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "467": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "DUP1",
      "path": "12"
    },
    "468": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "469": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "SUB",
      "path": "12"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "472": {
      "op": "DUP2"
    },
    "473": {
      "op": "LT"
    },
    "474": {
      "op": "ISZERO"
    },
    "475": {
      "op": "PUSH2",
      "value": "0x1E3"
    },
    "478": {
      "op": "JUMPI"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "481": {
      "op": "DUP1"
    },
    "482": {
      "op": "REVERT"
    },
    "483": {
      "op": "JUMPDEST"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "492": {
      "op": "SHL"
    },
    "493": {
      "op": "SUB"
    },
    "494": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "AND",
      "path": "12"
    },
    "495": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6AF"
    },
    "498": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMP",
      "path": "12"
    },
    "499": {
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "500": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x219"
    },
    "503": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "505": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP1",
      "path": "12"
    },
    "506": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "507": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SUB",
      "path": "12"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "DUP2"
    },
    "511": {
      "op": "LT"
    },
    "512": {
      "op": "ISZERO"
    },
    "513": {
      "op": "PUSH2",
      "value": "0x209"
    },
    "516": {
      "op": "JUMPI"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "519": {
      "op": "DUP1"
    },
    "520": {
      "op": "REVERT"
    },
    "521": {
      "op": "JUMPDEST"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "offset": [
        785,
        833
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "offset": [
        785,
        833
      ],
      "op": "AND",
      "path": "12"
    },
    "533": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x701"
    },
    "536": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        785,
        833
      ],
      "op": "JUMP",
      "path": "12"
    },
    "537": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "538": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "540": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP1",
      "path": "12"
    },
    "541": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "542": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "543": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "544": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "545": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP3",
      "path": "12"
    },
    "546": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "547": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "548": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "549": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "550": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "551": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SUB",
      "path": "12"
    },
    "552": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "554": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ADD",
      "path": "12"
    },
    "555": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "556": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "RETURN",
      "path": "12"
    },
    "557": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "558": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x235"
    },
    "561": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x716"
    },
    "564": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "i",
      "offset": [
        5238,
        5336
      ],
      "op": "JUMP",
      "path": "12"
    },
    "565": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "566": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "568": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "DUP1",
      "path": "12"
    },
    "569": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "570": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "571": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "DUP3",
      "path": "12"
    },
    "572": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "573": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "574": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "575": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "DUP2",
      "path": "12"
    },
    "576": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "577": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SUB",
      "path": "12"
    },
    "578": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "580": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "ADD",
      "path": "12"
    },
    "581": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "582": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "RETURN",
      "path": "12"
    },
    "583": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "584": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24F"
    },
    "587": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x727"
    },
    "590": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5342,
        5620
      ],
      "op": "JUMP",
      "path": "12"
    },
    "591": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "592": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "594": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "595": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "596": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "598": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "599": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP3",
      "path": "12"
    },
    "600": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "601": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "602": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "603": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP2",
      "path": "12"
    },
    "604": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "605": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "ADD",
      "path": "12"
    },
    "606": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "607": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "608": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "609": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "610": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "611": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "612": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "613": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "614": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "615": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "ADD",
      "path": "12"
    },
    "616": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "617": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP6",
      "path": "12"
    },
    "618": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP2",
      "path": "12"
    },
    "619": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "ADD",
      "path": "12"
    },
    "620": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "621": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MUL",
      "path": "12"
    },
    "622": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "623": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "624": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP4",
      "path": "12"
    },
    "625": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "627": {
      "op": "JUMPDEST"
    },
    "628": {
      "op": "DUP4"
    },
    "629": {
      "op": "DUP2"
    },
    "630": {
      "op": "LT"
    },
    "631": {
      "op": "ISZERO"
    },
    "632": {
      "op": "PUSH2",
      "value": "0x28B"
    },
    "635": {
      "op": "JUMPI"
    },
    "636": {
      "op": "DUP2"
    },
    "637": {
      "op": "DUP2"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "MLOAD"
    },
    "640": {
      "op": "DUP4"
    },
    "641": {
      "op": "DUP3"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "PUSH2",
      "value": "0x273"
    },
    "650": {
      "op": "JUMP"
    },
    "651": {
      "op": "JUMPDEST"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "654": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "655": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "656": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "657": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "658": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "ADD",
      "path": "12"
    },
    "659": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "660": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "661": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "662": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "POP",
      "path": "12"
    },
    "663": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "665": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "666": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "DUP1",
      "path": "12"
    },
    "667": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "668": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SUB",
      "path": "12"
    },
    "669": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "670": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "RETURN",
      "path": "12"
    },
    "671": {
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "672": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "675": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B7"
    },
    "678": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        563,
        588
      ],
      "op": "JUMP",
      "path": "12"
    },
    "679": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "680": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "682": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP1",
      "path": "12"
    },
    "683": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "693": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "694": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "AND",
      "path": "12"
    },
    "695": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP3",
      "path": "12"
    },
    "696": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "697": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "698": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "699": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP2",
      "path": "12"
    },
    "700": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "701": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SUB",
      "path": "12"
    },
    "702": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "704": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "ADD",
      "path": "12"
    },
    "705": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "706": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "RETURN",
      "path": "12"
    },
    "707": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "708": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "711": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "713": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "DUP1",
      "path": "12"
    },
    "714": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "715": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "SUB",
      "path": "12"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "718": {
      "op": "DUP2"
    },
    "719": {
      "op": "LT"
    },
    "720": {
      "op": "ISZERO"
    },
    "721": {
      "op": "PUSH2",
      "value": "0x2D9"
    },
    "724": {
      "op": "JUMPI"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "727": {
      "op": "DUP1"
    },
    "728": {
      "op": "REVERT"
    },
    "729": {
      "op": "JUMPDEST"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "SUB"
    },
    "740": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "AND",
      "path": "12"
    },
    "741": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C6"
    },
    "744": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMP",
      "path": "12"
    },
    "745": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "746": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F1"
    },
    "749": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AA"
    },
    "752": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6041,
        7199
      ],
      "op": "JUMP",
      "path": "12"
    },
    "753": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "754": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "756": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "757": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "758": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "759": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "761": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "762": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "763": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "765": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "766": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "767": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "769": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "770": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "771": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "773": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "774": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "775": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "777": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "778": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "779": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "781": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "782": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "783": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "784": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "785": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "786": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "787": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP14",
      "path": "12"
    },
    "788": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "789": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "790": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "791": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "792": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "793": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "795": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "796": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "797": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "798": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "799": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "800": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "801": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "803": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "804": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "805": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "807": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "808": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "809": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "810": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "813": {
      "op": "JUMPDEST"
    },
    "814": {
      "op": "DUP4"
    },
    "815": {
      "op": "DUP2"
    },
    "816": {
      "op": "LT"
    },
    "817": {
      "op": "ISZERO"
    },
    "818": {
      "op": "PUSH2",
      "value": "0x345"
    },
    "821": {
      "op": "JUMPI"
    },
    "822": {
      "op": "DUP2"
    },
    "823": {
      "op": "DUP2"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "MLOAD"
    },
    "826": {
      "op": "DUP4"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "PUSH2",
      "value": "0x32D"
    },
    "836": {
      "op": "JUMP"
    },
    "837": {
      "op": "JUMPDEST"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "840": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "841": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "842": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "843": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "844": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "845": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "846": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "847": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "848": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP7",
      "path": "12"
    },
    "849": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "850": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP13",
      "path": "12"
    },
    "851": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "852": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "853": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "854": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "855": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "856": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "858": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "859": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "860": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "861": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "862": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "863": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "864": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "866": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "867": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "868": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "870": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "871": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "872": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "873": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "876": {
      "op": "JUMPDEST"
    },
    "877": {
      "op": "DUP4"
    },
    "878": {
      "op": "DUP2"
    },
    "879": {
      "op": "LT"
    },
    "880": {
      "op": "ISZERO"
    },
    "881": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "884": {
      "op": "JUMPI"
    },
    "885": {
      "op": "DUP2"
    },
    "886": {
      "op": "DUP2"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "MLOAD"
    },
    "889": {
      "op": "DUP4"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "PUSH2",
      "value": "0x36C"
    },
    "899": {
      "op": "JUMP"
    },
    "900": {
      "op": "JUMPDEST"
    },
    "901": {
      "op": "POP"
    },
    "902": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "903": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "904": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "905": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "906": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "907": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "908": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "909": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "910": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "911": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP6",
      "path": "12"
    },
    "912": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "913": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP12",
      "path": "12"
    },
    "914": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "915": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "916": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "917": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "918": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "919": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "921": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "922": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "923": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "924": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "925": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "926": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "927": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "929": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "930": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "931": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "933": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "934": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "935": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "936": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "939": {
      "op": "JUMPDEST"
    },
    "940": {
      "op": "DUP4"
    },
    "941": {
      "op": "DUP2"
    },
    "942": {
      "op": "LT"
    },
    "943": {
      "op": "ISZERO"
    },
    "944": {
      "op": "PUSH2",
      "value": "0x3C3"
    },
    "947": {
      "op": "JUMPI"
    },
    "948": {
      "op": "DUP2"
    },
    "949": {
      "op": "DUP2"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MLOAD"
    },
    "952": {
      "op": "DUP4"
    },
    "953": {
      "op": "DUP3"
    },
    "954": {
      "op": "ADD"
    },
    "955": {
      "op": "MSTORE"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "958": {
      "op": "ADD"
    },
    "959": {
      "op": "PUSH2",
      "value": "0x3AB"
    },
    "962": {
      "op": "JUMP"
    },
    "963": {
      "op": "JUMPDEST"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "966": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "967": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "968": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "969": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "970": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "971": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "972": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "973": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "974": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP5",
      "path": "12"
    },
    "975": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "976": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP11",
      "path": "12"
    },
    "977": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "978": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "979": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "980": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "981": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "982": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "984": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "985": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "986": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "987": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "988": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "989": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "990": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "992": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "993": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "994": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "996": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "997": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "998": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "999": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1002": {
      "op": "JUMPDEST"
    },
    "1003": {
      "op": "DUP4"
    },
    "1004": {
      "op": "DUP2"
    },
    "1005": {
      "op": "LT"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x402"
    },
    "1010": {
      "op": "JUMPI"
    },
    "1011": {
      "op": "DUP2"
    },
    "1012": {
      "op": "DUP2"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "MLOAD"
    },
    "1015": {
      "op": "DUP4"
    },
    "1016": {
      "op": "DUP3"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "MSTORE"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "PUSH2",
      "value": "0x3EA"
    },
    "1025": {
      "op": "JUMP"
    },
    "1026": {
      "op": "JUMPDEST"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1029": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1030": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1031": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1032": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1033": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1034": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1035": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1036": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "1037": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1038": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1039": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP10",
      "path": "12"
    },
    "1040": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1041": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1042": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1043": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1044": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1045": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1047": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1048": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1049": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1050": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1051": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1052": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1053": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1055": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1056": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1057": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1059": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "1060": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1061": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1062": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1065": {
      "op": "JUMPDEST"
    },
    "1066": {
      "op": "DUP4"
    },
    "1067": {
      "op": "DUP2"
    },
    "1068": {
      "op": "LT"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x441"
    },
    "1073": {
      "op": "JUMPI"
    },
    "1074": {
      "op": "DUP2"
    },
    "1075": {
      "op": "DUP2"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "op": "MLOAD"
    },
    "1078": {
      "op": "DUP4"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x429"
    },
    "1088": {
      "op": "JUMP"
    },
    "1089": {
      "op": "JUMPDEST"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1092": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1093": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1094": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1095": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1096": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1097": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1098": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1099": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "1100": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1101": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1102": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1103": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1104": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1105": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1106": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1107": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1108": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1110": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1111": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1112": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1113": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1114": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1115": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1116": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1118": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1119": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1120": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1122": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MUL",
      "path": "12"
    },
    "1123": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1124": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1125": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "DUP4"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "LT"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1136": {
      "op": "JUMPI"
    },
    "1137": {
      "op": "DUP2"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MLOAD"
    },
    "1141": {
      "op": "DUP4"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1151": {
      "op": "JUMP"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1155": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1156": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1157": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1158": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1159": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "1160": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP13",
      "path": "12"
    },
    "1161": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1162": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1163": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1164": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1165": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1166": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1167": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1168": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1169": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1170": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1171": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1172": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1173": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "POP",
      "path": "12"
    },
    "1174": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1176": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1177": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1178": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1179": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SUB",
      "path": "12"
    },
    "1180": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1181": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1182": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1183": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C4"
    },
    "1186": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1188": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1189": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1190": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SUB",
      "path": "12"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1193": {
      "op": "DUP2"
    },
    "1194": {
      "op": "LT"
    },
    "1195": {
      "op": "ISZERO"
    },
    "1196": {
      "op": "PUSH2",
      "value": "0x4B4"
    },
    "1199": {
      "op": "JUMPI"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1202": {
      "op": "DUP1"
    },
    "1203": {
      "op": "REVERT"
    },
    "1204": {
      "op": "JUMPDEST"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "AND",
      "path": "12"
    },
    "1216": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB46"
    },
    "1219": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "i",
      "offset": [
        5626,
        6035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1220": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1221": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1223": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1224": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1231": {
      "op": "SHL"
    },
    "1232": {
      "op": "SUB"
    },
    "1233": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "1234": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1235": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "AND",
      "path": "12"
    },
    "1236": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1237": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1238": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1239": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1240": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "AND",
      "path": "12"
    },
    "1241": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1243": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1244": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ADD",
      "path": "12"
    },
    "1245": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1246": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1247": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1248": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1249": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "AND",
      "path": "12"
    },
    "1250": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1251": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1252": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ADD",
      "path": "12"
    },
    "1253": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1254": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1255": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1256": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1258": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1259": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ADD",
      "path": "12"
    },
    "1260": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1261": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1262": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1263": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1264": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "1266": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1267": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ADD",
      "path": "12"
    },
    "1268": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1269": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1270": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1271": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1272": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1273": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1274": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SUB",
      "path": "12"
    },
    "1275": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA0"
    },
    "1277": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "ADD",
      "path": "12"
    },
    "1278": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1279": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1280": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1281": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "1284": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1286": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1287": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1288": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "SUB",
      "path": "12"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1291": {
      "op": "DUP2"
    },
    "1292": {
      "op": "LT"
    },
    "1293": {
      "op": "ISZERO"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x516"
    },
    "1297": {
      "op": "JUMPI"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1300": {
      "op": "DUP1"
    },
    "1301": {
      "op": "REVERT"
    },
    "1302": {
      "op": "JUMPDEST"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1305": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB69"
    },
    "1308": {
      "fn": "YRegistry.getVault",
      "jump": "i",
      "offset": [
        5120,
        5232
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1309": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1310": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x120"
    },
    "1313": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1315": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1316": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1317": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "SUB",
      "path": "12"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1320": {
      "op": "DUP2"
    },
    "1321": {
      "op": "LT"
    },
    "1322": {
      "op": "ISZERO"
    },
    "1323": {
      "op": "PUSH2",
      "value": "0x533"
    },
    "1326": {
      "op": "JUMPI"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1329": {
      "op": "DUP1"
    },
    "1330": {
      "op": "REVERT"
    },
    "1331": {
      "op": "JUMPDEST"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "op": "SUB"
    },
    "1342": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "AND",
      "path": "12"
    },
    "1343": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB82"
    },
    "1346": {
      "fn": "YRegistry.removeVault",
      "jump": "i",
      "offset": [
        3091,
        3188
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1347": {
      "offset": [
        594,
        626
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1348": {
      "fn": "YRegistry.removeVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "1351": {
      "fn": "YRegistry.removeVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBDC"
    },
    "1354": {
      "fn": "YRegistry.removeVault",
      "jump": "i",
      "offset": [
        594,
        626
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1355": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7231,
        7368
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1356": {
      "offset": [
        7535,
        7545
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1358": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7535,
        7545
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "offset": [
        7535,
        7545
      ],
      "op": "AND",
      "path": "12"
    },
    "1368": {
      "offset": [
        7521,
        7531
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1369": {
      "offset": [
        7521,
        7545
      ],
      "op": "EQ",
      "path": "12"
    },
    "1370": {
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x594"
    },
    "1373": {
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1374": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1376": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1385": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1386": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1388": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1389": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1390": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1391": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1393": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1394": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1395": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1396": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1397": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1398": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1399": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1401": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1402": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1403": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1405": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1406": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1407": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "1410": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1412": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1413": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "1414": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1416": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1417": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1418": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1419": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1420": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1422": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1423": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1424": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1425": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1426": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1427": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1428": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1429": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7340
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "1431": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1432": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "op": "NOT"
    },
    "1442": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "AND",
      "path": "12"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "op": "SUB"
    },
    "1451": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1452": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1453": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1454": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "AND",
      "path": "12"
    },
    "1455": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1456": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1457": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1458": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "OR",
      "path": "12"
    },
    "1459": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1460": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7323,
        7361
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1461": {
      "fn": "YRegistry.setPendingGovernance",
      "jump": "o",
      "offset": [
        7231,
        7368
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1462": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1463": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x40"
    },
    "1465": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1466": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1467": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1468": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1469": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "ADD",
      "path": "12"
    },
    "1470": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1471": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1472": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1473": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "1475": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1476": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1477": {
      "op": "PUSH9",
      "value": "0x595265676973747279"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1492": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1493": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "ADD",
      "path": "12"
    },
    "1494": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1495": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1496": {
      "fn": "YRegistry.getName",
      "jump": "o",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1497": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1498": {
      "offset": [
        7535,
        7545
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1500": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7535,
        7545
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "offset": [
        7535,
        7545
      ],
      "op": "AND",
      "path": "12"
    },
    "1510": {
      "offset": [
        7521,
        7531
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1511": {
      "offset": [
        7521,
        7545
      ],
      "op": "EQ",
      "path": "12"
    },
    "1512": {
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x622"
    },
    "1515": {
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1516": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1518": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1527": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1528": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1530": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1531": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1532": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1533": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1535": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1536": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1537": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1538": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1539": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1540": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1541": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1543": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1544": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1545": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1547": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1548": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1549": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "1552": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1554": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1555": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "1556": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1558": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1559": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1560": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1561": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1562": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1564": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1565": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1566": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1567": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1568": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1569": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1570": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1571": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1858
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 2,
      "value": "0x62B"
    },
    "1574": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1851,
        1857
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1575": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBEB"
    },
    "1578": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1842,
        1858
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1579": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1858
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1580": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1893
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 3,
      "value": "0x634"
    },
    "1583": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1886,
        1892
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1584": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1885
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCB9"
    },
    "1587": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1588": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1589": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1905,
        1923
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1591": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x63F"
    },
    "1594": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1948,
        1954
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1595": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCDD"
    },
    "1598": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1935,
        1955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1599": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1600": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "12"
    },
    "1601": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "12"
    },
    "1602": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "12"
    },
    "1603": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "12"
    },
    "1604": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1605": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "12"
    },
    "1606": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2028
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 4,
      "value": "0x64E"
    },
    "1609": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2017,
        2027
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1610": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2016
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1304"
    },
    "1613": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        2003,
        2028
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1614": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2028
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1615": {
      "offset": [
        7599,
        7600
      ],
      "op": "POP",
      "path": "12"
    },
    "1616": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "POP",
      "path": "12"
    },
    "1617": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "o",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1618": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7374,
        7473
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1619": {
      "offset": [
        7675,
        7692
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1621": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7675,
        7692
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "offset": [
        7675,
        7692
      ],
      "op": "AND",
      "path": "12"
    },
    "1631": {
      "offset": [
        7661,
        7671
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1632": {
      "offset": [
        7661,
        7692
      ],
      "op": "EQ",
      "path": "12"
    },
    "1633": {
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69B"
    },
    "1636": {
      "offset": [
        7653,
        7743
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1637": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1639": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "offset": [
        7653,
        7743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1648": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1649": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1651": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "ADD",
      "path": "12"
    },
    "1652": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1653": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1654": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1656": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "ADD",
      "path": "12"
    },
    "1657": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1658": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1659": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SUB",
      "path": "12"
    },
    "1660": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1661": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1662": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2E"
    },
    "1664": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1665": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1666": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1668": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "ADD",
      "path": "12"
    },
    "1669": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1670": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1606"
    },
    "1673": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2E"
    },
    "1675": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1676": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "1677": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1679": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "ADD",
      "path": "12"
    },
    "1680": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1681": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "POP",
      "path": "12"
    },
    "1682": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "POP",
      "path": "12"
    },
    "1683": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1685": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1686": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1687": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1688": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SUB",
      "path": "12"
    },
    "1689": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1690": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1691": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7653,
        7743
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1692": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7453
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x0"
    },
    "1694": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1695": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "op": "NOT"
    },
    "1705": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "AND",
      "path": "12"
    },
    "1706": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7456,
        7466
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1707": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "OR",
      "path": "12"
    },
    "1708": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1709": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7443,
        7466
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1710": {
      "fn": "YRegistry.acceptGovernance",
      "jump": "o",
      "offset": [
        7374,
        7473
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1711": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1712": {
      "offset": [
        7535,
        7545
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1714": {
      "fn": "YRegistry.addVault",
      "offset": [
        7535,
        7545
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "SUB"
    },
    "1723": {
      "offset": [
        7535,
        7545
      ],
      "op": "AND",
      "path": "12"
    },
    "1724": {
      "offset": [
        7521,
        7531
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1725": {
      "offset": [
        7521,
        7545
      ],
      "op": "EQ",
      "path": "12"
    },
    "1726": {
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F8"
    },
    "1729": {
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1730": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1732": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1741": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1742": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1744": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1745": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1746": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1747": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1749": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1750": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1751": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1752": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1753": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1754": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1755": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1757": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1758": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1759": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1761": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1762": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1763": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "1766": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "1768": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1769": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "1770": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1772": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "1773": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1774": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1775": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "1776": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1778": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1779": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1780": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1781": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "1782": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1783": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1784": {
      "fn": "YRegistry.addVault",
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1785": {
      "fn": "YRegistry.addVault",
      "offset": [
        1157,
        1173
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 6,
      "value": "0x634"
    },
    "1788": {
      "fn": "YRegistry.addVault",
      "offset": [
        1166,
        1172
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1789": {
      "fn": "YRegistry.addVault",
      "offset": [
        1157,
        1165
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBEB"
    },
    "1792": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        1157,
        1173
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1793": {
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1794": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "1796": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1798": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1799": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1801": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1802": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1803": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1804": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1806": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1807": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1808": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1809": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1811": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "AND",
      "path": "12"
    },
    "1812": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1813": {
      "fn": "YRegistry.addVault",
      "jump": "o",
      "offset": [
        785,
        833
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1814": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1815": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5288,
        5295
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1817": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5314,
        5329
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x722"
    },
    "1820": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5314,
        5320
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1822": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5314,
        5327
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "1825": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "i",
      "offset": [
        5314,
        5329
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1826": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5314,
        5329
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1827": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5307,
        5329
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1828": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5307,
        5329
      ],
      "op": "POP",
      "path": "12"
    },
    "1829": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5238,
        5336
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1830": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "o",
      "offset": [
        5238,
        5336
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1831": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1832": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5386,
        5402
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "1834": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5414,
        5442
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1835": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x734"
    },
    "1838": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5465
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1840": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5472
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "1843": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5459,
        5474
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1844": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1845": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1847": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1848": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1849": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1850": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1851": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1852": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1853": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1855": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "MUL",
      "path": "12"
    },
    "1856": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1858": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "ADD",
      "path": "12"
    },
    "1859": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1860": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "ADD",
      "path": "12"
    },
    "1861": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1863": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1864": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1865": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1866": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x75D"
    },
    "1869": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1870": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1871": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1873": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "ADD",
      "path": "12"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "MUL"
    },
    "1878": {
      "op": "DUP1"
    },
    "1879": {
      "op": "CODESIZE"
    },
    "1880": {
      "op": "DUP4"
    },
    "1881": {
      "op": "CODECOPY"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "SWAP1"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5445,
        5475
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5414,
        5475
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5490,
        5499
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1891": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1892": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5509,
        5524
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x76D"
    },
    "1895": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5509,
        5515
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1897": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5509,
        5522
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "1900": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5509,
        5524
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1901": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5509,
        5524
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1902": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5505,
        5506
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1903": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5505,
        5524
      ],
      "op": "LT",
      "path": "12"
    },
    "1904": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1905": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7B1"
    },
    "1908": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1909": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 8,
      "value": "0x785"
    },
    "1912": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5568
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1914": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5573,
        5574
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1915": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1920": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5572
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1334"
    },
    "1923": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5575
      ],
      "op": "AND",
      "path": "12"
    },
    "1924": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1925": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1926": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5556
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1927": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5557,
        5558
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1928": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1929": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1930": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1931": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "LT",
      "path": "12"
    },
    "1932": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x791"
    },
    "1935": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1936": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "INVALID",
      "path": "12"
    },
    "1937": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5575
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1947": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5575
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1948": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5575
      ],
      "op": "AND",
      "path": "12"
    },
    "1949": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1951": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1952": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1953": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "MUL",
      "path": "12"
    },
    "1954": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1955": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1956": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1957": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "ADD",
      "path": "12"
    },
    "1958": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1959": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1960": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5559
      ],
      "op": "ADD",
      "path": "12"
    },
    "1961": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5545,
        5575
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1962": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5526,
        5529
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x1"
    },
    "1964": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5526,
        5529
      ],
      "op": "ADD",
      "path": "12"
    },
    "1965": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x763"
    },
    "1968": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1969": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5485,
        5586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5602,
        5613
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 10
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5620
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1974": {
      "fn": "YRegistry.getVaults",
      "jump": "o",
      "offset": [
        5342,
        5620
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1975": {
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1976": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1978": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "SUB"
    },
    "1987": {
      "offset": [
        563,
        588
      ],
      "op": "AND",
      "path": "12"
    },
    "1988": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1989": {
      "fn": "YRegistry.getVaults",
      "jump": "o",
      "offset": [
        563,
        588
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1990": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1991": {
      "offset": [
        7535,
        7545
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1993": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7535,
        7545
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "offset": [
        7535,
        7545
      ],
      "op": "AND",
      "path": "12"
    },
    "2003": {
      "offset": [
        7521,
        7531
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2004": {
      "offset": [
        7521,
        7545
      ],
      "op": "EQ",
      "path": "12"
    },
    "2005": {
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80F"
    },
    "2008": {
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2009": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2011": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2020": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2021": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2023": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2024": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2025": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2026": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2028": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2029": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2030": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2031": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "2032": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2033": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2034": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "2036": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2037": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2038": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2040": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2041": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2042": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "2045": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "2047": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2048": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "2049": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2051": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2052": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2053": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "2054": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "2055": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2057": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2058": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2059": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2060": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "2061": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2062": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2063": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2064": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1373
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 11,
      "value": "0x818"
    },
    "2067": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1366,
        1372
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2068": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1365
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBEB"
    },
    "2071": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1357,
        1373
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2072": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1373
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2073": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1383,
        1403
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2075": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1420,
        1426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1433
      ],
      "op": "AND",
      "path": "12"
    },
    "2085": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1433
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFBFA77CF"
    },
    "2090": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2092": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2093": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2094": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2099": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "AND",
      "path": "12"
    },
    "2100": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "2102": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SHL",
      "path": "12"
    },
    "2103": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2104": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2105": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2107": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ADD",
      "path": "12"
    },
    "2108": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2110": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2112": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2113": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2114": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2115": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SUB",
      "path": "12"
    },
    "2116": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2117": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2118": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2119": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2120": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "ISZERO"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x853"
    },
    "2126": {
      "op": "JUMPI"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2129": {
      "op": "DUP1"
    },
    "2130": {
      "op": "REVERT"
    },
    "2131": {
      "op": "JUMPDEST"
    },
    "2132": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "12"
    },
    "2133": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "GAS",
      "path": "12"
    },
    "2134": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "2135": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2136": {
      "op": "DUP1"
    },
    "2137": {
      "op": "ISZERO"
    },
    "2138": {
      "op": "PUSH2",
      "value": "0x867"
    },
    "2141": {
      "op": "JUMPI"
    },
    "2142": {
      "op": "RETURNDATASIZE"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "DUP1"
    },
    "2146": {
      "op": "RETURNDATACOPY"
    },
    "2147": {
      "op": "RETURNDATASIZE"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2150": {
      "op": "REVERT"
    },
    "2151": {
      "op": "JUMPDEST"
    },
    "2152": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "12"
    },
    "2153": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "12"
    },
    "2154": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "12"
    },
    "2155": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "12"
    },
    "2156": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2158": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2159": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "op": "DUP2"
    },
    "2163": {
      "op": "LT"
    },
    "2164": {
      "op": "ISZERO"
    },
    "2165": {
      "op": "PUSH2",
      "value": "0x87D"
    },
    "2168": {
      "op": "JUMPI"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2171": {
      "op": "DUP1"
    },
    "2172": {
      "op": "REVERT"
    },
    "2173": {
      "op": "JUMPDEST"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2176": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1482
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 12,
      "value": "0x88B"
    },
    "2181": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1461,
        1467
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2182": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2183": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1460
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1361"
    },
    "2186": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1445,
        1482
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2187": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1482
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2188": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1494,
        1512
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2190": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x896"
    },
    "2193": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1537,
        1543
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2194": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1536
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCDD"
    },
    "2197": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1524,
        1544
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2198": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2199": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "12"
    },
    "2200": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "12"
    },
    "2201": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "12"
    },
    "2202": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "12"
    },
    "2203": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2204": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "12"
    },
    "2205": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1617
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 13,
      "value": "0x8A5"
    },
    "2208": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1606,
        1616
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2209": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1605
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1304"
    },
    "2212": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1592,
        1617
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2213": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1617
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2214": {
      "offset": [
        7599,
        7600
      ],
      "op": "POP",
      "path": "12"
    },
    "2215": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7599,
        7600
      ],
      "op": "POP",
      "path": "12"
    },
    "2216": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "POP",
      "path": "12"
    },
    "2217": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "o",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2218": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2219": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6126,
        6158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2221": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6172,
        6204
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2222": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6218,
        6245
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2224": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6259,
        6289
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2225": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6303,
        6331
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "2227": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6345,
        6375
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2228": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6432,
        6447
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 14,
      "value": "0x8BD"
    },
    "2231": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6432,
        6438
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2233": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6432,
        6445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2236": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6432,
        6447
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2237": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6432,
        6447
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2238": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2240": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2241": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2242": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2243": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2244": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2245": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2246": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2248": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "MUL",
      "path": "12"
    },
    "2249": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2251": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "ADD",
      "path": "12"
    },
    "2252": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2253": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "ADD",
      "path": "12"
    },
    "2254": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2256": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2257": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2258": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2259": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E6"
    },
    "2262": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2263": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2264": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2266": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "ADD",
      "path": "12"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2269": {
      "op": "DUP3"
    },
    "2270": {
      "op": "MUL"
    },
    "2271": {
      "op": "DUP1"
    },
    "2272": {
      "op": "CODESIZE"
    },
    "2273": {
      "op": "DUP4"
    },
    "2274": {
      "op": "CODECOPY"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "SWAP1"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2279": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6448
      ],
      "op": "POP",
      "path": "12"
    },
    "2280": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6400,
        6448
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2281": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6400,
        6448
      ],
      "op": "POP",
      "path": "12"
    },
    "2282": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6490,
        6505
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 15,
      "value": "0x8F3"
    },
    "2285": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6490,
        6496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2287": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6490,
        6503
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2290": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6490,
        6505
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2291": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6490,
        6505
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2292": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2294": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2295": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2296": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2297": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2298": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2299": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2300": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2302": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "MUL",
      "path": "12"
    },
    "2303": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2305": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "ADD",
      "path": "12"
    },
    "2306": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2307": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "ADD",
      "path": "12"
    },
    "2308": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2310": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2311": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2312": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2313": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x91C"
    },
    "2316": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2317": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2318": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2320": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "ADD",
      "path": "12"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "MUL"
    },
    "2325": {
      "op": "DUP1"
    },
    "2326": {
      "op": "CODESIZE"
    },
    "2327": {
      "op": "DUP4"
    },
    "2328": {
      "op": "CODECOPY"
    },
    "2329": {
      "op": "ADD"
    },
    "2330": {
      "op": "SWAP1"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2333": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6476,
        6506
      ],
      "op": "POP",
      "path": "12"
    },
    "2334": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6458,
        6506
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2335": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6458,
        6506
      ],
      "op": "POP",
      "path": "12"
    },
    "2336": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6543,
        6558
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 16,
      "value": "0x929"
    },
    "2339": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6543,
        6549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2341": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6543,
        6556
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2344": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6543,
        6558
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2345": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6543,
        6558
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2346": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2348": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2349": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2350": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2351": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2352": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2353": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2354": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2356": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "MUL",
      "path": "12"
    },
    "2357": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2359": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "ADD",
      "path": "12"
    },
    "2360": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2361": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "ADD",
      "path": "12"
    },
    "2362": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2364": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2365": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2366": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2367": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x952"
    },
    "2370": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2371": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2372": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2374": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "ADD",
      "path": "12"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2377": {
      "op": "DUP3"
    },
    "2378": {
      "op": "MUL"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "op": "CODESIZE"
    },
    "2381": {
      "op": "DUP4"
    },
    "2382": {
      "op": "CODECOPY"
    },
    "2383": {
      "op": "ADD"
    },
    "2384": {
      "op": "SWAP1"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2387": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6559
      ],
      "op": "POP",
      "path": "12"
    },
    "2388": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6516,
        6559
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2389": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6516,
        6559
      ],
      "op": "POP",
      "path": "12"
    },
    "2390": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6599,
        6614
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0x95F"
    },
    "2393": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6599,
        6605
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2395": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6599,
        6612
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2398": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6599,
        6614
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2399": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6599,
        6614
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2400": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2402": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2403": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2404": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2405": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2406": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2407": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2408": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2410": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "MUL",
      "path": "12"
    },
    "2411": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2413": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "ADD",
      "path": "12"
    },
    "2414": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2415": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "ADD",
      "path": "12"
    },
    "2416": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2418": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2419": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2420": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2421": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x988"
    },
    "2424": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2425": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2426": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2428": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "ADD",
      "path": "12"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2431": {
      "op": "DUP3"
    },
    "2432": {
      "op": "MUL"
    },
    "2433": {
      "op": "DUP1"
    },
    "2434": {
      "op": "CODESIZE"
    },
    "2435": {
      "op": "DUP4"
    },
    "2436": {
      "op": "CODECOPY"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "op": "SWAP1"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2441": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6585,
        6615
      ],
      "op": "POP",
      "path": "12"
    },
    "2442": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6569,
        6615
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2443": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6569,
        6615
      ],
      "op": "POP",
      "path": "12"
    },
    "2444": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6653,
        6668
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 18,
      "value": "0x995"
    },
    "2447": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6653,
        6659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2449": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6653,
        6666
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2452": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6653,
        6668
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2453": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6653,
        6668
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2454": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2456": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2457": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2458": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2459": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2460": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2461": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2462": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2464": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "MUL",
      "path": "12"
    },
    "2465": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2467": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "ADD",
      "path": "12"
    },
    "2468": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2469": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "ADD",
      "path": "12"
    },
    "2470": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2472": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2473": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2474": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2475": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9BE"
    },
    "2478": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2479": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2480": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2482": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "ADD",
      "path": "12"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2485": {
      "op": "DUP3"
    },
    "2486": {
      "op": "MUL"
    },
    "2487": {
      "op": "DUP1"
    },
    "2488": {
      "op": "CODESIZE"
    },
    "2489": {
      "op": "DUP4"
    },
    "2490": {
      "op": "CODECOPY"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "op": "SWAP1"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2495": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6642,
        6669
      ],
      "op": "POP",
      "path": "12"
    },
    "2496": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6625,
        6669
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2497": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6625,
        6669
      ],
      "op": "POP",
      "path": "12"
    },
    "2498": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6709,
        6724
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 19,
      "value": "0x9CB"
    },
    "2501": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6709,
        6715
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2503": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6709,
        6722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2506": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6709,
        6724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2507": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6709,
        6724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2508": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2510": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2511": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2512": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2513": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2514": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2515": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2516": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2518": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "MUL",
      "path": "12"
    },
    "2519": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2521": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "ADD",
      "path": "12"
    },
    "2522": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2523": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "ADD",
      "path": "12"
    },
    "2524": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2526": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2527": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2528": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2529": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F4"
    },
    "2532": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2533": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2534": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2536": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "ADD",
      "path": "12"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "MUL"
    },
    "2541": {
      "op": "DUP1"
    },
    "2542": {
      "op": "CODESIZE"
    },
    "2543": {
      "op": "DUP4"
    },
    "2544": {
      "op": "CODECOPY"
    },
    "2545": {
      "op": "ADD"
    },
    "2546": {
      "op": "SWAP1"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6698,
        6725
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6679,
        6725
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6741,
        6750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2554": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2555": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6760,
        6775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA04"
    },
    "2558": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6760,
        6766
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2560": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6760,
        6773
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132D"
    },
    "2563": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6760,
        6775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2564": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6760,
        6775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2565": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6756,
        6757
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2566": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6756,
        6775
      ],
      "op": "LT",
      "path": "12"
    },
    "2567": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2568": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB3D"
    },
    "2571": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2572": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6830
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 20,
      "value": "0xA1C"
    },
    "2575": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2577": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6828,
        6829
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2578": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6830
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2583": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6827
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1334"
    },
    "2586": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6830
      ],
      "op": "AND",
      "path": "12"
    },
    "2587": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6817,
        6830
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2588": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6817,
        6830
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2589": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6811
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2590": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6812,
        6813
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2591": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2592": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2593": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2594": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "LT",
      "path": "12"
    },
    "2595": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA28"
    },
    "2598": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2599": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2600": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "SUB"
    },
    "2609": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6830
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2610": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6830
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2611": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6830
      ],
      "op": "AND",
      "path": "12"
    },
    "2612": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2614": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2615": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2616": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "MUL",
      "path": "12"
    },
    "2617": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2618": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2619": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2620": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "ADD",
      "path": "12"
    },
    "2621": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2622": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2623": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6814
      ],
      "op": "ADD",
      "path": "12"
    },
    "2624": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6796,
        6830
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2625": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6845,
        6864
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2627": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6845,
        6864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2628": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6845,
        6864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2629": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6845,
        6864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2630": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6845,
        6864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2631": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6939,
        6966
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5F"
    },
    "2634": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5A"
    },
    "2637": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2639": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6963,
        6964
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2640": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6965
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2645": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6962
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1334"
    },
    "2648": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6965
      ],
      "op": "AND",
      "path": "12"
    },
    "2649": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6952,
        6965
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2650": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6952,
        6965
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2651": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6939,
        6951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCDD"
    },
    "2654": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6939,
        6966
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2655": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6939,
        6966
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2656": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2657": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "POP",
      "path": "12"
    },
    "2658": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2659": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "POP",
      "path": "12"
    },
    "2660": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2661": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "POP",
      "path": "12"
    },
    "2662": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2663": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "POP",
      "path": "12"
    },
    "2664": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2665": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6844,
        6966
      ],
      "op": "POP",
      "path": "12"
    },
    "2666": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7001,
        7012
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 21
    },
    "2667": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6995
      ],
      "op": "DUP12",
      "path": "12"
    },
    "2668": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6996,
        6997
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2669": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2670": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2671": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2672": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "LT",
      "path": "12"
    },
    "2673": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA76"
    },
    "2676": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2677": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2678": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2679": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2681": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "MUL",
      "path": "12"
    },
    "2682": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2684": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "ADD",
      "path": "12"
    },
    "2685": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        6998
      ],
      "op": "ADD",
      "path": "12"
    },
    "2686": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "op": "SUB"
    },
    "2695": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "AND",
      "path": "12"
    },
    "2696": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2697": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "op": "SUB"
    },
    "2706": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "AND",
      "path": "12"
    },
    "2707": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2708": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2709": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "POP",
      "path": "12"
    },
    "2710": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6980,
        7012
      ],
      "op": "POP",
      "path": "12"
    },
    "2711": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7042,
        7048
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 22
    },
    "2712": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7036
      ],
      "op": "DUP11",
      "path": "12"
    },
    "2713": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7037,
        7038
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2714": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2715": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2716": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2717": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "LT",
      "path": "12"
    },
    "2718": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAA3"
    },
    "2721": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2722": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2723": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2724": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2726": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "MUL",
      "path": "12"
    },
    "2727": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2729": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "ADD",
      "path": "12"
    },
    "2730": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7039
      ],
      "op": "ADD",
      "path": "12"
    },
    "2731": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "AND",
      "path": "12"
    },
    "2741": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2742": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "op": "SUB"
    },
    "2751": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "AND",
      "path": "12"
    },
    "2752": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2753": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2754": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "POP",
      "path": "12"
    },
    "2755": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7026,
        7048
      ],
      "op": "POP",
      "path": "12"
    },
    "2756": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7081,
        7090
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 23
    },
    "2757": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7075
      ],
      "op": "DUP10",
      "path": "12"
    },
    "2758": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7076,
        7077
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2759": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2760": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2761": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2762": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "LT",
      "path": "12"
    },
    "2763": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAD0"
    },
    "2766": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2767": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2768": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2769": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2771": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "MUL",
      "path": "12"
    },
    "2772": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2774": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "ADD",
      "path": "12"
    },
    "2775": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7078
      ],
      "op": "ADD",
      "path": "12"
    },
    "2776": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "op": "SUB"
    },
    "2785": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "AND",
      "path": "12"
    },
    "2786": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2787": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "AND",
      "path": "12"
    },
    "2797": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2798": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2799": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "POP",
      "path": "12"
    },
    "2800": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7062,
        7090
      ],
      "op": "POP",
      "path": "12"
    },
    "2801": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7124,
        7134
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 24
    },
    "2802": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7118
      ],
      "op": "DUP9",
      "path": "12"
    },
    "2803": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7119,
        7120
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2804": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2805": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2806": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2807": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "LT",
      "path": "12"
    },
    "2808": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAFD"
    },
    "2811": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2812": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2813": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2814": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2816": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "MUL",
      "path": "12"
    },
    "2817": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2819": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "ADD",
      "path": "12"
    },
    "2820": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7121
      ],
      "op": "ADD",
      "path": "12"
    },
    "2821": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2822": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2823": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2824": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2825": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2826": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2827": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2828": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2829": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2830": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "POP",
      "path": "12"
    },
    "2831": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7104,
        7134
      ],
      "op": "POP",
      "path": "12"
    },
    "2832": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7170,
        7182
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 25
    },
    "2833": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7164
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2834": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7165,
        7166
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2835": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2836": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2837": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2838": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "LT",
      "path": "12"
    },
    "2839": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB1C"
    },
    "2842": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2843": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "INVALID",
      "path": "12"
    },
    "2844": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2845": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2846": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7182
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2847": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7182
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2848": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2850": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2851": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2852": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "MUL",
      "path": "12"
    },
    "2853": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2854": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2855": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2856": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "ADD",
      "path": "12"
    },
    "2857": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2858": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2859": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7167
      ],
      "op": "ADD",
      "path": "12"
    },
    "2860": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        7148,
        7182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2861": {
      "op": "POP"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6777,
        6780
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 26,
      "value": "0x1"
    },
    "2865": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6777,
        6780
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2866": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6777,
        6780
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2867": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6777,
        6780
      ],
      "op": "ADD",
      "path": "12"
    },
    "2868": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6777,
        6780
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9FA"
    },
    "2873": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2877": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2878": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6736,
        7193
      ],
      "op": "POP",
      "path": "12"
    },
    "2879": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2880": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2881": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2882": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2883": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "2884": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6041,
        7199
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2885": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "o",
      "offset": [
        6041,
        7199
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2886": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2887": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5724,
        5742
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2889": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5756,
        5769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2890": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5783,
        5799
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2892": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5813,
        5827
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2893": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5841,
        5857
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2895": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5938,
        5958
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 27,
      "value": "0xB57"
    },
    "2898": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5951,
        5957
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2899": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5938,
        5950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCDD"
    },
    "2902": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "i",
      "offset": [
        5938,
        5958
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2903": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5938,
        5958
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2904": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2905": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP11",
      "path": "12"
    },
    "2906": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2907": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2910": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP8",
      "path": "12"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2915": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5882,
        5958
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5626,
        6035
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "o",
      "offset": [
        5626,
        6035
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2921": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2922": {
      "fn": "YRegistry.getVault",
      "offset": [
        5176,
        5189
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2924": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5225
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 28,
      "value": "0xB7C"
    },
    "2927": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2929": {
      "fn": "YRegistry.getVault",
      "offset": [
        5219,
        5224
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2930": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5225
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2935": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5218
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1334"
    },
    "2938": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5225
      ],
      "op": "AND",
      "path": "12"
    },
    "2939": {
      "fn": "YRegistry.getVault",
      "jump": "i",
      "offset": [
        5208,
        5225
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2940": {
      "fn": "YRegistry.getVault",
      "offset": [
        5208,
        5225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2941": {
      "fn": "YRegistry.getVault",
      "offset": [
        5201,
        5225
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2942": {
      "fn": "YRegistry.getVault",
      "offset": [
        5120,
        5232
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "fn": "YRegistry.getVault",
      "jump": "o",
      "offset": [
        5120,
        5232
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2946": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3091,
        3188
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2947": {
      "offset": [
        7535,
        7545
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2949": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7535,
        7545
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2956": {
      "op": "SHL"
    },
    "2957": {
      "op": "SUB"
    },
    "2958": {
      "offset": [
        7535,
        7545
      ],
      "op": "AND",
      "path": "12"
    },
    "2959": {
      "offset": [
        7521,
        7531
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2960": {
      "offset": [
        7521,
        7545
      ],
      "op": "EQ",
      "path": "12"
    },
    "2961": {
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBCB"
    },
    "2964": {
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2965": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2967": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2976": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2977": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2979": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2980": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2981": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2982": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2984": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2985": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2986": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2987": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "2988": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2989": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2990": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "2992": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2993": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2994": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2996": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "2997": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2998": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x165B"
    },
    "3001": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "3003": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3004": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "3005": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3007": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "ADD",
      "path": "12"
    },
    "3008": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3009": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "3010": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "POP",
      "path": "12"
    },
    "3011": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3013": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3014": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3015": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3016": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SUB",
      "path": "12"
    },
    "3017": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3018": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3019": {
      "fn": "YRegistry.removeVault",
      "offset": [
        7513,
        7589
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3020": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3160,
        3181
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 29,
      "value": "0x64E"
    },
    "3023": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3160,
        3166
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3025": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3174,
        3180
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3026": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3160,
        3181
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3031": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3160,
        3173
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F2"
    },
    "3034": {
      "fn": "YRegistry.removeVault",
      "offset": [
        3160,
        3181
      ],
      "op": "AND",
      "path": "12"
    },
    "3035": {
      "fn": "YRegistry.removeVault",
      "jump": "i",
      "offset": [
        3160,
        3181
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3036": {
      "offset": [
        594,
        626
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3037": {
      "fn": "YRegistry.removeVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3039": {
      "fn": "YRegistry.removeVault",
      "offset": [
        594,
        626
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3046": {
      "op": "SHL"
    },
    "3047": {
      "op": "SUB"
    },
    "3048": {
      "offset": [
        594,
        626
      ],
      "op": "AND",
      "path": "12"
    },
    "3049": {
      "fn": "YRegistry.removeVault",
      "offset": [
        594,
        626
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3050": {
      "fn": "YRegistry.removeVault",
      "jump": "o",
      "offset": [
        594,
        626
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3051": {
      "fn": "YRegistry.setVault",
      "offset": [
        2178,
        2485
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3052": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2258
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 30,
      "value": "0xBFD"
    },
    "3055": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2245
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3062": {
      "op": "SHL"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2256
      ],
      "op": "AND",
      "path": "12"
    },
    "3065": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2256
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1505"
    },
    "3068": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2239,
        2258
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3069": {
      "branch": 62,
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2258
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3070": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC4E"
    },
    "3073": {
      "branch": 62,
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3074": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3076": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3077": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3086": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3087": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3089": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3091": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3092": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "12"
    },
    "3093": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3094": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x17"
    },
    "3096": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3098": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3099": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "12"
    },
    "3100": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3101": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x5661756C74206973206E6F74206120636F6E7472616374000000000000000000"
    },
    "3134": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "3136": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3137": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "12"
    },
    "3138": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3139": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3140": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3141": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3142": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3143": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3144": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SUB",
      "path": "12"
    },
    "3145": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "3147": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "12"
    },
    "3148": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3149": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3150": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3151": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 31,
      "value": "0xC5F"
    },
    "3154": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2362
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3156": {
      "fn": "YRegistry.setVault",
      "offset": [
        2372,
        2378
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3157": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3162": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2371
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1541"
    },
    "3165": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "AND",
      "path": "12"
    },
    "3166": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2356,
        2379
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3167": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3168": {
      "branch": 63,
      "fn": "YRegistry.setVault",
      "offset": [
        2355,
        2379
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3169": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCA8"
    },
    "3172": {
      "branch": 63,
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3173": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3175": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3176": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3185": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3186": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3188": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3190": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3191": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "12"
    },
    "3192": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3193": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x14"
    },
    "3195": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3197": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3198": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "12"
    },
    "3199": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3200": {
      "op": "PUSH20",
      "value": "0x5661756C7420616C726561647920657869737473"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "3226": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3227": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "12"
    },
    "3228": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3229": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3230": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3231": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3232": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3233": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3234": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SUB",
      "path": "12"
    },
    "3235": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "3237": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "12"
    },
    "3238": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3239": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3240": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3241": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 32,
      "value": "0x64E"
    },
    "3244": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2466
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3246": {
      "fn": "YRegistry.setVault",
      "offset": [
        2471,
        2477
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3247": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3252": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2470
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x155F"
    },
    "3255": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "AND",
      "path": "12"
    },
    "3256": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2460,
        2478
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3257": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2703,
        2869
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3264": {
      "op": "SHL"
    },
    "3265": {
      "op": "SUB"
    },
    "3266": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "AND",
      "path": "12",
      "statement": 33
    },
    "3267": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3269": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3270": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3271": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3272": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2847
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "3274": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3276": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3277": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3279": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3280": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3281": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3282": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3285": {
      "op": "NOT"
    },
    "3286": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "AND",
      "path": "12"
    },
    "3287": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2858,
        2862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3289": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "OR",
      "path": "12"
    },
    "3290": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3291": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3292": {
      "fn": "YRegistry.setDelegatedVault",
      "jump": "o",
      "offset": [
        2703,
        2869
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3293": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 34
    },
    "3303": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3304": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "AND",
      "path": "12"
    },
    "3305": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3307": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3308": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3309": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3310": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3507
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "3312": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3314": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3315": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3317": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3318": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3319": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3320": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3321": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3322": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3323": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3324": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3325": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3326": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3515
      ],
      "op": "AND",
      "path": "12"
    },
    "3327": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3529
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3328": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3529
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3329": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3529
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3330": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3494,
        3529
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3331": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3332": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3292,
        3310
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3333": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3466,
        3472
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3334": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3466,
        3472
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3335": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3539,
        3608
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD27"
    },
    "3338": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3539,
        3608
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "op": "SUB"
    },
    "3348": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 35
    },
    "3349": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3350": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "AND",
      "path": "12"
    },
    "3351": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3353": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3354": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3355": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3356": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3589
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "3358": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3360": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3361": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3363": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3364": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3365": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3366": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3576,
        3597
      ],
      "op": "AND",
      "path": "12"
    },
    "3367": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3539,
        3608
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 36
    },
    "3377": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "AND",
      "path": "12"
    },
    "3378": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3380": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3381": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3382": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3383": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "3385": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3387": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3388": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3389": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3390": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3392": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3393": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3394": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3395": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3396": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3397": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 37
    },
    "3398": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3399": {
      "op": "PUSH4",
      "value": "0xF77C4791"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3408": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3409": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3410": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3411": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "3413": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3414": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3415": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "AND",
      "path": "12"
    },
    "3416": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3740
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF77C4791"
    },
    "3423": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3740
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3424": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3426": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3427": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3428": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "ADD",
      "path": "12"
    },
    "3429": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3430": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3431": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3432": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3433": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3434": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SUB",
      "path": "12"
    },
    "3435": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "ADD",
      "path": "12"
    },
    "3436": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3437": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3631,
        3654
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3438": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3439": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3440": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3441": {
      "op": "DUP1"
    },
    "3442": {
      "op": "ISZERO"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xD7B"
    },
    "3446": {
      "op": "JUMPI"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3449": {
      "op": "DUP1"
    },
    "3450": {
      "op": "REVERT"
    },
    "3451": {
      "op": "JUMPDEST"
    },
    "3452": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "POP",
      "path": "12"
    },
    "3453": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "GAS",
      "path": "12"
    },
    "3454": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3455": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3456": {
      "op": "DUP1"
    },
    "3457": {
      "op": "ISZERO"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD8F"
    },
    "3461": {
      "op": "JUMPI"
    },
    "3462": {
      "op": "RETURNDATASIZE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "RETURNDATACOPY"
    },
    "3467": {
      "op": "RETURNDATASIZE"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3470": {
      "op": "REVERT"
    },
    "3471": {
      "op": "JUMPDEST"
    },
    "3472": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "POP",
      "path": "12"
    },
    "3473": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "POP",
      "path": "12"
    },
    "3474": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "POP",
      "path": "12"
    },
    "3475": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "POP",
      "path": "12"
    },
    "3476": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3478": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3479": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3482": {
      "op": "DUP2"
    },
    "3483": {
      "op": "LT"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3488": {
      "op": "JUMPI"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3491": {
      "op": "DUP1"
    },
    "3492": {
      "op": "REVERT"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3496": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3716,
        3742
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "branch": 64,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3765
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3499": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3500": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3501": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE2D"
    },
    "3504": {
      "branch": 64,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3505": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "POP",
      "path": "12"
    },
    "3506": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3807,
        3808
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3514": {
      "op": "SHL"
    },
    "3515": {
      "op": "SUB"
    },
    "3516": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3809
      ],
      "op": "AND",
      "path": "12"
    },
    "3517": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3776,
        3781
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "op": "SUB"
    },
    "3526": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3793
      ],
      "op": "AND",
      "path": "12"
    },
    "3527": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3793
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6F307DC3"
    },
    "3532": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3534": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3535": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3536": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3541": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "AND",
      "path": "12"
    },
    "3542": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "3544": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "SHL",
      "path": "12"
    },
    "3545": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3546": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3547": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3549": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "ADD",
      "path": "12"
    },
    "3550": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3552": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3554": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3555": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3556": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3557": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "SUB",
      "path": "12"
    },
    "3558": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3559": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3560": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3561": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3562": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3563": {
      "op": "DUP1"
    },
    "3564": {
      "op": "ISZERO"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "REVERT"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "POP",
      "path": "12"
    },
    "3575": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "GAS",
      "path": "12"
    },
    "3576": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3577": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3578": {
      "op": "DUP1"
    },
    "3579": {
      "op": "ISZERO"
    },
    "3580": {
      "op": "PUSH2",
      "value": "0xE09"
    },
    "3583": {
      "op": "JUMPI"
    },
    "3584": {
      "op": "RETURNDATASIZE"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3587": {
      "op": "DUP1"
    },
    "3588": {
      "op": "RETURNDATACOPY"
    },
    "3589": {
      "op": "RETURNDATASIZE"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3592": {
      "op": "REVERT"
    },
    "3593": {
      "op": "JUMPDEST"
    },
    "3594": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "POP",
      "path": "12"
    },
    "3595": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "POP",
      "path": "12"
    },
    "3596": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "POP",
      "path": "12"
    },
    "3597": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "POP",
      "path": "12"
    },
    "3598": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3600": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3601": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3604": {
      "op": "DUP2"
    },
    "3605": {
      "op": "LT"
    },
    "3606": {
      "op": "ISZERO"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xE1F"
    },
    "3610": {
      "op": "JUMPI"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3613": {
      "op": "DUP1"
    },
    "3614": {
      "op": "REVERT"
    },
    "3615": {
      "op": "JUMPDEST"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3795
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3624": {
      "op": "SHL"
    },
    "3625": {
      "op": "SUB"
    },
    "3626": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3809
      ],
      "op": "AND",
      "path": "12"
    },
    "3627": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3809
      ],
      "op": "EQ",
      "path": "12"
    },
    "3628": {
      "branch": 65,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3769,
        3809
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3629": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3756,
        3809
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3630": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3631": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE9E"
    },
    "3634": {
      "branch": 65,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3635": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3840,
        3846
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 38
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3642": {
      "op": "SHL"
    },
    "3643": {
      "op": "SUB"
    },
    "3644": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3853
      ],
      "op": "AND",
      "path": "12"
    },
    "3645": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3853
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFC0C546A"
    },
    "3650": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3652": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3653": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3654": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3659": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "AND",
      "path": "12"
    },
    "3660": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "3662": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "SHL",
      "path": "12"
    },
    "3663": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3664": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3665": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3667": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "ADD",
      "path": "12"
    },
    "3668": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3670": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3672": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3673": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3674": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3675": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "SUB",
      "path": "12"
    },
    "3676": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3677": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3678": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3679": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3680": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3681": {
      "op": "DUP1"
    },
    "3682": {
      "op": "ISZERO"
    },
    "3683": {
      "op": "PUSH2",
      "value": "0xE6B"
    },
    "3686": {
      "op": "JUMPI"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3689": {
      "op": "DUP1"
    },
    "3690": {
      "op": "REVERT"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "POP",
      "path": "12"
    },
    "3693": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "GAS",
      "path": "12"
    },
    "3694": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3695": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "ISZERO"
    },
    "3698": {
      "op": "PUSH2",
      "value": "0xE7F"
    },
    "3701": {
      "op": "JUMPI"
    },
    "3702": {
      "op": "RETURNDATASIZE"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3705": {
      "op": "DUP1"
    },
    "3706": {
      "op": "RETURNDATACOPY"
    },
    "3707": {
      "op": "RETURNDATASIZE"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "REVERT"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "POP",
      "path": "12"
    },
    "3713": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "POP",
      "path": "12"
    },
    "3714": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "POP",
      "path": "12"
    },
    "3715": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "POP",
      "path": "12"
    },
    "3716": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3718": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3719": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3722": {
      "op": "DUP2"
    },
    "3723": {
      "op": "LT"
    },
    "3724": {
      "op": "ISZERO"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE95"
    },
    "3728": {
      "op": "JUMPI"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "DUP1"
    },
    "3732": {
      "op": "REVERT"
    },
    "3733": {
      "op": "JUMPDEST"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3736": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3833,
        3855
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF06"
    },
    "3741": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3742": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3743": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3926,
        3931
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 39
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3750": {
      "op": "SHL"
    },
    "3751": {
      "op": "SUB"
    },
    "3752": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3938
      ],
      "op": "AND",
      "path": "12"
    },
    "3753": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3938
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFC0C546A"
    },
    "3758": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3760": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3761": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3762": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3767": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "AND",
      "path": "12"
    },
    "3768": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "3770": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "SHL",
      "path": "12"
    },
    "3771": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3772": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3773": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3775": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "ADD",
      "path": "12"
    },
    "3776": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3778": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3780": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3781": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3782": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3783": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "SUB",
      "path": "12"
    },
    "3784": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3785": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3786": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3787": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3788": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "ISZERO"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xED7"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "REVERT"
    },
    "3799": {
      "op": "JUMPDEST"
    },
    "3800": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "POP",
      "path": "12"
    },
    "3801": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "GAS",
      "path": "12"
    },
    "3802": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3803": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3804": {
      "op": "DUP1"
    },
    "3805": {
      "op": "ISZERO"
    },
    "3806": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3809": {
      "op": "JUMPI"
    },
    "3810": {
      "op": "RETURNDATASIZE"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "DUP1"
    },
    "3814": {
      "op": "RETURNDATACOPY"
    },
    "3815": {
      "op": "RETURNDATASIZE"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3818": {
      "op": "REVERT"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "POP",
      "path": "12"
    },
    "3821": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "POP",
      "path": "12"
    },
    "3822": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "POP",
      "path": "12"
    },
    "3823": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "POP",
      "path": "12"
    },
    "3824": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3826": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3827": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3830": {
      "op": "DUP2"
    },
    "3831": {
      "op": "LT"
    },
    "3832": {
      "op": "ISZERO"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xF01"
    },
    "3836": {
      "op": "JUMPI"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3839": {
      "op": "DUP1"
    },
    "3840": {
      "op": "REVERT"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "POP"
    },
    "3843": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3844": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3919,
        3940
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3845": {
      "op": "POP"
    },
    "3846": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3752,
        3951
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3847": {
      "branch": 66,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3965,
        3976
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3848": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3849": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF95"
    },
    "3852": {
      "branch": 66,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3853": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4015,
        4025
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 40
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3860": {
      "op": "SHL"
    },
    "3861": {
      "op": "SUB"
    },
    "3862": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4037
      ],
      "op": "AND",
      "path": "12"
    },
    "3863": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4037
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x39EBF823"
    },
    "3868": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4038,
        4043
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3869": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3871": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3872": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3873": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3878": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "3879": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "3881": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "SHL",
      "path": "12"
    },
    "3882": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3883": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3884": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3886": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "ADD",
      "path": "12"
    },
    "3887": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3888": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "op": "SUB"
    },
    "3897": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3904": {
      "op": "SHL"
    },
    "3905": {
      "op": "SUB"
    },
    "3906": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "AND",
      "path": "12"
    },
    "3907": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3908": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3909": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3911": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "ADD",
      "path": "12"
    },
    "3912": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3913": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3914": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3915": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3917": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3919": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3920": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3921": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3922": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "SUB",
      "path": "12"
    },
    "3923": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3924": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3925": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3926": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3927": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "ISZERO"
    },
    "3930": {
      "op": "PUSH2",
      "value": "0xF62"
    },
    "3933": {
      "op": "JUMPI"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "REVERT"
    },
    "3938": {
      "op": "JUMPDEST"
    },
    "3939": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3940": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "GAS",
      "path": "12"
    },
    "3941": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3942": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "ISZERO"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xF76"
    },
    "3948": {
      "op": "JUMPI"
    },
    "3949": {
      "op": "RETURNDATASIZE"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3952": {
      "op": "DUP1"
    },
    "3953": {
      "op": "RETURNDATACOPY"
    },
    "3954": {
      "op": "RETURNDATASIZE"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3957": {
      "op": "REVERT"
    },
    "3958": {
      "op": "JUMPDEST"
    },
    "3959": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3960": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3961": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3962": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "POP",
      "path": "12"
    },
    "3963": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3965": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3966": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3969": {
      "op": "DUP2"
    },
    "3970": {
      "op": "LT"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8C"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3978": {
      "op": "DUP1"
    },
    "3979": {
      "op": "REVERT"
    },
    "3980": {
      "op": "JUMPDEST"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3983": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4003,
        4044
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101A"
    },
    "3988": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3989": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3990": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4098,
        4108
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 41
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "op": "SUB"
    },
    "3999": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4120
      ],
      "op": "AND",
      "path": "12"
    },
    "4000": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4120
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x39EBF823"
    },
    "4005": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4121,
        4126
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4006": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4008": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4009": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4010": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4015": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "AND",
      "path": "12"
    },
    "4016": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4018": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "SHL",
      "path": "12"
    },
    "4019": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4020": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4021": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4023": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "ADD",
      "path": "12"
    },
    "4024": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4025": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "op": "SUB"
    },
    "4034": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "AND",
      "path": "12"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4041": {
      "op": "SHL"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "AND",
      "path": "12"
    },
    "4044": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4045": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4046": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4048": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "ADD",
      "path": "12"
    },
    "4049": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4050": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4051": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4052": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4054": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4056": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4057": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4058": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4059": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "SUB",
      "path": "12"
    },
    "4060": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4061": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4062": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4063": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4064": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4065": {
      "op": "DUP1"
    },
    "4066": {
      "op": "ISZERO"
    },
    "4067": {
      "op": "PUSH2",
      "value": "0xFEB"
    },
    "4070": {
      "op": "JUMPI"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4073": {
      "op": "DUP1"
    },
    "4074": {
      "op": "REVERT"
    },
    "4075": {
      "op": "JUMPDEST"
    },
    "4076": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4077": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "GAS",
      "path": "12"
    },
    "4078": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4079": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "ISZERO"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xFFF"
    },
    "4085": {
      "op": "JUMPI"
    },
    "4086": {
      "op": "RETURNDATASIZE"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4089": {
      "op": "DUP1"
    },
    "4090": {
      "op": "RETURNDATACOPY"
    },
    "4091": {
      "op": "RETURNDATASIZE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4094": {
      "op": "REVERT"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4097": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4098": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4099": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "POP",
      "path": "12"
    },
    "4100": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4102": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4103": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4106": {
      "op": "DUP2"
    },
    "4107": {
      "op": "LT"
    },
    "4108": {
      "op": "ISZERO"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1015"
    },
    "4112": {
      "op": "JUMPI"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "DUP1"
    },
    "4116": {
      "op": "REVERT"
    },
    "4117": {
      "op": "JUMPDEST"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4120": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4086,
        4127
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4121": {
      "op": "POP"
    },
    "4122": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3961,
        4138
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4123": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4205,
        4228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4125": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4126": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4127": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10AB"
    },
    "4130": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4131": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4312,
        4322
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 42
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "SUB"
    },
    "4140": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4330
      ],
      "op": "AND",
      "path": "12"
    },
    "4141": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4330
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA622EE7C"
    },
    "4146": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4331,
        4339
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4147": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4149": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4150": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4151": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4156": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "AND",
      "path": "12"
    },
    "4157": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4159": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "SHL",
      "path": "12"
    },
    "4160": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4161": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4162": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4164": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "ADD",
      "path": "12"
    },
    "4165": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4166": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "op": "SUB"
    },
    "4175": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "AND",
      "path": "12"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4182": {
      "op": "SHL"
    },
    "4183": {
      "op": "SUB"
    },
    "4184": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "AND",
      "path": "12"
    },
    "4185": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4186": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4187": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4189": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "ADD",
      "path": "12"
    },
    "4190": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4191": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4192": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4193": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4195": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4197": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4198": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4199": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4200": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "SUB",
      "path": "12"
    },
    "4201": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4202": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4203": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4204": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4205": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4206": {
      "op": "DUP1"
    },
    "4207": {
      "op": "ISZERO"
    },
    "4208": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4211": {
      "op": "JUMPI"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4214": {
      "op": "DUP1"
    },
    "4215": {
      "op": "REVERT"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4218": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "GAS",
      "path": "12"
    },
    "4219": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4220": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "RETURNDATASIZE"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4230": {
      "op": "DUP1"
    },
    "4231": {
      "op": "RETURNDATACOPY"
    },
    "4232": {
      "op": "RETURNDATASIZE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4235": {
      "op": "REVERT"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4238": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4239": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4240": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "POP",
      "path": "12"
    },
    "4241": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4243": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4244": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4247": {
      "op": "DUP2"
    },
    "4248": {
      "op": "LT"
    },
    "4249": {
      "op": "ISZERO"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A2"
    },
    "4253": {
      "op": "JUMPI"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4256": {
      "op": "DUP1"
    },
    "4257": {
      "op": "REVERT"
    },
    "4258": {
      "op": "JUMPDEST"
    },
    "4259": {
      "op": "POP"
    },
    "4260": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4261": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4300,
        4340
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1130"
    },
    "4266": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4267": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4268": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4401,
        4411
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 43
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4275": {
      "op": "SHL"
    },
    "4276": {
      "op": "SUB"
    },
    "4277": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4419
      ],
      "op": "AND",
      "path": "12"
    },
    "4278": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4419
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA622EE7C"
    },
    "4283": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4420,
        4425
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4284": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4286": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4287": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4288": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4293": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "AND",
      "path": "12"
    },
    "4294": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4296": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "SHL",
      "path": "12"
    },
    "4297": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4298": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4299": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4301": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "ADD",
      "path": "12"
    },
    "4302": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4303": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4310": {
      "op": "SHL"
    },
    "4311": {
      "op": "SUB"
    },
    "4312": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "AND",
      "path": "12"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4319": {
      "op": "SHL"
    },
    "4320": {
      "op": "SUB"
    },
    "4321": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "AND",
      "path": "12"
    },
    "4322": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4323": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4324": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4326": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "ADD",
      "path": "12"
    },
    "4327": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4328": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4329": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4330": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4332": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4334": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4335": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4336": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4337": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "SUB",
      "path": "12"
    },
    "4338": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4339": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4340": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4341": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4342": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4343": {
      "op": "DUP1"
    },
    "4344": {
      "op": "ISZERO"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4348": {
      "op": "JUMPI"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4351": {
      "op": "DUP1"
    },
    "4352": {
      "op": "REVERT"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4355": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "GAS",
      "path": "12"
    },
    "4356": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4357": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4358": {
      "op": "DUP1"
    },
    "4359": {
      "op": "ISZERO"
    },
    "4360": {
      "op": "PUSH2",
      "value": "0x1115"
    },
    "4363": {
      "op": "JUMPI"
    },
    "4364": {
      "op": "RETURNDATASIZE"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4367": {
      "op": "DUP1"
    },
    "4368": {
      "op": "RETURNDATACOPY"
    },
    "4369": {
      "op": "RETURNDATASIZE"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4372": {
      "op": "REVERT"
    },
    "4373": {
      "op": "JUMPDEST"
    },
    "4374": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4375": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4376": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4377": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "POP",
      "path": "12"
    },
    "4378": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4380": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4381": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4384": {
      "op": "DUP2"
    },
    "4385": {
      "op": "LT"
    },
    "4386": {
      "op": "ISZERO"
    },
    "4387": {
      "op": "PUSH2",
      "value": "0x112B"
    },
    "4390": {
      "op": "JUMPI"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4393": {
      "op": "DUP1"
    },
    "4394": {
      "op": "REVERT"
    },
    "4395": {
      "op": "JUMPDEST"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4398": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4389,
        4426
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4251,
        4437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4401": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4473,
        4478
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 44
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4454,
        4478
      ],
      "op": "AND",
      "path": "12"
    },
    "4411": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4454,
        4469
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4454,
        4478
      ],
      "op": "AND",
      "path": "12"
    },
    "4421": {
      "branch": 67,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4454,
        4478
      ],
      "op": "EQ",
      "path": "12"
    },
    "4422": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1180"
    },
    "4425": {
      "branch": 67,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4426": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4428": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4435": {
      "op": "SHL"
    },
    "4436": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4437": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4438": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4440": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "ADD",
      "path": "12"
    },
    "4441": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4442": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4443": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4445": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "ADD",
      "path": "12"
    },
    "4446": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4447": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4448": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SUB",
      "path": "12"
    },
    "4449": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4450": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4451": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "4453": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4454": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4455": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4457": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "ADD",
      "path": "12"
    },
    "4458": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4459": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1634"
    },
    "4462": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x27"
    },
    "4464": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4465": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "4466": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4468": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "ADD",
      "path": "12"
    },
    "4469": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4470": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "POP",
      "path": "12"
    },
    "4471": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "POP",
      "path": "12"
    },
    "4472": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4474": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4475": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4476": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4477": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SUB",
      "path": "12"
    },
    "4478": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4479": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4480": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4446,
        4522
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4481": {
      "branch": 68,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4626,
        4635
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4482": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4483": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x123F"
    },
    "4486": {
      "branch": 68,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4487": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4651,
        4669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4489": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4679,
        4684
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4496": {
      "op": "SHL"
    },
    "4497": {
      "op": "SUB"
    },
    "4498": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4696
      ],
      "op": "AND",
      "path": "12"
    },
    "4499": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4696
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6F307DC3"
    },
    "4504": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4506": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4507": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4508": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4513": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "AND",
      "path": "12"
    },
    "4514": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4516": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "SHL",
      "path": "12"
    },
    "4517": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4518": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4519": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4521": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "ADD",
      "path": "12"
    },
    "4522": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4524": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4526": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4527": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4528": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4529": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "SUB",
      "path": "12"
    },
    "4530": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4531": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4532": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4533": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4534": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4535": {
      "op": "DUP1"
    },
    "4536": {
      "op": "ISZERO"
    },
    "4537": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4540": {
      "op": "JUMPI"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4543": {
      "op": "DUP1"
    },
    "4544": {
      "op": "REVERT"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "POP",
      "path": "12"
    },
    "4547": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "GAS",
      "path": "12"
    },
    "4548": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4549": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4550": {
      "op": "DUP1"
    },
    "4551": {
      "op": "ISZERO"
    },
    "4552": {
      "op": "PUSH2",
      "value": "0x11D5"
    },
    "4555": {
      "op": "JUMPI"
    },
    "4556": {
      "op": "RETURNDATASIZE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "DUP1"
    },
    "4560": {
      "op": "RETURNDATACOPY"
    },
    "4561": {
      "op": "RETURNDATASIZE"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4564": {
      "op": "REVERT"
    },
    "4565": {
      "op": "JUMPDEST"
    },
    "4566": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "POP",
      "path": "12"
    },
    "4567": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "POP",
      "path": "12"
    },
    "4568": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "POP",
      "path": "12"
    },
    "4569": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "POP",
      "path": "12"
    },
    "4570": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4572": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4573": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4576": {
      "op": "DUP2"
    },
    "4577": {
      "op": "LT"
    },
    "4578": {
      "op": "ISZERO"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x11EB"
    },
    "4582": {
      "op": "JUMPI"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4585": {
      "op": "DUP1"
    },
    "4586": {
      "op": "REVERT"
    },
    "4587": {
      "op": "JUMPDEST"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4590": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4672,
        4698
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "op": "SUB"
    },
    "4600": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 45
    },
    "4601": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4602": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "AND",
      "path": "12"
    },
    "4603": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4604": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "DUP9",
      "path": "12"
    },
    "4605": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "AND",
      "path": "12"
    },
    "4606": {
      "branch": 69,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4720,
        4739
      ],
      "op": "EQ",
      "path": "12"
    },
    "4607": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1239"
    },
    "4610": {
      "branch": 69,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4611": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4613": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4622": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4623": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4625": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "ADD",
      "path": "12"
    },
    "4626": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4627": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4628": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4630": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "ADD",
      "path": "12"
    },
    "4631": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4632": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4633": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SUB",
      "path": "12"
    },
    "4634": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4635": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4636": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x29"
    },
    "4638": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4639": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4640": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4642": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "ADD",
      "path": "12"
    },
    "4643": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4644": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15DD"
    },
    "4647": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x29"
    },
    "4649": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4650": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "4651": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4653": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "ADD",
      "path": "12"
    },
    "4654": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4655": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "POP",
      "path": "12"
    },
    "4656": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "POP",
      "path": "12"
    },
    "4657": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4659": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4660": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4661": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4662": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SUB",
      "path": "12"
    },
    "4663": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4664": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4665": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4712,
        4785
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4666": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "POP",
      "path": "12"
    },
    "4667": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F9"
    },
    "4670": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4671": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4622,
        5015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4672": {
      "branch": 70,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4824,
        4835
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4673": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4819,
        5015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F9"
    },
    "4676": {
      "branch": 70,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4819,
        5015
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4677": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4851,
        4872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4679": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4885,
        4893
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4686": {
      "op": "SHL"
    },
    "4687": {
      "op": "SUB"
    },
    "4688": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4899
      ],
      "op": "AND",
      "path": "12"
    },
    "4689": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4899
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1F1FCD51"
    },
    "4694": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4696": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4697": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4698": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4703": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "AND",
      "path": "12"
    },
    "4704": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4706": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "SHL",
      "path": "12"
    },
    "4707": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4708": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4709": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4711": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "ADD",
      "path": "12"
    },
    "4712": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4714": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4716": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4717": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4718": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4719": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "SUB",
      "path": "12"
    },
    "4720": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4721": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4722": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4723": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4724": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4725": {
      "op": "DUP1"
    },
    "4726": {
      "op": "ISZERO"
    },
    "4727": {
      "op": "PUSH2",
      "value": "0x127F"
    },
    "4730": {
      "op": "JUMPI"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4733": {
      "op": "DUP1"
    },
    "4734": {
      "op": "REVERT"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "POP",
      "path": "12"
    },
    "4737": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "GAS",
      "path": "12"
    },
    "4738": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4739": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4740": {
      "op": "DUP1"
    },
    "4741": {
      "op": "ISZERO"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x1293"
    },
    "4745": {
      "op": "JUMPI"
    },
    "4746": {
      "op": "RETURNDATASIZE"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4749": {
      "op": "DUP1"
    },
    "4750": {
      "op": "RETURNDATACOPY"
    },
    "4751": {
      "op": "RETURNDATASIZE"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4754": {
      "op": "REVERT"
    },
    "4755": {
      "op": "JUMPDEST"
    },
    "4756": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "POP",
      "path": "12"
    },
    "4757": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "POP",
      "path": "12"
    },
    "4758": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "POP",
      "path": "12"
    },
    "4759": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "POP",
      "path": "12"
    },
    "4760": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4762": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4763": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4766": {
      "op": "DUP2"
    },
    "4767": {
      "op": "LT"
    },
    "4768": {
      "op": "ISZERO"
    },
    "4769": {
      "op": "PUSH2",
      "value": "0x12A9"
    },
    "4772": {
      "op": "JUMPI"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP1"
    },
    "4776": {
      "op": "REVERT"
    },
    "4777": {
      "op": "JUMPDEST"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4780": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4875,
        4901
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4788": {
      "op": "SHL"
    },
    "4789": {
      "op": "SUB"
    },
    "4790": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "DUP8",
      "path": "12",
      "statement": 46
    },
    "4791": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4792": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "AND",
      "path": "12"
    },
    "4793": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4794": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4795": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "AND",
      "path": "12"
    },
    "4796": {
      "branch": 71,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4923,
        4945
      ],
      "op": "EQ",
      "path": "12"
    },
    "4797": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12F7"
    },
    "4800": {
      "branch": 71,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4801": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4803": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4812": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4813": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4815": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "ADD",
      "path": "12"
    },
    "4816": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4817": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4818": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4820": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "ADD",
      "path": "12"
    },
    "4821": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4822": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4823": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SUB",
      "path": "12"
    },
    "4824": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4825": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4826": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x25"
    },
    "4828": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4829": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4830": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4832": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "ADD",
      "path": "12"
    },
    "4833": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4834": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15B8"
    },
    "4837": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x25"
    },
    "4839": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4840": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "4841": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4843": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "ADD",
      "path": "12"
    },
    "4844": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4845": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "POP",
      "path": "12"
    },
    "4846": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "POP",
      "path": "12"
    },
    "4847": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4849": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4850": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4851": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4852": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SUB",
      "path": "12"
    },
    "4853": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4854": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4855": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4915,
        4987
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4856": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4819,
        5015
      ],
      "op": "POP",
      "path": "12"
    },
    "4857": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4819,
        5015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4861": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4862": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "4863": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4864": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4865": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4866": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3194,
        5092
      ],
      "op": "POP",
      "path": "12"
    },
    "4867": {
      "fn": "YRegistry.getVaultData",
      "jump": "o",
      "offset": [
        3194,
        5092
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4868": {
      "fn": "YRegistry.setController",
      "offset": [
        2875,
        3085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4869": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1315"
    },
    "4872": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3002
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4874": {
      "fn": "YRegistry.setController",
      "offset": [
        3012,
        3023
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4875": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4880": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3011
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1541"
    },
    "4883": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "AND",
      "path": "12"
    },
    "4884": {
      "fn": "YRegistry.setController",
      "jump": "i",
      "offset": [
        2991,
        3024
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4885": {
      "branch": 72,
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4886": {
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132A"
    },
    "4889": {
      "branch": 72,
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4890": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 47,
      "value": "0x64E"
    },
    "4893": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4895": {
      "fn": "YRegistry.setController",
      "offset": [
        3056,
        3067
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4896": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4901": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x155F"
    },
    "4904": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "AND",
      "path": "12"
    },
    "4905": {
      "fn": "YRegistry.setController",
      "jump": "i",
      "offset": [
        3040,
        3068
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4906": {
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4907": {
      "fn": "YRegistry.setController",
      "offset": [
        2875,
        3085
      ],
      "op": "POP",
      "path": "12"
    },
    "4908": {
      "fn": "YRegistry.setController",
      "jump": "o",
      "offset": [
        2875,
        3085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4909": {
      "fn": "EnumerableSet.length",
      "offset": [
        3332,
        3473
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4910": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3459
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 48,
      "value": "0x1"
    },
    "4912": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3459
      ],
      "op": "ADD",
      "path": "8"
    },
    "4913": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3466
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4914": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4915": {
      "fn": "EnumerableSet.length",
      "jump": "o",
      "offset": [
        3332,
        3473
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4916": {
      "fn": "EnumerableSet.get",
      "offset": [
        3795,
        3948
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4917": {
      "fn": "EnumerableSet.get",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4919": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3927
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 49
    },
    "4920": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3934
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4922": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3934
      ],
      "op": "ADD",
      "path": "8"
    },
    "4923": {
      "fn": "EnumerableSet.get",
      "offset": [
        3935,
        3940
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4924": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4925": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4926": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4927": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "LT",
      "path": "8"
    },
    "4928": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1345"
    },
    "4931": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4932": {
      "dev": "Index out of range",
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "INVALID",
      "path": "8"
    },
    "4933": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4934": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4936": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4937": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4938": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4939": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4941": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4942": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4943": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4944": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "ADD",
      "path": "8"
    },
    "4945": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4952": {
      "op": "SHL"
    },
    "4953": {
      "op": "SUB"
    },
    "4954": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "AND",
      "path": "8"
    },
    "4955": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4956": {
      "fn": "EnumerableSet.get",
      "offset": [
        3795,
        3948
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "op": "POP"
    },
    "4959": {
      "op": "POP"
    },
    "4960": {
      "fn": "EnumerableSet.get",
      "jump": "o",
      "offset": [
        3795,
        3948
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4961": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2491,
        2697
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4962": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2608
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 50,
      "value": "0x1373"
    },
    "4965": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2595
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2606
      ],
      "op": "AND",
      "path": "12"
    },
    "4975": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2606
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1505"
    },
    "4978": {
      "fn": "YRegistry.setWrappedVault",
      "jump": "i",
      "offset": [
        2582,
        2608
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4979": {
      "branch": 73,
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2608
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4980": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13C4"
    },
    "4983": {
      "branch": 73,
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4984": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4986": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4987": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4994": {
      "op": "SHL"
    },
    "4995": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4996": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4997": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4999": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5001": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5002": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "12"
    },
    "5003": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5004": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1E"
    },
    "5006": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "5008": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5009": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "12"
    },
    "5010": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5011": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x577261707065645661756C74206973206E6F74206120636F6E74726163740000"
    },
    "5044": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "5046": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5047": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "12"
    },
    "5048": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5049": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5050": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5051": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5052": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5053": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5054": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SUB",
      "path": "12"
    },
    "5055": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "5057": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "12"
    },
    "5058": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5059": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5060": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5067": {
      "op": "SHL"
    },
    "5068": {
      "op": "SUB"
    },
    "5069": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP2",
      "path": "12",
      "statement": 51
    },
    "5070": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5071": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "AND",
      "path": "12"
    },
    "5072": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5074": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5075": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5076": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5077": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2666
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "5079": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5081": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5082": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5084": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5085": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5086": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5087": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5094": {
      "op": "SHL"
    },
    "5095": {
      "op": "SUB"
    },
    "5096": {
      "op": "NOT"
    },
    "5097": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "AND",
      "path": "12"
    },
    "5098": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5099": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5100": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5101": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "AND",
      "path": "12"
    },
    "5102": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "OR",
      "path": "12"
    },
    "5103": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5104": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5105": {
      "fn": "YRegistry.setWrappedVault",
      "jump": "o",
      "offset": [
        2491,
        2697
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5106": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1325,
        2344
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5107": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1414,
        1418
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5109": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1438,
        1458
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13FE"
    },
    "5112": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1447,
        1450
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5113": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1452,
        1457
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5114": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1438,
        1446
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1541"
    },
    "5117": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        1438,
        1458
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5118": {
      "branch": 74,
      "fn": "EnumerableSet.remove",
      "offset": [
        1438,
        1458
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5119": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1434,
        2338
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5120": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1434,
        2338
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14FD"
    },
    "5123": {
      "branch": 74,
      "fn": "EnumerableSet.remove",
      "offset": [
        1434,
        2338
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "op": "SUB"
    },
    "5132": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5133": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "AND",
      "path": "8"
    },
    "5134": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1473,
        1494
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5136": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5137": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5138": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5139": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5141": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5142": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5143": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5144": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5146": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5147": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5148": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1513
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5149": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1516,
        1517
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5151": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1551,
        1561
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5152": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1551,
        1561
      ],
      "op": "ADD",
      "path": "8"
    },
    "5153": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1551,
        1568
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5156": {
      "op": "NOT"
    },
    "5157": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1517
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5158": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1517
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5159": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1517
      ],
      "op": "ADD",
      "path": "8"
    },
    "5160": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1497,
        1517
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5161": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1551,
        1572
      ],
      "op": "ADD",
      "path": "8"
    },
    "5162": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1696,
        1722
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5163": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1696,
        1722
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5164": {
      "branch": 75,
      "fn": "EnumerableSet.remove",
      "offset": [
        1696,
        1722
      ],
      "op": "EQ",
      "path": "8"
    },
    "5165": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1692,
        2074
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14A9"
    },
    "5168": {
      "branch": 75,
      "fn": "EnumerableSet.remove",
      "offset": [
        1692,
        2074
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5169": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1742,
        1759
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5171": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1765
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5172": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1772
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5174": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1772
      ],
      "op": "ADD",
      "path": "8"
    },
    "5175": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1773,
        1782
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5176": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5177": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5178": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5179": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "LT",
      "path": "8"
    },
    "5180": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1441"
    },
    "5183": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5184": {
      "dev": "Index out of range",
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "INVALID",
      "path": "8"
    },
    "5185": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5186": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5188": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5189": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5190": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5191": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5193": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5194": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5195": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5196": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "ADD",
      "path": "8"
    },
    "5197": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5198": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5200": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1891
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 52
    },
    "5201": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1891
      ],
      "op": "ADD",
      "path": "8"
    },
    "5202": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5203": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5210": {
      "op": "SHL"
    },
    "5211": {
      "op": "SUB"
    },
    "5212": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5213": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5214": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "AND",
      "path": "8"
    },
    "5215": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5218": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1762,
        1783
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5219": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1892,
        1905
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5220": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1892,
        1905
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5221": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5222": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "LT",
      "path": "8"
    },
    "5223": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x146C"
    },
    "5226": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5227": {
      "dev": "Index out of range",
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "INVALID",
      "path": "8"
    },
    "5228": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5229": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5231": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5232": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5233": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5234": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5236": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5237": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5238": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5239": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5240": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5241": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5242": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1906
      ],
      "op": "ADD",
      "path": "8"
    },
    "5243": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5244": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "op": "SUB"
    },
    "5253": {
      "op": "NOT"
    },
    "5254": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "AND",
      "path": "8"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5261": {
      "op": "SHL"
    },
    "5262": {
      "op": "SUB"
    },
    "5263": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5264": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5265": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "AND",
      "path": "8"
    },
    "5266": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "OR",
      "path": "8"
    },
    "5267": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5268": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1881,
        1918
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5269": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 53
    },
    "5270": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5271": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5272": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "AND",
      "path": "8"
    },
    "5273": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5274": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5275": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5276": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5277": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5278": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5279": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5281": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5282": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2012
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5285": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2015,
        2032
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5286": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2015,
        2032
      ],
      "op": "ADD",
      "path": "8"
    },
    "5287": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2032
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5288": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1992,
        2032
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5289": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1692,
        2074
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "op": "SUB"
    },
    "5298": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 54
    },
    "5299": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "AND",
      "path": "8"
    },
    "5300": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2164
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5302": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5303": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5304": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5305": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5307": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5308": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5309": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5310": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5312": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5313": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2155,
        2171
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5314": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2148,
        2171
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5315": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2252
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 55,
      "value": "0x1"
    },
    "5317": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2252
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5318": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2252
      ],
      "op": "ADD",
      "path": "8"
    },
    "5319": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5320": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5321": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5322": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14CF"
    },
    "5325": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5326": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "INVALID",
      "path": "8"
    },
    "5327": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5328": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5330": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5331": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5332": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5333": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5335": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5336": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5337": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5338": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "ADD",
      "path": "8"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5341": {
      "op": "NOT"
    },
    "5342": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5343": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5344": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "ADD",
      "path": "8"
    },
    "5345": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5346": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5353": {
      "op": "SHL"
    },
    "5354": {
      "op": "SUB"
    },
    "5355": {
      "op": "NOT"
    },
    "5356": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "AND",
      "path": "8"
    },
    "5357": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5358": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5359": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "ADD",
      "path": "8"
    },
    "5360": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5361": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5365": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2242,
        2258
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2273,
        2284
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 56,
      "value": "0xB7C"
    },
    "5370": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2273,
        2284
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5371": {
      "op": "POP"
    },
    "5372": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2273,
        2284
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5373": {
      "fn": "EnumerableSet.remove",
      "offset": [
        1434,
        2338
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2322,
        2327
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 57,
      "value": "0x0"
    },
    "5377": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2315,
        2327
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB7C"
    },
    "5380": {
      "fn": "EnumerableSet.remove",
      "offset": [
        2315,
        2327
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5381": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5382": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5384": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5385": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "5386": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "5419": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 58
    },
    "5420": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5421": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "5422": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5423": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5424": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5425": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1539"
    },
    "5428": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5431": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5432": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5433": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5434": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5435": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "op": "POP"
    },
    "5440": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5441": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2425,
        2584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5448": {
      "op": "SHL"
    },
    "5449": {
      "op": "SUB"
    },
    "5450": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "AND",
      "path": "8",
      "statement": 59
    },
    "5451": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2529,
        2533
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5453": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5454": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5455": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5456": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5458": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5459": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5460": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5461": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5462": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5464": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5465": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5466": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5467": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5468": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5469": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5470": {
      "fn": "EnumerableSet.contains",
      "jump": "o",
      "offset": [
        2425,
        2584
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5471": {
      "fn": "EnumerableSet.add",
      "offset": [
        923,
        1195
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5472": {
      "fn": "EnumerableSet.add",
      "offset": [
        1009,
        1013
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5474": {
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1054
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x156B"
    },
    "5477": {
      "fn": "EnumerableSet.add",
      "offset": [
        1043,
        1046
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5478": {
      "fn": "EnumerableSet.add",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5479": {
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1042
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1541"
    },
    "5482": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        1034,
        1054
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5483": {
      "branch": 76,
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1054
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5484": {
      "fn": "EnumerableSet.add",
      "offset": [
        1029,
        1189
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14FD"
    },
    "5487": {
      "branch": 76,
      "fn": "EnumerableSet.add",
      "offset": [
        1029,
        1189
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 60,
      "value": "0x1"
    },
    "5491": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5492": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5493": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "ADD",
      "path": "8"
    },
    "5494": {
      "op": "DUP1"
    },
    "5495": {
      "op": "SLOAD"
    },
    "5496": {
      "op": "DUP1"
    },
    "5497": {
      "op": "DUP4"
    },
    "5498": {
      "op": "ADD"
    },
    "5499": {
      "op": "DUP1"
    },
    "5500": {
      "op": "DUP4"
    },
    "5501": {
      "op": "SSTORE"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5504": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5505": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5506": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5507": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5509": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5510": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5511": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5512": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5513": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5514": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "ADD",
      "path": "8"
    },
    "5515": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5516": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5523": {
      "op": "SHL"
    },
    "5524": {
      "op": "SUB"
    },
    "5525": {
      "op": "NOT"
    },
    "5526": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "AND",
      "path": "8"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5533": {
      "op": "SHL"
    },
    "5534": {
      "op": "SUB"
    },
    "5535": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5536": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "AND",
      "path": "8"
    },
    "5537": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5538": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5539": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "OR",
      "path": "8"
    },
    "5540": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5541": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5542": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5543": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5544": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5545": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5546": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5547": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5548": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5549": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5551": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5552": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5553": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5554": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1110
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5555": {
      "fn": "EnumerableSet.add",
      "offset": [
        1124,
        1135
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 61,
      "value": "0xB7C"
    },
    "5558": {
      "fn": "EnumerableSet.add",
      "offset": [
        1124,
        1135
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "97c8b152888039d18d571db751cf05893adf180a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/utils/EnumerableSet.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/yearn/IStrategy.sol\";\nimport \"../../interfaces/yearn/IVault.sol\";\nimport \"../../interfaces/yearn/IWrappedVault.sol\";\n\ncontract YRegistry {\n    using Address for address;\n    using SafeMath for uint256;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    address public governance;\n    address public pendingGovernance;\n\n    EnumerableSet.AddressSet private vaults;\n    EnumerableSet.AddressSet private controllers;\n\n    mapping(address => address) private wrappedVaults;\n\n    mapping(address => bool) public isDelegatedVault;\n\n    constructor(address _governance) public {\n        require(_governance != address(0), \"Missing Governance\");\n        governance = _governance;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"YRegistry\";\n    }\n\n    function addVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        setController(controller);\n    }\n\n    function addWrappedVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n        address wrappedVault = IWrappedVault(_vault).vault();\n        setWrappedVault(_vault, wrappedVault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        // Adds to controllers array\n        setController(controller);\n        // TODO Add and track tokens and strategies? [historical]\n        // (current ones can be obtained via getVaults + getVaultInfo)\n    }\n\n    function addDelegatedVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n        setDelegatedVault(_vault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        // Adds to controllers array\n        setController(controller);\n        // TODO Add and track tokens and strategies? [historical]\n        // (current ones can be obtained via getVaults + getVaultInfo)\n    }\n\n    function setVault(address _vault) internal {\n        require(_vault.isContract(), \"Vault is not a contract\");\n        // Checks if vault is already on the array\n        require(!vaults.contains(_vault), \"Vault already exists\");\n        // Adds unique _vault to vaults array\n        vaults.add(_vault);\n    }\n\n    function setWrappedVault(address _vault, address _wrappedVault) internal {\n        require(_wrappedVault.isContract(), \"WrappedVault is not a contract\");\n        wrappedVaults[_vault] = _wrappedVault;\n    }\n\n    function setDelegatedVault(address _vault) internal {\n        // TODO Is there any way to check if a vault is delegated\n        isDelegatedVault[_vault] = true;\n    }\n\n    function setController(address _controller) internal {\n        // Adds Controller to controllers array\n        if (!controllers.contains(_controller)) {\n            controllers.add(_controller);\n        }\n    }\n\n    function removeVault(address _vault) public onlyGovernance {\n        vaults.remove(_vault);\n    }\n\n    function getVaultData(address _vault)\n        internal\n        view\n        returns (\n            address controller,\n            address token,\n            address strategy,\n            bool isWrapped,\n            bool isDelegated\n        )\n    {\n        address vault = _vault;\n        isWrapped = wrappedVaults[_vault] != address(0);\n        if (isWrapped) {\n            vault = wrappedVaults[_vault];\n        }\n        isDelegated = isDelegatedVault[vault];\n\n        // Get values from controller\n        controller = IVault(vault).controller();\n        if (isWrapped && IVault(vault).underlying() != address(0)) {\n            token = IVault(_vault).token(); // Use non-wrapped vault\n        } else {\n            token = IVault(vault).token();\n        }\n\n        if (isDelegated) {\n            strategy = IController(controller).strategies(vault);\n        } else {\n            strategy = IController(controller).strategies(token);\n        }\n\n        // Check if vault is set on controller for token\n        address controllerVault = address(0);\n        if (isDelegated) {\n            controllerVault = IController(controller).vaults(strategy);\n        } else {\n            controllerVault = IController(controller).vaults(token);\n        }\n        require(controllerVault == vault, \"Controller vault address does not match\"); // Might happen on Proxy Vaults\n\n        // Check if strategy has the same token as vault\n        if (isWrapped) {\n            address underlying = IVault(vault).underlying();\n            require(underlying == token, \"WrappedVault token address does not match\"); // Might happen?\n        } else if (!isDelegated) {\n            address strategyToken = IStrategy(strategy).want();\n            require(token == strategyToken, \"Strategy token address does not match\"); // Might happen?\n        }\n\n        return (controller, token, strategy, isWrapped, isDelegated);\n    }\n\n    // Vaults getters\n    function getVault(uint256 index) external view returns (address vault) {\n        return vaults.get(index);\n    }\n\n    function getVaultsLength() external view returns (uint256) {\n        return vaults.length();\n    }\n\n    function getVaults() external view returns (address[] memory) {\n        address[] memory vaultsArray = new address[](vaults.length());\n        for (uint256 i = 0; i < vaults.length(); i++) {\n            vaultsArray[i] = vaults.get(i);\n        }\n        return vaultsArray;\n    }\n\n    function getVaultInfo(address _vault)\n        external\n        view\n        returns (\n            address controller,\n            address token,\n            address strategy,\n            bool isWrapped,\n            bool isDelegated\n        )\n    {\n        (controller, token, strategy, isWrapped, isDelegated) = getVaultData(_vault);\n        return (controller, token, strategy, isWrapped, isDelegated);\n    }\n\n    function getVaultsInfo()\n        external\n        view\n        returns (\n            address[] memory vaultsAddresses,\n            address[] memory controllerArray,\n            address[] memory tokenArray,\n            address[] memory strategyArray,\n            bool[] memory isWrappedArray,\n            bool[] memory isDelegatedArray\n        )\n    {\n        vaultsAddresses = new address[](vaults.length());\n        controllerArray = new address[](vaults.length());\n        tokenArray = new address[](vaults.length());\n        strategyArray = new address[](vaults.length());\n        isWrappedArray = new bool[](vaults.length());\n        isDelegatedArray = new bool[](vaults.length());\n\n        for (uint256 i = 0; i < vaults.length(); i++) {\n            vaultsAddresses[i] = vaults.get(i);\n            (address _controller, address _token, address _strategy, bool _isWrapped, bool _isDelegated) = getVaultData(vaults.get(i));\n            controllerArray[i] = _controller;\n            tokenArray[i] = _token;\n            strategyArray[i] = _strategy;\n            isWrappedArray[i] = _isWrapped;\n            isDelegatedArray[i] = _isDelegated;\n        }\n    }\n\n    // Governance setters\n    function setPendingGovernance(address _pendingGovernance) external onlyGovernance {\n        pendingGovernance = _pendingGovernance;\n    }\n\n    function acceptGovernance() external onlyPendingGovernance {\n        governance = msg.sender;\n    }\n\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"Only governance can call this function.\");\n        _;\n    }\n    modifier onlyPendingGovernance {\n        require(msg.sender == pendingGovernance, \"Only pendingGovernance can call this function.\");\n        _;\n    }\n}\n",
  "sourceMap": "420:7343:12:-;;;840:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:147:12;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;840:147:12;-1:-1:-1;;;;;898:25:12;;890:56;;;;;-1:-1:-1;;;890:56:12;;;;;;;;;;;;-1:-1:-1;;;890:56:12;;;;;;;;;;;;;;;956:10;:24;;-1:-1:-1;;;;;956:24:12;;;-1:-1:-1;;;;;;956:24:12;;;;;;;;;420:7343;;;;;;",
  "sourcePath": "contracts/registries/YRegistry.sol",
  "type": "contract"
}