{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "aave",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "activate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "availableToBorrowETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "availableToBorrowReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimInsurance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "credit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_lp",
          "type": "address"
        }
      ],
      "name": "debtShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "earn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAave",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAaveCore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAaveOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReservePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        }
      ],
      "name": "getReservePriceETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getUnderlyingPriceETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "healthFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "insurance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ltv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxSafeETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxBorrowsETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalBorrowsETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "availableBorrowsETH",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "maxWithdrawal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "over",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "over",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "repayAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "safeWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hf",
          "type": "uint256"
        }
      ],
      "name": "setHealthFactor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "shouldBorrow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "shouldRebalance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/GSN/Context.sol",
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "3": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
    "4": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20Detailed.sol",
    "46": "contracts/vaults/yDelegatedVault.sol",
    "49": "interfaces/aave/Aave.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "50": "interfaces/aave/AaveToken.sol",
    "51": "interfaces/aave/LendingPoolAddressesProvider.sol",
    "52": "interfaces/aave/Oracle.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/vaults/yDelegatedVault.sol",
    "exportedSymbols": {
      "yDelegatedVault": [
        34117
      ]
    },
    "id": 34118,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32994,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:46"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 32995,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 35493,
        "src": "26:58:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 32996,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 35424,
        "src": "85:53:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 32997,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 35788,
        "src": "139:53:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 32998,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 35713,
        "src": "193:61:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/ERC20.sol",
        "id": 32999,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37645,
        "src": "255:57:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 33000,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37703,
        "src": "313:65:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol",
        "file": "@openzeppelinV2/contracts/ownership/Ownable.sol",
        "id": 33001,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37845,
        "src": "379:57:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/aave/Aave.sol",
        "file": "../../interfaces/aave/Aave.sol",
        "id": 33002,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37186,
        "src": "438:40:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/aave/AaveToken.sol",
        "file": "../../interfaces/aave/AaveToken.sol",
        "id": 33003,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37853,
        "src": "479:45:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/aave/Oracle.sol",
        "file": "../../interfaces/aave/Oracle.sol",
        "id": 33004,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37868,
        "src": "525:42:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/aave/LendingPoolAddressesProvider.sol",
        "file": "../../interfaces/aave/LendingPoolAddressesProvider.sol",
        "id": 33005,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 37204,
        "src": "568:64:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 33006,
        "nodeType": "ImportDirective",
        "scope": 34118,
        "sourceUnit": 36182,
        "src": "633:48:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33007,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37644,
              "src": "711:5:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$37644",
                "typeString": "contract ERC20"
              }
            },
            "id": 33008,
            "nodeType": "InheritanceSpecifier",
            "src": "711:5:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33009,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37702,
              "src": "718:13:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 33010,
            "nodeType": "InheritanceSpecifier",
            "src": "718:13:46"
          }
        ],
        "contractDependencies": [
          35492,
          37644,
          37702,
          37917
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 34117,
        "linearizedBaseContracts": [
          34117,
          37702,
          37644,
          35492,
          37917
        ],
        "name": "yDelegatedVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 33013,
            "libraryName": {
              "contractScope": null,
              "id": 33011,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35712,
              "src": "744:9:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$35712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "738:27:46",
            "typeName": {
              "contractScope": null,
              "id": 33012,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "758:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 33016,
            "libraryName": {
              "contractScope": null,
              "id": 33014,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "776:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "770:26:46",
            "typeName": {
              "id": 33015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "788:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 33019,
            "libraryName": {
              "contractScope": null,
              "id": 33017,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "807:8:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "801:27:46",
            "typeName": {
              "id": 33018,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 33021,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "834:19:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$35492",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 33020,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "834:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33023,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "860:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33022,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33025,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "891:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33024,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33027,
            "name": "insurance",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "922:24:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33026,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "922:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33030,
            "name": "healthFactor",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "952:31:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33028,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "952:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "34",
              "id": 33029,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "982:1:46",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33033,
            "name": "ltv",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "990:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33031,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "990:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3635",
              "id": 33032,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1011:2:46",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65_by_1",
                "typeString": "int_const 65"
              },
              "value": "65"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33036,
            "name": "max",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "1019:24:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33034,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1019:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 33035,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1040:3:46",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 33041,
            "name": "aave",
            "nodeType": "VariableDeclaration",
            "scope": 34117,
            "src": "1050:82:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33037,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307832346134326644323843393736413631446635443030443035393943333463346639303734386338",
                  "id": 33039,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1089:42:46",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x24a42fD28C976A61Df5D00D0599C34c4f90748c8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 33038,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1081:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 33040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1081:51:46",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 33092,
              "nodeType": "Block",
              "src": "1438:106:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33077,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33021,
                      "src": "1448:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35492",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 33079,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "1463:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33078,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35492,
                        "src": "1456:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 33080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1456:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$35492",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1448:22:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35492",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 33082,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:22:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33083,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33023,
                      "src": "1480:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 33084,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "1493:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 33085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1493:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1480:23:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33087,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:23:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33088,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33025,
                      "src": "1513:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33089,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33045,
                      "src": "1526:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1513:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33091,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:24:46"
                }
              ]
            },
            "documentation": null,
            "id": 33093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "796561726e20",
                            "id": 33051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1262:8:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            "value": "yearn "
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 33053,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33043,
                                    "src": "1286:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 33052,
                                  "name": "ERC20Detailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37702,
                                  "src": "1272:13:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                    "typeString": "type(contract ERC20Detailed)"
                                  }
                                },
                                "id": 33054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1272:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                  "typeString": "contract ERC20Detailed"
                                }
                              },
                              "id": 33055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37685,
                              "src": "1272:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 33056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1272:28:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4bb4ad5205c4c7e5c868e606845be068b7317b7eb97e97123cc241afbcfbe649",
                              "typeString": "literal_string \"yearn \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33049,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37919,
                            "src": "1245:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1245:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1245:56:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1238:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 33058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:64:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "79",
                            "id": 33062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1340:3:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            "value": "y"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 33064,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33043,
                                    "src": "1359:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 33063,
                                  "name": "ERC20Detailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37702,
                                  "src": "1345:13:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                    "typeString": "type(contract ERC20Detailed)"
                                  }
                                },
                                "id": 33065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1345:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                  "typeString": "contract ERC20Detailed"
                                }
                              },
                              "id": 33066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37693,
                              "src": "1345:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 33067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1345:30:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                              "typeString": "literal_string \"y\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33060,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37919,
                            "src": "1323:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1323:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1323:53:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1316:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": "string"
                    },
                    "id": 33069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:61:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33071,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33043,
                            "src": "1405:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33070,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37702,
                          "src": "1391:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 33072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1391:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 33073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37701,
                      "src": "1391:30:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 33074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1391:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 33075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 33047,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37702,
                  "src": "1211:13:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1211:222:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33043,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 33093,
                  "src": "1151:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33045,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 33093,
                  "src": "1167:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1150:37:46"
            },
            "returnParameters": {
              "id": 33076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:46"
            },
            "scope": 34117,
            "src": "1139:405:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33124,
              "nodeType": "Block",
              "src": "1596:236:46",
              "statements": [
                {
                  "assignments": [
                    33099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33099,
                      "name": "_reserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 33124,
                      "src": "1606:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33098,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1606:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33105,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "1662:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1654:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1654:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33101,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33025,
                            "src": "1637:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33100,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "1625:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 33102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1625:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 33103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "want",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36152,
                      "src": "1625:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 33107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1606:62:46"
                },
                {
                  "assignments": [
                    null,
                    33110,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 33110,
                      "name": "currentBorrowBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 33124,
                      "src": "1681:28:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1681:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 33121,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33116,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33099,
                        "src": "1764:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33118,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "1782:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1774:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1774:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33112,
                              "name": "getAave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33188,
                              "src": "1734:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1734:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33111,
                          "name": "Aave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37185,
                          "src": "1729:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Aave_$37185_$",
                            "typeString": "type(contract Aave)"
                          }
                        },
                        "id": 33114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1729:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Aave_$37185",
                          "typeString": "contract Aave"
                        }
                      },
                      "id": 33115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserReserveData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37184,
                      "src": "1729:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 33120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:59:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1678:110:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33122,
                    "name": "currentBorrowBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33110,
                    "src": "1805:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33097,
                  "id": 33123,
                  "nodeType": "Return",
                  "src": "1798:27:46"
                }
              ]
            },
            "documentation": null,
            "id": 33125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1563:2:46"
            },
            "returnParameters": {
              "id": 33097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33096,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33125,
                  "src": "1587:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1586:9:46"
            },
            "scope": 34117,
            "src": "1550:282:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33139,
              "nodeType": "Block",
              "src": "1886:72:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33135,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "1945:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1937:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1937:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33131,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33025,
                            "src": "1915:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33130,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "1903:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 33132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1903:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 33133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36138,
                      "src": "1903:33:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 33137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33129,
                  "id": 33138,
                  "nodeType": "Return",
                  "src": "1896:55:46"
                }
              ]
            },
            "documentation": null,
            "id": 33140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "credit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:2:46"
            },
            "returnParameters": {
              "id": 33129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33140,
                  "src": "1877:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1876:9:46"
            },
            "scope": 34117,
            "src": "1838:120:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33155,
              "nodeType": "Block",
              "src": "2147:54:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33151,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33125,
                          "src": "2187:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 33152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2187:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 33148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2177:4:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33145,
                              "name": "credit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33140,
                              "src": "2164:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 33146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2164:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "2164:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2164:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "2164:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 33153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33144,
                  "id": 33154,
                  "nodeType": "Return",
                  "src": "2157:37:46"
                }
              ]
            },
            "documentation": null,
            "id": 33156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "locked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:2:46"
            },
            "returnParameters": {
              "id": 33144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33156,
                  "src": "2138:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2137:9:46"
            },
            "scope": 34117,
            "src": "2099:102:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33175,
              "nodeType": "Block",
              "src": "2269:69:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33171,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "2317:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 33172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2317:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33167,
                                "name": "_lp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33158,
                                "src": "2307:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33166,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37283,
                              "src": "2297:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 33168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2297:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33163,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33125,
                              "src": "2286:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 33164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2286:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "2286:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2286:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35340,
                      "src": "2286:30:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 33173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:45:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33162,
                  "id": 33174,
                  "nodeType": "Return",
                  "src": "2279:52:46"
                }
              ]
            },
            "documentation": null,
            "id": 33176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debtShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33158,
                  "name": "_lp",
                  "nodeType": "VariableDeclaration",
                  "scope": 33176,
                  "src": "2226:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2225:13:46"
            },
            "returnParameters": {
              "id": 33162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33161,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33176,
                  "src": "2260:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2259:9:46"
            },
            "scope": 34117,
            "src": "2207:131:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33187,
              "nodeType": "Block",
              "src": "2393:75:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33182,
                            "name": "aave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33041,
                            "src": "2439:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33181,
                          "name": "LendingPoolAddressesProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37203,
                          "src": "2410:28:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LendingPoolAddressesProvider_$37203_$",
                            "typeString": "type(contract LendingPoolAddressesProvider)"
                          }
                        },
                        "id": 33183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2410:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$37203",
                          "typeString": "contract LendingPoolAddressesProvider"
                        }
                      },
                      "id": 33184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLendingPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37192,
                      "src": "2410:49:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33180,
                  "id": 33186,
                  "nodeType": "Return",
                  "src": "2403:58:46"
                }
              ]
            },
            "documentation": null,
            "id": 33188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAave",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:2:46"
            },
            "returnParameters": {
              "id": 33180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33179,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33188,
                  "src": "2384:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2383:9:46"
            },
            "scope": 34117,
            "src": "2344:124:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33199,
              "nodeType": "Block",
              "src": "2527:79:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33194,
                            "name": "aave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33041,
                            "src": "2573:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33193,
                          "name": "LendingPoolAddressesProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37203,
                          "src": "2544:28:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LendingPoolAddressesProvider_$37203_$",
                            "typeString": "type(contract LendingPoolAddressesProvider)"
                          }
                        },
                        "id": 33195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2544:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$37203",
                          "typeString": "contract LendingPoolAddressesProvider"
                        }
                      },
                      "id": 33196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLendingPoolCore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37197,
                      "src": "2544:53:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2544:55:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33192,
                  "id": 33198,
                  "nodeType": "Return",
                  "src": "2537:62:46"
                }
              ]
            },
            "documentation": null,
            "id": 33200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAaveCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2494:2:46"
            },
            "returnParameters": {
              "id": 33192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33191,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33200,
                  "src": "2518:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2517:9:46"
            },
            "scope": 34117,
            "src": "2474:132:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33217,
              "nodeType": "Block",
              "src": "2659:93:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33206,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2677:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2677:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33208,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33023,
                          "src": "2691:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2677:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 33210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:13:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 33205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2669:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33212,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:48:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33213,
                      "name": "healthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33030,
                      "src": "2727:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33214,
                      "name": "_hf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33202,
                      "src": "2742:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2727:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33216,
                  "nodeType": "ExpressionStatement",
                  "src": "2727:18:46"
                }
              ]
            },
            "documentation": null,
            "id": 33218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setHealthFactor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33202,
                  "name": "_hf",
                  "nodeType": "VariableDeclaration",
                  "scope": 33218,
                  "src": "2637:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2636:13:46"
            },
            "returnParameters": {
              "id": 33204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2659:0:46"
            },
            "scope": 34117,
            "src": "2612:140:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33231,
              "nodeType": "Block",
              "src": "2785:82:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33226,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33993,
                          "src": "2841:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 33227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2841:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 33228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2855:4:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33222,
                              "name": "getAave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33188,
                              "src": "2800:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2800:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33221,
                          "name": "Aave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37185,
                          "src": "2795:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Aave_$37185_$",
                            "typeString": "type(contract Aave)"
                          }
                        },
                        "id": 33224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2795:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Aave_$37185",
                          "typeString": "contract Aave"
                        }
                      },
                      "id": 33225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUserUseReserveAsCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37127,
                      "src": "2795:45:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:65:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33230,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:65:46"
                }
              ]
            },
            "documentation": null,
            "id": 33232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2775:2:46"
            },
            "returnParameters": {
              "id": 33220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2785:0:46"
            },
            "scope": 34117,
            "src": "2758:109:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33277,
              "nodeType": "Block",
              "src": "2928:277:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33244,
                              "name": "getAaveCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33200,
                              "src": "3034:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3034:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3026:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3026:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 33247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3050:1:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33240,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33234,
                            "src": "3009:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33239,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3002:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 33241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3002:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35464,
                      "src": "3002:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 33248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:50:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33249,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:50:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33255,
                              "name": "getAaveCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33200,
                              "src": "3094:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3094:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3086:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3086:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33258,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33236,
                        "src": "3110:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33251,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33234,
                            "src": "3069:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33250,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3062:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 33252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3062:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35464,
                      "src": "3062:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 33259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3062:55:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33260,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:55:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33266,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33234,
                        "src": "3149:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33236,
                        "src": "3158:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 33271,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38140,
                                    "src": "3190:4:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                      "typeString": "contract yDelegatedVault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                      "typeString": "contract yDelegatedVault"
                                    }
                                  ],
                                  "id": 33270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3182:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 33272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3182:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3174:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": "uint160"
                            },
                            "id": 33273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3174:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 33268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3166:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3166:31:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33262,
                              "name": "getAave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33188,
                              "src": "3132:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3132:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33261,
                          "name": "Aave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37185,
                          "src": "3127:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Aave_$37185_$",
                            "typeString": "type(contract Aave)"
                          }
                        },
                        "id": 33264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3127:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Aave_$37185",
                          "typeString": "contract Aave"
                        }
                      },
                      "id": 33265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37136,
                      "src": "3127:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,uint256,address payable) payable external"
                      }
                    },
                    "id": 33275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3127:71:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33276,
                  "nodeType": "ExpressionStatement",
                  "src": "3127:71:46"
                }
              ]
            },
            "documentation": null,
            "id": 33278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33234,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 33278,
                  "src": "2888:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2888:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33236,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33278,
                  "src": "2905:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2887:33:46"
            },
            "returnParameters": {
              "id": 33238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:0:46"
            },
            "scope": 34117,
            "src": "2873:332:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33302,
              "nodeType": "Block",
              "src": "3238:148:46",
              "statements": [
                {
                  "assignments": [
                    33282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33282,
                      "name": "_reserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 33302,
                      "src": "3248:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33281,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3248:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33285,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33283,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33979,
                      "src": "3267:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 33284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3248:28:46"
                },
                {
                  "assignments": [
                    33287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33287,
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 33302,
                      "src": "3286:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3286:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33296,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33293,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "3339:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3331:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3331:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33289,
                            "name": "_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33282,
                            "src": "3311:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33288,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3304:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 33290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3304:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "3304:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 33295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3304:41:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3286:59:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33298,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33282,
                        "src": "3361:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33299,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33287,
                        "src": "3371:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33297,
                      "name": "repay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33278,
                      "src": "3355:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3355:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33301,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:24:46"
                }
              ]
            },
            "documentation": null,
            "id": 33303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3228:2:46"
            },
            "returnParameters": {
              "id": 33280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3238:0:46"
            },
            "scope": 34117,
            "src": "3211:175:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33335,
              "nodeType": "Block",
              "src": "3536:176:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33311,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3554:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3554:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33313,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33025,
                          "src": "3568:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3554:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3580:13:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 33310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3546:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3546:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33317,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:48:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 33319,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33305,
                          "src": "3612:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 33321,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33021,
                              "src": "3631:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 33320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3623:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 33322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3623:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3612:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e",
                        "id": 33324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3639:7:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        },
                        "value": "token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        }
                      ],
                      "id": 33318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3604:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33326,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:43:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33331,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3686:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33307,
                        "src": "3698:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33328,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33305,
                            "src": "3664:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33327,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3657:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 33329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3657:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "3657:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 33333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33334,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:48:46"
                }
              ]
            },
            "documentation": null,
            "id": 33336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33305,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 33336,
                  "src": "3494:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33307,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33336,
                  "src": "3511:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3511:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3493:33:46"
            },
            "returnParameters": {
              "id": 33309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3536:0:46"
            },
            "scope": 34117,
            "src": "3477:235:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33351,
              "nodeType": "Block",
              "src": "3821:69:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33348,
                        "name": "insurance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33027,
                        "src": "3873:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33344,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38140,
                                "src": "3862:4:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                  "typeString": "contract yDelegatedVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                  "typeString": "contract yDelegatedVault"
                                }
                              ],
                              "id": 33343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3854:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 33345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3854:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33341,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33021,
                            "src": "3838:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 33342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35437,
                          "src": "3838:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 33346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3838:30:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35279,
                      "src": "3838:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 33349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:45:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33340,
                  "id": 33350,
                  "nodeType": "Return",
                  "src": "3831:52:46"
                }
              ]
            },
            "documentation": null,
            "id": 33352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3788:2:46"
            },
            "returnParameters": {
              "id": 33340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33352,
                  "src": "3812:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3812:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3811:9:46"
            },
            "scope": 34117,
            "src": "3772:118:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33369,
              "nodeType": "Block",
              "src": "3949:99:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3967:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3967:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33360,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33023,
                          "src": "3981:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3967:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 33362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3993:13:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 33357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3959:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33364,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:48:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33365,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33023,
                      "src": "4017:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33366,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33354,
                      "src": "4030:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4017:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33368,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:24:46"
                }
              ]
            },
            "documentation": null,
            "id": 33370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33354,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 33370,
                  "src": "3919:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3919:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3918:21:46"
            },
            "returnParameters": {
              "id": 33356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3949:0:46"
            },
            "scope": 34117,
            "src": "3896:152:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33387,
              "nodeType": "Block",
              "src": "4107:99:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4125:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4125:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33378,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33023,
                          "src": "4139:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4125:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 33380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4151:13:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 33375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4117:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33382,
                  "nodeType": "ExpressionStatement",
                  "src": "4117:48:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33383,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33025,
                      "src": "4175:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 33384,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33372,
                      "src": "4188:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4175:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33386,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:24:46"
                }
              ]
            },
            "documentation": null,
            "id": 33388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33372,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 33388,
                  "src": "4077:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4076:21:46"
            },
            "returnParameters": {
              "id": 33374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4107:0:46"
            },
            "scope": 34117,
            "src": "4054:152:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33399,
              "nodeType": "Block",
              "src": "4267:75:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33394,
                            "name": "aave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33041,
                            "src": "4313:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33393,
                          "name": "LendingPoolAddressesProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37203,
                          "src": "4284:28:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LendingPoolAddressesProvider_$37203_$",
                            "typeString": "type(contract LendingPoolAddressesProvider)"
                          }
                        },
                        "id": 33395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4284:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$37203",
                          "typeString": "contract LendingPoolAddressesProvider"
                        }
                      },
                      "id": 33396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPriceOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37202,
                      "src": "4284:49:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4284:51:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33392,
                  "id": 33398,
                  "nodeType": "Return",
                  "src": "4277:58:46"
                }
              ]
            },
            "documentation": null,
            "id": 33400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAaveOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4234:2:46"
            },
            "returnParameters": {
              "id": 33392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33391,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33400,
                  "src": "4258:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4257:9:46"
            },
            "scope": 34117,
            "src": "4212:130:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33415,
              "nodeType": "Block",
              "src": "4423:70:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33412,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33402,
                        "src": "4478:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33408,
                              "name": "getAaveOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33400,
                              "src": "4447:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4447:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33407,
                          "name": "Oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37867,
                          "src": "4440:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Oracle_$37867_$",
                            "typeString": "type(contract Oracle)"
                          }
                        },
                        "id": 33410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4440:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$37867",
                          "typeString": "contract Oracle"
                        }
                      },
                      "id": 33411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAssetPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37861,
                      "src": "4440:37:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 33413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4440:46:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33406,
                  "id": 33414,
                  "nodeType": "Return",
                  "src": "4433:53:46"
                }
              ]
            },
            "documentation": null,
            "id": 33416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservePriceETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33402,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 33416,
                  "src": "4376:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4376:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4375:17:46"
            },
            "returnParameters": {
              "id": 33406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33405,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33416,
                  "src": "4414:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4413:9:46"
            },
            "scope": 34117,
            "src": "4348:145:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33427,
              "nodeType": "Block",
              "src": "4555:36:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 33421,
                            "name": "over",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              33438,
                              33573
                            ],
                            "referencedDeclaration": 33438,
                            "src": "4573:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 33422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4573:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 33423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4582:1:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4573:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 33425,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4572:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33420,
                  "id": 33426,
                  "nodeType": "Return",
                  "src": "4565:19:46"
                }
              ]
            },
            "documentation": null,
            "id": 33428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shouldRebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4523:2:46"
            },
            "returnParameters": {
              "id": 33420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33419,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33428,
                  "src": "4549:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4549:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4548:6:46"
            },
            "scope": 34117,
            "src": "4499:92:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33437,
              "nodeType": "Block",
              "src": "4643:24:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 33434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4658:1:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 33433,
                      "name": "over",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33438,
                        33573
                      ],
                      "referencedDeclaration": 33573,
                      "src": "4653:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 33435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33436,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:7:46"
                }
              ]
            },
            "documentation": null,
            "id": 33438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "over",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4610:2:46"
            },
            "returnParameters": {
              "id": 33432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33431,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33438,
                  "src": "4634:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4633:9:46"
            },
            "scope": 34117,
            "src": "4597:70:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33477,
              "nodeType": "Block",
              "src": "4751:229:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33445,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33440,
                      "src": "4761:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 33453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4817:2:46",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "id": 33452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4809:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 33454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4809:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 33457,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33021,
                                        "src": "4844:5:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$35492",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$35492",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 33456,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4836:7:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 33458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4836:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 33455,
                                  "name": "ERC20Detailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37702,
                                  "src": "4822:13:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                    "typeString": "type(contract ERC20Detailed)"
                                  }
                                },
                                "id": 33459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4822:29:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                  "typeString": "contract ERC20Detailed"
                                }
                              },
                              "id": 33460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37701,
                              "src": "4822:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 33461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4822:40:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4809:53:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 33448,
                                "name": "getUnderlyingPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33809,
                                "src": "4783:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 33449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4783:20:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 33446,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33440,
                              "src": "4771:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35340,
                            "src": "4771:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4771:33:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35356,
                        "src": "4771:37:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 33463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4771:92:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4761:102:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33465,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:102:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33474,
                        "name": "healthFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33030,
                        "src": "4960:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33471,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33036,
                            "src": "4951:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33468,
                                "name": "ltv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33033,
                                "src": "4942:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33466,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33440,
                                "src": "4930:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35340,
                              "src": "4930:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 33469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4930:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35356,
                          "src": "4930:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4930:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "4930:29:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 33475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33444,
                  "id": 33476,
                  "nodeType": "Return",
                  "src": "4923:50:46"
                }
              ]
            },
            "documentation": null,
            "id": 33478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingPriceETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33440,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33478,
                  "src": "4704:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4703:17:46"
            },
            "returnParameters": {
              "id": 33444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33443,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33478,
                  "src": "4742:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4741:9:46"
            },
            "scope": 34117,
            "src": "4673:307:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33572,
              "nodeType": "Block",
              "src": "5047:786:46",
              "statements": [
                {
                  "assignments": [
                    33486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33486,
                      "name": "_reserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 33572,
                      "src": "5057:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33485,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5057:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33489,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33487,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33979,
                      "src": "5076:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 33488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5076:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5057:28:46"
                },
                {
                  "assignments": [
                    33491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33491,
                      "name": "_eth",
                      "nodeType": "VariableDeclaration",
                      "scope": 33572,
                      "src": "5095:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5095:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33495,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33493,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33480,
                        "src": "5132:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33492,
                      "name": "getUnderlyingPriceETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33478,
                      "src": "5110:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 33494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5110:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5095:45:46"
                },
                {
                  "assignments": [
                    33497,
                    33499,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33497,
                      "name": "_maxSafeETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33572,
                      "src": "5151:19:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5151:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33499,
                      "name": "_totalBorrowsETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33572,
                      "src": "5172:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5172:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 33502,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33500,
                      "name": "maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33690,
                      "src": "5202:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 33501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5202:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5150:64:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33503,
                      "name": "_maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33497,
                      "src": "5224:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 33509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5263:3:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 33506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5254:3:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 33504,
                              "name": "_maxSafeETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33497,
                              "src": "5238:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35340,
                            "src": "5238:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5238:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35356,
                        "src": "5238:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 33510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5238:29:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5224:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33512,
                  "nodeType": "ExpressionStatement",
                  "src": "5224:43:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33513,
                      "name": "_eth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33491,
                      "src": "5336:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 33514,
                      "name": "_maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33497,
                      "src": "5343:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5336:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33528,
                    "nodeType": "Block",
                    "src": "5402:94:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 33521,
                            "name": "_maxSafeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33497,
                            "src": "5416:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33524,
                                "name": "_eth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33491,
                                "src": "5446:4:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33522,
                                "name": "_maxSafeETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33497,
                                "src": "5430:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35279,
                              "src": "5430:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 33525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5430:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5416:35:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33527,
                        "nodeType": "ExpressionStatement",
                        "src": "5416:35:46"
                      }
                    ]
                  },
                  "id": 33529,
                  "nodeType": "IfStatement",
                  "src": "5332:164:46",
                  "trueBody": {
                    "id": 33520,
                    "nodeType": "Block",
                    "src": "5356:40:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 33516,
                            "name": "_maxSafeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33497,
                            "src": "5370:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 33517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5384:1:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5370:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33519,
                        "nodeType": "ExpressionStatement",
                        "src": "5370:15:46"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33530,
                      "name": "_maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33497,
                      "src": "5509:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 33531,
                      "name": "_totalBorrowsETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33499,
                      "src": "5523:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5509:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33570,
                    "nodeType": "Block",
                    "src": "5794:33:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 33568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5815:1:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 33484,
                        "id": 33569,
                        "nodeType": "Return",
                        "src": "5808:8:46"
                      }
                    ]
                  },
                  "id": 33571,
                  "nodeType": "IfStatement",
                  "src": "5505:322:46",
                  "trueBody": {
                    "id": 33567,
                    "nodeType": "Block",
                    "src": "5541:247:46",
                    "statements": [
                      {
                        "assignments": [
                          33534
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33534,
                            "name": "_over",
                            "nodeType": "VariableDeclaration",
                            "scope": 33567,
                            "src": "5555:13:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33533,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5555:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 33545,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 33543,
                              "name": "_totalBorrowsETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33499,
                              "src": "5631:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 33539,
                                      "name": "_maxSafeETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33497,
                                      "src": "5613:11:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 33537,
                                      "name": "_totalBorrowsETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33499,
                                      "src": "5592:16:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 33538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35279,
                                    "src": "5592:20:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 33540,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5592:33:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 33535,
                                  "name": "_totalBorrowsETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33499,
                                  "src": "5571:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 33536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "5571:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 33541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5571:55:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "5571:59:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5571:77:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5555:93:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 33546,
                            "name": "_over",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33534,
                            "src": "5662:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 33560,
                                  "name": "getReservePrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33798,
                                  "src": "5733:15:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 33561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5733:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 33557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3130",
                                          "id": 33550,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5688:2:46",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          }
                                        ],
                                        "id": 33549,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5680:7:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": "uint256"
                                      },
                                      "id": 33551,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5680:11:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 33553,
                                              "name": "_reserve",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 33486,
                                              "src": "5707:8:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 33552,
                                            "name": "ERC20Detailed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37702,
                                            "src": "5693:13:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                              "typeString": "type(contract ERC20Detailed)"
                                            }
                                          },
                                          "id": 33554,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5693:23:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                            "typeString": "contract ERC20Detailed"
                                          }
                                        },
                                        "id": 33555,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "decimals",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 37701,
                                        "src": "5693:32:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                          "typeString": "function () view external returns (uint8)"
                                        }
                                      },
                                      "id": 33556,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5693:34:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5680:47:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 33547,
                                    "name": "_over",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33534,
                                    "src": "5670:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 33548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35340,
                                  "src": "5670:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 33558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5670:58:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35356,
                              "src": "5670:62:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 33562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5670:81:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5662:89:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33564,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:89:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33565,
                          "name": "_over",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33534,
                          "src": "5772:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 33484,
                        "id": 33566,
                        "nodeType": "Return",
                        "src": "5765:12:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 33573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "over",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33480,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33573,
                  "src": "5000:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5000:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4999:17:46"
            },
            "returnParameters": {
              "id": 33484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33483,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33573,
                  "src": "5038:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5037:9:46"
            },
            "scope": 34117,
            "src": "4986:847:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33618,
              "nodeType": "Block",
              "src": "5885:308:46",
              "statements": [
                {
                  "assignments": [
                    33579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33579,
                      "name": "_over",
                      "nodeType": "VariableDeclaration",
                      "scope": 33618,
                      "src": "5895:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33578,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5895:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33583,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33581,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33575,
                        "src": "5916:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33580,
                      "name": "over",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33438,
                        33573
                      ],
                      "referencedDeclaration": 33573,
                      "src": "5911:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 33582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5895:29:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33584,
                      "name": "_over",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33579,
                      "src": "5938:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5946:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5938:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33617,
                  "nodeType": "IfStatement",
                  "src": "5934:253:46",
                  "trueBody": {
                    "id": 33616,
                    "nodeType": "Block",
                    "src": "5949:238:46",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 33587,
                            "name": "_over",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33579,
                            "src": "5967:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33588,
                              "name": "credit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33140,
                              "src": "5975:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 33589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5975:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5967:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 33597,
                        "nodeType": "IfStatement",
                        "src": "5963:71:46",
                        "trueBody": {
                          "id": 33596,
                          "nodeType": "Block",
                          "src": "5985:49:46",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 33594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 33591,
                                  "name": "_over",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33579,
                                  "src": "6003:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 33592,
                                    "name": "credit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33140,
                                    "src": "6011:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 33593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6011:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6003:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33595,
                              "nodeType": "ExpressionStatement",
                              "src": "6003:16:46"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 33598,
                            "name": "_over",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33579,
                            "src": "6051:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 33599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6059:1:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6051:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 33615,
                        "nodeType": "IfStatement",
                        "src": "6047:130:46",
                        "trueBody": {
                          "id": 33614,
                          "nodeType": "Block",
                          "src": "6062:115:46",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 33606,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38140,
                                        "src": "6121:4:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                          "typeString": "contract yDelegatedVault"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                          "typeString": "contract yDelegatedVault"
                                        }
                                      ],
                                      "id": 33605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6113:7:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 33607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6113:13:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 33608,
                                    "name": "_over",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33579,
                                    "src": "6128:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 33602,
                                        "name": "controller",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33025,
                                        "src": "6092:10:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 33601,
                                      "name": "IController",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 36181,
                                      "src": "6080:11:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                        "typeString": "type(contract IController)"
                                      }
                                    },
                                    "id": 33603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6080:23:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IController_$36181",
                                      "typeString": "contract IController"
                                    }
                                  },
                                  "id": 33604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36131,
                                  "src": "6080:32:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 33609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6080:54:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33610,
                              "nodeType": "ExpressionStatement",
                              "src": "6080:54:46"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 33611,
                                  "name": "repayAll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33303,
                                  "src": "6152:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 33612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6152:10:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 33613,
                              "nodeType": "ExpressionStatement",
                              "src": "6152:10:46"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 33619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33575,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33619,
                  "src": "5859:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5859:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5858:17:46"
            },
            "returnParameters": {
              "id": 33577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5885:0:46"
            },
            "scope": 34117,
            "src": "5839:354:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 33626,
              "nodeType": "Block",
              "src": "6229:30:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 33623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6250:1:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 33622,
                      "name": "_rebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33619,
                      "src": "6239:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 33624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6239:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33625,
                  "nodeType": "ExpressionStatement",
                  "src": "6239:13:46"
                }
              ]
            },
            "documentation": null,
            "id": 33627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6217:2:46"
            },
            "returnParameters": {
              "id": 33621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6229:0:46"
            },
            "scope": 34117,
            "src": "6199:60:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33649,
              "nodeType": "Block",
              "src": "6300:139:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33631,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "6318:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6318:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33633,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33025,
                          "src": "6332:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6318:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 33635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6344:13:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 33630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6310:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:48:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33637,
                  "nodeType": "ExpressionStatement",
                  "src": "6310:48:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33641,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "6387:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33642,
                        "name": "insurance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33027,
                        "src": "6399:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33638,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33021,
                        "src": "6368:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "6368:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 33643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6368:41:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33644,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:41:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33645,
                      "name": "insurance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33027,
                      "src": "6419:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6431:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6419:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33648,
                  "nodeType": "ExpressionStatement",
                  "src": "6419:13:46"
                }
              ]
            },
            "documentation": null,
            "id": 33650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimInsurance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6288:2:46"
            },
            "returnParameters": {
              "id": 33629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6300:0:46"
            },
            "scope": 34117,
            "src": "6265:174:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33689,
              "nodeType": "Block",
              "src": "6639:305:46",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    33660,
                    null,
                    33662,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 33660,
                      "name": "_totalBorrowsETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33689,
                      "src": "6654:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33659,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6654:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 33662,
                      "name": "_availableBorrowsETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33689,
                      "src": "6682:28:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33661,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 33672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33669,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "6763:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6755:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6755:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 33664,
                              "name": "getAave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33188,
                              "src": "6725:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 33665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6725:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33663,
                          "name": "Aave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37185,
                          "src": "6720:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Aave_$37185_$",
                            "typeString": "type(contract Aave)"
                          }
                        },
                        "id": 33666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6720:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Aave_$37185",
                          "typeString": "contract Aave"
                        }
                      },
                      "id": 33667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37157,
                      "src": "6720:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 33671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6649:120:46"
                },
                {
                  "assignments": [
                    33674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33674,
                      "name": "_maxBorrowETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33689,
                      "src": "6779:21:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6779:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33680,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33677,
                            "name": "_availableBorrowsETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33662,
                            "src": "6825:20:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33675,
                            "name": "_totalBorrowsETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33660,
                            "src": "6804:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35263,
                          "src": "6804:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6804:42:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 33679,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6803:44:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6779:68:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33683,
                            "name": "healthFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33030,
                            "src": "6883:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33681,
                            "name": "_maxBorrowETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33674,
                            "src": "6865:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35356,
                          "src": "6865:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6865:31:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33685,
                        "name": "_totalBorrowsETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33660,
                        "src": "6898:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33686,
                        "name": "_availableBorrowsETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33662,
                        "src": "6916:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 33687,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6864:73:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 33658,
                  "id": 33688,
                  "nodeType": "Return",
                  "src": "6857:80:46"
                }
              ]
            },
            "documentation": null,
            "id": 33690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxSafeETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6464:2:46"
            },
            "returnParameters": {
              "id": 33658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33653,
                  "name": "maxBorrowsETH",
                  "nodeType": "VariableDeclaration",
                  "scope": 33690,
                  "src": "6525:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33655,
                  "name": "totalBorrowsETH",
                  "nodeType": "VariableDeclaration",
                  "scope": 33690,
                  "src": "6560:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6560:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33657,
                  "name": "availableBorrowsETH",
                  "nodeType": "VariableDeclaration",
                  "scope": 33690,
                  "src": "6597:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6597:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6511:123:46"
            },
            "scope": 34117,
            "src": "6445:499:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33701,
              "nodeType": "Block",
              "src": "7003:56:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 33695,
                            "name": "availableToBorrowReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33787,
                            "src": "7021:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 33696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7021:26:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 33697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7050:1:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7021:30:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 33699,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7020:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33694,
                  "id": 33700,
                  "nodeType": "Return",
                  "src": "7013:39:46"
                }
              ]
            },
            "documentation": null,
            "id": 33702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shouldBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6971:2:46"
            },
            "returnParameters": {
              "id": 33694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33693,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33702,
                  "src": "6997:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6997:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6996:6:46"
            },
            "scope": 34117,
            "src": "6950:109:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33745,
              "nodeType": "Block",
              "src": "7127:417:46",
              "statements": [
                {
                  "assignments": [
                    33708,
                    33710,
                    33712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33708,
                      "name": "_maxSafeETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33745,
                      "src": "7138:19:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33707,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7138:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33710,
                      "name": "_totalBorrowsETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33745,
                      "src": "7159:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7159:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33712,
                      "name": "_availableBorrowsETH",
                      "nodeType": "VariableDeclaration",
                      "scope": 33745,
                      "src": "7185:28:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7185:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33715,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33713,
                      "name": "maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33690,
                      "src": "7217:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 33714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7217:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7137:92:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33716,
                      "name": "_maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33708,
                      "src": "7239:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 33722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7277:3:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3935",
                              "id": 33719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7269:2:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95_by_1",
                                "typeString": "int_const 95"
                              },
                              "value": "95"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95_by_1",
                                "typeString": "int_const 95"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 33717,
                              "name": "_maxSafeETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33708,
                              "src": "7253:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35340,
                            "src": "7253:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7253:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35356,
                        "src": "7253:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 33723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7253:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7239:42:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33725,
                  "nodeType": "ExpressionStatement",
                  "src": "7239:42:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33726,
                      "name": "_maxSafeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33708,
                      "src": "7350:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 33727,
                      "name": "_totalBorrowsETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33710,
                      "src": "7364:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7350:30:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33743,
                    "nodeType": "Block",
                    "src": "7505:33:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 33741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7526:1:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 33706,
                        "id": 33742,
                        "nodeType": "Return",
                        "src": "7519:8:46"
                      }
                    ]
                  },
                  "id": 33744,
                  "nodeType": "IfStatement",
                  "src": "7346:192:46",
                  "trueBody": {
                    "id": 33740,
                    "nodeType": "Block",
                    "src": "7382:117:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 33737,
                              "name": "_availableBorrowsETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33712,
                              "src": "7467:20:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 33733,
                                      "name": "_totalBorrowsETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33710,
                                      "src": "7444:16:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 33731,
                                      "name": "_maxSafeETH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33708,
                                      "src": "7428:11:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 33732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35279,
                                    "src": "7428:15:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 33734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7428:33:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 33729,
                                  "name": "_availableBorrowsETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33712,
                                  "src": "7403:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 33730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "7403:24:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 33735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7403:59:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "7403:63:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7403:85:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 33706,
                        "id": 33739,
                        "nodeType": "Return",
                        "src": "7396:92:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 33746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableToBorrowETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7094:2:46"
            },
            "returnParameters": {
              "id": 33706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33705,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33746,
                  "src": "7118:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7117:9:46"
            },
            "scope": 34117,
            "src": "7065:479:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33786,
              "nodeType": "Block",
              "src": "7616:284:46",
              "statements": [
                {
                  "assignments": [
                    33752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33752,
                      "name": "_reserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 33786,
                      "src": "7626:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33751,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7626:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33755,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33753,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33979,
                      "src": "7645:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 33754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7645:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7626:28:46"
                },
                {
                  "assignments": [
                    33757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33757,
                      "name": "_available",
                      "nodeType": "VariableDeclaration",
                      "scope": 33786,
                      "src": "7664:18:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33756,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7664:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33760,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33758,
                      "name": "availableToBorrowETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33746,
                      "src": "7685:20:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 33759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7685:22:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7664:43:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33761,
                      "name": "_available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33757,
                      "src": "7721:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7734:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7721:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33784,
                    "nodeType": "Block",
                    "src": "7861:33:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 33782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7882:1:46",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 33750,
                        "id": 33783,
                        "nodeType": "Return",
                        "src": "7875:8:46"
                      }
                    ]
                  },
                  "id": 33785,
                  "nodeType": "IfStatement",
                  "src": "7717:177:46",
                  "trueBody": {
                    "id": 33781,
                    "nodeType": "Block",
                    "src": "7737:118:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 33777,
                                "name": "getReservePrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33798,
                                "src": "7826:15:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 33778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7826:17:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3130",
                                        "id": 33767,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7781:2:46",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "id": 33766,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7773:7:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 33768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7773:11:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 33770,
                                            "name": "_reserve",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 33752,
                                            "src": "7800:8:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 33769,
                                          "name": "ERC20Detailed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37702,
                                          "src": "7786:13:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$37702_$",
                                            "typeString": "type(contract ERC20Detailed)"
                                          }
                                        },
                                        "id": 33771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7786:23:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20Detailed_$37702",
                                          "typeString": "contract ERC20Detailed"
                                        }
                                      },
                                      "id": 33772,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "decimals",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37701,
                                      "src": "7786:32:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view external returns (uint8)"
                                      }
                                    },
                                    "id": 33773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7786:34:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "7773:47:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 33764,
                                  "name": "_available",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33757,
                                  "src": "7758:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 33765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "7758:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 33775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7758:63:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 33776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "7758:67:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 33779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7758:86:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 33750,
                        "id": 33780,
                        "nodeType": "Return",
                        "src": "7751:93:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 33787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableToBorrowReserve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7583:2:46"
            },
            "returnParameters": {
              "id": 33750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33749,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33787,
                  "src": "7607:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7606:9:46"
            },
            "scope": 34117,
            "src": "7550:350:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33797,
              "nodeType": "Block",
              "src": "7963:53:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33793,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33979,
                          "src": "7999:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 33794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7999:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33792,
                      "name": "getReservePriceETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33416,
                      "src": "7980:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 33795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7980:29:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33791,
                  "id": 33796,
                  "nodeType": "Return",
                  "src": "7973:36:46"
                }
              ]
            },
            "documentation": null,
            "id": 33798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7930:2:46"
            },
            "returnParameters": {
              "id": 33791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33790,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33798,
                  "src": "7954:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7954:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7953:9:46"
            },
            "scope": 34117,
            "src": "7906:110:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33808,
              "nodeType": "Block",
              "src": "8082:56:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33804,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33993,
                          "src": "8118:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 33805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8118:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33803,
                      "name": "getReservePriceETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33416,
                      "src": "8099:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 33806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8099:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33802,
                  "id": 33807,
                  "nodeType": "Return",
                  "src": "8092:39:46"
                }
              ]
            },
            "documentation": null,
            "id": 33809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8049:2:46"
            },
            "returnParameters": {
              "id": 33802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33801,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33809,
                  "src": "8073:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8073:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8072:9:46"
            },
            "scope": 34117,
            "src": "8022:116:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33872,
              "nodeType": "Block",
              "src": "8169:462:46",
              "statements": [
                {
                  "assignments": [
                    33813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33813,
                      "name": "_reserve",
                      "nodeType": "VariableDeclaration",
                      "scope": 33872,
                      "src": "8179:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33812,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8179:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33816,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33814,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33979,
                      "src": "8198:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 33815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8198:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8179:28:46"
                },
                {
                  "assignments": [
                    33818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33818,
                      "name": "_borrow",
                      "nodeType": "VariableDeclaration",
                      "scope": 33872,
                      "src": "8217:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33817,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8217:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33821,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33819,
                      "name": "availableToBorrowReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33787,
                      "src": "8235:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 33820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8235:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8217:44:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33822,
                      "name": "_borrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33818,
                      "src": "8275:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8285:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8275:11:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33837,
                  "nodeType": "IfStatement",
                  "src": "8271:89:46",
                  "trueBody": {
                    "id": 33836,
                    "nodeType": "Block",
                    "src": "8288:72:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 33830,
                              "name": "_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33813,
                              "src": "8325:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 33831,
                              "name": "_borrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33818,
                              "src": "8335:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 33832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8344:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "37",
                              "id": 33833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8347:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_7_by_1",
                                "typeString": "int_const 7"
                              },
                              "value": "7"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_7_by_1",
                                "typeString": "int_const 7"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 33826,
                                    "name": "getAave",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33188,
                                    "src": "8307:7:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 33827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8307:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33825,
                                "name": "Aave",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37185,
                                "src": "8302:4:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Aave_$37185_$",
                                  "typeString": "type(contract Aave)"
                                }
                              },
                              "id": 33828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8302:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Aave_$37185",
                                "typeString": "contract Aave"
                              }
                            },
                            "id": 33829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "borrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37120,
                            "src": "8302:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint16) external"
                            }
                          },
                          "id": 33834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8302:47:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33835,
                        "nodeType": "ExpressionStatement",
                        "src": "8302:47:46"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    33839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33839,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 33872,
                      "src": "8394:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33838,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8394:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33848,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33845,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "8448:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8440:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8440:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33841,
                            "name": "_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33813,
                            "src": "8420:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33840,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "8413:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 33842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8413:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "8413:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 33847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8413:41:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8394:60:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33849,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33839,
                      "src": "8468:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8479:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8468:12:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33871,
                  "nodeType": "IfStatement",
                  "src": "8464:161:46",
                  "trueBody": {
                    "id": 33870,
                    "nodeType": "Block",
                    "src": "8482:143:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 33856,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33025,
                              "src": "8526:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 33857,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33839,
                              "src": "8538:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33853,
                                  "name": "_reserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33813,
                                  "src": "8503:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33852,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "8496:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 33854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8496:16:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 33855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "8496:29:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 33858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8496:51:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33859,
                        "nodeType": "ExpressionStatement",
                        "src": "8496:51:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33865,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38140,
                                  "src": "8598:4:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                    "typeString": "contract yDelegatedVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                                    "typeString": "contract yDelegatedVault"
                                  }
                                ],
                                "id": 33864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8590:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 33866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8590:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 33867,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33839,
                              "src": "8605:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33861,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33025,
                                  "src": "8573:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33860,
                                "name": "IController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36181,
                                "src": "8561:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                  "typeString": "type(contract IController)"
                                }
                              },
                              "id": 33862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8561:23:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IController_$36181",
                                "typeString": "contract IController"
                              }
                            },
                            "id": 33863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "earn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36145,
                            "src": "8561:28:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 33868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8561:53:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33869,
                        "nodeType": "ExpressionStatement",
                        "src": "8561:53:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 33873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8157:2:46"
            },
            "returnParameters": {
              "id": 33811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8169:0:46"
            },
            "scope": 34117,
            "src": "8144:487:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33884,
              "nodeType": "Block",
              "src": "8668:53:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33879,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "8702:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8702:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33877,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33021,
                            "src": "8686:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$35492",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 33878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35437,
                          "src": "8686:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 33881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8686:27:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33876,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33964,
                      "src": "8678:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 33882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8678:36:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33883,
                  "nodeType": "ExpressionStatement",
                  "src": "8678:36:46"
                }
              ]
            },
            "documentation": null,
            "id": 33885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8656:2:46"
            },
            "returnParameters": {
              "id": 33875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8668:0:46"
            },
            "scope": 34117,
            "src": "8637:84:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 33963,
              "nodeType": "Block",
              "src": "8768:708:46",
              "statements": [
                {
                  "assignments": [
                    33891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33891,
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 33963,
                      "src": "8778:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8778:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33894,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33892,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33352,
                      "src": "8794:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 33893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8794:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8778:25:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33898,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "8836:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8836:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33901,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "8856:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8848:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8848:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33903,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33887,
                        "src": "8863:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33895,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33021,
                        "src": "8813:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35550,
                      "src": "8813:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 33904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8813:58:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33905,
                  "nodeType": "ExpressionStatement",
                  "src": "8813:58:46"
                },
                {
                  "assignments": [
                    33907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33907,
                      "name": "_insurance",
                      "nodeType": "VariableDeclaration",
                      "scope": 33963,
                      "src": "9042:18:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9042:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33915,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 33913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9083:5:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3530",
                            "id": 33910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9075:2:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33908,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33887,
                            "src": "9063:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "9063:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9063:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 33912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "9063:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 33914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9042:47:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33916,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33887,
                      "src": "9099:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 33919,
                          "name": "_insurance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33907,
                          "src": "9121:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33917,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33887,
                          "src": "9109:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35279,
                        "src": "9109:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 33920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9109:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9099:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33922,
                  "nodeType": "ExpressionStatement",
                  "src": "9099:33:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33923,
                      "name": "insurance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33027,
                      "src": "9142:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 33926,
                          "name": "_insurance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33907,
                          "src": "9168:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33924,
                          "name": "insurance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33027,
                          "src": "9154:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "9154:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 33927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9154:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9142:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33929,
                  "nodeType": "ExpressionStatement",
                  "src": "9142:37:46"
                },
                {
                  "assignments": [
                    33931
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33931,
                      "name": "shares",
                      "nodeType": "VariableDeclaration",
                      "scope": 33963,
                      "src": "9263:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33930,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9263:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33933,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 33932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9280:1:46",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9263:18:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33934,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37271,
                        "src": "9295:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 33935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9295:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9312:1:46",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9295:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 33955,
                    "nodeType": "Block",
                    "src": "9362:73:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 33943,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33931,
                            "src": "9376:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33951,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33891,
                                "src": "9418:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 33946,
                                          "name": "totalSupply",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37271,
                                          "src": "9398:11:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 33947,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9398:13:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 33944,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33887,
                                        "src": "9386:7:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 33945,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 35340,
                                      "src": "9386:11:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 33948,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9386:26:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 33949,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9385:28:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 33950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35356,
                              "src": "9385:32:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 33952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9385:39:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9376:48:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33954,
                        "nodeType": "ExpressionStatement",
                        "src": "9376:48:46"
                      }
                    ]
                  },
                  "id": 33956,
                  "nodeType": "IfStatement",
                  "src": "9291:144:46",
                  "trueBody": {
                    "id": 33942,
                    "nodeType": "Block",
                    "src": "9315:41:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 33940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 33938,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33931,
                            "src": "9329:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 33939,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33887,
                            "src": "9338:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9329:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33941,
                        "nodeType": "ExpressionStatement",
                        "src": "9329:16:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 33958,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "9450:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9450:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33960,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33931,
                        "src": "9462:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33957,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37528,
                      "src": "9444:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9444:25:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33962,
                  "nodeType": "ExpressionStatement",
                  "src": "9444:25:46"
                }
              ]
            },
            "documentation": null,
            "id": 33964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33887,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33964,
                  "src": "8744:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8744:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8743:17:46"
            },
            "returnParameters": {
              "id": 33889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8768:0:46"
            },
            "scope": 34117,
            "src": "8727:749:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33978,
              "nodeType": "Block",
              "src": "9531:67:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33974,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38140,
                            "src": "9585:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_yDelegatedVault_$34117",
                              "typeString": "contract yDelegatedVault"
                            }
                          ],
                          "id": 33973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9577:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 33975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9577:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 33970,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33025,
                            "src": "9560:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33969,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "9548:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 33971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 33972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "want",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36152,
                      "src": "9548:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 33976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9548:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33968,
                  "id": 33977,
                  "nodeType": "Return",
                  "src": "9541:50:46"
                }
              ]
            },
            "documentation": null,
            "id": 33979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9498:2:46"
            },
            "returnParameters": {
              "id": 33968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33967,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33979,
                  "src": "9522:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9522:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9521:9:46"
            },
            "scope": 34117,
            "src": "9482:116:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33992,
              "nodeType": "Block",
              "src": "9656:74:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 33986,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33021,
                                "src": "9691:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$35492",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 33985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9683:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 33987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9683:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33984,
                          "name": "AaveToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37852,
                          "src": "9673:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AaveToken_$37852_$",
                            "typeString": "type(contract AaveToken)"
                          }
                        },
                        "id": 33988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9673:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AaveToken_$37852",
                          "typeString": "contract AaveToken"
                        }
                      },
                      "id": 33989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "underlyingAssetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37851,
                      "src": "9673:48:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9673:50:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33983,
                  "id": 33991,
                  "nodeType": "Return",
                  "src": "9666:57:46"
                }
              ]
            },
            "documentation": null,
            "id": 33993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9623:2:46"
            },
            "returnParameters": {
              "id": 33983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33982,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33993,
                  "src": "9647:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9647:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9646:9:46"
            },
            "scope": 34117,
            "src": "9604:126:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34003,
              "nodeType": "Block",
              "src": "9766:48:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33998,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "9795:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9795:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 33997,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37283,
                          "src": "9785:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 34000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9785:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33996,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34100,
                      "src": "9776:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9776:31:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34002,
                  "nodeType": "ExpressionStatement",
                  "src": "9776:31:46"
                }
              ]
            },
            "documentation": null,
            "id": 34004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9756:2:46"
            },
            "returnParameters": {
              "id": 33995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9766:0:46"
            },
            "scope": 34117,
            "src": "9736:78:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34051,
              "nodeType": "Block",
              "src": "9940:380:46",
              "statements": [
                {
                  "assignments": [
                    34012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34012,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 34051,
                      "src": "9950:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9950:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34016,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34014,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34006,
                        "src": "9979:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34013,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37283,
                      "src": "9969:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 34015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9969:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9950:37:46"
                },
                {
                  "assignments": [
                    34018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34018,
                      "name": "_safeWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 34051,
                      "src": "9997:21:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9997:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34027,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31653138",
                        "id": 34025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10048:4:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 34021,
                              "name": "locked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33156,
                              "src": "10034:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 34022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10034:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 34019,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34012,
                            "src": "10021:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 34020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "10021:12:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 34023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10021:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 34024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "10021:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 34026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10021:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9997:56:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 34028,
                      "name": "_safeWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34018,
                      "src": "10067:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 34029,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34012,
                      "src": "10083:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10067:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34049,
                    "nodeType": "Block",
                    "src": "10139:175:46",
                    "statements": [
                      {
                        "assignments": [
                          34035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34035,
                            "name": "_diff",
                            "nodeType": "VariableDeclaration",
                            "scope": 34049,
                            "src": "10153:13:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34034,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10153:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 34040,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 34038,
                              "name": "_safeWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34018,
                              "src": "10182:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 34036,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34012,
                              "src": "10169:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 34037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "10169:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 34039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10169:27:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10153:43:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 34045,
                                  "name": "healthFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33030,
                                  "src": "10240:12:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 34043,
                                  "name": "_diff",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34035,
                                  "src": "10230:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 34044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "10230:9:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 34046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10230:23:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 34041,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34012,
                              "src": "10217:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 34042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35279,
                            "src": "10217:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 34047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10217:37:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 34010,
                        "id": 34048,
                        "nodeType": "Return",
                        "src": "10210:44:46"
                      }
                    ]
                  },
                  "id": 34050,
                  "nodeType": "IfStatement",
                  "src": "10063:251:46",
                  "trueBody": {
                    "id": 34033,
                    "nodeType": "Block",
                    "src": "10093:40:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34031,
                          "name": "_balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34012,
                          "src": "10114:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 34010,
                        "id": 34032,
                        "nodeType": "Return",
                        "src": "10107:15:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 34052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxWithdrawal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34006,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 34052,
                  "src": "9893:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9893:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9892:17:46"
            },
            "returnParameters": {
              "id": 34010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34009,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34052,
                  "src": "9931:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9931:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9930:9:46"
            },
            "scope": 34117,
            "src": "9870:450:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34062,
              "nodeType": "Block",
              "src": "10359:52:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 34057,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "10392:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 34058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10392:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 34056,
                          "name": "maxWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34052,
                          "src": "10378:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 34059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10378:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34055,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34100,
                      "src": "10369:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10369:35:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34061,
                  "nodeType": "ExpressionStatement",
                  "src": "10369:35:46"
                }
              ]
            },
            "documentation": null,
            "id": 34063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10347:2:46"
            },
            "returnParameters": {
              "id": 34054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10359:0:46"
            },
            "scope": 34117,
            "src": "10326:85:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 34099,
              "nodeType": "Block",
              "src": "10526:174:46",
              "statements": [
                {
                  "assignments": [
                    34069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34069,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 34099,
                      "src": "10536:9:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10536:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34080,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34077,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "10577:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 34078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10577:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 34073,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34065,
                                "src": "10563:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 34070,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33352,
                                  "src": "10549:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 34071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10549:9:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 34072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35340,
                              "src": "10549:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 34074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10549:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 34075,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10548:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 34076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "10548:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 34079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10548:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10536:55:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34082,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "10607:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10607:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34084,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34065,
                        "src": "10619:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34081,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37572,
                      "src": "10601:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10601:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34086,
                  "nodeType": "ExpressionStatement",
                  "src": "10601:26:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34088,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34069,
                        "src": "10648:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34087,
                      "name": "_rebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33619,
                      "src": "10637:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10637:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34090,
                  "nodeType": "ExpressionStatement",
                  "src": "10637:13:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37932,
                          "src": "10679:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10679:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34096,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34069,
                        "src": "10691:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 34091,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33021,
                        "src": "10660:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 34093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "10660:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 34097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10660:33:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34098,
                  "nodeType": "ExpressionStatement",
                  "src": "10660:33:46"
                }
              ]
            },
            "documentation": null,
            "id": 34100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34065,
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 34100,
                  "src": "10502:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10502:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10501:17:46"
            },
            "returnParameters": {
              "id": 34067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10526:0:46"
            },
            "scope": 34117,
            "src": "10484:216:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34115,
              "nodeType": "Block",
              "src": "10770:62:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34111,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37271,
                          "src": "10811:11:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 34112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10811:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653138",
                            "id": 34108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10801:4:46",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 34105,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33352,
                              "src": "10787:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 34106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10787:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 34107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "10787:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 34109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10787:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 34110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "10787:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 34113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10787:38:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34104,
                  "id": 34114,
                  "nodeType": "Return",
                  "src": "10780:45:46"
                }
              ]
            },
            "documentation": null,
            "id": 34116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10735:2:46"
            },
            "returnParameters": {
              "id": 34104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "10761:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10761:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10760:9:46"
            },
            "scope": 34117,
            "src": "10706:126:46",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 34118,
        "src": "683:10151:46"
      }
    ],
    "src": "0:10835:46"
  },
  "bytecode": "608060405260046009556041600a556064600b553480156200002057600080fd5b5060405162002e2e38038062002e2e833981810160405260408110156200004657600080fd5b508051602090910151604080516306fdde0360e01b815290516001600160a01b038416916306fdde03916004808301926000929190829003018186803b1580156200009057600080fd5b505afa158015620000a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015620000cf57600080fd5b8101908080516040519392919084640100000000821115620000f057600080fd5b9083019060208201858111156200010657600080fd5b82516401000000008111828201881017156200012157600080fd5b82525081516020918201929091019080838360005b838110156200015057818101518382015260200162000136565b50505050905090810190601f1680156200017e5780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806503cb2b0b937160d51b81525060060182805190602001908083835b60208310620001ca5780518252601f199092019160209182019101620001a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200023857600080fd5b505afa1580156200024d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200027757600080fd5b81019080805160405193929190846401000000008211156200029857600080fd5b908301906020820185811115620002ae57600080fd5b8251640100000000811182820188101715620002c957600080fd5b82525081516020918201929091019080838360005b83811015620002f8578181015183820152602001620002de565b50505050905090810190601f168015620003265780820380516001836020036101000a031916815260200191505b506040525050506040516020018080607960f81b81525060010182805190602001908083835b602083106200036d5780518252601f1990920191602091820191016200034c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620003db57600080fd5b505afa158015620003f0573d6000803e3d6000fd5b505050506040513d60208110156200040757600080fd5b505182516200041e9060039060208601906200048f565b508151620004349060049060208501906200048f565b506005805460ff191660ff9290921691909117610100600160a81b0319166101006001600160a01b0396871602179055505060068054336001600160a01b031991821617909155600780549091169190921617905562000534565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004d257805160ff191683800117855562000502565b8280016001018555821562000502579182015b8281111562000502578251825591602001919060010190620004e5565b506200051092915062000514565b5090565b6200053191905b808211156200051057600081556001016200051b565b90565b6128ea80620005446000396000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c80637fd42617116101de578063b040785a1161010f578063dd90a791116100ad578063f7c1ec771161007c578063f7c1ec7714610866578063f82ce27d1461086e578063fa3ae6dc14610876578063fc0c546a1461087e57610383565b8063dd90a79114610831578063de5f62681461084e578063f072232214610856578063f77c47911461085e57610383565b8063cd3293de116100e9578063cd3293de146107eb578063cf309012146107f3578063d389800f146107fb578063dd62ed3e1461080357610383565b8063b040785a146107be578063b69ef8a8146107c6578063b6b55f25146107ce57610383565b80639f287e161161017c578063a75ac60811610156578063a75ac6081461075c578063a9059cbb14610764578063ab033ea914610790578063ae2c1d5f146107b657610383565b80639f287e1614610720578063a06d083c14610728578063a457c2d71461073057610383565b806389cf3204116101b857806389cf3204146106e2578063929c8849146106ea57806392eefe9b146106f257806395d89b411461071857610383565b80637fd42617146106ca578063819faf7b146106d2578063853828b6146106da57610383565b806331111708116102b85780636ad4e2511161025657806370a082311161023057806370a082311461068c57806377c7b8fc146106b25780637d7c2a1c146106ba5780637eaef50c146106c257610383565b80636ad4e2511461065f5780636f307dc31461067c5780636fb49d731461068457610383565b8063468f02d211610292578063468f02d2146106055780635aa6e6751461060d57806362f5548d146106315780636ac5db191461065757610383565b8063311117081461059e578063313ce567146105bb57806339509351146105d957610383565b80631b93e5b01161032557806323b872dd116102ff57806323b872dd146104ff57806327afd028146105355780632851e2e01461055b5780632e1a7d4d1461058157610383565b80631b93e5b0146104c357806322841f01146104cb57806322867d78146104d357610383565b80630dca59c1116103615780630dca59c1146104735780630f15f4c01461048d57806311dddca41461049557806318160ddd146104bb57610383565b8063018ee9b71461038857806306fdde03146103b6578063095ea7b314610433575b600080fd5b6103b46004803603604081101561039e57600080fd5b506001600160a01b038135169060200135610886565b005b6103be610947565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f85781810151838201526020016103e0565b50505050905090810190601f1680156104255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61045f6004803603604081101561044957600080fd5b506001600160a01b0381351690602001356109de565b604080519115158252519081900360200190f35b61047b6109fc565b60408051918252519081900360200190f35b6103b4610b0d565b61047b600480360360208110156104ab57600080fd5b50356001600160a01b0316610b92565b61047b610c25565b61045f610c2b565b61047b610c3c565b6103b4600480360360408110156104e957600080fd5b506001600160a01b038135169060200135610c42565b61045f6004803603606081101561051557600080fd5b506001600160a01b03813581169160208101359091169060400135610de7565b61047b6004803603602081101561054b57600080fd5b50356001600160a01b0316610e74565b61047b6004803603602081101561057157600080fd5b50356001600160a01b0316610f09565b6103b46004803603602081101561059757600080fd5b5035610f36565b6103b4600480360360208110156105b457600080fd5b5035610f80565b6105c3610fd2565b6040805160ff9092168252519081900360200190f35b61045f600480360360408110156105ef57600080fd5b506001600160a01b038135169060200135610fdb565b61047b61102f565b610615611046565b604080516001600160a01b039092168252519081900360200190f35b610639611055565b60408051938452602084019290925282820152519081900360600190f35b61047b61112d565b61047b6004803603602081101561067557600080fd5b5035611133565b61061561125d565b61047b6112de565b61047b600480360360208110156106a257600080fd5b50356001600160a01b03166112e4565b61047b6112ff565b6103b4611320565b61047b61132c565b6103b461133c565b61061561134d565b6103b4611365565b61047b611371565b61047b611377565b6103b46004803603602081101561070857600080fd5b50356001600160a01b03166113f1565b6103be611460565b6106156114c1565b61047b611510565b61045f6004803603604081101561074657600080fd5b506001600160a01b03813516906020013561155b565b6103b46115c9565b61045f6004803603604081101561077a57600080fd5b506001600160a01b038135169060200135611643565b6103b4600480360360208110156107a657600080fd5b50356001600160a01b0316611657565b61045f6116c6565b61047b6116d1565b61047b611740565b6103b4600480360360208110156107e457600080fd5b50356117eb565b610615611897565b61047b6118e2565b6103b4611903565b61047b6004803603604081101561081957600080fd5b506001600160a01b0381358116916020013516611ab2565b61047b6004803603602081101561084757600080fd5b5035611add565b6103b4611b90565b61047b611c12565b610615611c1f565b610615611c2e565b610615611c7d565b6103b4611ccc565b610615611d5a565b6007546001600160a01b031633146108d3576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b03838116610100909204161415610923576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b600754610943906001600160a01b0384811691168363ffffffff611d6e16565b5050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d35780601f106109a8576101008083540402835291602001916109d3565b820191906000526020600020905b8154815290600101906020018083116109b657829003601f168201915b505050505090505b90565b60006109f26109eb611dc0565b8484611dc4565b5060015b92915050565b60075460408051637572458960e01b8152306004820152905160009283926001600160a01b0390911691637572458991602480820192602092909190829003018186803b158015610a4c57600080fd5b505afa158015610a60573d6000803e3d6000fd5b505050506040513d6020811015610a7657600080fd5b505190506000610a84611c2e565b604080516328dd2d0160e01b81526001600160a01b038581166004830152306024830152915192909116916328dd2d019160448082019261014092909190829003018186803b158015610ad657600080fd5b505afa158015610aea573d6000803e3d6000fd5b505050506040513d610140811015610b0157600080fd5b50602001519250505090565b610b15611c2e565b6001600160a01b0316635a3b74b9610b2b61125d565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001602483015251604480830192600092919082900301818387803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b50505050565b6000610b9c6114c1565b6001600160a01b031663b3596f07836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d6020811015610c1b57600080fd5b505190505b919050565b60025490565b600080610c36611377565b11905090565b60095481565b816001600160a01b031663095ea7b3610c59611c7d565b60006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610caa57600080fd5b505af1158015610cbe573d6000803e3d6000fd5b505050506040513d6020811015610cd457600080fd5b50506001600160a01b03821663095ea7b3610ced611c7d565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b505050506040513d6020811015610d6757600080fd5b50610d729050611c2e565b6040805163173aba7160e21b81526001600160a01b0385811660048301526024820185905230604483015291519290911691635ceae9c49160648082019260009290919082900301818387803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b505050505050565b6000610df4848484611eb0565b610e6a84610e00611dc0565b610e65856040518060600160405280602881526020016127d5602891396001600160a01b038a16600090815260016020526040812090610e3e611dc0565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61200c16565b611dc4565b5060019392505050565b600080610e80836112e4565b90506000610eb4670de0b6b3a7640000610ea8610e9b6118e2565b859063ffffffff6120a316565b9063ffffffff61210316565b905081811115610ec657509050610c20565b6000610ed8838363ffffffff61214516565b9050610eff610ef2600954836120a390919063ffffffff16565b849063ffffffff61214516565b9350505050610c20565b60006109f6610f16610c25565b610f2a610f22856112e4565b610f2a6109fc565b9063ffffffff6120a316565b6000610f4f610f43610c25565b610ea884610f2a611740565b9050610f5b3383612187565b610f6481612283565b6005546109439061010090046001600160a01b03163383611d6e565b6006546001600160a01b03163314610fcd576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600955565b60055460ff1690565b60006109f2610fe8611dc0565b84610e658560016000610ff9611dc0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61232916565b600061104161103c61125d565b610b92565b905090565b6006546001600160a01b031681565b6000806000806000611065611c2e565b6001600160a01b031663bf92857c306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b031681526020019150506101006040518083038186803b1580156110bb57600080fd5b505afa1580156110cf573d6000803e3d6000fd5b505050506040513d6101008110156110e657600080fd5b50604081015160809091015190925090506000611109838363ffffffff61232916565b90506111206009548261210390919063ffffffff16565b9550919350915050909192565b600b5481565b60008061113e611897565b9050600061114b84611add565b9050600080611158611055565b5090925090506111746064610ea884606963ffffffff6120a316565b915081831115611187576000915061119a565b611197828463ffffffff61214516565b91505b808210156112505760006111bb82610ea8610e9b828763ffffffff61214516565b90506112436111c8611c12565b610ea8876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561120457600080fd5b505afa158015611218573d6000803e3d6000fd5b505050506040513d602081101561122e57600080fd5b5051849060ff16600a0a63ffffffff6120a316565b9550610c20945050505050565b6000945050505050610c20565b6000600560019054906101000a90046001600160a01b03166001600160a01b03166389d1a0fc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d60208110156112d757600080fd5b5051905090565b600a5481565b6001600160a01b031660009081526020819052604090205490565b600061104161130c610c25565b610ea8670de0b6b3a7640000610f2a611740565b61132a6000612283565b565b60006113386000611133565b5090565b61132a61134833610e74565b610f36565b7324a42fd28c976a61df5d00d0599c34c4f90748c881565b61132a611348336112e4565b60085481565b600080611382611897565b9050600061138e6116d1565b905080156113e6576113dd6113a1611c12565b610ea8846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561120457600080fd5b925050506109db565b6000925050506109db565b6006546001600160a01b0316331461143e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d35780601f106109a8576101008083540402835291602001916109d3565b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b031663fca513a86040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b600754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112ad57600080fd5b60006109f2611568611dc0565b84610e65856040518060600160405280602581526020016128916025913960016000611592611dc0565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61200c16565b6007546001600160a01b03163314611616576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b60075460085460055461163c926001600160a01b03610100909204821692911690611d6e565b6000600855565b60006109f2611650611dc0565b8484611eb0565b6006546001600160a01b031633146116a4576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600080610c3661132c565b6000806000806116df611055565b919450925090506116fc6064610ea885605f63ffffffff6120a316565b9250818311156117345761172a81610ea861171d868663ffffffff61214516565b849063ffffffff6120a316565b93505050506109db565b600093505050506109db565b6000611041600854600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156117b357600080fd5b505afa1580156117c7573d6000803e3d6000fd5b505050506040513d60208110156117dd57600080fd5b50519063ffffffff61214516565b60006117f5611740565b6005549091506118159061010090046001600160a01b0316333085612383565b600061182e612710610ea885603263ffffffff6120a316565b9050611840838263ffffffff61214516565b600854909350611856908263ffffffff61232916565b6008556000611863610c25565b61186e57508261188d565b61188a83610ea861187d610c25565b879063ffffffff6120a316565b90505b610b8c33826123dd565b60075460408051637572458960e01b815230600482015290516000926001600160a01b0316916375724589916024808301926020929190829003018186803b1580156112ad57600080fd5b60006110416118ef6109fc565b610ea8670de0b6b3a7640000610f2a611510565b600061190d611897565b90506000611919611377565b905080156119a357611929611c2e565b6040805163c858f5f960e01b81526001600160a01b0385811660048301526024820185905260026044830152600760648301529151929091169163c858f5f99160848082019260009290919082900301818387803b15801561198a57600080fd5b505af115801561199e573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d6020811015611a1757600080fd5b505190508015611aad57600754611a41906001600160a01b0385811691168363ffffffff611d6e16565b6007546040805163b02bf4b960e01b81523060048201526024810184905290516001600160a01b039092169163b02bf4b99160448082019260009290919082900301818387803b158015611a9457600080fd5b505af1158015611aa8573d6000803e3d6000fd5b505050505b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000611b6d600560019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b3057600080fd5b505afa158015611b44573d6000803e3d6000fd5b505050506040513d6020811015611b5a57600080fd5b505160ff16600a0a610ea8610e9b61102f565b91506109f6600954610ea8600b54610ea8600a54876120a390919063ffffffff16565b600554604080516370a0823160e01b8152336004820152905161132a9261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611be157600080fd5b505afa158015611bf5573d6000803e3d6000fd5b505050506040513d6020811015611c0b57600080fd5b50516117eb565b600061104161103c611897565b6007546001600160a01b031681565b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b031663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b6000611cd6611897565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015611d2257600080fd5b505afa158015611d36573d6000803e3d6000fd5b505050506040513d6020811015611d4c57600080fd5b505190506109438282610c42565b60055461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611aad9084906124cd565b3390565b6001600160a01b038316611e095760405162461bcd60e51b81526004018080602001828103825260248152602001806128436024913960400191505060405180910390fd5b6001600160a01b038216611e4e5760405162461bcd60e51b815260040180806020018281038252602281526020018061276c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611ef55760405162461bcd60e51b815260040180806020018281038252602581526020018061281e6025913960400191505060405180910390fd5b6001600160a01b038216611f3a5760405162461bcd60e51b81526004018080602001828103825260238152602001806127276023913960400191505060405180910390fd5b611f7d8160405180606001604052806026815260200161278e602691396001600160a01b038616600090815260208190526040902054919063ffffffff61200c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611fb2908263ffffffff61232916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561209b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612060578181015183820152602001612048565b50505050905090810190601f16801561208d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000826120b2575060006109f6565b828202828482816120bf57fe5b04146120fc5760405162461bcd60e51b81526004018080602001828103825260218152602001806127b46021913960400191505060405180910390fd5b9392505050565b60006120fc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612685565b60006120fc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061200c565b6001600160a01b0382166121cc5760405162461bcd60e51b81526004018080602001828103825260218152602001806127fd6021913960400191505060405180910390fd5b61220f8160405180606001604052806022815260200161274a602291396001600160a01b038516600090815260208190526040902054919063ffffffff61200c16565b6001600160a01b03831660009081526020819052604090205560025461223b908263ffffffff61214516565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600061228e82611133565b905080156109435761229e611510565b8111156122b0576122ad611510565b90505b8015610943576007546040805163f3fef3a360e01b81523060048201526024810184905290516001600160a01b039092169163f3fef3a39160448082019260009290919082900301818387803b15801561230957600080fd5b505af115801561231d573d6000803e3d6000fd5b50505050610943611ccc565b6000828201838110156120fc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b8c9085906124cd565b6001600160a01b038216612438576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461244b908263ffffffff61232916565b6002556001600160a01b038216600090815260208190526040902054612477908263ffffffff61232916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6124df826001600160a01b03166126ea565b612530576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061256e5780518252601f19909201916020918201910161254f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146125d0576040519150601f19603f3d011682016040523d82523d6000602084013e6125d5565b606091505b50915091508161262c576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b8c5780806020019051602081101561264857600080fd5b5051610b8c5760405162461bcd60e51b815260040180806020018281038252602a815260200180612867602a913960400191505060405180910390fd5b600081836126d45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612060578181015183820152602001612048565b5060008385816126e057fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061271e57508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820c81609c4f7303eeccf590bacd508f46aac04630a32a5aca0fb61a3c388fa5fd164736f6c63430005110032",
  "bytecodeSha1": "71e2d7cff9b8b4324c9c543d233acd10671eb98f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "yDelegatedVault",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "143": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "144": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "141": [
            2458,
            2464,
            false
          ],
          "142": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "140": [
            1845,
            1851,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "130": [
            7443,
            7462,
            true
          ],
          "131": [
            7521,
            7542,
            true
          ]
        },
        "ERC20._burn": {
          "134": [
            6658,
            6679,
            true
          ]
        },
        "ERC20._mint": {
          "135": [
            6037,
            6058,
            true
          ]
        },
        "ERC20._transfer": {
          "132": [
            5325,
            5345,
            true
          ],
          "133": [
            5405,
            5428,
            true
          ]
        }
      },
      "4": {},
      "46": {
        "yDelegatedVault._rebalance": {
          "127": [
            5938,
            5947,
            false
          ],
          "128": [
            5967,
            5983,
            false
          ],
          "129": [
            6051,
            6060,
            false
          ]
        },
        "yDelegatedVault.availableToBorrowETH": {
          "124": [
            7350,
            7380,
            false
          ]
        },
        "yDelegatedVault.availableToBorrowReserve": {
          "120": [
            7721,
            7735,
            false
          ]
        },
        "yDelegatedVault.claimInsurance": {
          "122": [
            6318,
            6342,
            true
          ]
        },
        "yDelegatedVault.earn": {
          "125": [
            8275,
            8286,
            false
          ],
          "126": [
            8468,
            8480,
            false
          ]
        },
        "yDelegatedVault.harvest": {
          "114": [
            3554,
            3578,
            true
          ],
          "115": [
            3612,
            3637,
            true
          ]
        },
        "yDelegatedVault.maxWithdrawal": {
          "116": [
            10067,
            10091,
            false
          ]
        },
        "yDelegatedVault.over": {
          "118": [
            5336,
            5354,
            false
          ],
          "119": [
            5509,
            5539,
            false
          ]
        },
        "yDelegatedVault.setController": {
          "121": [
            4125,
            4149,
            true
          ]
        },
        "yDelegatedVault.setGovernance": {
          "123": [
            3967,
            3991,
            true
          ]
        },
        "yDelegatedVault.setHealthFactor": {
          "117": [
            2677,
            2701,
            true
          ]
        }
      },
      "49": {},
      "5": {},
      "50": {},
      "51": {},
      "52": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "136": [
            3261,
            3288,
            true
          ],
          "137": [
            3479,
            3486,
            true
          ],
          "138": [
            3538,
            3559,
            false
          ],
          "139": [
            3667,
            3697,
            true
          ]
        }
      },
      "66": {},
      "7": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "80": [
            860,
            877
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "103": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "94": [
            3150,
            3196
          ],
          "112": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "91": [
            2480,
            2488
          ],
          "92": [
            2536,
            2592
          ],
          "93": [
            2603,
            2611
          ]
        },
        "SafeMath.sub": {
          "90": [
            1837,
            1866
          ],
          "95": [
            1351,
            1401
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "81": [
            7435,
            7503
          ],
          "82": [
            7513,
            7581
          ],
          "83": [
            7592,
            7628
          ],
          "84": [
            7638,
            7675
          ]
        },
        "ERC20._burn": {
          "96": [
            6650,
            6717
          ],
          "97": [
            6728,
            6817
          ],
          "98": [
            6827,
            6866
          ],
          "99": [
            6876,
            6918
          ]
        },
        "ERC20._mint": {
          "105": [
            6029,
            6094
          ],
          "106": [
            6105,
            6144
          ],
          "107": [
            6154,
            6205
          ],
          "108": [
            6215,
            6257
          ]
        },
        "ERC20._transfer": {
          "85": [
            5317,
            5387
          ],
          "86": [
            5397,
            5468
          ],
          "87": [
            5479,
            5570
          ],
          "88": [
            5580,
            5635
          ],
          "89": [
            5645,
            5685
          ]
        },
        "ERC20.allowance": {
          "71": [
            2321,
            2355
          ]
        },
        "ERC20.approve": {
          "4": [
            2582,
            2621
          ],
          "5": [
            2631,
            2642
          ]
        },
        "ERC20.balanceOf": {
          "35": [
            1782,
            1807
          ]
        },
        "ERC20.decreaseAllowance": {
          "48": [
            4597,
            4726
          ]
        },
        "ERC20.increaseAllowance": {
          "25": [
            3898,
            3981
          ]
        },
        "ERC20.totalSupply": {
          "8": [
            1622,
            1641
          ]
        },
        "ERC20.transfer": {
          "52": [
            2102,
            2144
          ]
        },
        "ERC20.transferFrom": {
          "13": [
            3212,
            3248
          ],
          "14": [
            3258,
            3379
          ],
          "15": [
            3389,
            3400
          ]
        }
      },
      "4": {
        "ERC20Detailed.decimals": {
          "24": [
            1530,
            1546
          ]
        },
        "ERC20Detailed.name": {
          "3": [
            706,
            718
          ]
        },
        "ERC20Detailed.symbol": {
          "45": [
            902,
            916
          ]
        }
      },
      "46": {
        "yDelegatedVault._rebalance": {
          "100": [
            6003,
            6019
          ],
          "101": [
            6080,
            6134
          ],
          "102": [
            6152,
            6162
          ]
        },
        "yDelegatedVault.activate": {
          "6": [
            2795,
            2860
          ]
        },
        "yDelegatedVault.availableToBorrowETH": {
          "56": [
            7239,
            7281
          ],
          "57": [
            7396,
            7488
          ],
          "58": [
            7519,
            7527
          ]
        },
        "yDelegatedVault.availableToBorrowReserve": {
          "41": [
            7751,
            7844
          ],
          "42": [
            7875,
            7883
          ]
        },
        "yDelegatedVault.balance": {
          "59": [
            3831,
            3883
          ]
        },
        "yDelegatedVault.claimInsurance": {
          "49": [
            6310,
            6358
          ],
          "50": [
            6368,
            6409
          ],
          "51": [
            6419,
            6432
          ]
        },
        "yDelegatedVault.credit": {
          "47": [
            1896,
            1951
          ]
        },
        "yDelegatedVault.debtShare": {
          "18": [
            2279,
            2331
          ]
        },
        "yDelegatedVault.deposit": {
          "60": [
            8813,
            8871
          ],
          "61": [
            9099,
            9132
          ],
          "62": [
            9142,
            9179
          ],
          "63": [
            9329,
            9345
          ],
          "64": [
            9376,
            9424
          ],
          "65": [
            9444,
            9469
          ]
        },
        "yDelegatedVault.depositAll": {
          "74": [
            8678,
            8714
          ]
        },
        "yDelegatedVault.earn": {
          "68": [
            8302,
            8349
          ],
          "69": [
            8496,
            8547
          ],
          "70": [
            8561,
            8614
          ]
        },
        "yDelegatedVault.getAave": {
          "76": [
            2403,
            2461
          ]
        },
        "yDelegatedVault.getAaveCore": {
          "77": [
            2537,
            2599
          ]
        },
        "yDelegatedVault.getAaveOracle": {
          "46": [
            4277,
            4335
          ]
        },
        "yDelegatedVault.getPricePerFullShare": {
          "36": [
            10780,
            10825
          ]
        },
        "yDelegatedVault.getReservePrice": {
          "75": [
            7973,
            8009
          ]
        },
        "yDelegatedVault.getReservePriceETH": {
          "7": [
            4433,
            4486
          ]
        },
        "yDelegatedVault.getUnderlyingPrice": {
          "26": [
            8092,
            8131
          ]
        },
        "yDelegatedVault.getUnderlyingPriceETH": {
          "72": [
            4761,
            4863
          ],
          "73": [
            4923,
            4973
          ]
        },
        "yDelegatedVault.harvest": {
          "0": [
            3546,
            3594
          ],
          "1": [
            3604,
            3647
          ],
          "2": [
            3657,
            3705
          ]
        },
        "yDelegatedVault.locked": {
          "67": [
            2157,
            2194
          ]
        },
        "yDelegatedVault.maxSafeETH": {
          "27": [
            6857,
            6937
          ]
        },
        "yDelegatedVault.maxWithdrawal": {
          "16": [
            10107,
            10122
          ],
          "17": [
            10210,
            10254
          ]
        },
        "yDelegatedVault.over": {
          "28": [
            5224,
            5267
          ],
          "29": [
            5370,
            5385
          ],
          "30": [
            5416,
            5451
          ],
          "31": [
            5662,
            5751
          ],
          "32": [
            5765,
            5777
          ],
          "33": [
            5808,
            5816
          ],
          "38": [
            4653,
            4660
          ]
        },
        "yDelegatedVault.rebalance": {
          "37": [
            6239,
            6252
          ]
        },
        "yDelegatedVault.repay": {
          "10": [
            3002,
            3052
          ],
          "11": [
            3062,
            3117
          ],
          "12": [
            3127,
            3198
          ]
        },
        "yDelegatedVault.repayAll": {
          "78": [
            3355,
            3379
          ]
        },
        "yDelegatedVault.reserve": {
          "66": [
            9541,
            9591
          ]
        },
        "yDelegatedVault.safeWithdraw": {
          "39": [
            10369,
            10404
          ]
        },
        "yDelegatedVault.setController": {
          "43": [
            4117,
            4165
          ],
          "44": [
            4175,
            4199
          ]
        },
        "yDelegatedVault.setGovernance": {
          "53": [
            3959,
            4007
          ],
          "54": [
            4017,
            4041
          ]
        },
        "yDelegatedVault.setHealthFactor": {
          "22": [
            2669,
            2717
          ],
          "23": [
            2727,
            2745
          ]
        },
        "yDelegatedVault.shouldBorrow": {
          "9": [
            7013,
            7052
          ]
        },
        "yDelegatedVault.shouldRebalance": {
          "55": [
            4565,
            4584
          ]
        },
        "yDelegatedVault.underlying": {
          "34": [
            9666,
            9723
          ]
        },
        "yDelegatedVault.withdraw": {
          "19": [
            10601,
            10627
          ],
          "20": [
            10637,
            10650
          ],
          "21": [
            10660,
            10693
          ]
        },
        "yDelegatedVault.withdrawAll": {
          "40": [
            9776,
            9807
          ]
        }
      },
      "49": {},
      "5": {},
      "50": {},
      "51": {},
      "52": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "109": [
            3253,
            3324
          ],
          "110": [
            3471,
            3523
          ],
          "111": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeTransfer": {
          "79": [
            744,
            829
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "104": [
            942,
            1037
          ]
        }
      },
      "66": {},
      "7": {
        "Address.isContract": {
          "113": [
            1238,
            1289
          ]
        }
      }
    }
  },
  "dependencies": [
    "Aave",
    "AaveToken",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Context",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/ERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/ERC20Detailed",
    "IController",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "LendingPoolAddressesProvider",
    "Oracle",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103835760003560e01c80637fd42617116101de578063b040785a1161010f578063dd90a791116100ad578063f7c1ec771161007c578063f7c1ec7714610866578063f82ce27d1461086e578063fa3ae6dc14610876578063fc0c546a1461087e57610383565b8063dd90a79114610831578063de5f62681461084e578063f072232214610856578063f77c47911461085e57610383565b8063cd3293de116100e9578063cd3293de146107eb578063cf309012146107f3578063d389800f146107fb578063dd62ed3e1461080357610383565b8063b040785a146107be578063b69ef8a8146107c6578063b6b55f25146107ce57610383565b80639f287e161161017c578063a75ac60811610156578063a75ac6081461075c578063a9059cbb14610764578063ab033ea914610790578063ae2c1d5f146107b657610383565b80639f287e1614610720578063a06d083c14610728578063a457c2d71461073057610383565b806389cf3204116101b857806389cf3204146106e2578063929c8849146106ea57806392eefe9b146106f257806395d89b411461071857610383565b80637fd42617146106ca578063819faf7b146106d2578063853828b6146106da57610383565b806331111708116102b85780636ad4e2511161025657806370a082311161023057806370a082311461068c57806377c7b8fc146106b25780637d7c2a1c146106ba5780637eaef50c146106c257610383565b80636ad4e2511461065f5780636f307dc31461067c5780636fb49d731461068457610383565b8063468f02d211610292578063468f02d2146106055780635aa6e6751461060d57806362f5548d146106315780636ac5db191461065757610383565b8063311117081461059e578063313ce567146105bb57806339509351146105d957610383565b80631b93e5b01161032557806323b872dd116102ff57806323b872dd146104ff57806327afd028146105355780632851e2e01461055b5780632e1a7d4d1461058157610383565b80631b93e5b0146104c357806322841f01146104cb57806322867d78146104d357610383565b80630dca59c1116103615780630dca59c1146104735780630f15f4c01461048d57806311dddca41461049557806318160ddd146104bb57610383565b8063018ee9b71461038857806306fdde03146103b6578063095ea7b314610433575b600080fd5b6103b46004803603604081101561039e57600080fd5b506001600160a01b038135169060200135610886565b005b6103be610947565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f85781810151838201526020016103e0565b50505050905090810190601f1680156104255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61045f6004803603604081101561044957600080fd5b506001600160a01b0381351690602001356109de565b604080519115158252519081900360200190f35b61047b6109fc565b60408051918252519081900360200190f35b6103b4610b0d565b61047b600480360360208110156104ab57600080fd5b50356001600160a01b0316610b92565b61047b610c25565b61045f610c2b565b61047b610c3c565b6103b4600480360360408110156104e957600080fd5b506001600160a01b038135169060200135610c42565b61045f6004803603606081101561051557600080fd5b506001600160a01b03813581169160208101359091169060400135610de7565b61047b6004803603602081101561054b57600080fd5b50356001600160a01b0316610e74565b61047b6004803603602081101561057157600080fd5b50356001600160a01b0316610f09565b6103b46004803603602081101561059757600080fd5b5035610f36565b6103b4600480360360208110156105b457600080fd5b5035610f80565b6105c3610fd2565b6040805160ff9092168252519081900360200190f35b61045f600480360360408110156105ef57600080fd5b506001600160a01b038135169060200135610fdb565b61047b61102f565b610615611046565b604080516001600160a01b039092168252519081900360200190f35b610639611055565b60408051938452602084019290925282820152519081900360600190f35b61047b61112d565b61047b6004803603602081101561067557600080fd5b5035611133565b61061561125d565b61047b6112de565b61047b600480360360208110156106a257600080fd5b50356001600160a01b03166112e4565b61047b6112ff565b6103b4611320565b61047b61132c565b6103b461133c565b61061561134d565b6103b4611365565b61047b611371565b61047b611377565b6103b46004803603602081101561070857600080fd5b50356001600160a01b03166113f1565b6103be611460565b6106156114c1565b61047b611510565b61045f6004803603604081101561074657600080fd5b506001600160a01b03813516906020013561155b565b6103b46115c9565b61045f6004803603604081101561077a57600080fd5b506001600160a01b038135169060200135611643565b6103b4600480360360208110156107a657600080fd5b50356001600160a01b0316611657565b61045f6116c6565b61047b6116d1565b61047b611740565b6103b4600480360360208110156107e457600080fd5b50356117eb565b610615611897565b61047b6118e2565b6103b4611903565b61047b6004803603604081101561081957600080fd5b506001600160a01b0381358116916020013516611ab2565b61047b6004803603602081101561084757600080fd5b5035611add565b6103b4611b90565b61047b611c12565b610615611c1f565b610615611c2e565b610615611c7d565b6103b4611ccc565b610615611d5a565b6007546001600160a01b031633146108d3576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6005546001600160a01b03838116610100909204161415610923576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b600754610943906001600160a01b0384811691168363ffffffff611d6e16565b5050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d35780601f106109a8576101008083540402835291602001916109d3565b820191906000526020600020905b8154815290600101906020018083116109b657829003601f168201915b505050505090505b90565b60006109f26109eb611dc0565b8484611dc4565b5060015b92915050565b60075460408051637572458960e01b8152306004820152905160009283926001600160a01b0390911691637572458991602480820192602092909190829003018186803b158015610a4c57600080fd5b505afa158015610a60573d6000803e3d6000fd5b505050506040513d6020811015610a7657600080fd5b505190506000610a84611c2e565b604080516328dd2d0160e01b81526001600160a01b038581166004830152306024830152915192909116916328dd2d019160448082019261014092909190829003018186803b158015610ad657600080fd5b505afa158015610aea573d6000803e3d6000fd5b505050506040513d610140811015610b0157600080fd5b50602001519250505090565b610b15611c2e565b6001600160a01b0316635a3b74b9610b2b61125d565b604080516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001602483015251604480830192600092919082900301818387803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b50505050565b6000610b9c6114c1565b6001600160a01b031663b3596f07836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d6020811015610c1b57600080fd5b505190505b919050565b60025490565b600080610c36611377565b11905090565b60095481565b816001600160a01b031663095ea7b3610c59611c7d565b60006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610caa57600080fd5b505af1158015610cbe573d6000803e3d6000fd5b505050506040513d6020811015610cd457600080fd5b50506001600160a01b03821663095ea7b3610ced611c7d565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b505050506040513d6020811015610d6757600080fd5b50610d729050611c2e565b6040805163173aba7160e21b81526001600160a01b0385811660048301526024820185905230604483015291519290911691635ceae9c49160648082019260009290919082900301818387803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b505050505050565b6000610df4848484611eb0565b610e6a84610e00611dc0565b610e65856040518060600160405280602881526020016127d5602891396001600160a01b038a16600090815260016020526040812090610e3e611dc0565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61200c16565b611dc4565b5060019392505050565b600080610e80836112e4565b90506000610eb4670de0b6b3a7640000610ea8610e9b6118e2565b859063ffffffff6120a316565b9063ffffffff61210316565b905081811115610ec657509050610c20565b6000610ed8838363ffffffff61214516565b9050610eff610ef2600954836120a390919063ffffffff16565b849063ffffffff61214516565b9350505050610c20565b60006109f6610f16610c25565b610f2a610f22856112e4565b610f2a6109fc565b9063ffffffff6120a316565b6000610f4f610f43610c25565b610ea884610f2a611740565b9050610f5b3383612187565b610f6481612283565b6005546109439061010090046001600160a01b03163383611d6e565b6006546001600160a01b03163314610fcd576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600955565b60055460ff1690565b60006109f2610fe8611dc0565b84610e658560016000610ff9611dc0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61232916565b600061104161103c61125d565b610b92565b905090565b6006546001600160a01b031681565b6000806000806000611065611c2e565b6001600160a01b031663bf92857c306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b031681526020019150506101006040518083038186803b1580156110bb57600080fd5b505afa1580156110cf573d6000803e3d6000fd5b505050506040513d6101008110156110e657600080fd5b50604081015160809091015190925090506000611109838363ffffffff61232916565b90506111206009548261210390919063ffffffff16565b9550919350915050909192565b600b5481565b60008061113e611897565b9050600061114b84611add565b9050600080611158611055565b5090925090506111746064610ea884606963ffffffff6120a316565b915081831115611187576000915061119a565b611197828463ffffffff61214516565b91505b808210156112505760006111bb82610ea8610e9b828763ffffffff61214516565b90506112436111c8611c12565b610ea8876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561120457600080fd5b505afa158015611218573d6000803e3d6000fd5b505050506040513d602081101561122e57600080fd5b5051849060ff16600a0a63ffffffff6120a316565b9550610c20945050505050565b6000945050505050610c20565b6000600560019054906101000a90046001600160a01b03166001600160a01b03166389d1a0fc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d60208110156112d757600080fd5b5051905090565b600a5481565b6001600160a01b031660009081526020819052604090205490565b600061104161130c610c25565b610ea8670de0b6b3a7640000610f2a611740565b61132a6000612283565b565b60006113386000611133565b5090565b61132a61134833610e74565b610f36565b7324a42fd28c976a61df5d00d0599c34c4f90748c881565b61132a611348336112e4565b60085481565b600080611382611897565b9050600061138e6116d1565b905080156113e6576113dd6113a1611c12565b610ea8846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561120457600080fd5b925050506109db565b6000925050506109db565b6006546001600160a01b0316331461143e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109d35780601f106109a8576101008083540402835291602001916109d3565b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b031663fca513a86040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b600754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112ad57600080fd5b60006109f2611568611dc0565b84610e65856040518060600160405280602581526020016128916025913960016000611592611dc0565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61200c16565b6007546001600160a01b03163314611616576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b60075460085460055461163c926001600160a01b03610100909204821692911690611d6e565b6000600855565b60006109f2611650611dc0565b8484611eb0565b6006546001600160a01b031633146116a4576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600080610c3661132c565b6000806000806116df611055565b919450925090506116fc6064610ea885605f63ffffffff6120a316565b9250818311156117345761172a81610ea861171d868663ffffffff61214516565b849063ffffffff6120a316565b93505050506109db565b600093505050506109db565b6000611041600854600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156117b357600080fd5b505afa1580156117c7573d6000803e3d6000fd5b505050506040513d60208110156117dd57600080fd5b50519063ffffffff61214516565b60006117f5611740565b6005549091506118159061010090046001600160a01b0316333085612383565b600061182e612710610ea885603263ffffffff6120a316565b9050611840838263ffffffff61214516565b600854909350611856908263ffffffff61232916565b6008556000611863610c25565b61186e57508261188d565b61188a83610ea861187d610c25565b879063ffffffff6120a316565b90505b610b8c33826123dd565b60075460408051637572458960e01b815230600482015290516000926001600160a01b0316916375724589916024808301926020929190829003018186803b1580156112ad57600080fd5b60006110416118ef6109fc565b610ea8670de0b6b3a7640000610f2a611510565b600061190d611897565b90506000611919611377565b905080156119a357611929611c2e565b6040805163c858f5f960e01b81526001600160a01b0385811660048301526024820185905260026044830152600760648301529151929091169163c858f5f99160848082019260009290919082900301818387803b15801561198a57600080fd5b505af115801561199e573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d6020811015611a1757600080fd5b505190508015611aad57600754611a41906001600160a01b0385811691168363ffffffff611d6e16565b6007546040805163b02bf4b960e01b81523060048201526024810184905290516001600160a01b039092169163b02bf4b99160448082019260009290919082900301818387803b158015611a9457600080fd5b505af1158015611aa8573d6000803e3d6000fd5b505050505b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000611b6d600560019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b3057600080fd5b505afa158015611b44573d6000803e3d6000fd5b505050506040513d6020811015611b5a57600080fd5b505160ff16600a0a610ea8610e9b61102f565b91506109f6600954610ea8600b54610ea8600a54876120a390919063ffffffff16565b600554604080516370a0823160e01b8152336004820152905161132a9261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611be157600080fd5b505afa158015611bf5573d6000803e3d6000fd5b505050506040513d6020811015611c0b57600080fd5b50516117eb565b600061104161103c611897565b6007546001600160a01b031681565b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b0316630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b60007324a42fd28c976a61df5d00d0599c34c4f90748c86001600160a01b031663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b6000611cd6611897565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015611d2257600080fd5b505afa158015611d36573d6000803e3d6000fd5b505050506040513d6020811015611d4c57600080fd5b505190506109438282610c42565b60055461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611aad9084906124cd565b3390565b6001600160a01b038316611e095760405162461bcd60e51b81526004018080602001828103825260248152602001806128436024913960400191505060405180910390fd5b6001600160a01b038216611e4e5760405162461bcd60e51b815260040180806020018281038252602281526020018061276c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611ef55760405162461bcd60e51b815260040180806020018281038252602581526020018061281e6025913960400191505060405180910390fd5b6001600160a01b038216611f3a5760405162461bcd60e51b81526004018080602001828103825260238152602001806127276023913960400191505060405180910390fd5b611f7d8160405180606001604052806026815260200161278e602691396001600160a01b038616600090815260208190526040902054919063ffffffff61200c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611fb2908263ffffffff61232916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561209b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612060578181015183820152602001612048565b50505050905090810190601f16801561208d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000826120b2575060006109f6565b828202828482816120bf57fe5b04146120fc5760405162461bcd60e51b81526004018080602001828103825260218152602001806127b46021913960400191505060405180910390fd5b9392505050565b60006120fc83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612685565b60006120fc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061200c565b6001600160a01b0382166121cc5760405162461bcd60e51b81526004018080602001828103825260218152602001806127fd6021913960400191505060405180910390fd5b61220f8160405180606001604052806022815260200161274a602291396001600160a01b038516600090815260208190526040902054919063ffffffff61200c16565b6001600160a01b03831660009081526020819052604090205560025461223b908263ffffffff61214516565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600061228e82611133565b905080156109435761229e611510565b8111156122b0576122ad611510565b90505b8015610943576007546040805163f3fef3a360e01b81523060048201526024810184905290516001600160a01b039092169163f3fef3a39160448082019260009290919082900301818387803b15801561230957600080fd5b505af115801561231d573d6000803e3d6000fd5b50505050610943611ccc565b6000828201838110156120fc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b8c9085906124cd565b6001600160a01b038216612438576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60025461244b908263ffffffff61232916565b6002556001600160a01b038216600090815260208190526040902054612477908263ffffffff61232916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6124df826001600160a01b03166126ea565b612530576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061256e5780518252601f19909201916020918201910161254f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146125d0576040519150601f19603f3d011682016040523d82523d6000602084013e6125d5565b606091505b50915091508161262c576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b8c5780806020019051602081101561264857600080fd5b5051610b8c5760405162461bcd60e51b815260040180806020018281038252602a815260200180612867602a913960400191505060405180910390fd5b600081836126d45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612060578181015183820152602001612048565b5060008385816126e057fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061271e57508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820c81609c4f7303eeccf590bacd508f46aac04630a32a5aca0fb61a3c388fa5fd164736f6c63430005110032",
  "deployedSourceMap": "683:10151:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:10151:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:235;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3477:235:46;;;;;;;;:::i;:::-;;644:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2500:149:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1550:282:46;;;:::i;:::-;;;;;;;;;;;;;;;;2758:109;;;:::i;4348:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4348:145:46;-1:-1:-1;;;;;4348:145:46;;:::i;1559:89:3:-;;;:::i;6950:109:46:-;;;:::i;952:31::-;;;:::i;2873:332::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2873:332:46;;;;;;;;:::i;3107:300:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3107:300:3;;;;;;;;;;;;;;;;;:::i;9870:450:46:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9870:450:46;-1:-1:-1;;;;;9870:450:46;;:::i;2207:131::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2207:131:46;-1:-1:-1;;;;;2207:131:46;;:::i;10484:216::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10484:216:46;;:::i;2612:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2612:140:46;;:::i;1472:81:4:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3802:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:3;;;;;;;;:::i;8022:116:46:-;;;:::i;860:25::-;;;:::i;:::-;;;;-1:-1:-1;;;;;860:25:46;;;;;;;;;;;;;;6445:499;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:24;;;:::i;4986:847::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4986:847:46;;:::i;9604:126::-;;;:::i;990:23::-;;;:::i;1706:108:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:3;-1:-1:-1;;;;;1706:108:3;;:::i;10706:126:46:-;;;:::i;6199:60::-;;;:::i;4597:70::-;;;:::i;10326:85::-;;;:::i;1050:82::-;;;:::i;9736:78::-;;;:::i;922:24::-;;;:::i;7550:350::-;;;:::i;4054:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4054:152:46;-1:-1:-1;;;;;4054:152:46;;:::i;838:85:4:-;;;:::i;4212:130:46:-;;;:::i;1838:120::-;;;:::i;4496:258:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:3;;;;;;;;:::i;6265:174:46:-;;;:::i;2017:155:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2017:155:3;;;;;;;;:::i;3896:152:46:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3896:152:46;-1:-1:-1;;;;;3896:152:46;;:::i;4499:92::-;;;:::i;7065:479::-;;;:::i;3772:118::-;;;:::i;8727:749::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8727:749:46;;:::i;9482:116::-;;;:::i;2099:102::-;;;:::i;8144:487::-;;;:::i;2230:132:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:3;;;;;;;;;;:::i;4673:307:46:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4673:307:46;;:::i;8637:84::-;;;:::i;7906:110::-;;;:::i;891:25::-;;;:::i;2344:124::-;;;:::i;2474:132::-;;;:::i;3211:175::-;;;:::i;834:19::-;;;:::i;3477:235::-;3568:10;;-1:-1:-1;;;;;3568:10:46;3554;:24;3546:48;;;;;-1:-1:-1;;;3546:48:46;;;;;;;;;;;;-1:-1:-1;;;3546:48:46;;;;;;;;;;;;;;;3631:5;;-1:-1:-1;;;;;3612:25:46;;;3631:5;;;;;3612:25;;3604:43;;;;;-1:-1:-1;;;3604:43:46;;;;;;;;;;;;-1:-1:-1;;;3604:43:46;;;;;;;;;;;;;;;3686:10;;3657:48;;-1:-1:-1;;;;;3657:28:46;;;;3686:10;3698:6;3657:48;:28;:48;:::i;:::-;3477:235;;:::o;644:81:4:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;;:::o;2500:149:3:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:3;2500:149;;;;;:::o;1550:282:46:-;1637:10;;1625:43;;;-1:-1:-1;;;1625:43:46;;1662:4;1625:43;;;;;;1587:7;;;;-1:-1:-1;;;;;1637:10:46;;;;1625:28;;:43;;;;;;;;;;;;;;;1637:10;1625:43;;;5:2:-1;;;;30:1;27;20:12;5:2;1625:43:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1625:43:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1625:43:46;;-1:-1:-1;1681:28:46;1734:9;:7;:9::i;:::-;1729:59;;;-1:-1:-1;;;1729:59:46;;-1:-1:-1;;;;;1729:59:46;;;;;;;1782:4;1729:59;;;;;;:34;;;;;;;:59;;;;;;;;;;;;;;;:34;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;1729:59:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1729:59:46;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1729:59:46;;;;-1:-1:-1;;;1550:282:46;:::o;2758:109::-;2800:9;:7;:9::i;:::-;-1:-1:-1;;;;;2795:45:46;;2841:12;:10;:12::i;:::-;2795:65;;;-1:-1:-1;;;;;;2795:65:46;;;;;;;-1:-1:-1;;;;;2795:65:46;;;;;;;2855:4;2795:65;;;;;;;;;;-1:-1:-1;;2795:65:46;;;;;;;-1:-1:-1;2795:65:46;;;;5:2:-1;;;;30:1;27;20:12;5:2;2795:65:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2795:65:46;;;;2758:109::o;4348:145::-;4414:7;4447:15;:13;:15::i;:::-;-1:-1:-1;;;;;4440:37:46;;4478:7;4440:46;;;;;;;;;;;;;-1:-1:-1;;;;;4440:46:46;-1:-1:-1;;;;;4440:46:46;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4440:46:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4440:46:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4440:46:46;;-1:-1:-1;4348:145:46;;;;:::o;1559:89:3:-;1629:12;;1559:89;:::o;6950:109:46:-;6997:4;7050:1;7021:26;:24;:26::i;:::-;:30;7013:39;;6950:109;:::o;952:31::-;;;;:::o;2873:332::-;3009:7;-1:-1:-1;;;;;3002:23:46;;3034:13;:11;:13::i;:::-;3050:1;3002:50;;;;;;;;;;;;;-1:-1:-1;;;;;3002:50:46;-1:-1:-1;;;;;3002:50:46;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3002:50:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3002:50:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;3062:23:46;;;3094:13;:11;:13::i;:::-;3110:6;3062:55;;;;;;;;;;;;;-1:-1:-1;;;;;3062:55:46;-1:-1:-1;;;;;3062:55:46;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3062:55:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3062:55:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3132:9:46;;-1:-1:-1;3132:7:46;:9::i;:::-;3127:71;;;-1:-1:-1;;;3127:71:46;;-1:-1:-1;;;;;3127:71:46;;;;;;;;;;;;;3190:4;3127:71;;;;;;:21;;;;;;;:71;;;;;-1:-1:-1;;3127:71:46;;;;;;;;-1:-1:-1;3127:21:46;:71;;;5:2:-1;;;;30:1;27;20:12;5:2;3127:71:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3127:71:46;;;;2873:332;;:::o;3107:300:3:-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:3;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:3;;;;;;;;;;;;-1:-1:-1;3289:33:3;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:3;3107:300;;;;;:::o;9870:450:46:-;9931:7;9950:16;9969:18;9979:7;9969:9;:18::i;:::-;9950:37;;9997:21;10021:32;10048:4;10021:22;10034:8;:6;:8::i;:::-;10021;;:22;:12;:22;:::i;:::-;:26;:32;:26;:32;:::i;:::-;9997:56;;10083:8;10067:13;:24;10063:251;;;-1:-1:-1;10114:8:46;-1:-1:-1;10107:15:46;;10063:251;10153:13;10169:27;:8;10182:13;10169:27;:12;:27;:::i;:::-;10153:43;;10217:37;10230:23;10240:12;;10230:5;:9;;:23;;;;:::i;:::-;10217:8;;:37;:12;:37;:::i;:::-;10210:44;;;;;;;2207:131;2260:7;2286:45;2317:13;:11;:13::i;:::-;2286:26;2297:14;2307:3;2297:9;:14::i;:::-;2286:6;:4;:6::i;:::-;:10;:26;:10;:26;:::i;10484:216::-;10536:9;10548:43;10577:13;:11;:13::i;:::-;10549:22;10563:7;10549:9;:7;:9::i;10548:43::-;10536:55;;10601:26;10607:10;10619:7;10601:5;:26::i;:::-;10637:13;10648:1;10637:10;:13::i;:::-;10660:5;;:33;;:5;;;-1:-1:-1;;;;;10660:5:46;10679:10;10691:1;10660:18;:33::i;2612:140::-;2691:10;;-1:-1:-1;;;;;2691:10:46;2677;:24;2669:48;;;;;-1:-1:-1;;;2669:48:46;;;;;;;;;;;;-1:-1:-1;;;2669:48:46;;;;;;;;;;;;;;;2727:12;:18;2612:140::o;1472:81:4:-;1537:9;;;;1472:81;:::o;3802:207:3:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:3;;;:34;;;;;;;;;;;:50;:38;:50;:::i;8022:116:46:-;8073:7;8099:32;8118:12;:10;:12::i;:::-;8099:18;:32::i;:::-;8092:39;;8022:116;:::o;860:25::-;;;-1:-1:-1;;;;;860:25:46;;:::o;6445:499::-;6525:21;6560:23;6597:27;6654:24;6682:28;6725:9;:7;:9::i;:::-;-1:-1:-1;;;;;6720:34:46;;6763:4;6720:49;;;;;;;;;;;;;-1:-1:-1;;;;;6720:49:46;-1:-1:-1;;;;;6720:49:46;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6720:49:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6720:49:46;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6720:49:46;;;;;;;;;;;-1:-1:-1;6720:49:46;-1:-1:-1;6779:21:46;6804:42;6720:49;;6804:42;:20;:42;:::i;:::-;6779:68;;6865:31;6883:12;;6865:13;:17;;:31;;;;:::i;:::-;6857:80;-1:-1:-1;6898:16:46;;-1:-1:-1;6916:20:46;-1:-1:-1;;6445:499:46;;;:::o;1019:24::-;;;;:::o;4986:847::-;5038:7;5057:16;5076:9;:7;:9::i;:::-;5057:28;;5095:12;5110:30;5132:7;5110:21;:30::i;:::-;5095:45;;5151:19;5172:24;5202:12;:10;:12::i;:::-;-1:-1:-1;5150:64:46;;-1:-1:-1;5150:64:46;-1:-1:-1;5238:29:46;5263:3;5238:20;5150:64;5254:3;5238:20;:15;:20;:::i;:29::-;5224:43;;5343:11;5336:4;:18;5332:164;;;5384:1;5370:15;;5332:164;;;5430:21;:11;5446:4;5430:21;:15;:21;:::i;:::-;5416:35;;5332:164;5523:16;5509:11;:30;5505:322;;;5555:13;5571:77;5631:16;5571:55;5592:33;5631:16;5613:11;5592:33;:20;:33;:::i;5571:77::-;5555:93;;5670:81;5733:17;:15;:17::i;:::-;5670:58;5707:8;-1:-1:-1;;;;;5693:32:46;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5693:34:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5693:34:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5693:34:46;5670:5;;5680:47;;5688:2;5680:47;5670:58;:9;:58;:::i;:81::-;5662:89;-1:-1:-1;5765:12:46;;-1:-1:-1;;;;;5765:12:46;5505:322;5815:1;5808:8;;;;;;;;9604:126;9647:7;9691:5;;;;;;;;;-1:-1:-1;;;;;9691:5:46;-1:-1:-1;;;;;9673:48:46;;:50;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9673:50:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9673:50:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9673:50:46;;-1:-1:-1;9604:126:46;:::o;990:23::-;;;;:::o;1706:108:3:-;-1:-1:-1;;;;;1789:18:3;1763:7;1789:18;;;;;;;;;;;;1706:108::o;10706:126:46:-;10761:7;10787:38;10811:13;:11;:13::i;:::-;10787:19;10801:4;10787:9;:7;:9::i;6199:60::-;6239:13;6250:1;6239:10;:13::i;:::-;6199:60::o;4597:70::-;4634:7;4653;4658:1;4653:4;:7::i;:::-;;4597:70;:::o;10326:85::-;10369:35;10378:25;10392:10;10378:13;:25::i;:::-;10369:8;:35::i;1050:82::-;1089:42;1050:82;:::o;9736:78::-;9776:31;9785:21;9795:10;9785:9;:21::i;922:24::-;;;;:::o;7550:350::-;7607:7;7626:16;7645:9;:7;:9::i;:::-;7626:28;;7664:18;7685:22;:20;:22::i;:::-;7664:43;-1:-1:-1;7721:14:46;;7717:177;;7758:86;7826:17;:15;:17::i;:::-;7758:63;7800:8;-1:-1:-1;;;;;7786:32:46;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;7758:86:46;7751:93;;;;;;7717:177;7882:1;7875:8;;;;;;4054:152;4139:10;;-1:-1:-1;;;;;4139:10:46;4125;:24;4117:48;;;;;-1:-1:-1;;;4117:48:46;;;;;;;;;;;;-1:-1:-1;;;4117:48:46;;;;;;;;;;;;;;;4175:10;:24;;-1:-1:-1;;;;;;4175:24:46;-1:-1:-1;;;;;4175:24:46;;;;;;;;;;4054:152::o;838:85:4:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4212:130:46;4258:7;1089:42;-1:-1:-1;;;;;4284:49:46;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1838:120:46;1915:10;;1903:48;;;-1:-1:-1;;;1903:48:46;;1945:4;1903:48;;;;;;1877:7;;-1:-1:-1;;;;;1915:10:46;;1903:33;;:48;;;;;;;;;;;;;;1915:10;1903:48;;;5:2:-1;;;;30:1;27;20:12;4496:258:3;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:3;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;6265:174:46:-;6332:10;;-1:-1:-1;;;;;6332:10:46;6318;:24;6310:48;;;;;-1:-1:-1;;;6310:48:46;;;;;;;;;;;;-1:-1:-1;;;6310:48:46;;;;;;;;;;;;;;;6387:10;;6399:9;;6368:5;;:41;;-1:-1:-1;;;;;6387:10:46;6368:5;;;;;;6387:10;;;6368:18;:41::i;:::-;6431:1;6419:9;:13;6265:174::o;2017:155:3:-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;3896:152:46:-;3981:10;;-1:-1:-1;;;;;3981:10:46;3967;:24;3959:48;;;;;-1:-1:-1;;;3959:48:46;;;;;;;;;;;;-1:-1:-1;;;3959:48:46;;;;;;;;;;;;;;;4017:10;:24;;-1:-1:-1;;;;;;4017:24:46;-1:-1:-1;;;;;4017:24:46;;;;;;;;;;3896:152::o;4499:92::-;4549:4;4582:1;4573:6;:4;:6::i;7065:479::-;7118:7;7138:19;7159:24;7185:28;7217:12;:10;:12::i;:::-;7137:92;;-1:-1:-1;7137:92:46;-1:-1:-1;7137:92:46;-1:-1:-1;7253:28:46;7277:3;7253:19;7137:92;7269:2;7253:19;:15;:19;:::i;:28::-;7239:42;;7364:16;7350:11;:30;7346:192;;;7403:85;7467:20;7403:59;7428:33;:11;7444:16;7428:33;:15;:33;:::i;:::-;7403:20;;:59;:24;:59;:::i;:85::-;7396:92;;;;;;;7346:192;7526:1;7519:8;;;;;;;3772:118;3812:7;3838:45;3873:9;;3838:5;;;;;;;;;-1:-1:-1;;;;;3838:5:46;-1:-1:-1;;;;;3838:15:46;;3862:4;3838:30;;;;;;;;;;;;;-1:-1:-1;;;;;3838:30:46;-1:-1:-1;;;;;3838:30:46;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3838:30:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3838:30:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3838:30:46;;:45;:34;:45;:::i;8727:749::-;8778:13;8794:9;:7;:9::i;:::-;8813:5;;8778:25;;-1:-1:-1;8813:58:46;;:5;;;-1:-1:-1;;;;;8813:5:46;8836:10;8856:4;8863:7;8813:22;:58::i;:::-;9042:18;9063:26;9083:5;9063:15;:7;9075:2;9063:15;:11;:15;:::i;:26::-;9042:47;-1:-1:-1;9109:23:46;:7;9042:47;9109:23;:11;:23;:::i;:::-;9154:9;;9099:33;;-1:-1:-1;9154:25:46;;9168:10;9154:25;:13;:25;:::i;:::-;9142:9;:37;9263:14;9295:13;:11;:13::i;:::-;9291:144;;-1:-1:-1;9338:7:46;9291:144;;;9385:39;9418:5;9386:26;9398:13;:11;:13::i;:::-;9386:7;;:26;:11;:26;:::i;9385:39::-;9376:48;;9291:144;9444:25;9450:10;9462:6;9444:5;:25::i;9482:116::-;9560:10;;9548:43;;;-1:-1:-1;;;9548:43:46;;9585:4;9548:43;;;;;;9522:7;;-1:-1:-1;;;;;9560:10:46;;9548:28;;:43;;;;;;;;;;;;;;9560:10;9548:43;;;5:2:-1;;;;30:1;27;20:12;2099:102:46;2138:7;2164:30;2187:6;:4;:6::i;:::-;2164:18;2177:4;2164:8;:6;:8::i;8144:487::-;8179:16;8198:9;:7;:9::i;:::-;8179:28;;8217:15;8235:26;:24;:26::i;:::-;8217:44;-1:-1:-1;8275:11:46;;8271:89;;8307:9;:7;:9::i;:::-;8302:47;;;-1:-1:-1;;;8302:47:46;;-1:-1:-1;;;;;8302:47:46;;;;;;;;;;;;;8344:1;8302:47;;;;8347:1;8302:47;;;;;;:22;;;;;;;:47;;;;;-1:-1:-1;;8302:47:46;;;;;;;;-1:-1:-1;8302:22:46;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;8302:47:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8302:47:46;;;;8271:89;8413:41;;;-1:-1:-1;;;8413:41:46;;8448:4;8413:41;;;;;;8394:16;;-1:-1:-1;;;;;8413:26:46;;;;;:41;;;;;;;;;;;;;;;:26;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;8413:41:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8413:41:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8413:41:46;;-1:-1:-1;8468:12:46;;8464:161;;8526:10;;8496:51;;-1:-1:-1;;;;;8496:29:46;;;;8526:10;8538:8;8496:51;:29;:51;:::i;:::-;8573:10;;8561:53;;;-1:-1:-1;;;8561:53:46;;8598:4;8561:53;;;;;;;;;;;;-1:-1:-1;;;;;8573:10:46;;;;8561:28;;:53;;;;;8573:10;;8561:53;;;;;;;;8573:10;;8561:53;;;5:2:-1;;;;30:1;27;20:12;5:2;8561:53:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8561:53:46;;;;8464:161;8144:487;;;:::o;2230:132:3:-;-1:-1:-1;;;;;2328:18:3;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;4673:307:46:-;4742:7;4771:92;4844:5;;;;;;;;;-1:-1:-1;;;;;4844:5:46;-1:-1:-1;;;;;4822:38:46;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4822:40:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4822:40:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4822:40:46;4809:53;;4817:2;4809:53;4771:33;4783:20;:18;:20::i;4771:92::-;4761:102;;4930:43;4960:12;;4930:25;4951:3;;4930:16;4942:3;;4930:7;:11;;:16;;;;:::i;8637:84::-;8686:5;;:27;;;-1:-1:-1;;;8686:27:46;;8702:10;8686:27;;;;;;8678:36;;8686:5;;;-1:-1:-1;;;;;8686:5:46;;:15;;:27;;;;;;;;;;;;;;:5;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;8686:27:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8686:27:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8686:27:46;8678:7;:36::i;7906:110::-;7954:7;7980:29;7999:9;:7;:9::i;891:25::-;;;-1:-1:-1;;;;;891:25:46;;:::o;2344:124::-;2384:7;1089:42;-1:-1:-1;;;;;2410:49:46;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2474:132:46;2518:7;1089:42;-1:-1:-1;;;;;2544:53:46;;:55;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3211:175:46;3248:16;3267:9;:7;:9::i;:::-;3304:41;;;-1:-1:-1;;;3304:41:46;;3339:4;3304:41;;;;;;3248:28;;-1:-1:-1;3286:15:46;;-1:-1:-1;;;;;3304:26:46;;;;;:41;;;;;;;;;;;;;;:26;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;3304:41:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3304:41:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3304:41:46;;-1:-1:-1;3355:24:46;3361:8;3304:41;3355:5;:24::i;834:19::-;;;;;;-1:-1:-1;;;;;834:19:46;;:::o;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;788:96:0:-;867:10;788:96;:::o;7350:332:3:-;-1:-1:-1;;;;;7443:19:3;;7435:68;;;;-1:-1:-1;;;7435:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7521:21:3;;7513:68;;;;-1:-1:-1;;;7513:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7592:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7643:32;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:3;;5317:70;;;;-1:-1:-1;;;5317:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:3;;5397:71;;;;-1:-1:-1;;;5397:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:3;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:3;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2159:459;-1:-1:-1;;;2159:459:1:o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;6583:342:3:-;-1:-1:-1;;;;;6658:21:3;;6650:67;;;;-1:-1:-1;;;6650:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6749:68;6772:6;6749:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6749:18:3;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6728:18:3;;:9;:18;;;;;;;;;;:89;6842:12;;:24;;6859:6;6842:24;:16;:24;:::i;:::-;6827:12;:39;6881:37;;;;;;;;6907:1;;-1:-1:-1;;;;;6881:37:3;;;;;;;;;;;;6583:342;;:::o;5839:354:46:-;5895:13;5911;5916:7;5911:4;:13::i;:::-;5895:29;-1:-1:-1;5938:9:46;;5934:253;;5975:8;:6;:8::i;:::-;5967:5;:16;5963:71;;;6011:8;:6;:8::i;:::-;6003:16;;5963:71;6051:9;;6047:130;;6092:10;;6080:54;;;-1:-1:-1;;;6080:54:46;;6121:4;6080:54;;;;;;;;;;;;-1:-1:-1;;;;;6092:10:46;;;;6080:32;;:54;;;;;6092:10;;6080:54;;;;;;;;6092:10;;6080:54;;;5:2:-1;;;;30:1;27;20:12;5:2;6080:54:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6080:54:46;;;;6152:10;:8;:10::i;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;842:202:6;968:68;;;-1:-1:-1;;;;;968:68:6;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:6;;961:5;;942:18;:95::i;5962:302:3:-;-1:-1:-1;;;;;6037:21:3;;6029:65;;;;;-1:-1:-1;;;6029:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:3;;:9;:18;;;;;;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6154:18:3;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3718:338:1;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "offset": [
    683,
    10834
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x383 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FD42617 GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xB040785A GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xDD90A791 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF7C1EC77 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF7C1EC77 EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0xF82CE27D EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xFA3AE6DC EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x87E JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xDD90A791 EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0xDE5F6268 EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0xF0722322 EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x85E JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xCD3293DE GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x7EB JUMPI DUP1 PUSH4 0xCF309012 EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xD389800F EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x803 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xB040785A EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x7CE JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x9F287E16 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xA75AC608 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xA75AC608 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0xAE2C1D5F EQ PUSH2 0x7B6 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x9F287E16 EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xA06D083C EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x730 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x89CF3204 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x89CF3204 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0x929C8849 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x718 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x7FD42617 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x819FAF7B EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x6DA JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x31111708 GT PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x6AD4E251 GT PUSH2 0x256 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x77C7B8FC EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0x7EAEF50C EQ PUSH2 0x6C2 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x6AD4E251 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x6FB49D73 EQ PUSH2 0x684 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x468F02D2 GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x468F02D2 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x62F5548D EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x657 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x31111708 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x5D9 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x1B93E5B0 GT PUSH2 0x325 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x27AFD028 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x2851E2E0 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x581 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x1B93E5B0 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x22841F01 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0x4D3 JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0xDCA59C1 GT PUSH2 0x361 JUMPI DUP1 PUSH4 0xDCA59C1 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xF15F4C0 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x11DDDCA4 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4BB JUMPI PUSH2 0x383 JUMP JUMPDEST DUP1 PUSH4 0x18EE9B7 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x433 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x886 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3E0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x425 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x47B PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x45F PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x47B PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x5C3 PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xFDB JUMP JUMPDEST PUSH2 0x47B PUSH2 0x102F JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x639 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x112D JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x47B PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x132C JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x615 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1365 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x155B JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x45F PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x17EB JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x923 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x943 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D6E AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x9D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0x9EB PUSH2 0x1DC0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1DC4 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x75724589 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x75724589 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xA84 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x28DD2D01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0x28DD2D01 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH2 0x140 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x140 DUP2 LT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB15 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5A3B74B9 PUSH2 0xB2B PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9C PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB3596F07 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC36 PUSH2 0x1377 JUMP JUMPDEST GT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH2 0xC59 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0x95EA7B3 PUSH2 0xCED PUSH2 0x1C7D JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD72 SWAP1 POP PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x173ABA71 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0x5CEAE9C4 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF4 DUP5 DUP5 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0xE6A DUP5 PUSH2 0xE00 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0xE65 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x27D5 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xE3E PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x200C AND JUMP JUMPDEST PUSH2 0x1DC4 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE80 DUP4 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEB4 PUSH8 0xDE0B6B3A7640000 PUSH2 0xEA8 PUSH2 0xE9B PUSH2 0x18E2 JUMP JUMPDEST DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2103 AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEC6 JUMPI POP SWAP1 POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED8 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEFF PUSH2 0xEF2 PUSH1 0x9 SLOAD DUP4 PUSH2 0x20A3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F6 PUSH2 0xF16 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xF22 DUP6 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0xF2A PUSH2 0x9FC JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4F PUSH2 0xF43 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xEA8 DUP5 PUSH2 0xF2A PUSH2 0x1740 JUMP JUMPDEST SWAP1 POP PUSH2 0xF5B CALLER DUP4 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x943 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFCD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0xFE8 PUSH2 0x1DC0 JUMP JUMPDEST DUP5 PUSH2 0xE65 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xFF9 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH2 0x103C PUSH2 0x125D JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1065 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBF92857C ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1109 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1120 PUSH1 0x9 SLOAD DUP3 PUSH2 0x2103 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP SWAP2 SWAP4 POP SWAP2 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x113E PUSH2 0x1897 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x114B DUP5 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1158 PUSH2 0x1055 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1174 PUSH1 0x64 PUSH2 0xEA8 DUP5 PUSH1 0x69 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP2 POP DUP2 DUP4 GT ISZERO PUSH2 0x1187 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1197 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 PUSH2 0x11BB DUP3 PUSH2 0xEA8 PUSH2 0xE9B DUP3 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1243 PUSH2 0x11C8 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xEA8 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP6 POP PUSH2 0xC20 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89D1A0FC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH2 0x130C PUSH2 0xC25 JUMP JUMPDEST PUSH2 0xEA8 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF2A PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x132A PUSH1 0x0 PUSH2 0x2283 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 PUSH1 0x0 PUSH2 0x1133 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x1348 CALLER PUSH2 0xE74 JUMP JUMPDEST PUSH2 0xF36 JUMP JUMPDEST PUSH20 0x24A42FD28C976A61DF5D00D0599C34C4F90748C8 DUP2 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x1348 CALLER PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1382 PUSH2 0x1897 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x138E PUSH2 0x16D1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x13E6 JUMPI PUSH2 0x13DD PUSH2 0x13A1 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0xEA8 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x143E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x9D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x24A42FD28C976A61DF5D00D0599C34C4F90748C8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFCA513A8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0x1568 PUSH2 0x1DC0 JUMP JUMPDEST DUP5 PUSH2 0xE65 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2891 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x1592 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x200C AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1616 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH2 0x163C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 PUSH2 0x1650 PUSH2 0x1DC0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16A4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC36 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16DF PUSH2 0x1055 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x16FC PUSH1 0x64 PUSH2 0xEA8 DUP6 PUSH1 0x5F PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x1734 JUMPI PUSH2 0x172A DUP2 PUSH2 0xEA8 PUSH2 0x171D DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x8 SLOAD PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x1815 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x2383 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182E PUSH2 0x2710 PUSH2 0xEA8 DUP6 PUSH1 0x32 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1840 DUP4 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP4 POP PUSH2 0x1856 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x0 PUSH2 0x1863 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x186E JUMPI POP DUP3 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x188A DUP4 PUSH2 0xEA8 PUSH2 0x187D PUSH2 0xC25 JUMP JUMPDEST DUP8 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x20A3 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xB8C CALLER DUP3 PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x75724589 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x75724589 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH2 0x18EF PUSH2 0x9FC JUMP JUMPDEST PUSH2 0xEA8 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF2A PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190D PUSH2 0x1897 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1919 PUSH2 0x1377 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x1929 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC858F5F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x7 PUSH1 0x64 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xC858F5F9 SWAP2 PUSH1 0x84 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x199E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x7 SLOAD PUSH2 0x1A41 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1D6E AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB02BF4B9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB02BF4B9 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6D PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0xEA8 PUSH2 0xE9B PUSH2 0x102F JUMP JUMPDEST SWAP2 POP PUSH2 0x9F6 PUSH1 0x9 SLOAD PUSH2 0xEA8 PUSH1 0xB SLOAD PUSH2 0xEA8 PUSH1 0xA SLOAD DUP8 PUSH2 0x20A3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x132A SWAP3 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH2 0x103C PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x24A42FD28C976A61DF5D00D0599C34C4F90748C8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x24A42FD28C976A61DF5D00D0599C34C4F90748C8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x943 DUP3 DUP3 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1AAD SWAP1 DUP5 SWAP1 PUSH2 0x24CD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2843 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x276C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x281E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2727 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F7D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x200C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1FB2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x209B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2060 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2048 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x208D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH2 0x9F6 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x20BF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x20FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27B4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x21CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27FD PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x220F DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x200C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x223B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2145 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP3 PUSH2 0x1133 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x943 JUMPI PUSH2 0x229E PUSH2 0x1510 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AD PUSH2 0x1510 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF3FEF3A3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x231D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x943 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x20FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xB8C SWAP1 DUP6 SWAP1 PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2438 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x244B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2477 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2329 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x24DF DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2530 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x256E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x254F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x262C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xB8C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2867 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x26D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x2060 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2048 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x26E0 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x271E JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636553616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA265627A7A72315820 0xC8 AND MULMOD 0xC4 0xF7 ADDRESS RETURNDATACOPY 0xEC 0xCF MSIZE SIGNEXTEND 0xAC 0xD5 ADDMOD DELEGATECALL PUSH11 0xAC04630A32A5ACA0FB61A3 0xC3 DUP9 STATICCALL 0x5F 0xD1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "REVERT",
      "path": "46"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        683,
        10834
      ],
      "op": "POP",
      "path": "46"
    },
    "18": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "LT",
      "path": "46"
    },
    "22": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "25": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "26": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "29": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "SHR",
      "path": "46"
    },
    "32": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "33": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7FD42617"
    },
    "38": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "39": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DE"
    },
    "42": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "43": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "44": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB040785A"
    },
    "49": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10F"
    },
    "53": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "54": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "55": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDD90A791"
    },
    "60": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAD"
    },
    "64": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "65": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "66": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF7C1EC77"
    },
    "71": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "72": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "76": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "77": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF7C1EC77"
    },
    "82": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "83": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x866"
    },
    "86": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "87": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "88": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF82CE27D"
    },
    "93": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "94": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x86E"
    },
    "97": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "98": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "99": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFA3AE6DC"
    },
    "104": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "105": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x876"
    },
    "108": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "109": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "110": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFC0C546A"
    },
    "115": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "116": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x87E"
    },
    "119": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "120": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "123": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "124": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "125": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "126": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDD90A791"
    },
    "131": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "132": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x831"
    },
    "135": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "136": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "137": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDE5F6268"
    },
    "142": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "143": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x84E"
    },
    "146": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "147": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "148": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF0722322"
    },
    "153": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "154": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x856"
    },
    "157": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "158": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "159": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF77C4791"
    },
    "164": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "165": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x85E"
    },
    "168": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "169": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "172": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "173": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "174": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "175": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xCD3293DE"
    },
    "180": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "181": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "185": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "186": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xCD3293DE"
    },
    "191": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "192": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7EB"
    },
    "195": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "196": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "197": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xCF309012"
    },
    "202": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "203": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7F3"
    },
    "206": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "207": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "208": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xD389800F"
    },
    "213": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "214": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7FB"
    },
    "217": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "218": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "219": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDD62ED3E"
    },
    "224": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "225": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x803"
    },
    "228": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "229": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "232": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "233": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "234": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "235": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB040785A"
    },
    "240": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "241": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7BE"
    },
    "244": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "245": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "246": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB69EF8A8"
    },
    "251": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "252": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7C6"
    },
    "255": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "256": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "257": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB6B55F25"
    },
    "262": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "263": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7CE"
    },
    "266": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "267": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "270": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "271": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "272": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "273": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F287E16"
    },
    "278": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "279": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17C"
    },
    "282": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "283": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "284": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA75AC608"
    },
    "289": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "290": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "294": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "295": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA75AC608"
    },
    "300": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "301": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x75C"
    },
    "304": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "305": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "306": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA9059CBB"
    },
    "311": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "312": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x764"
    },
    "315": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "316": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "317": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xAB033EA9"
    },
    "322": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "323": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x790"
    },
    "326": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "327": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "328": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xAE2C1D5F"
    },
    "333": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "334": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7B6"
    },
    "337": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "338": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "341": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "342": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "343": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "344": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F287E16"
    },
    "349": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "350": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x720"
    },
    "353": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "354": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "355": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA06D083C"
    },
    "360": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "361": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x728"
    },
    "364": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "365": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "366": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA457C2D7"
    },
    "371": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "372": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x730"
    },
    "375": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "376": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "379": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "380": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "381": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "382": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89CF3204"
    },
    "387": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "388": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B8"
    },
    "391": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "392": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "393": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89CF3204"
    },
    "398": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "399": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6E2"
    },
    "402": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "403": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "404": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x929C8849"
    },
    "409": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "410": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6EA"
    },
    "413": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "414": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "415": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x92EEFE9B"
    },
    "420": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "421": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6F2"
    },
    "424": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "425": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "426": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x95D89B41"
    },
    "431": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "432": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x718"
    },
    "435": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "436": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "439": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "440": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "441": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "442": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7FD42617"
    },
    "447": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "448": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6CA"
    },
    "451": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "452": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "453": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x819FAF7B"
    },
    "458": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "459": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6D2"
    },
    "462": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "463": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "464": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x853828B6"
    },
    "469": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "470": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6DA"
    },
    "473": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "474": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "477": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "478": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "479": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "480": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x31111708"
    },
    "485": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "486": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2B8"
    },
    "489": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "490": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "491": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6AD4E251"
    },
    "496": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "497": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x256"
    },
    "500": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "501": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "502": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "507": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "508": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x230"
    },
    "511": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "512": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "513": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "518": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "519": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x68C"
    },
    "522": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "523": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "524": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x77C7B8FC"
    },
    "529": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "530": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6B2"
    },
    "533": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "534": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "535": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7D7C2A1C"
    },
    "540": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "541": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6BA"
    },
    "544": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "545": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "546": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7EAEF50C"
    },
    "551": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "552": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6C2"
    },
    "555": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "556": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "559": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "560": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "561": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "562": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6AD4E251"
    },
    "567": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "568": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x65F"
    },
    "571": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "572": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "573": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6F307DC3"
    },
    "578": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "579": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x67C"
    },
    "582": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "583": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "584": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6FB49D73"
    },
    "589": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "590": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x684"
    },
    "593": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "594": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "597": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "598": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "599": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "600": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x468F02D2"
    },
    "605": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "606": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x292"
    },
    "609": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "610": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "611": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x468F02D2"
    },
    "616": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "617": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x605"
    },
    "620": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "621": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "622": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x5AA6E675"
    },
    "627": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "628": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x60D"
    },
    "631": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "632": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "633": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x62F5548D"
    },
    "638": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "639": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x631"
    },
    "642": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "643": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "644": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6AC5DB19"
    },
    "649": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "650": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x657"
    },
    "653": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "654": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "657": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "658": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "659": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "660": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x31111708"
    },
    "665": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "666": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x59E"
    },
    "669": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "670": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "671": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x313CE567"
    },
    "676": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "677": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5BB"
    },
    "680": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "681": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "682": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x39509351"
    },
    "687": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "688": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5D9"
    },
    "691": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "692": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "695": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "696": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "697": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "698": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1B93E5B0"
    },
    "703": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "704": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x325"
    },
    "707": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "708": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "709": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x23B872DD"
    },
    "714": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "715": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2FF"
    },
    "718": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "719": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "720": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x23B872DD"
    },
    "725": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "726": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4FF"
    },
    "729": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "730": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "731": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x27AFD028"
    },
    "736": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "737": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x535"
    },
    "740": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "741": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "742": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x2851E2E0"
    },
    "747": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "748": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x55B"
    },
    "751": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "752": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "753": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x2E1A7D4D"
    },
    "758": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "759": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x581"
    },
    "762": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "763": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "766": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "767": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "768": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "769": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1B93E5B0"
    },
    "774": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "775": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4C3"
    },
    "778": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "779": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "780": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22841F01"
    },
    "785": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "786": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4CB"
    },
    "789": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "790": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "791": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22867D78"
    },
    "796": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "797": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4D3"
    },
    "800": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "801": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "804": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "805": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "806": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "807": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDCA59C1"
    },
    "812": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "GT",
      "path": "46"
    },
    "813": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x361"
    },
    "816": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "817": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "818": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDCA59C1"
    },
    "823": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "824": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x473"
    },
    "827": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "828": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "829": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF15F4C0"
    },
    "834": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "835": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x48D"
    },
    "838": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "839": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "840": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x11DDDCA4"
    },
    "845": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "846": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x495"
    },
    "849": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "850": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "851": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x18160DDD"
    },
    "856": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "857": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4BB"
    },
    "860": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "861": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x383"
    },
    "864": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "865": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "866": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "867": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x18EE9B7"
    },
    "872": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "873": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x388"
    },
    "876": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "877": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "878": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x6FDDE03"
    },
    "883": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "884": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B6"
    },
    "887": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "888": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "889": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x95EA7B3"
    },
    "894": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "EQ",
      "path": "46"
    },
    "895": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x433"
    },
    "898": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "899": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "900": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "902": {
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "DUP1",
      "path": "46"
    },
    "903": {
      "first_revert": true,
      "fn": null,
      "offset": [
        683,
        10834
      ],
      "op": "REVERT",
      "path": "46"
    },
    "904": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "905": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "908": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "910": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "DUP1",
      "path": "46"
    },
    "911": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "912": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "SUB",
      "path": "46"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "915": {
      "op": "DUP2"
    },
    "916": {
      "op": "LT"
    },
    "917": {
      "op": "ISZERO"
    },
    "918": {
      "op": "PUSH2",
      "value": "0x39E"
    },
    "921": {
      "op": "JUMPI"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "924": {
      "op": "DUP1"
    },
    "925": {
      "op": "REVERT"
    },
    "926": {
      "op": "JUMPDEST"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "DUP2",
      "path": "46"
    },
    "937": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "938": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "AND",
      "path": "46"
    },
    "939": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "940": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "942": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "ADD",
      "path": "46"
    },
    "943": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "944": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x886"
    },
    "947": {
      "fn": "yDelegatedVault.harvest",
      "jump": "i",
      "offset": [
        3477,
        3712
      ],
      "op": "JUMP",
      "path": "46"
    },
    "948": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "949": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "STOP",
      "path": "46"
    },
    "950": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "951": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BE"
    },
    "954": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x947"
    },
    "957": {
      "fn": "ERC20Detailed.name",
      "jump": "i",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "958": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "959": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "961": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "962": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "963": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "965": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "966": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "967": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "968": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "969": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "970": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "971": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "972": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "973": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "974": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "975": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "976": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "977": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "978": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "979": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "980": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "981": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "982": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "983": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "984": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP6",
      "path": "4"
    },
    "985": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "986": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "987": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "988": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "989": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "990": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "992": {
      "op": "JUMPDEST"
    },
    "993": {
      "op": "DUP4"
    },
    "994": {
      "op": "DUP2"
    },
    "995": {
      "op": "LT"
    },
    "996": {
      "op": "ISZERO"
    },
    "997": {
      "op": "PUSH2",
      "value": "0x3F8"
    },
    "1000": {
      "op": "JUMPI"
    },
    "1001": {
      "op": "DUP2"
    },
    "1002": {
      "op": "DUP2"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MLOAD"
    },
    "1005": {
      "op": "DUP4"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "PUSH2",
      "value": "0x3E0"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "op": "JUMPDEST"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1019": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1020": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1021": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1022": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1023": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1024": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1025": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "1026": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1027": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1029": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "4"
    },
    "1030": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1031": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1032": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x425"
    },
    "1035": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1036": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1037": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1038": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "1039": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1040": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1041": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1043": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1044": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1046": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "1047": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1050": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "EXP",
      "path": "4"
    },
    "1051": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "1052": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "NOT",
      "path": "4"
    },
    "1053": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "4"
    },
    "1054": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1055": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1056": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1058": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "4"
    },
    "1059": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1060": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1061": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1062": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1063": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1064": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1065": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1066": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "4"
    },
    "1067": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1069": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1070": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1071": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1072": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "4"
    },
    "1073": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1074": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "RETURN",
      "path": "4"
    },
    "1075": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1076": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1079": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1081": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1082": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1083": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1086": {
      "op": "DUP2"
    },
    "1087": {
      "op": "LT"
    },
    "1088": {
      "op": "ISZERO"
    },
    "1089": {
      "op": "PUSH2",
      "value": "0x449"
    },
    "1092": {
      "op": "JUMPI"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1095": {
      "op": "DUP1"
    },
    "1096": {
      "op": "REVERT"
    },
    "1097": {
      "op": "JUMPDEST"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1108": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1109": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "AND",
      "path": "3"
    },
    "1110": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1111": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1113": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "1114": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1115": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DE"
    },
    "1118": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1119": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1120": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1122": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1123": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1124": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1125": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1126": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1127": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1128": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1129": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1130": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1131": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1132": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1133": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "1134": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1136": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "1137": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1138": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "RETURN",
      "path": "3"
    },
    "1139": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1140": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1143": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9FC"
    },
    "1146": {
      "fn": "yDelegatedVault.debt",
      "jump": "i",
      "offset": [
        1550,
        1832
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1147": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1148": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1150": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1151": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1152": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1153": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1154": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1155": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1156": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1157": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1158": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1159": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SUB",
      "path": "46"
    },
    "1160": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1162": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "ADD",
      "path": "46"
    },
    "1163": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1164": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "RETURN",
      "path": "46"
    },
    "1165": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2758,
        2867
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1166": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2758,
        2867
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1169": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2758,
        2867
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB0D"
    },
    "1172": {
      "fn": "yDelegatedVault.activate",
      "jump": "i",
      "offset": [
        2758,
        2867
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1173": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1174": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1177": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1179": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1180": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1181": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "SUB",
      "path": "46"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1184": {
      "op": "DUP2"
    },
    "1185": {
      "op": "LT"
    },
    "1186": {
      "op": "ISZERO"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x4AB"
    },
    "1190": {
      "op": "JUMPI"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1193": {
      "op": "DUP1"
    },
    "1194": {
      "op": "REVERT"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "POP"
    },
    "1197": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "SUB"
    },
    "1206": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "AND",
      "path": "46"
    },
    "1207": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB92"
    },
    "1210": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "jump": "i",
      "offset": [
        4348,
        4493
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1211": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "1215": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC25"
    },
    "1218": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1219": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6950,
        7059
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1220": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6950,
        7059
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x45F"
    },
    "1223": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6950,
        7059
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC2B"
    },
    "1226": {
      "fn": "yDelegatedVault.shouldBorrow",
      "jump": "i",
      "offset": [
        6950,
        7059
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1227": {
      "offset": [
        952,
        983
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1228": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        952,
        983
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1231": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        952,
        983
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC3C"
    },
    "1234": {
      "fn": "yDelegatedVault.shouldBorrow",
      "jump": "i",
      "offset": [
        952,
        983
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1235": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1236": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1239": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1241": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1242": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1243": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "SUB",
      "path": "46"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "LT"
    },
    "1248": {
      "op": "ISZERO"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4E9"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "DUP1"
    },
    "1256": {
      "op": "REVERT"
    },
    "1257": {
      "op": "JUMPDEST"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1268": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1269": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "AND",
      "path": "46"
    },
    "1270": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1271": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1273": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "ADD",
      "path": "46"
    },
    "1274": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1275": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC42"
    },
    "1278": {
      "fn": "yDelegatedVault.repay",
      "jump": "i",
      "offset": [
        2873,
        3205
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1286": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SUB",
      "path": "3"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1290": {
      "op": "DUP2"
    },
    "1291": {
      "op": "LT"
    },
    "1292": {
      "op": "ISZERO"
    },
    "1293": {
      "op": "PUSH2",
      "value": "0x515"
    },
    "1296": {
      "op": "JUMPI"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1299": {
      "op": "DUP1"
    },
    "1300": {
      "op": "REVERT"
    },
    "1301": {
      "op": "JUMPDEST"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1312": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1313": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1314": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "1315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1316": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1318": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1319": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "1320": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1321": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1322": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1323": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "1324": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1325": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1327": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "1328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE7"
    },
    "1332": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1333": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1334": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1337": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1339": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1340": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1341": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "SUB",
      "path": "46"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1344": {
      "op": "DUP2"
    },
    "1345": {
      "op": "LT"
    },
    "1346": {
      "op": "ISZERO"
    },
    "1347": {
      "op": "PUSH2",
      "value": "0x54B"
    },
    "1350": {
      "op": "JUMPI"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1353": {
      "op": "DUP1"
    },
    "1354": {
      "op": "REVERT"
    },
    "1355": {
      "op": "JUMPDEST"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "AND",
      "path": "46"
    },
    "1367": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE74"
    },
    "1370": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        9870,
        10320
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1371": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1372": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1375": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1377": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1378": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1379": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "SUB",
      "path": "46"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1382": {
      "op": "DUP2"
    },
    "1383": {
      "op": "LT"
    },
    "1384": {
      "op": "ISZERO"
    },
    "1385": {
      "op": "PUSH2",
      "value": "0x571"
    },
    "1388": {
      "op": "JUMPI"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "op": "DUP1"
    },
    "1392": {
      "op": "REVERT"
    },
    "1393": {
      "op": "JUMPDEST"
    },
    "1394": {
      "op": "POP"
    },
    "1395": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "AND",
      "path": "46"
    },
    "1405": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF09"
    },
    "1408": {
      "fn": "yDelegatedVault.debtShare",
      "jump": "i",
      "offset": [
        2207,
        2338
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1409": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1410": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1413": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1415": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1416": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1417": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "SUB",
      "path": "46"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "LT"
    },
    "1422": {
      "op": "ISZERO"
    },
    "1423": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1426": {
      "op": "JUMPI"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "DUP1"
    },
    "1430": {
      "op": "REVERT"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1434": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF36"
    },
    "1437": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10484,
        10700
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1438": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1439": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1442": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1444": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1445": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1446": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "SUB",
      "path": "46"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1449": {
      "op": "DUP2"
    },
    "1450": {
      "op": "LT"
    },
    "1451": {
      "op": "ISZERO"
    },
    "1452": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1455": {
      "op": "JUMPI"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "op": "REVERT"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1463": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF80"
    },
    "1466": {
      "fn": "yDelegatedVault.setHealthFactor",
      "jump": "i",
      "offset": [
        2612,
        2752
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1467": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1468": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C3"
    },
    "1471": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD2"
    },
    "1474": {
      "fn": "ERC20Detailed.decimals",
      "jump": "i",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1475": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1476": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1478": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1479": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1480": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1482": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1483": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1484": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "AND",
      "path": "4"
    },
    "1485": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1486": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1487": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1488": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1489": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1490": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1491": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SUB",
      "path": "4"
    },
    "1492": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1494": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "ADD",
      "path": "4"
    },
    "1495": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1496": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "RETURN",
      "path": "4"
    },
    "1497": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1498": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1501": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1503": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1504": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1505": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SUB",
      "path": "3"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1508": {
      "op": "DUP2"
    },
    "1509": {
      "op": "LT"
    },
    "1510": {
      "op": "ISZERO"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1514": {
      "op": "JUMPI"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1517": {
      "op": "DUP1"
    },
    "1518": {
      "op": "REVERT"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1530": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1531": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "AND",
      "path": "3"
    },
    "1532": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1533": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1535": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "ADD",
      "path": "3"
    },
    "1536": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1537": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFDB"
    },
    "1540": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1541": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8022,
        8138
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1542": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8022,
        8138
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1545": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8022,
        8138
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x102F"
    },
    "1548": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        8022,
        8138
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1549": {
      "offset": [
        860,
        885
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1550": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "1553": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1046"
    },
    "1556": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        860,
        885
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1557": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1558": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1560": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1561": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "offset": [
        860,
        885
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1571": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1572": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "AND",
      "path": "46"
    },
    "1573": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1574": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1575": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1576": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1577": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1578": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1579": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SUB",
      "path": "46"
    },
    "1580": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1582": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "ADD",
      "path": "46"
    },
    "1583": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1584": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "RETURN",
      "path": "46"
    },
    "1585": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1586": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x639"
    },
    "1589": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1055"
    },
    "1592": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "i",
      "offset": [
        6445,
        6944
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1593": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1594": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1596": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1597": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1598": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1599": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1600": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1601": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1603": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1604": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "ADD",
      "path": "46"
    },
    "1605": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1606": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1607": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1608": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1609": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1610": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1611": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "ADD",
      "path": "46"
    },
    "1612": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1613": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1614": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1615": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1616": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1617": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SUB",
      "path": "46"
    },
    "1618": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1620": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "ADD",
      "path": "46"
    },
    "1621": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1622": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "RETURN",
      "path": "46"
    },
    "1623": {
      "offset": [
        1019,
        1043
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1624": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        1019,
        1043
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1627": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        1019,
        1043
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x112D"
    },
    "1630": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "i",
      "offset": [
        1019,
        1043
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1631": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1632": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1635": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1637": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1638": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1639": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "SUB",
      "path": "46"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1642": {
      "op": "DUP2"
    },
    "1643": {
      "op": "LT"
    },
    "1644": {
      "op": "ISZERO"
    },
    "1645": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1648": {
      "op": "JUMPI"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1651": {
      "op": "DUP1"
    },
    "1652": {
      "op": "REVERT"
    },
    "1653": {
      "op": "JUMPDEST"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1656": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1133"
    },
    "1659": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        4986,
        5833
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1660": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9604,
        9730
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1661": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9604,
        9730
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "1664": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9604,
        9730
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x125D"
    },
    "1667": {
      "fn": "yDelegatedVault.underlying",
      "jump": "i",
      "offset": [
        9604,
        9730
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1668": {
      "offset": [
        990,
        1013
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1669": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        990,
        1013
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1672": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        990,
        1013
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12DE"
    },
    "1675": {
      "fn": "yDelegatedVault.underlying",
      "jump": "i",
      "offset": [
        990,
        1013
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1676": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1677": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "1680": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1682": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1683": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1684": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "SUB",
      "path": "3"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1687": {
      "op": "DUP2"
    },
    "1688": {
      "op": "LT"
    },
    "1689": {
      "op": "ISZERO"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x6A2"
    },
    "1693": {
      "op": "JUMPI"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1696": {
      "op": "DUP1"
    },
    "1697": {
      "op": "REVERT"
    },
    "1698": {
      "op": "JUMPDEST"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "op": "SUB"
    },
    "1709": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "AND",
      "path": "3"
    },
    "1710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E4"
    },
    "1713": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1714": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10706,
        10832
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1715": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10706,
        10832
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1718": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10706,
        10832
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12FF"
    },
    "1721": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        10706,
        10832
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1722": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6199,
        6259
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1723": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6199,
        6259
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1726": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6199,
        6259
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1320"
    },
    "1729": {
      "fn": "yDelegatedVault.rebalance",
      "jump": "i",
      "offset": [
        6199,
        6259
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1730": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4597,
        4667
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1731": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4597,
        4667
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1734": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4597,
        4667
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x132C"
    },
    "1737": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        4597,
        4667
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1738": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10326,
        10411
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1739": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10326,
        10411
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1742": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10326,
        10411
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x133C"
    },
    "1745": {
      "fn": "yDelegatedVault.safeWithdraw",
      "jump": "i",
      "offset": [
        10326,
        10411
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1746": {
      "offset": [
        1050,
        1132
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1747": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        1050,
        1132
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "1750": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        1050,
        1132
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x134D"
    },
    "1753": {
      "fn": "yDelegatedVault.safeWithdraw",
      "jump": "i",
      "offset": [
        1050,
        1132
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1754": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9736,
        9814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1755": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9736,
        9814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1758": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9736,
        9814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1365"
    },
    "1761": {
      "fn": "yDelegatedVault.withdrawAll",
      "jump": "i",
      "offset": [
        9736,
        9814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1762": {
      "offset": [
        922,
        946
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1763": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        922,
        946
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1766": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        922,
        946
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1371"
    },
    "1769": {
      "fn": "yDelegatedVault.withdrawAll",
      "jump": "i",
      "offset": [
        922,
        946
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1770": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7550,
        7900
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1771": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7550,
        7900
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1774": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7550,
        7900
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1377"
    },
    "1777": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "jump": "i",
      "offset": [
        7550,
        7900
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1778": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1779": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1782": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1784": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1785": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1786": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "SUB",
      "path": "46"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1789": {
      "op": "DUP2"
    },
    "1790": {
      "op": "LT"
    },
    "1791": {
      "op": "ISZERO"
    },
    "1792": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "1795": {
      "op": "JUMPI"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "REVERT"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "AND",
      "path": "46"
    },
    "1812": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13F1"
    },
    "1815": {
      "fn": "yDelegatedVault.setController",
      "jump": "i",
      "offset": [
        4054,
        4206
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1816": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1817": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BE"
    },
    "1820": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1460"
    },
    "1823": {
      "fn": "ERC20Detailed.symbol",
      "jump": "i",
      "offset": [
        838,
        923
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1824": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4212,
        4342
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1825": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4212,
        4342
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "1828": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4212,
        4342
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14C1"
    },
    "1831": {
      "fn": "yDelegatedVault.getAaveOracle",
      "jump": "i",
      "offset": [
        4212,
        4342
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1832": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1838,
        1958
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1833": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1838,
        1958
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1836": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1838,
        1958
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1510"
    },
    "1839": {
      "fn": "yDelegatedVault.credit",
      "jump": "i",
      "offset": [
        1838,
        1958
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1840": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1841": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1844": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1846": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1847": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1848": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SUB",
      "path": "3"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1851": {
      "op": "DUP2"
    },
    "1852": {
      "op": "LT"
    },
    "1853": {
      "op": "ISZERO"
    },
    "1854": {
      "op": "PUSH2",
      "value": "0x746"
    },
    "1857": {
      "op": "JUMPI"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "DUP1"
    },
    "1861": {
      "op": "REVERT"
    },
    "1862": {
      "op": "JUMPDEST"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "op": "SUB"
    },
    "1872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "AND",
      "path": "3"
    },
    "1875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "ADD",
      "path": "3"
    },
    "1879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155B"
    },
    "1883": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1884": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6265,
        6439
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1885": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6265,
        6439
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1888": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6265,
        6439
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15C9"
    },
    "1891": {
      "fn": "yDelegatedVault.claimInsurance",
      "jump": "i",
      "offset": [
        6265,
        6439
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1892": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1893": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1896": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1898": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1899": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1900": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SUB",
      "path": "3"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "LT"
    },
    "1905": {
      "op": "ISZERO"
    },
    "1906": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "1909": {
      "op": "JUMPI"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1912": {
      "op": "DUP1"
    },
    "1913": {
      "op": "REVERT"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "SUB"
    },
    "1924": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1925": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1926": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "AND",
      "path": "3"
    },
    "1927": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1928": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1930": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "ADD",
      "path": "3"
    },
    "1931": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1932": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1643"
    },
    "1935": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1936": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1937": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "1940": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1942": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1943": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "1944": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "SUB",
      "path": "46"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "LT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "op": "DUP1"
    },
    "1957": {
      "op": "REVERT"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "AND",
      "path": "46"
    },
    "1970": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1657"
    },
    "1973": {
      "fn": "yDelegatedVault.setGovernance",
      "jump": "i",
      "offset": [
        3896,
        4048
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1974": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4499,
        4591
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1975": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4499,
        4591
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x45F"
    },
    "1978": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4499,
        4591
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16C6"
    },
    "1981": {
      "fn": "yDelegatedVault.shouldRebalance",
      "jump": "i",
      "offset": [
        4499,
        4591
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1982": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7065,
        7544
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1983": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7065,
        7544
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1986": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7065,
        7544
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16D1"
    },
    "1989": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "jump": "i",
      "offset": [
        7065,
        7544
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1990": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3772,
        3890
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1991": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3772,
        3890
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "1994": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3772,
        3890
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1740"
    },
    "1997": {
      "fn": "yDelegatedVault.balance",
      "jump": "i",
      "offset": [
        3772,
        3890
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1998": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1999": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "2002": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2004": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2005": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "2006": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "SUB",
      "path": "46"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2009": {
      "op": "DUP2"
    },
    "2010": {
      "op": "LT"
    },
    "2011": {
      "op": "ISZERO"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2015": {
      "op": "JUMPI"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "REVERT"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "POP"
    },
    "2022": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "2023": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17EB"
    },
    "2026": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        8727,
        9476
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2027": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9482,
        9598
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2028": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9482,
        9598
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "2031": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9482,
        9598
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "2034": {
      "fn": "yDelegatedVault.reserve",
      "jump": "i",
      "offset": [
        9482,
        9598
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2035": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2099,
        2201
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2036": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2099,
        2201
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "2039": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2099,
        2201
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18E2"
    },
    "2042": {
      "fn": "yDelegatedVault.locked",
      "jump": "i",
      "offset": [
        2099,
        2201
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2043": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2044": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "2047": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1903"
    },
    "2050": {
      "fn": "yDelegatedVault.earn",
      "jump": "i",
      "offset": [
        8144,
        8631
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2051": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2052": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "2055": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2057": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2058": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2059": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SUB",
      "path": "3"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2062": {
      "op": "DUP2"
    },
    "2063": {
      "op": "LT"
    },
    "2064": {
      "op": "ISZERO"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x819"
    },
    "2068": {
      "op": "JUMPI"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "DUP1"
    },
    "2072": {
      "op": "REVERT"
    },
    "2073": {
      "op": "JUMPDEST"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2084": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "2085": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2086": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "2087": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2088": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2090": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "ADD",
      "path": "3"
    },
    "2091": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "2092": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "2093": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB2"
    },
    "2096": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2097": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2098": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "2101": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2103": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2104": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "2105": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "SUB",
      "path": "46"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2108": {
      "op": "DUP2"
    },
    "2109": {
      "op": "LT"
    },
    "2110": {
      "op": "ISZERO"
    },
    "2111": {
      "op": "PUSH2",
      "value": "0x847"
    },
    "2114": {
      "op": "JUMPI"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2117": {
      "op": "DUP1"
    },
    "2118": {
      "op": "REVERT"
    },
    "2119": {
      "op": "JUMPDEST"
    },
    "2120": {
      "op": "POP"
    },
    "2121": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "2122": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1ADD"
    },
    "2125": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "jump": "i",
      "offset": [
        4673,
        4980
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2126": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8637,
        8721
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2127": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8637,
        8721
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "2130": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8637,
        8721
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B90"
    },
    "2133": {
      "fn": "yDelegatedVault.depositAll",
      "jump": "i",
      "offset": [
        8637,
        8721
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2134": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7906,
        8016
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2135": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7906,
        8016
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47B"
    },
    "2138": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7906,
        8016
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C12"
    },
    "2141": {
      "fn": "yDelegatedVault.getReservePrice",
      "jump": "i",
      "offset": [
        7906,
        8016
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2142": {
      "offset": [
        891,
        916
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2143": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        891,
        916
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "2146": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        891,
        916
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C1F"
    },
    "2149": {
      "fn": "yDelegatedVault.getReservePrice",
      "jump": "i",
      "offset": [
        891,
        916
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2150": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2344,
        2468
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2151": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2344,
        2468
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "2154": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2344,
        2468
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "2157": {
      "fn": "yDelegatedVault.getAave",
      "jump": "i",
      "offset": [
        2344,
        2468
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2158": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2474,
        2606
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2159": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2474,
        2606
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "2162": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2474,
        2606
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C7D"
    },
    "2165": {
      "fn": "yDelegatedVault.getAaveCore",
      "jump": "i",
      "offset": [
        2474,
        2606
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2166": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3211,
        3386
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2167": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3211,
        3386
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3B4"
    },
    "2170": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3211,
        3386
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CCC"
    },
    "2173": {
      "fn": "yDelegatedVault.repayAll",
      "jump": "i",
      "offset": [
        3211,
        3386
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2174": {
      "offset": [
        834,
        853
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2175": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x615"
    },
    "2178": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D5A"
    },
    "2181": {
      "fn": "yDelegatedVault.repayAll",
      "jump": "i",
      "offset": [
        834,
        853
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2182": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2183": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3568,
        3578
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 0,
      "value": "0x7"
    },
    "2185": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3568,
        3578
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "op": "SUB"
    },
    "2194": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3568,
        3578
      ],
      "op": "AND",
      "path": "46"
    },
    "2195": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3554,
        3564
      ],
      "op": "CALLER",
      "path": "46"
    },
    "2196": {
      "branch": 114,
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3554,
        3578
      ],
      "op": "EQ",
      "path": "46"
    },
    "2197": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8D3"
    },
    "2200": {
      "branch": 114,
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2201": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2203": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2204": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2211": {
      "op": "SHL"
    },
    "2212": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2213": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2214": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2216": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2218": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2219": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "ADD",
      "path": "46"
    },
    "2220": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2221": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "2223": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "2225": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2226": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "ADD",
      "path": "46"
    },
    "2227": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2228": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "2245": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2246": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "ADD",
      "path": "46"
    },
    "2247": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2248": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2249": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2250": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2251": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2252": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2253": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "SUB",
      "path": "46"
    },
    "2254": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "2256": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "ADD",
      "path": "46"
    },
    "2257": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2258": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2259": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3546,
        3594
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2260": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 1,
      "value": "0x5"
    },
    "2262": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3612,
        3637
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2272": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3612,
        3637
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2273": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3612,
        3637
      ],
      "op": "AND",
      "path": "46"
    },
    "2274": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "2277": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2278": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2279": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "DIV",
      "path": "46"
    },
    "2280": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3631,
        3636
      ],
      "op": "AND",
      "path": "46"
    },
    "2281": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3612,
        3637
      ],
      "op": "EQ",
      "path": "46"
    },
    "2282": {
      "branch": 115,
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3612,
        3637
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2283": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x923"
    },
    "2286": {
      "branch": 115,
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2287": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2289": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2290": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2299": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2300": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2302": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2304": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2305": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "ADD",
      "path": "46"
    },
    "2306": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2307": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "2309": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "2311": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2312": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "ADD",
      "path": "46"
    },
    "2313": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2314": {
      "op": "PUSH5",
      "value": "0x3A37B5B2B7"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "2325": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2326": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "ADD",
      "path": "46"
    },
    "2327": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2328": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2329": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2330": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2331": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2332": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2333": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "SUB",
      "path": "46"
    },
    "2334": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "2336": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "ADD",
      "path": "46"
    },
    "2337": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2338": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2339": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3604,
        3647
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2340": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3686,
        3696
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 2,
      "value": "0x7"
    },
    "2342": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3686,
        3696
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "2343": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3705
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x943"
    },
    "2346": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3705
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "op": "SUB"
    },
    "2355": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3685
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2356": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3685
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2357": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3685
      ],
      "op": "AND",
      "path": "46"
    },
    "2358": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3685
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2359": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3686,
        3696
      ],
      "op": "AND",
      "path": "46"
    },
    "2360": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3698,
        3704
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2361": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3705
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2366": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3685
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D6E"
    },
    "2369": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3705
      ],
      "op": "AND",
      "path": "46"
    },
    "2370": {
      "fn": "yDelegatedVault.harvest",
      "jump": "i",
      "offset": [
        3657,
        3705
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2371": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3657,
        3705
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2372": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "POP",
      "path": "46"
    },
    "2373": {
      "fn": "yDelegatedVault.harvest",
      "offset": [
        3477,
        3712
      ],
      "op": "POP",
      "path": "46"
    },
    "2374": {
      "fn": "yDelegatedVault.harvest",
      "jump": "o",
      "offset": [
        3477,
        3712
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2375": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2376": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x3"
    },
    "2378": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2379": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2380": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2382": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2383": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2384": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2386": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2388": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2392": {
      "op": "NOT"
    },
    "2393": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2396": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2398": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP9",
      "path": "4"
    },
    "2399": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2400": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2401": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2402": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2403": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2404": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2405": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2406": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2407": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2408": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2409": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2410": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2411": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2412": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2413": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2414": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2415": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2416": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2417": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2418": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2419": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2420": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2421": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2422": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2423": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2424": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2425": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2426": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2427": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2428": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2430": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2431": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2432": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2433": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2434": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2435": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2436": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2437": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2438": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2439": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2440": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2441": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D3"
    },
    "2444": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2445": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2446": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2448": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "LT",
      "path": "4"
    },
    "2449": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A8"
    },
    "2452": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2453": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2456": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2457": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2458": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2459": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "4"
    },
    "2460": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "4"
    },
    "2461": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2462": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2463": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2464": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2466": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2467": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2468": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D3"
    },
    "2471": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2472": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2473": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2474": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2475": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2476": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2477": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2479": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2480": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2482": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2484": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2485": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2486": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2487": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2488": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2489": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2490": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2491": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2492": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2494": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2495": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2496": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2498": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2499": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2500": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2501": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "GT",
      "path": "4"
    },
    "2502": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B6"
    },
    "2505": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2506": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2507": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2508": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SUB",
      "path": "4"
    },
    "2509": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2511": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "4"
    },
    "2512": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2513": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "4"
    },
    "2514": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2515": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2516": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2517": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2518": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2519": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2520": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2521": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2522": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "4"
    },
    "2523": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2524": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2525": {
      "fn": "ERC20Detailed.name",
      "jump": "o",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2526": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2527": {
      "fn": "ERC20.approve",
      "offset": [
        2566,
        2570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2529": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 4,
      "value": "0x9F2"
    },
    "2532": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9EB"
    },
    "2535": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "2538": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2539": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2540": {
      "fn": "ERC20.approve",
      "offset": [
        2605,
        2612
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2541": {
      "fn": "ERC20.approve",
      "offset": [
        2614,
        2620
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2542": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC4"
    },
    "2545": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2546": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "fn": "ERC20.approve",
      "offset": [
        2638,
        2642
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x1"
    },
    "2550": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2551": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2552": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2553": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "2554": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "2555": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2556": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2557": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x7"
    },
    "2559": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "2560": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2562": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2563": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2564": {
      "op": "PUSH4",
      "value": "0x75724589"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2573": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2574": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1662,
        1666
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "2575": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2577": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2578": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "ADD",
      "path": "46"
    },
    "2579": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2580": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2581": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2582": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1587,
        1594
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2584": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1587,
        1594
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2585": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1587,
        1594
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2586": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1587,
        1594
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "op": "SUB"
    },
    "2595": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2596": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2597": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "AND",
      "path": "46"
    },
    "2598": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2599": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1653
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x75724589"
    },
    "2604": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1653
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2605": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "2607": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2608": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2609": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "ADD",
      "path": "46"
    },
    "2610": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2611": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2613": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2614": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2615": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2616": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2617": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2618": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2619": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SUB",
      "path": "46"
    },
    "2620": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "ADD",
      "path": "46"
    },
    "2621": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2622": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1637,
        1647
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2623": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2624": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "2625": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2626": {
      "op": "DUP1"
    },
    "2627": {
      "op": "ISZERO"
    },
    "2628": {
      "op": "PUSH2",
      "value": "0xA4C"
    },
    "2631": {
      "op": "JUMPI"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2634": {
      "op": "DUP1"
    },
    "2635": {
      "op": "REVERT"
    },
    "2636": {
      "op": "JUMPDEST"
    },
    "2637": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "POP",
      "path": "46"
    },
    "2638": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "GAS",
      "path": "46"
    },
    "2639": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2640": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "op": "ISZERO"
    },
    "2643": {
      "op": "PUSH2",
      "value": "0xA60"
    },
    "2646": {
      "op": "JUMPI"
    },
    "2647": {
      "op": "RETURNDATASIZE"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "RETURNDATACOPY"
    },
    "2652": {
      "op": "RETURNDATASIZE"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2655": {
      "op": "REVERT"
    },
    "2656": {
      "op": "JUMPDEST"
    },
    "2657": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "POP",
      "path": "46"
    },
    "2658": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "POP",
      "path": "46"
    },
    "2659": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "POP",
      "path": "46"
    },
    "2660": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "POP",
      "path": "46"
    },
    "2661": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2663": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2664": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2667": {
      "op": "DUP2"
    },
    "2668": {
      "op": "LT"
    },
    "2669": {
      "op": "ISZERO"
    },
    "2670": {
      "op": "PUSH2",
      "value": "0xA76"
    },
    "2673": {
      "op": "JUMPI"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2676": {
      "op": "DUP1"
    },
    "2677": {
      "op": "REVERT"
    },
    "2678": {
      "op": "JUMPDEST"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2681": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1625,
        1668
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2685": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1734,
        1743
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA84"
    },
    "2688": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1734,
        1741
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "2691": {
      "fn": "yDelegatedVault.debt",
      "jump": "i",
      "offset": [
        1734,
        1743
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2692": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1734,
        1743
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2693": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2695": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2696": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2697": {
      "op": "PUSH4",
      "value": "0x28DD2D01"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2706": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "op": "SUB"
    },
    "2715": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2716": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2717": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "AND",
      "path": "46"
    },
    "2718": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2720": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2721": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ADD",
      "path": "46"
    },
    "2722": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2723": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1782,
        1786
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "2724": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "2726": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2727": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ADD",
      "path": "46"
    },
    "2728": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2729": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2730": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2731": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2732": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2733": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2734": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "AND",
      "path": "46"
    },
    "2735": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2736": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x28DD2D01"
    },
    "2741": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2742": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "2744": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2745": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2746": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ADD",
      "path": "46"
    },
    "2747": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2748": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x140"
    },
    "2751": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2752": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2753": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2754": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2755": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2756": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2757": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SUB",
      "path": "46"
    },
    "2758": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ADD",
      "path": "46"
    },
    "2759": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2760": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1763
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2761": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2762": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "2763": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2764": {
      "op": "DUP1"
    },
    "2765": {
      "op": "ISZERO"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0xAD6"
    },
    "2769": {
      "op": "JUMPI"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2772": {
      "op": "DUP1"
    },
    "2773": {
      "op": "REVERT"
    },
    "2774": {
      "op": "JUMPDEST"
    },
    "2775": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "POP",
      "path": "46"
    },
    "2776": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "GAS",
      "path": "46"
    },
    "2777": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2778": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2779": {
      "op": "DUP1"
    },
    "2780": {
      "op": "ISZERO"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xAEA"
    },
    "2784": {
      "op": "JUMPI"
    },
    "2785": {
      "op": "RETURNDATASIZE"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2788": {
      "op": "DUP1"
    },
    "2789": {
      "op": "RETURNDATACOPY"
    },
    "2790": {
      "op": "RETURNDATASIZE"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2793": {
      "op": "REVERT"
    },
    "2794": {
      "op": "JUMPDEST"
    },
    "2795": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "POP",
      "path": "46"
    },
    "2796": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "POP",
      "path": "46"
    },
    "2797": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "POP",
      "path": "46"
    },
    "2798": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "POP",
      "path": "46"
    },
    "2799": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2801": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2802": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2803": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2806": {
      "op": "DUP2"
    },
    "2807": {
      "op": "LT"
    },
    "2808": {
      "op": "ISZERO"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xB01"
    },
    "2812": {
      "op": "JUMPI"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "REVERT"
    },
    "2817": {
      "op": "JUMPDEST"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2821": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "ADD",
      "path": "46"
    },
    "2822": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2823": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1729,
        1788
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "fn": "yDelegatedVault.debt",
      "offset": [
        1550,
        1832
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2828": {
      "fn": "yDelegatedVault.debt",
      "jump": "o",
      "offset": [
        1550,
        1832
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2829": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2758,
        2867
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2830": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2800,
        2809
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 6,
      "value": "0xB15"
    },
    "2833": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2800,
        2807
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "2836": {
      "fn": "yDelegatedVault.activate",
      "jump": "i",
      "offset": [
        2800,
        2809
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2837": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2800,
        2809
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "op": "SUB"
    },
    "2846": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2840
      ],
      "op": "AND",
      "path": "46"
    },
    "2847": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2840
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x5A3B74B9"
    },
    "2852": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2841,
        2853
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB2B"
    },
    "2855": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2841,
        2851
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x125D"
    },
    "2858": {
      "fn": "yDelegatedVault.activate",
      "jump": "i",
      "offset": [
        2841,
        2853
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2859": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2841,
        2853
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2860": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2862": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2863": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "SUB"
    },
    "2872": {
      "op": "NOT"
    },
    "2873": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2875": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2876": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2877": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SHL",
      "path": "46"
    },
    "2878": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "AND",
      "path": "46"
    },
    "2879": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2880": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2890": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2891": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "AND",
      "path": "46"
    },
    "2892": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2894": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2895": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ADD",
      "path": "46"
    },
    "2896": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2897": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2855,
        2859
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "2899": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "2901": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2902": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ADD",
      "path": "46"
    },
    "2903": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2904": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2905": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "2907": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2908": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2909": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ADD",
      "path": "46"
    },
    "2910": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2913": {
      "op": "SWAP3"
    },
    "2914": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2915": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2916": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2917": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2918": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "SUB",
      "path": "46"
    },
    "2919": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ADD",
      "path": "46"
    },
    "2920": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2921": {
      "op": "DUP4"
    },
    "2922": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2923": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2924": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "2925": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2926": {
      "op": "DUP1"
    },
    "2927": {
      "op": "ISZERO"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0xB78"
    },
    "2931": {
      "op": "JUMPI"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "REVERT"
    },
    "2936": {
      "op": "JUMPDEST"
    },
    "2937": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "POP",
      "path": "46"
    },
    "2938": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "GAS",
      "path": "46"
    },
    "2939": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "CALL",
      "path": "46"
    },
    "2940": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2941": {
      "op": "DUP1"
    },
    "2942": {
      "op": "ISZERO"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0xB8C"
    },
    "2946": {
      "op": "JUMPI"
    },
    "2947": {
      "op": "RETURNDATASIZE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "RETURNDATACOPY"
    },
    "2952": {
      "op": "RETURNDATASIZE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2955": {
      "op": "REVERT"
    },
    "2956": {
      "op": "JUMPDEST"
    },
    "2957": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "POP",
      "path": "46"
    },
    "2958": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "POP",
      "path": "46"
    },
    "2959": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "POP",
      "path": "46"
    },
    "2960": {
      "fn": "yDelegatedVault.activate",
      "offset": [
        2795,
        2860
      ],
      "op": "POP",
      "path": "46"
    },
    "2961": {
      "fn": "yDelegatedVault.activate",
      "jump": "o",
      "offset": [
        2758,
        2867
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2962": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2963": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4414,
        4421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2965": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4447,
        4462
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 7,
      "value": "0xB9C"
    },
    "2968": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4447,
        4460
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14C1"
    },
    "2971": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "jump": "i",
      "offset": [
        4447,
        4462
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2972": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4447,
        4462
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4477
      ],
      "op": "AND",
      "path": "46"
    },
    "2982": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4477
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB3596F07"
    },
    "2987": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4478,
        4485
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2988": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2990": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2991": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2992": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2997": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "AND",
      "path": "46"
    },
    "2998": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3000": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "SHL",
      "path": "46"
    },
    "3001": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3002": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3003": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3005": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "ADD",
      "path": "46"
    },
    "3006": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3007": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "op": "SUB"
    },
    "3016": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "AND",
      "path": "46"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3023": {
      "op": "SHL"
    },
    "3024": {
      "op": "SUB"
    },
    "3025": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "AND",
      "path": "46"
    },
    "3026": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3027": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3028": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3030": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "ADD",
      "path": "46"
    },
    "3031": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3032": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3033": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3034": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3036": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3038": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3039": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3040": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3041": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "SUB",
      "path": "46"
    },
    "3042": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3043": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3044": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3045": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "3046": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3047": {
      "op": "DUP1"
    },
    "3048": {
      "op": "ISZERO"
    },
    "3049": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "3052": {
      "op": "JUMPI"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3055": {
      "op": "DUP1"
    },
    "3056": {
      "op": "REVERT"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3059": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "GAS",
      "path": "46"
    },
    "3060": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3061": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3062": {
      "op": "DUP1"
    },
    "3063": {
      "op": "ISZERO"
    },
    "3064": {
      "op": "PUSH2",
      "value": "0xC05"
    },
    "3067": {
      "op": "JUMPI"
    },
    "3068": {
      "op": "RETURNDATASIZE"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "DUP1"
    },
    "3072": {
      "op": "RETURNDATACOPY"
    },
    "3073": {
      "op": "RETURNDATASIZE"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3076": {
      "op": "REVERT"
    },
    "3077": {
      "op": "JUMPDEST"
    },
    "3078": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3079": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3080": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3081": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "POP",
      "path": "46"
    },
    "3082": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3084": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3085": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3088": {
      "op": "DUP2"
    },
    "3089": {
      "op": "LT"
    },
    "3090": {
      "op": "ISZERO"
    },
    "3091": {
      "op": "PUSH2",
      "value": "0xC1B"
    },
    "3094": {
      "op": "JUMPI"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3097": {
      "op": "DUP1"
    },
    "3098": {
      "op": "REVERT"
    },
    "3099": {
      "op": "JUMPDEST"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3102": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4440,
        4486
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3105": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3106": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3107": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "offset": [
        4348,
        4493
      ],
      "op": "POP",
      "path": "46"
    },
    "3108": {
      "fn": "yDelegatedVault.getReservePriceETH",
      "jump": "o",
      "offset": [
        4348,
        4493
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3109": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3110": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x2"
    },
    "3112": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3113": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3114": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3115": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6950,
        7059
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3116": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6997,
        7001
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3118": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7050,
        7051
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 9
    },
    "3119": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7021,
        7047
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC36"
    },
    "3122": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7021,
        7045
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1377"
    },
    "3125": {
      "fn": "yDelegatedVault.shouldBorrow",
      "jump": "i",
      "offset": [
        7021,
        7047
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3126": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7021,
        7047
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3127": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7021,
        7051
      ],
      "op": "GT",
      "path": "46"
    },
    "3128": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7013,
        7052
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3129": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        7013,
        7052
      ],
      "op": "POP",
      "path": "46"
    },
    "3130": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        6950,
        7059
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3131": {
      "fn": "yDelegatedVault.shouldBorrow",
      "jump": "o",
      "offset": [
        6950,
        7059
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3132": {
      "offset": [
        952,
        983
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3133": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        952,
        983
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x9"
    },
    "3135": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        952,
        983
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "3136": {
      "fn": "yDelegatedVault.shouldBorrow",
      "offset": [
        952,
        983
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3137": {
      "fn": "yDelegatedVault.shouldBorrow",
      "jump": "o",
      "offset": [
        952,
        983
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3138": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3139": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3009,
        3016
      ],
      "op": "DUP2",
      "path": "46",
      "statement": 10
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "op": "SUB"
    },
    "3148": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3025
      ],
      "op": "AND",
      "path": "46"
    },
    "3149": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3025
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x95EA7B3"
    },
    "3154": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3034,
        3047
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC59"
    },
    "3157": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3034,
        3045
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C7D"
    },
    "3160": {
      "fn": "yDelegatedVault.repay",
      "jump": "i",
      "offset": [
        3034,
        3047
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3161": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3034,
        3047
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3162": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3050,
        3051
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3164": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3166": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3167": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3168": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3173": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "AND",
      "path": "46"
    },
    "3174": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3176": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "SHL",
      "path": "46"
    },
    "3177": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3178": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3179": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3181": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "ADD",
      "path": "46"
    },
    "3182": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3183": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3190": {
      "op": "SHL"
    },
    "3191": {
      "op": "SUB"
    },
    "3192": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "AND",
      "path": "46"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "op": "SUB"
    },
    "3201": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "AND",
      "path": "46"
    },
    "3202": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3203": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3204": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3206": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "ADD",
      "path": "46"
    },
    "3207": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3208": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3209": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3210": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3212": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "ADD",
      "path": "46"
    },
    "3213": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3214": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3215": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3216": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3217": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3219": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3221": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3222": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3223": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3224": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "SUB",
      "path": "46"
    },
    "3225": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3226": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3228": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3229": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3230": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "3231": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3232": {
      "op": "DUP1"
    },
    "3233": {
      "op": "ISZERO"
    },
    "3234": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3237": {
      "op": "JUMPI"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3240": {
      "op": "DUP1"
    },
    "3241": {
      "op": "REVERT"
    },
    "3242": {
      "op": "JUMPDEST"
    },
    "3243": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3244": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "GAS",
      "path": "46"
    },
    "3245": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "CALL",
      "path": "46"
    },
    "3246": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3247": {
      "op": "DUP1"
    },
    "3248": {
      "op": "ISZERO"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0xCBE"
    },
    "3252": {
      "op": "JUMPI"
    },
    "3253": {
      "op": "RETURNDATASIZE"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3256": {
      "op": "DUP1"
    },
    "3257": {
      "op": "RETURNDATACOPY"
    },
    "3258": {
      "op": "RETURNDATASIZE"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3261": {
      "op": "REVERT"
    },
    "3262": {
      "op": "JUMPDEST"
    },
    "3263": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3264": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3265": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3266": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "POP",
      "path": "46"
    },
    "3267": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3269": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3270": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3002,
        3052
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3273": {
      "op": "DUP2"
    },
    "3274": {
      "op": "LT"
    },
    "3275": {
      "op": "ISZERO"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xCD4"
    },
    "3279": {
      "op": "JUMPI"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3282": {
      "op": "DUP1"
    },
    "3283": {
      "op": "REVERT"
    },
    "3284": {
      "op": "JUMPDEST"
    },
    "3285": {
      "op": "POP"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "op": "SUB"
    },
    "3295": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3085
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 11
    },
    "3296": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3085
      ],
      "op": "AND",
      "path": "46"
    },
    "3297": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3085
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x95EA7B3"
    },
    "3302": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3094,
        3107
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCED"
    },
    "3305": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3094,
        3105
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C7D"
    },
    "3308": {
      "fn": "yDelegatedVault.repay",
      "jump": "i",
      "offset": [
        3094,
        3107
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3309": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3094,
        3107
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3310": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3110,
        3116
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3311": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3313": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3314": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3315": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3320": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "AND",
      "path": "46"
    },
    "3321": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3323": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "SHL",
      "path": "46"
    },
    "3324": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3325": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3326": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3328": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "ADD",
      "path": "46"
    },
    "3329": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3330": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3337": {
      "op": "SHL"
    },
    "3338": {
      "op": "SUB"
    },
    "3339": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "AND",
      "path": "46"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "op": "SUB"
    },
    "3348": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "AND",
      "path": "46"
    },
    "3349": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3350": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3351": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3353": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "ADD",
      "path": "46"
    },
    "3354": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3355": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3356": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3357": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3359": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "ADD",
      "path": "46"
    },
    "3360": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3361": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3362": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3363": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3364": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3366": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3368": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3369": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3370": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3371": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "SUB",
      "path": "46"
    },
    "3372": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3373": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3375": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3376": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3377": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "3378": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3379": {
      "op": "DUP1"
    },
    "3380": {
      "op": "ISZERO"
    },
    "3381": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3384": {
      "op": "JUMPI"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3387": {
      "op": "DUP1"
    },
    "3388": {
      "op": "REVERT"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3391": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "GAS",
      "path": "46"
    },
    "3392": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "CALL",
      "path": "46"
    },
    "3393": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3394": {
      "op": "DUP1"
    },
    "3395": {
      "op": "ISZERO"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD51"
    },
    "3399": {
      "op": "JUMPI"
    },
    "3400": {
      "op": "RETURNDATASIZE"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3403": {
      "op": "DUP1"
    },
    "3404": {
      "op": "RETURNDATACOPY"
    },
    "3405": {
      "op": "RETURNDATASIZE"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3408": {
      "op": "REVERT"
    },
    "3409": {
      "op": "JUMPDEST"
    },
    "3410": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3411": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3412": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3413": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "POP",
      "path": "46"
    },
    "3414": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3416": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3417": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3062,
        3117
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3420": {
      "op": "DUP2"
    },
    "3421": {
      "op": "LT"
    },
    "3422": {
      "op": "ISZERO"
    },
    "3423": {
      "op": "PUSH2",
      "value": "0xD67"
    },
    "3426": {
      "op": "JUMPI"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "DUP1"
    },
    "3430": {
      "op": "REVERT"
    },
    "3431": {
      "op": "JUMPDEST"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3132,
        3141
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 12,
      "value": "0xD72"
    },
    "3436": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3132,
        3141
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3132,
        3139
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "3441": {
      "fn": "yDelegatedVault.repay",
      "jump": "i",
      "offset": [
        3132,
        3141
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3442": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3132,
        3141
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3443": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3445": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3446": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3447": {
      "op": "PUSH4",
      "value": "0x173ABA71"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3454": {
      "op": "SHL"
    },
    "3455": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3456": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3463": {
      "op": "SHL"
    },
    "3464": {
      "op": "SUB"
    },
    "3465": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3466": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3467": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "AND",
      "path": "46"
    },
    "3468": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3470": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3471": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3472": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3473": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "3475": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3476": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3477": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3478": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3479": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3480": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3190,
        3194
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "3481": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "3483": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3484": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3485": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3486": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3487": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3488": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3489": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3490": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3491": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "AND",
      "path": "46"
    },
    "3492": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3493": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x5CEAE9C4"
    },
    "3498": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3499": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "3501": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3502": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3503": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3504": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3507": {
      "op": "SWAP3"
    },
    "3508": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3509": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3510": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3511": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3512": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3513": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "SUB",
      "path": "46"
    },
    "3514": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3515": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3516": {
      "op": "DUP4"
    },
    "3517": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3148
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3518": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3519": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "3520": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3521": {
      "op": "DUP1"
    },
    "3522": {
      "op": "ISZERO"
    },
    "3523": {
      "op": "PUSH2",
      "value": "0xDCB"
    },
    "3526": {
      "op": "JUMPI"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3529": {
      "op": "DUP1"
    },
    "3530": {
      "op": "REVERT"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "POP",
      "path": "46"
    },
    "3533": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "GAS",
      "path": "46"
    },
    "3534": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "CALL",
      "path": "46"
    },
    "3535": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3536": {
      "op": "DUP1"
    },
    "3537": {
      "op": "ISZERO"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xDDF"
    },
    "3541": {
      "op": "JUMPI"
    },
    "3542": {
      "op": "RETURNDATASIZE"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3545": {
      "op": "DUP1"
    },
    "3546": {
      "op": "RETURNDATACOPY"
    },
    "3547": {
      "op": "RETURNDATASIZE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "REVERT"
    },
    "3551": {
      "op": "JUMPDEST"
    },
    "3552": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "POP",
      "path": "46"
    },
    "3553": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "POP",
      "path": "46"
    },
    "3554": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "POP",
      "path": "46"
    },
    "3555": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        3127,
        3198
      ],
      "op": "POP",
      "path": "46"
    },
    "3556": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "POP",
      "path": "46"
    },
    "3557": {
      "fn": "yDelegatedVault.repay",
      "offset": [
        2873,
        3205
      ],
      "op": "POP",
      "path": "46"
    },
    "3558": {
      "fn": "yDelegatedVault.repay",
      "jump": "o",
      "offset": [
        2873,
        3205
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3559": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3560": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3196,
        3200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3562": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0xDF4"
    },
    "3565": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3222,
        3228
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3230,
        3239
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3567": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3247
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3568": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB0"
    },
    "3571": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3572": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 14,
      "value": "0xE6A"
    },
    "3576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3267,
        3273
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE00"
    },
    "3580": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "3583": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3584": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3585": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE65"
    },
    "3588": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3327,
        3333
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3591": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3592": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "3596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3598": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "3602": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "3607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D5"
    },
    "3610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "3612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3620": {
      "op": "SHL"
    },
    "3621": {
      "op": "SUB"
    },
    "3622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP11",
      "path": "3"
    },
    "3623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "AND",
      "path": "3"
    },
    "3624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3E"
    },
    "3642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3319
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "3645": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "AND",
      "path": "3"
    },
    "3656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "3662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200C"
    },
    "3683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "AND",
      "path": "3"
    },
    "3684": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC4"
    },
    "3689": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3396,
        3400
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x1"
    },
    "3694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "3697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "3698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "3699": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3700": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9870,
        10320
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3701": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9931,
        9938
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3703": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9950,
        9966
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3704": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9969,
        9987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE80"
    },
    "3707": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9979,
        9986
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3708": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9969,
        9978
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12E4"
    },
    "3711": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        9969,
        9987
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3712": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9969,
        9987
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3713": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9950,
        9987
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3714": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9950,
        9987
      ],
      "op": "POP",
      "path": "46"
    },
    "3715": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9997,
        10018
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3717": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10053
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEB4"
    },
    "3720": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10048,
        10052
      ],
      "op": "PUSH8",
      "path": "46",
      "value": "0xDE0B6B3A7640000"
    },
    "3729": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10043
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "3732": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10034,
        10042
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE9B"
    },
    "3735": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10034,
        10040
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18E2"
    },
    "3738": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10034,
        10042
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3739": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10034,
        10042
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3740": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10029
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3741": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10029
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3742": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10043
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3747": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10033
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "3750": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10043
      ],
      "op": "AND",
      "path": "46"
    },
    "3751": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10021,
        10043
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3752": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10043
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3753": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10047
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3754": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10053
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3759": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10047
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2103"
    },
    "3762": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10053
      ],
      "op": "AND",
      "path": "46"
    },
    "3763": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10021,
        10053
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3764": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10021,
        10053
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3765": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9997,
        10053
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3766": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        9997,
        10053
      ],
      "op": "POP",
      "path": "46"
    },
    "3767": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10083,
        10091
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3768": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10067,
        10080
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3769": {
      "branch": 116,
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10067,
        10091
      ],
      "op": "GT",
      "path": "46"
    },
    "3770": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10063,
        10314
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3771": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10063,
        10314
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEC6"
    },
    "3774": {
      "branch": 116,
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10063,
        10314
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10114,
        10122
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 16
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10107,
        10122
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC20"
    },
    "3781": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10107,
        10122
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3782": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10063,
        10314
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3783": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10153,
        10166
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3785": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10196
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xED8"
    },
    "3788": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10177
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3789": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10182,
        10195
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3790": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10196
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3795": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10181
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "3798": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10196
      ],
      "op": "AND",
      "path": "46"
    },
    "3799": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10169,
        10196
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3800": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10169,
        10196
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3801": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10153,
        10196
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3802": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10153,
        10196
      ],
      "op": "POP",
      "path": "46"
    },
    "3803": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10254
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 17,
      "value": "0xEFF"
    },
    "3806": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEF2"
    },
    "3809": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10240,
        10252
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x9"
    },
    "3811": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10240,
        10252
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "3812": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10235
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3813": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10239
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "3816": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10239
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3817": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3818": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3819": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3824": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "AND",
      "path": "46"
    },
    "3825": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10230,
        10253
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3826": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10230,
        10253
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3827": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10225
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3828": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3829": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10254
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3834": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10229
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "3837": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10254
      ],
      "op": "AND",
      "path": "46"
    },
    "3838": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "jump": "i",
      "offset": [
        10217,
        10254
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3839": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10217,
        10254
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3840": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3841": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "POP",
      "path": "46"
    },
    "3842": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "POP",
      "path": "46"
    },
    "3843": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "POP",
      "path": "46"
    },
    "3844": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "POP",
      "path": "46"
    },
    "3845": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC20"
    },
    "3848": {
      "fn": "yDelegatedVault.maxWithdrawal",
      "offset": [
        10210,
        10254
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3849": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2207,
        2338
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3850": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2260,
        2267
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3852": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2331
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 18,
      "value": "0x9F6"
    },
    "3855": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2317,
        2330
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF16"
    },
    "3858": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2317,
        2328
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC25"
    },
    "3861": {
      "fn": "yDelegatedVault.debtShare",
      "jump": "i",
      "offset": [
        2317,
        2330
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3862": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2317,
        2330
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3863": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF2A"
    },
    "3866": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2297,
        2311
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF22"
    },
    "3869": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2307,
        2310
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3870": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2297,
        2306
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12E4"
    },
    "3873": {
      "fn": "yDelegatedVault.debtShare",
      "jump": "i",
      "offset": [
        2297,
        2311
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3874": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2297,
        2311
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3875": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2292
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF2A"
    },
    "3878": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2290
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9FC"
    },
    "3881": {
      "fn": "yDelegatedVault.debtShare",
      "jump": "i",
      "offset": [
        2286,
        2292
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3882": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2292
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3883": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3884": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3889": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "3892": {
      "fn": "yDelegatedVault.debtShare",
      "offset": [
        2286,
        2312
      ],
      "op": "AND",
      "path": "46"
    },
    "3893": {
      "fn": "yDelegatedVault.debtShare",
      "jump": "i",
      "offset": [
        2286,
        2312
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3894": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10484,
        10700
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3895": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10536,
        10545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3897": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10548,
        10591
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF4F"
    },
    "3900": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10577,
        10590
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF43"
    },
    "3903": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10577,
        10588
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC25"
    },
    "3906": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10577,
        10590
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3907": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10577,
        10590
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3908": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10549,
        10571
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "3911": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10563,
        10570
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3912": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10549,
        10558
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF2A"
    },
    "3915": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10549,
        10556
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1740"
    },
    "3918": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10549,
        10558
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3919": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10548,
        10591
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3920": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10536,
        10591
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3921": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10536,
        10591
      ],
      "op": "POP",
      "path": "46"
    },
    "3922": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10601,
        10627
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 19,
      "value": "0xF5B"
    },
    "3925": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10607,
        10617
      ],
      "op": "CALLER",
      "path": "46"
    },
    "3926": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10619,
        10626
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3927": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10601,
        10606
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2187"
    },
    "3930": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10601,
        10627
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3931": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10601,
        10627
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3932": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10637,
        10650
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 20,
      "value": "0xF64"
    },
    "3935": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10648,
        10649
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3936": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10637,
        10647
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2283"
    },
    "3939": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10637,
        10650
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3940": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10637,
        10650
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3941": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 21,
      "value": "0x5"
    },
    "3943": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "3944": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x943"
    },
    "3947": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3948": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "3951": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3952": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "DIV",
      "path": "46"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "op": "SUB"
    },
    "3961": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10665
      ],
      "op": "AND",
      "path": "46"
    },
    "3962": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10679,
        10689
      ],
      "op": "CALLER",
      "path": "46"
    },
    "3963": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10691,
        10692
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3964": {
      "fn": "yDelegatedVault.withdraw",
      "offset": [
        10660,
        10678
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D6E"
    },
    "3967": {
      "fn": "yDelegatedVault.withdraw",
      "jump": "i",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3968": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2612,
        2752
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3969": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2691,
        2701
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 22,
      "value": "0x6"
    },
    "3971": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2691,
        2701
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3978": {
      "op": "SHL"
    },
    "3979": {
      "op": "SUB"
    },
    "3980": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2691,
        2701
      ],
      "op": "AND",
      "path": "46"
    },
    "3981": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2677,
        2687
      ],
      "op": "CALLER",
      "path": "46"
    },
    "3982": {
      "branch": 117,
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2677,
        2701
      ],
      "op": "EQ",
      "path": "46"
    },
    "3983": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFCD"
    },
    "3986": {
      "branch": 117,
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3987": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3989": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3990": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3999": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4000": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4002": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4004": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4005": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "ADD",
      "path": "46"
    },
    "4006": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4007": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "4009": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "4011": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4012": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "ADD",
      "path": "46"
    },
    "4013": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4014": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "4031": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4032": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "ADD",
      "path": "46"
    },
    "4033": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4034": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4035": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4036": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4037": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4038": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4039": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "SUB",
      "path": "46"
    },
    "4040": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "4042": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "ADD",
      "path": "46"
    },
    "4043": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4044": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "REVERT",
      "path": "46"
    },
    "4045": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2669,
        2717
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4046": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2727,
        2739
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 23,
      "value": "0x9"
    },
    "4048": {
      "fn": "yDelegatedVault.setHealthFactor",
      "offset": [
        2727,
        2745
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "4049": {
      "fn": "yDelegatedVault.setHealthFactor",
      "jump": "o",
      "offset": [
        2612,
        2752
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4050": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4051": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x5"
    },
    "4053": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4054": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "4056": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1537,
        1546
      ],
      "op": "AND",
      "path": "4"
    },
    "4057": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1472,
        1553
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4058": {
      "fn": "ERC20Detailed.decimals",
      "jump": "o",
      "offset": [
        1472,
        1553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4059": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4060": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3882,
        3886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4062": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3898,
        3981
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 25,
      "value": "0x9F2"
    },
    "4065": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE8"
    },
    "4068": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "4071": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4072": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4073": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3921,
        3928
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4074": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE65"
    },
    "4077": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3969,
        3979
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4078": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4080": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4082": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF9"
    },
    "4085": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "4088": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4089": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4099": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "AND",
      "path": "3"
    },
    "4101": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4102": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4103": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4105": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4107": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "4108": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4109": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4110": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4111": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4112": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4114": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4115": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4116": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4120": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4121": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4122": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4123": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP13",
      "path": "3"
    },
    "4124": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "AND",
      "path": "3"
    },
    "4125": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4126": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4127": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4128": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4129": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4130": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4131": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4132": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4133": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4138": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3968
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2329"
    },
    "4141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "AND",
      "path": "3"
    },
    "4142": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3930,
        3980
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4143": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8022,
        8138
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4144": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8073,
        8080
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4146": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8099,
        8131
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 26,
      "value": "0x1041"
    },
    "4149": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8118,
        8130
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x103C"
    },
    "4152": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8118,
        8128
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x125D"
    },
    "4155": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        8118,
        8130
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4156": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8118,
        8130
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4157": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8099,
        8117
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB92"
    },
    "4160": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        8099,
        8131
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4161": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8099,
        8131
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4162": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8092,
        8131
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4163": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8092,
        8131
      ],
      "op": "POP",
      "path": "46"
    },
    "4164": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        8022,
        8138
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4165": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "o",
      "offset": [
        8022,
        8138
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4166": {
      "offset": [
        860,
        885
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4167": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x6"
    },
    "4169": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "offset": [
        860,
        885
      ],
      "op": "AND",
      "path": "46"
    },
    "4179": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "offset": [
        860,
        885
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4180": {
      "fn": "yDelegatedVault.getUnderlyingPrice",
      "jump": "o",
      "offset": [
        860,
        885
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4181": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4182": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6525,
        6546
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4184": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6560,
        6583
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4185": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6597,
        6624
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4187": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6654,
        6678
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4188": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6682,
        6710
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4190": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6725,
        6734
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1065"
    },
    "4193": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6725,
        6732
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "4196": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "i",
      "offset": [
        6725,
        6734
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4197": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6725,
        6734
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6754
      ],
      "op": "AND",
      "path": "46"
    },
    "4207": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6754
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xBF92857C"
    },
    "4212": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6763,
        6767
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "4213": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4215": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4216": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4217": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4222": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "AND",
      "path": "46"
    },
    "4223": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4225": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SHL",
      "path": "46"
    },
    "4226": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4227": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4228": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4230": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ADD",
      "path": "46"
    },
    "4231": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4232": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4239": {
      "op": "SHL"
    },
    "4240": {
      "op": "SUB"
    },
    "4241": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "AND",
      "path": "46"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "op": "SUB"
    },
    "4250": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "AND",
      "path": "46"
    },
    "4251": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4252": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4253": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4255": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ADD",
      "path": "46"
    },
    "4256": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4257": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4258": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4259": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "4262": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4264": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4265": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4266": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4267": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SUB",
      "path": "46"
    },
    "4268": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4269": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4270": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4271": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "4272": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4273": {
      "op": "DUP1"
    },
    "4274": {
      "op": "ISZERO"
    },
    "4275": {
      "op": "PUSH2",
      "value": "0x10BB"
    },
    "4278": {
      "op": "JUMPI"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "DUP1"
    },
    "4282": {
      "op": "REVERT"
    },
    "4283": {
      "op": "JUMPDEST"
    },
    "4284": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4285": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "GAS",
      "path": "46"
    },
    "4286": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4287": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4288": {
      "op": "DUP1"
    },
    "4289": {
      "op": "ISZERO"
    },
    "4290": {
      "op": "PUSH2",
      "value": "0x10CF"
    },
    "4293": {
      "op": "JUMPI"
    },
    "4294": {
      "op": "RETURNDATASIZE"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "DUP1"
    },
    "4298": {
      "op": "RETURNDATACOPY"
    },
    "4299": {
      "op": "RETURNDATASIZE"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4302": {
      "op": "REVERT"
    },
    "4303": {
      "op": "JUMPDEST"
    },
    "4304": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4305": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4306": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4307": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "POP",
      "path": "46"
    },
    "4308": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4310": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4311": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4315": {
      "op": "DUP2"
    },
    "4316": {
      "op": "LT"
    },
    "4317": {
      "op": "ISZERO"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4321": {
      "op": "JUMPI"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4324": {
      "op": "DUP1"
    },
    "4325": {
      "op": "REVERT"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "POP"
    },
    "4328": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4330": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4331": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ADD",
      "path": "46"
    },
    "4332": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4333": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "4335": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4336": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4337": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "ADD",
      "path": "46"
    },
    "4338": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4339": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4340": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6779,
        6800
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4346": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6804,
        6846
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1109"
    },
    "4349": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4350": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6720,
        6769
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4351": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6804,
        6846
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4356": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6804,
        6824
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2329"
    },
    "4359": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6804,
        6846
      ],
      "op": "AND",
      "path": "46"
    },
    "4360": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "i",
      "offset": [
        6804,
        6846
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4361": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6804,
        6846
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4362": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6779,
        6847
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4363": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6779,
        6847
      ],
      "op": "POP",
      "path": "46"
    },
    "4364": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 27,
      "value": "0x1120"
    },
    "4367": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6883,
        6895
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x9"
    },
    "4369": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6883,
        6895
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4370": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6878
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4371": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6882
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2103"
    },
    "4374": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6882
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4375": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4376": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4377": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4382": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "AND",
      "path": "46"
    },
    "4383": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "i",
      "offset": [
        6865,
        6896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4384": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6865,
        6896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4385": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6857,
        6937
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6898,
        6914
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4388": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6898,
        6914
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6916,
        6936
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4394": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4395": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        6445,
        6944
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4396": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "o",
      "offset": [
        6445,
        6944
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4397": {
      "offset": [
        1019,
        1043
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4398": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        1019,
        1043
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "4400": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        1019,
        1043
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4401": {
      "fn": "yDelegatedVault.maxSafeETH",
      "offset": [
        1019,
        1043
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4402": {
      "fn": "yDelegatedVault.maxSafeETH",
      "jump": "o",
      "offset": [
        1019,
        1043
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4403": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4986,
        5833
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4404": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5038,
        5045
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4406": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5057,
        5073
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4407": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5076,
        5085
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x113E"
    },
    "4410": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5076,
        5083
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "4413": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5076,
        5085
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4414": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5076,
        5085
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4415": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5057,
        5085
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4416": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5057,
        5085
      ],
      "op": "POP",
      "path": "46"
    },
    "4417": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5095,
        5107
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4419": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5110,
        5140
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x114B"
    },
    "4422": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5132,
        5139
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4423": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5110,
        5131
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1ADD"
    },
    "4426": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5110,
        5140
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4427": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5110,
        5140
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4428": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5095,
        5140
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4429": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5095,
        5140
      ],
      "op": "POP",
      "path": "46"
    },
    "4430": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5151,
        5170
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4432": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5172,
        5196
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4433": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5202,
        5214
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1158"
    },
    "4436": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5202,
        5212
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1055"
    },
    "4439": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5202,
        5214
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4440": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5202,
        5214
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4441": {
      "op": "POP"
    },
    "4442": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5150,
        5214
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4443": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5150,
        5214
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4444": {
      "op": "POP"
    },
    "4445": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5150,
        5214
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5267
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 28,
      "value": "0x1174"
    },
    "4450": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5263,
        5266
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "4452": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5258
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "4455": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5150,
        5214
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4456": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5254,
        5257
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x69"
    },
    "4458": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5258
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4463": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5253
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "4466": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5258
      ],
      "op": "AND",
      "path": "46"
    },
    "4467": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5238,
        5258
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4468": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5238,
        5267
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4469": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5224,
        5267
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4470": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5224,
        5267
      ],
      "op": "POP",
      "path": "46"
    },
    "4471": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5343,
        5354
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4472": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5336,
        5340
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4473": {
      "branch": 118,
      "fn": "yDelegatedVault.over",
      "offset": [
        5336,
        5354
      ],
      "op": "GT",
      "path": "46"
    },
    "4474": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4475": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1187"
    },
    "4478": {
      "branch": 118,
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4479": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5384,
        5385
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 29,
      "value": "0x0"
    },
    "4481": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5370,
        5385
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4482": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5370,
        5385
      ],
      "op": "POP",
      "path": "46"
    },
    "4483": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x119A"
    },
    "4486": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4487": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4488": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5451
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 30,
      "value": "0x1197"
    },
    "4491": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5441
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4492": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5446,
        5450
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4493": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5451
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4498": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5445
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "4501": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5451
      ],
      "op": "AND",
      "path": "46"
    },
    "4502": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5430,
        5451
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4503": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5430,
        5451
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4504": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5416,
        5451
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4505": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5416,
        5451
      ],
      "op": "POP",
      "path": "46"
    },
    "4506": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5332,
        5496
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4507": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5523,
        5539
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4508": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5509,
        5520
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4509": {
      "branch": 119,
      "fn": "yDelegatedVault.over",
      "offset": [
        5509,
        5539
      ],
      "op": "LT",
      "path": "46"
    },
    "4510": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5505,
        5827
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4511": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5505,
        5827
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1250"
    },
    "4514": {
      "branch": 119,
      "fn": "yDelegatedVault.over",
      "offset": [
        5505,
        5827
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4515": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5555,
        5568
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4517": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5571,
        5648
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11BB"
    },
    "4520": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5631,
        5647
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4521": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5571,
        5626
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "4524": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5592,
        5625
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE9B"
    },
    "4527": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5631,
        5647
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4528": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5613,
        5624
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4529": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5592,
        5625
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4534": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5592,
        5612
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "4537": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5592,
        5625
      ],
      "op": "AND",
      "path": "46"
    },
    "4538": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5592,
        5625
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4539": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5571,
        5648
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4540": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5555,
        5648
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4541": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5555,
        5648
      ],
      "op": "POP",
      "path": "46"
    },
    "4542": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5751
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 31,
      "value": "0x1243"
    },
    "4545": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5733,
        5750
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11C8"
    },
    "4548": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5733,
        5748
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C12"
    },
    "4551": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5733,
        5750
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4552": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5733,
        5750
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4553": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5728
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "4556": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5707,
        5715
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "SUB"
    },
    "4565": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5725
      ],
      "op": "AND",
      "path": "46"
    },
    "4566": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5725
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x313CE567"
    },
    "4571": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4573": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4574": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4575": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4580": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "AND",
      "path": "46"
    },
    "4581": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4583": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "SHL",
      "path": "46"
    },
    "4584": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4585": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4586": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4588": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "ADD",
      "path": "46"
    },
    "4589": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4591": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4593": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4594": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4595": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4596": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "SUB",
      "path": "46"
    },
    "4597": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4598": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4599": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4600": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "4601": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4602": {
      "op": "DUP1"
    },
    "4603": {
      "op": "ISZERO"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0x1204"
    },
    "4607": {
      "op": "JUMPI"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "DUP1"
    },
    "4611": {
      "op": "REVERT"
    },
    "4612": {
      "op": "JUMPDEST"
    },
    "4613": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "POP",
      "path": "46"
    },
    "4614": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "GAS",
      "path": "46"
    },
    "4615": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4616": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4617": {
      "op": "DUP1"
    },
    "4618": {
      "op": "ISZERO"
    },
    "4619": {
      "op": "PUSH2",
      "value": "0x1218"
    },
    "4622": {
      "op": "JUMPI"
    },
    "4623": {
      "op": "RETURNDATASIZE"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4626": {
      "op": "DUP1"
    },
    "4627": {
      "op": "RETURNDATACOPY"
    },
    "4628": {
      "op": "RETURNDATASIZE"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4631": {
      "op": "REVERT"
    },
    "4632": {
      "op": "JUMPDEST"
    },
    "4633": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "POP",
      "path": "46"
    },
    "4634": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "POP",
      "path": "46"
    },
    "4635": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "POP",
      "path": "46"
    },
    "4636": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "POP",
      "path": "46"
    },
    "4637": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4639": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4640": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4643": {
      "op": "DUP2"
    },
    "4644": {
      "op": "LT"
    },
    "4645": {
      "op": "ISZERO"
    },
    "4646": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "4649": {
      "op": "JUMPI"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4652": {
      "op": "DUP1"
    },
    "4653": {
      "op": "REVERT"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5693,
        5727
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4657": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5675
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4658": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5675
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4659": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5680,
        5727
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "4661": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5680,
        5727
      ],
      "op": "AND",
      "path": "46"
    },
    "4662": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5688,
        5690
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xA"
    },
    "4664": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5680,
        5727
      ],
      "op": "EXP",
      "path": "46"
    },
    "4665": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5728
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4670": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5679
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "4673": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5728
      ],
      "op": "AND",
      "path": "46"
    },
    "4674": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        5670,
        5728
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4675": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5670,
        5751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4676": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5662,
        5751
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5765,
        5777
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 32,
      "value": "0xC20"
    },
    "4681": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5765,
        5777
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "POP"
    },
    "4687": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5765,
        5777
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4688": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5505,
        5827
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4689": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5815,
        5816
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 33,
      "value": "0x0"
    },
    "4691": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4692": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "POP",
      "path": "46"
    },
    "4693": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "POP",
      "path": "46"
    },
    "4694": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "POP",
      "path": "46"
    },
    "4695": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "POP",
      "path": "46"
    },
    "4696": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "POP",
      "path": "46"
    },
    "4697": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC20"
    },
    "4700": {
      "fn": "yDelegatedVault.over",
      "offset": [
        5808,
        5816
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4701": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9604,
        9730
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4702": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9647,
        9654
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4704": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 34,
      "value": "0x5"
    },
    "4706": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "4708": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4709": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4710": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4711": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "4714": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "EXP",
      "path": "46"
    },
    "4715": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4716": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "DIV",
      "path": "46"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "op": "SUB"
    },
    "4725": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9691,
        9696
      ],
      "op": "AND",
      "path": "46"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "op": "SUB"
    },
    "4734": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9721
      ],
      "op": "AND",
      "path": "46"
    },
    "4735": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9721
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89D1A0FC"
    },
    "4740": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4742": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4743": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4744": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4749": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "AND",
      "path": "46"
    },
    "4750": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4752": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "SHL",
      "path": "46"
    },
    "4753": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4754": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4755": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4757": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "ADD",
      "path": "46"
    },
    "4758": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4760": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4762": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4763": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4764": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4765": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "SUB",
      "path": "46"
    },
    "4766": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4767": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4768": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4769": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "4770": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4771": {
      "op": "DUP1"
    },
    "4772": {
      "op": "ISZERO"
    },
    "4773": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "4776": {
      "op": "JUMPI"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4779": {
      "op": "DUP1"
    },
    "4780": {
      "op": "REVERT"
    },
    "4781": {
      "op": "JUMPDEST"
    },
    "4782": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "POP",
      "path": "46"
    },
    "4783": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "GAS",
      "path": "46"
    },
    "4784": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4785": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4786": {
      "op": "DUP1"
    },
    "4787": {
      "op": "ISZERO"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x12C1"
    },
    "4791": {
      "op": "JUMPI"
    },
    "4792": {
      "op": "RETURNDATASIZE"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "DUP1"
    },
    "4796": {
      "op": "RETURNDATACOPY"
    },
    "4797": {
      "op": "RETURNDATASIZE"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4800": {
      "op": "REVERT"
    },
    "4801": {
      "op": "JUMPDEST"
    },
    "4802": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "POP",
      "path": "46"
    },
    "4803": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "POP",
      "path": "46"
    },
    "4804": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "POP",
      "path": "46"
    },
    "4805": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "POP",
      "path": "46"
    },
    "4806": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4808": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4809": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4812": {
      "op": "DUP2"
    },
    "4813": {
      "op": "LT"
    },
    "4814": {
      "op": "ISZERO"
    },
    "4815": {
      "op": "PUSH2",
      "value": "0x12D7"
    },
    "4818": {
      "op": "JUMPI"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "REVERT"
    },
    "4823": {
      "op": "JUMPDEST"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4826": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9673,
        9723
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        9604,
        9730
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4829": {
      "fn": "yDelegatedVault.underlying",
      "jump": "o",
      "offset": [
        9604,
        9730
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4830": {
      "offset": [
        990,
        1013
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4831": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        990,
        1013
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xA"
    },
    "4833": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        990,
        1013
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4834": {
      "fn": "yDelegatedVault.underlying",
      "offset": [
        990,
        1013
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4835": {
      "fn": "yDelegatedVault.underlying",
      "jump": "o",
      "offset": [
        990,
        1013
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4836": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4843": {
      "op": "SHL"
    },
    "4844": {
      "op": "SUB"
    },
    "4845": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "AND",
      "path": "3",
      "statement": 35
    },
    "4846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1763,
        1770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4848": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4849": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4850": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4851": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4853": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4854": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4855": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4856": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4858": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4859": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4860": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4861": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4862": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4863": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10706,
        10832
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4864": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10761,
        10768
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4866": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10787,
        10825
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 36,
      "value": "0x1041"
    },
    "4869": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10811,
        10824
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x130C"
    },
    "4872": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10811,
        10822
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC25"
    },
    "4875": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        10811,
        10824
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4876": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10811,
        10824
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4877": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10787,
        10806
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "4880": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10801,
        10805
      ],
      "op": "PUSH8",
      "path": "46",
      "value": "0xDE0B6B3A7640000"
    },
    "4889": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10787,
        10796
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF2A"
    },
    "4892": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "offset": [
        10787,
        10794
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1740"
    },
    "4895": {
      "fn": "yDelegatedVault.getPricePerFullShare",
      "jump": "i",
      "offset": [
        10787,
        10796
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4896": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6199,
        6259
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4897": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6239,
        6252
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 37,
      "value": "0x132A"
    },
    "4900": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6250,
        6251
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4902": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6239,
        6249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2283"
    },
    "4905": {
      "fn": "yDelegatedVault.rebalance",
      "jump": "i",
      "offset": [
        6239,
        6252
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4906": {
      "fn": "yDelegatedVault.rebalance",
      "offset": [
        6239,
        6252
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4907": {
      "fn": "yDelegatedVault.rebalance",
      "jump": "o",
      "offset": [
        6199,
        6259
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4908": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4597,
        4667
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4909": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4634,
        4641
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4911": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4653,
        4660
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 38,
      "value": "0x1338"
    },
    "4914": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4658,
        4659
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4916": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4653,
        4657
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1133"
    },
    "4919": {
      "fn": "yDelegatedVault.over",
      "jump": "i",
      "offset": [
        4653,
        4660
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4920": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4653,
        4660
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4921": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4653,
        4660
      ],
      "op": "POP",
      "path": "46"
    },
    "4922": {
      "fn": "yDelegatedVault.over",
      "offset": [
        4597,
        4667
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4923": {
      "fn": "yDelegatedVault.over",
      "jump": "o",
      "offset": [
        4597,
        4667
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4924": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10326,
        10411
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4925": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10369,
        10404
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 39,
      "value": "0x132A"
    },
    "4928": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10378,
        10403
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1348"
    },
    "4931": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10392,
        10402
      ],
      "op": "CALLER",
      "path": "46"
    },
    "4932": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10378,
        10391
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE74"
    },
    "4935": {
      "fn": "yDelegatedVault.safeWithdraw",
      "jump": "i",
      "offset": [
        10378,
        10403
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4936": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10378,
        10403
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4937": {
      "fn": "yDelegatedVault.safeWithdraw",
      "offset": [
        10369,
        10377
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF36"
    },
    "4940": {
      "fn": "yDelegatedVault.safeWithdraw",
      "jump": "i",
      "offset": [
        10369,
        10404
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4941": {
      "offset": [
        1050,
        1132
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4942": {
      "offset": [
        1089,
        1131
      ],
      "op": "PUSH20",
      "path": "46",
      "value": "0x24A42FD28C976A61DF5D00D0599C34C4F90748C8"
    },
    "4963": {
      "offset": [
        1050,
        1132
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4964": {
      "fn": "yDelegatedVault.safeWithdraw",
      "jump": "o",
      "offset": [
        1050,
        1132
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4965": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9736,
        9814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4966": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9776,
        9807
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 40,
      "value": "0x132A"
    },
    "4969": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9785,
        9806
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1348"
    },
    "4972": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9795,
        9805
      ],
      "op": "CALLER",
      "path": "46"
    },
    "4973": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        9785,
        9794
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12E4"
    },
    "4976": {
      "fn": "yDelegatedVault.withdrawAll",
      "jump": "i",
      "offset": [
        9785,
        9806
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4977": {
      "offset": [
        922,
        946
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4978": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        922,
        946
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "4980": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        922,
        946
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "4981": {
      "fn": "yDelegatedVault.withdrawAll",
      "offset": [
        922,
        946
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4982": {
      "fn": "yDelegatedVault.withdrawAll",
      "jump": "o",
      "offset": [
        922,
        946
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4983": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7550,
        7900
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4984": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7607,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4986": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7626,
        7642
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4987": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7645,
        7654
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1382"
    },
    "4990": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7645,
        7652
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "4993": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "jump": "i",
      "offset": [
        7645,
        7654
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4994": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7645,
        7654
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4995": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7626,
        7654
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4996": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7626,
        7654
      ],
      "op": "POP",
      "path": "46"
    },
    "4997": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7664,
        7682
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4999": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7685,
        7707
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x138E"
    },
    "5002": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7685,
        7705
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16D1"
    },
    "5005": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "jump": "i",
      "offset": [
        7685,
        7707
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5006": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7685,
        7707
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5007": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7664,
        7707
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5008": {
      "op": "POP"
    },
    "5009": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7721,
        7735
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5010": {
      "branch": 120,
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7721,
        7735
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5011": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7717,
        7894
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13E6"
    },
    "5014": {
      "branch": 120,
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7717,
        7894
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5015": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7758,
        7844
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 41,
      "value": "0x13DD"
    },
    "5018": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7826,
        7843
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13A1"
    },
    "5021": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7826,
        7841
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C12"
    },
    "5024": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "jump": "i",
      "offset": [
        7826,
        7843
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5025": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7826,
        7843
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5026": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7758,
        7821
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "5029": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7800,
        7808
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "SHL"
    },
    "5037": {
      "op": "SUB"
    },
    "5038": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7818
      ],
      "op": "AND",
      "path": "46"
    },
    "5039": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7818
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x313CE567"
    },
    "5044": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5046": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5047": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5048": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5053": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "AND",
      "path": "46"
    },
    "5054": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "5056": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "SHL",
      "path": "46"
    },
    "5057": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5058": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5059": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5061": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "ADD",
      "path": "46"
    },
    "5062": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5064": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5066": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5067": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5068": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5069": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "SUB",
      "path": "46"
    },
    "5070": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5071": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5072": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5073": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "5074": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7786,
        7820
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5075": {
      "op": "DUP1"
    },
    "5076": {
      "op": "ISZERO"
    },
    "5077": {
      "op": "PUSH2",
      "value": "0x1204"
    },
    "5080": {
      "op": "JUMPI"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5083": {
      "op": "DUP1"
    },
    "5084": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7758,
        7844
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5085": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7758,
        7844
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5086": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5087": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "POP",
      "path": "46"
    },
    "5088": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "POP",
      "path": "46"
    },
    "5089": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "POP",
      "path": "46"
    },
    "5090": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DB"
    },
    "5093": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7751,
        7844
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5094": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7717,
        7894
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5095": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7882,
        7883
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 42,
      "value": "0x0"
    },
    "5097": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5098": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "POP",
      "path": "46"
    },
    "5099": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "POP",
      "path": "46"
    },
    "5100": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "POP",
      "path": "46"
    },
    "5101": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DB"
    },
    "5104": {
      "fn": "yDelegatedVault.availableToBorrowReserve",
      "offset": [
        7875,
        7883
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5105": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4054,
        4206
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5106": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4139,
        4149
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 43,
      "value": "0x6"
    },
    "5108": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4139,
        4149
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5115": {
      "op": "SHL"
    },
    "5116": {
      "op": "SUB"
    },
    "5117": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4139,
        4149
      ],
      "op": "AND",
      "path": "46"
    },
    "5118": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4125,
        4135
      ],
      "op": "CALLER",
      "path": "46"
    },
    "5119": {
      "branch": 121,
      "fn": "yDelegatedVault.setController",
      "offset": [
        4125,
        4149
      ],
      "op": "EQ",
      "path": "46"
    },
    "5120": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x143E"
    },
    "5123": {
      "branch": 121,
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5124": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5126": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5127": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5136": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5137": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5139": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5141": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5142": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "ADD",
      "path": "46"
    },
    "5143": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5144": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "5146": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "5148": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5149": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "ADD",
      "path": "46"
    },
    "5150": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5151": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "5168": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5169": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "ADD",
      "path": "46"
    },
    "5170": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5171": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5172": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5173": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5174": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5175": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5176": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "SUB",
      "path": "46"
    },
    "5177": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "5179": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "ADD",
      "path": "46"
    },
    "5180": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5181": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5182": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4117,
        4165
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5183": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4185
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 44,
      "value": "0x7"
    },
    "5185": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5186": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5193": {
      "op": "SHL"
    },
    "5194": {
      "op": "SUB"
    },
    "5195": {
      "op": "NOT"
    },
    "5196": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "AND",
      "path": "46"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "op": "SUB"
    },
    "5205": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5206": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5207": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5208": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "AND",
      "path": "46"
    },
    "5209": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5210": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5211": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5212": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "OR",
      "path": "46"
    },
    "5213": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5214": {
      "fn": "yDelegatedVault.setController",
      "offset": [
        4175,
        4199
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "5215": {
      "fn": "yDelegatedVault.setController",
      "jump": "o",
      "offset": [
        4054,
        4206
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5216": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5217": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 45,
      "value": "0x4"
    },
    "5219": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5220": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5221": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5223": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5224": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5225": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5227": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5229": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5233": {
      "op": "NOT"
    },
    "5234": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "5237": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5239": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP9",
      "path": "4"
    },
    "5240": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "4"
    },
    "5241": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5242": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "5243": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5244": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5245": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "5246": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "4"
    },
    "5247": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5248": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5249": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5250": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "5251": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5252": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5253": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5254": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5255": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5256": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "5257": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5258": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "5259": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5260": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5261": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5262": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5263": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5264": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5265": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5266": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5267": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5268": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5269": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "5271": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5272": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5273": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5274": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5275": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5276": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5277": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5278": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5279": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5280": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5281": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5282": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D3"
    },
    "5285": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5286": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5287": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5289": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "4"
    },
    "5290": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A8"
    },
    "5293": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5294": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "5297": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5298": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5299": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5300": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "4"
    },
    "5301": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "4"
    },
    "5302": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5303": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5304": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5305": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5307": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "5308": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5309": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D3"
    },
    "5312": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5313": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4212,
        4342
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5314": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4258,
        4265
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5316": {
      "offset": [
        1089,
        1131
      ],
      "op": "PUSH20",
      "path": "46",
      "value": "0x24A42FD28C976A61DF5D00D0599C34C4F90748C8"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "op": "SUB"
    },
    "5345": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4333
      ],
      "op": "AND",
      "path": "46",
      "statement": 46
    },
    "5346": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4333
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFCA513A8"
    },
    "5351": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5353": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5354": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5355": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5360": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "AND",
      "path": "46"
    },
    "5361": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "5363": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "SHL",
      "path": "46"
    },
    "5364": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5365": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5366": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5368": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "ADD",
      "path": "46"
    },
    "5369": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5371": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5373": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5374": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5375": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5376": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "SUB",
      "path": "46"
    },
    "5377": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5378": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5379": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5380": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "5381": {
      "fn": "yDelegatedVault.getAaveOracle",
      "offset": [
        4284,
        4335
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5382": {
      "op": "DUP1"
    },
    "5383": {
      "op": "ISZERO"
    },
    "5384": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "5387": {
      "op": "JUMPI"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5390": {
      "op": "DUP1"
    },
    "5391": {
      "op": "REVERT"
    },
    "5392": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1838,
        1958
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5393": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1915,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 47,
      "value": "0x7"
    },
    "5395": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1915,
        1925
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5396": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5398": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5399": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5400": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5407": {
      "op": "SHL"
    },
    "5408": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5409": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5410": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1945,
        1949
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "5411": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5413": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5414": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "ADD",
      "path": "46"
    },
    "5415": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5416": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5417": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5418": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1877,
        1884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5420": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1877,
        1884
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "op": "SUB"
    },
    "5429": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1915,
        1925
      ],
      "op": "AND",
      "path": "46"
    },
    "5430": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1915,
        1925
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5431": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1936
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "5436": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1936
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5437": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "5439": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5440": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5441": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "ADD",
      "path": "46"
    },
    "5442": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5443": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5445": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5446": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5447": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5448": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5449": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5450": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "SUB",
      "path": "46"
    },
    "5451": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "ADD",
      "path": "46"
    },
    "5452": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5453": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1915,
        1925
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5454": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5455": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "5456": {
      "fn": "yDelegatedVault.credit",
      "offset": [
        1903,
        1951
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5457": {
      "op": "DUP1"
    },
    "5458": {
      "op": "ISZERO"
    },
    "5459": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "5462": {
      "op": "JUMPI"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5465": {
      "op": "DUP1"
    },
    "5466": {
      "op": "REVERT"
    },
    "5467": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5468": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4581,
        4585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5470": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4597,
        4726
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 48,
      "value": "0x9F2"
    },
    "5473": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1568"
    },
    "5476": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "5479": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5480": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5481": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4620,
        4627
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5482": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE65"
    },
    "5485": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4668,
        4683
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5488": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "5493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "5499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "5504": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2891"
    },
    "5507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "5509": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5510": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5515": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1592"
    },
    "5518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "5521": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5529": {
      "op": "SHL"
    },
    "5530": {
      "op": "SUB"
    },
    "5531": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5532": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5533": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "AND",
      "path": "3"
    },
    "5534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5535": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5536": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5538": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5539": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5540": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "5541": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5542": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5543": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5544": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5545": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5547": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5548": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5549": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5552": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5553": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5554": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5555": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5556": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP14",
      "path": "3"
    },
    "5557": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "AND",
      "path": "3"
    },
    "5558": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5559": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5560": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5561": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5562": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5563": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5564": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5565": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5566": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5567": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "5572": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200C"
    },
    "5575": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "AND",
      "path": "3"
    },
    "5576": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4629,
        4725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5577": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6265,
        6439
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5578": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6332,
        6342
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 49,
      "value": "0x7"
    },
    "5580": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6332,
        6342
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5587": {
      "op": "SHL"
    },
    "5588": {
      "op": "SUB"
    },
    "5589": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6332,
        6342
      ],
      "op": "AND",
      "path": "46"
    },
    "5590": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6318,
        6328
      ],
      "op": "CALLER",
      "path": "46"
    },
    "5591": {
      "branch": 122,
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6318,
        6342
      ],
      "op": "EQ",
      "path": "46"
    },
    "5592": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1616"
    },
    "5595": {
      "branch": 122,
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5596": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5598": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5599": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5608": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5609": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5611": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5613": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5614": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "ADD",
      "path": "46"
    },
    "5615": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5616": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "5618": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "5620": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5621": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "ADD",
      "path": "46"
    },
    "5622": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5623": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "5640": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5641": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "ADD",
      "path": "46"
    },
    "5642": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5643": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5644": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5645": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5646": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5647": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5648": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "SUB",
      "path": "46"
    },
    "5649": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "5651": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "ADD",
      "path": "46"
    },
    "5652": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5653": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5654": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6310,
        6358
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5655": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 50,
      "value": "0x7"
    },
    "5657": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5658": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6399,
        6408
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "5660": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6399,
        6408
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5661": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "5663": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5664": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6409
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x163C"
    },
    "5667": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6409
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5674": {
      "op": "SHL"
    },
    "5675": {
      "op": "SUB"
    },
    "5676": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "5679": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5680": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5681": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "DIV",
      "path": "46"
    },
    "5682": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5683": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "AND",
      "path": "46"
    },
    "5684": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5685": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5686": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "AND",
      "path": "46"
    },
    "5687": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6387,
        6397
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5688": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6386
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D6E"
    },
    "5691": {
      "fn": "yDelegatedVault.claimInsurance",
      "jump": "i",
      "offset": [
        6368,
        6409
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5692": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6368,
        6409
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5693": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6431,
        6432
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 51,
      "value": "0x0"
    },
    "5695": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6419,
        6428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "5697": {
      "fn": "yDelegatedVault.claimInsurance",
      "offset": [
        6419,
        6432
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "5698": {
      "fn": "yDelegatedVault.claimInsurance",
      "jump": "o",
      "offset": [
        6265,
        6439
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5699": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5700": {
      "fn": "ERC20.transfer",
      "offset": [
        2086,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5702": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2144
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 52,
      "value": "0x9F2"
    },
    "5705": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1650"
    },
    "5708": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2122
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC0"
    },
    "5711": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5712": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5713": {
      "fn": "ERC20.transfer",
      "offset": [
        2126,
        2135
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5714": {
      "fn": "ERC20.transfer",
      "offset": [
        2137,
        2143
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5715": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB0"
    },
    "5718": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2102,
        2144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5719": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3896,
        4048
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5720": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3981,
        3991
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 53,
      "value": "0x6"
    },
    "5722": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3981,
        3991
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "SUB"
    },
    "5731": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3981,
        3991
      ],
      "op": "AND",
      "path": "46"
    },
    "5732": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3967,
        3977
      ],
      "op": "CALLER",
      "path": "46"
    },
    "5733": {
      "branch": 123,
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3967,
        3991
      ],
      "op": "EQ",
      "path": "46"
    },
    "5734": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16A4"
    },
    "5737": {
      "branch": 123,
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5738": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5740": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5741": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5748": {
      "op": "SHL"
    },
    "5749": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5750": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5751": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5753": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5755": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5756": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "ADD",
      "path": "46"
    },
    "5757": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5758": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "5760": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "5762": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5763": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "ADD",
      "path": "46"
    },
    "5764": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5765": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5779": {
      "op": "SHL"
    },
    "5780": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "5782": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5783": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "ADD",
      "path": "46"
    },
    "5784": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5785": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5786": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5787": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5788": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5789": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5790": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "SUB",
      "path": "46"
    },
    "5791": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "5793": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "ADD",
      "path": "46"
    },
    "5794": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5795": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5796": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        3959,
        4007
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5797": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4027
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 54,
      "value": "0x6"
    },
    "5799": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5800": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5807": {
      "op": "SHL"
    },
    "5808": {
      "op": "SUB"
    },
    "5809": {
      "op": "NOT"
    },
    "5810": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "AND",
      "path": "46"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5817": {
      "op": "SHL"
    },
    "5818": {
      "op": "SUB"
    },
    "5819": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5820": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5821": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5822": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "AND",
      "path": "46"
    },
    "5823": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5824": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5825": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5826": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "OR",
      "path": "46"
    },
    "5827": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5828": {
      "fn": "yDelegatedVault.setGovernance",
      "offset": [
        4017,
        4041
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "5829": {
      "fn": "yDelegatedVault.setGovernance",
      "jump": "o",
      "offset": [
        3896,
        4048
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5830": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4499,
        4591
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5831": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4549,
        4553
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5833": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4582,
        4583
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 55
    },
    "5834": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4573,
        4579
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC36"
    },
    "5837": {
      "fn": "yDelegatedVault.shouldRebalance",
      "offset": [
        4573,
        4577
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x132C"
    },
    "5840": {
      "fn": "yDelegatedVault.shouldRebalance",
      "jump": "i",
      "offset": [
        4573,
        4579
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5841": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7065,
        7544
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5842": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7118,
        7125
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5844": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7138,
        7157
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5845": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7159,
        7183
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5847": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7185,
        7213
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5848": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7217,
        7229
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16DF"
    },
    "5851": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7217,
        7227
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1055"
    },
    "5854": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "jump": "i",
      "offset": [
        7217,
        7229
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5855": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7217,
        7229
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5856": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7137,
        7229
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5857": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7137,
        7229
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5858": {
      "op": "POP"
    },
    "5859": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7137,
        7229
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7137,
        7229
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5862": {
      "op": "POP"
    },
    "5863": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7281
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 56,
      "value": "0x16FC"
    },
    "5866": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7277,
        7280
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "5868": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7272
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "5871": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7137,
        7229
      ],
      "op": "DUP6",
      "path": "46"
    },
    "5872": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7269,
        7271
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5F"
    },
    "5874": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7272
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5879": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7268
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "5882": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7272
      ],
      "op": "AND",
      "path": "46"
    },
    "5883": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "jump": "i",
      "offset": [
        7253,
        7272
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5884": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7253,
        7281
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5885": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7239,
        7281
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5886": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7239,
        7281
      ],
      "op": "POP",
      "path": "46"
    },
    "5887": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7364,
        7380
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5888": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7350,
        7361
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5889": {
      "branch": 124,
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7350,
        7380
      ],
      "op": "GT",
      "path": "46"
    },
    "5890": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7346,
        7538
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5891": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7346,
        7538
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1734"
    },
    "5894": {
      "branch": 124,
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7346,
        7538
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5895": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7488
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 57,
      "value": "0x172A"
    },
    "5898": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7467,
        7487
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5899": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7462
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "5902": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7461
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x171D"
    },
    "5905": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7439
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5906": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7444,
        7460
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5907": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7461
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5912": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7443
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "5915": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7461
      ],
      "op": "AND",
      "path": "46"
    },
    "5916": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "jump": "i",
      "offset": [
        7428,
        7461
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5917": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7428,
        7461
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5918": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7423
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5919": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7423
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5920": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7462
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5925": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7427
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "5928": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7462
      ],
      "op": "AND",
      "path": "46"
    },
    "5929": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "jump": "i",
      "offset": [
        7403,
        7462
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5930": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7403,
        7488
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5931": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5932": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "POP",
      "path": "46"
    },
    "5933": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "POP",
      "path": "46"
    },
    "5934": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "POP",
      "path": "46"
    },
    "5935": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "POP",
      "path": "46"
    },
    "5936": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DB"
    },
    "5939": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7396,
        7488
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5940": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7346,
        7538
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5941": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7526,
        7527
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 58,
      "value": "0x0"
    },
    "5943": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5944": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "POP",
      "path": "46"
    },
    "5945": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "POP",
      "path": "46"
    },
    "5946": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "POP",
      "path": "46"
    },
    "5947": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "POP",
      "path": "46"
    },
    "5948": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DB"
    },
    "5951": {
      "fn": "yDelegatedVault.availableToBorrowETH",
      "offset": [
        7519,
        7527
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5952": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3772,
        3890
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5953": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3812,
        3819
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5955": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3883
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 59,
      "value": "0x1041"
    },
    "5958": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3873,
        3882
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "5960": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3873,
        3882
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5961": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "5963": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "5965": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5966": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "5967": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5968": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "5971": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "EXP",
      "path": "46"
    },
    "5972": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5973": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "DIV",
      "path": "46"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5980": {
      "op": "SHL"
    },
    "5981": {
      "op": "SUB"
    },
    "5982": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3843
      ],
      "op": "AND",
      "path": "46"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5989": {
      "op": "SHL"
    },
    "5990": {
      "op": "SUB"
    },
    "5991": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3853
      ],
      "op": "AND",
      "path": "46"
    },
    "5992": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3853
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "5997": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3862,
        3866
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "5998": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6000": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6001": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6002": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6007": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "AND",
      "path": "46"
    },
    "6008": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "6010": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "SHL",
      "path": "46"
    },
    "6011": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6012": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6013": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6015": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "ADD",
      "path": "46"
    },
    "6016": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6017": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6024": {
      "op": "SHL"
    },
    "6025": {
      "op": "SUB"
    },
    "6026": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "AND",
      "path": "46"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6033": {
      "op": "SHL"
    },
    "6034": {
      "op": "SUB"
    },
    "6035": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "AND",
      "path": "46"
    },
    "6036": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6037": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6038": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6040": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "ADD",
      "path": "46"
    },
    "6041": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6042": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6043": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6044": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6046": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6048": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6049": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6050": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6051": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "SUB",
      "path": "46"
    },
    "6052": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6053": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6054": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6055": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6056": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6057": {
      "op": "DUP1"
    },
    "6058": {
      "op": "ISZERO"
    },
    "6059": {
      "op": "PUSH2",
      "value": "0x17B3"
    },
    "6062": {
      "op": "JUMPI"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6065": {
      "op": "DUP1"
    },
    "6066": {
      "op": "REVERT"
    },
    "6067": {
      "op": "JUMPDEST"
    },
    "6068": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6069": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "GAS",
      "path": "46"
    },
    "6070": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "6071": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6072": {
      "op": "DUP1"
    },
    "6073": {
      "op": "ISZERO"
    },
    "6074": {
      "op": "PUSH2",
      "value": "0x17C7"
    },
    "6077": {
      "op": "JUMPI"
    },
    "6078": {
      "op": "RETURNDATASIZE"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6081": {
      "op": "DUP1"
    },
    "6082": {
      "op": "RETURNDATACOPY"
    },
    "6083": {
      "op": "RETURNDATASIZE"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "REVERT"
    },
    "6087": {
      "op": "JUMPDEST"
    },
    "6088": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6089": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6090": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6091": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "POP",
      "path": "46"
    },
    "6092": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6094": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6095": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6098": {
      "op": "DUP2"
    },
    "6099": {
      "op": "LT"
    },
    "6100": {
      "op": "ISZERO"
    },
    "6101": {
      "op": "PUSH2",
      "value": "0x17DD"
    },
    "6104": {
      "op": "JUMPI"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6107": {
      "op": "DUP1"
    },
    "6108": {
      "op": "REVERT"
    },
    "6109": {
      "op": "JUMPDEST"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6112": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3868
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6113": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3883
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6118": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3872
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "6121": {
      "fn": "yDelegatedVault.balance",
      "offset": [
        3838,
        3883
      ],
      "op": "AND",
      "path": "46"
    },
    "6122": {
      "fn": "yDelegatedVault.balance",
      "jump": "i",
      "offset": [
        3838,
        3883
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6123": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8727,
        9476
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6124": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8778,
        8791
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6126": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8794,
        8803
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17F5"
    },
    "6129": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8794,
        8801
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1740"
    },
    "6132": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        8794,
        8803
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6133": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8794,
        8803
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6134": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 60,
      "value": "0x5"
    },
    "6136": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6137": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8778,
        8803
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6138": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8778,
        8803
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1815"
    },
    "6143": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6144": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "6147": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6148": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "DIV",
      "path": "46"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6155": {
      "op": "SHL"
    },
    "6156": {
      "op": "SUB"
    },
    "6157": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8818
      ],
      "op": "AND",
      "path": "46"
    },
    "6158": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8836,
        8846
      ],
      "op": "CALLER",
      "path": "46"
    },
    "6159": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8856,
        8860
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "6160": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8863,
        8870
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6161": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8835
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2383"
    },
    "6164": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        8813,
        8871
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6165": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        8813,
        8871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6166": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9042,
        9060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6168": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9089
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x182E"
    },
    "6171": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9083,
        9088
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2710"
    },
    "6174": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9078
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "6177": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9070
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6178": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9075,
        9077
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x32"
    },
    "6180": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9078
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6185": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9074
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "6188": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9078
      ],
      "op": "AND",
      "path": "46"
    },
    "6189": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9063,
        9078
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6190": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9063,
        9089
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6191": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9042,
        9089
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9132
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 61,
      "value": "0x1840"
    },
    "6196": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9116
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6197": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9042,
        9089
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6198": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9132
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6203": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9120
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2145"
    },
    "6206": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9132
      ],
      "op": "AND",
      "path": "46"
    },
    "6207": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9109,
        9132
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6208": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9109,
        9132
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6209": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9163
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 62,
      "value": "0x8"
    },
    "6211": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9163
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6212": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9099,
        9132
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6213": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9099,
        9132
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "6214": {
      "op": "POP"
    },
    "6215": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9179
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1856"
    },
    "6218": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9179
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6219": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9168,
        9178
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6220": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9179
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6225": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9167
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2329"
    },
    "6228": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9179
      ],
      "op": "AND",
      "path": "46"
    },
    "6229": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9154,
        9179
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6230": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9154,
        9179
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6231": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9142,
        9151
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x8"
    },
    "6233": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9142,
        9179
      ],
      "op": "SSTORE",
      "path": "46"
    },
    "6234": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9263,
        9277
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6236": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9295,
        9308
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1863"
    },
    "6239": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9295,
        9306
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC25"
    },
    "6242": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9295,
        9308
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6243": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9295,
        9308
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6244": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x186E"
    },
    "6247": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6248": {
      "op": "POP"
    },
    "6249": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9338,
        9345
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 63
    },
    "6250": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x188D"
    },
    "6253": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6254": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6255": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9385,
        9424
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 64,
      "value": "0x188A"
    },
    "6258": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9418,
        9423
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6259": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9412
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "6262": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9398,
        9411
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x187D"
    },
    "6265": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9398,
        9409
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC25"
    },
    "6268": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9398,
        9411
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6269": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9398,
        9411
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6270": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9393
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6271": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9393
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6272": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9412
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6277": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9397
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "6280": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9386,
        9412
      ],
      "op": "AND",
      "path": "46"
    },
    "6281": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9386,
        9412
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6282": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9385,
        9424
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6283": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9376,
        9424
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6284": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9376,
        9424
      ],
      "op": "POP",
      "path": "46"
    },
    "6285": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9291,
        9435
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6286": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9444,
        9469
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 65,
      "value": "0xB8C"
    },
    "6289": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9450,
        9460
      ],
      "op": "CALLER",
      "path": "46"
    },
    "6290": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9462,
        9468
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6291": {
      "fn": "yDelegatedVault.deposit",
      "offset": [
        9444,
        9449
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x23DD"
    },
    "6294": {
      "fn": "yDelegatedVault.deposit",
      "jump": "i",
      "offset": [
        9444,
        9469
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6295": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9482,
        9598
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6296": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9560,
        9570
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 66,
      "value": "0x7"
    },
    "6298": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9560,
        9570
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6299": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6301": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6302": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6303": {
      "op": "PUSH4",
      "value": "0x75724589"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6310": {
      "op": "SHL"
    },
    "6311": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6312": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6313": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9585,
        9589
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "6314": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6316": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6317": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "ADD",
      "path": "46"
    },
    "6318": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6319": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6320": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6321": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9522,
        9529
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6323": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9522,
        9529
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6330": {
      "op": "SHL"
    },
    "6331": {
      "op": "SUB"
    },
    "6332": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9560,
        9570
      ],
      "op": "AND",
      "path": "46"
    },
    "6333": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9560,
        9570
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6334": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9576
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x75724589"
    },
    "6339": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9576
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6340": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6342": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6343": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6344": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "ADD",
      "path": "46"
    },
    "6345": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6346": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6348": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6349": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6350": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6351": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6352": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6353": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "SUB",
      "path": "46"
    },
    "6354": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "ADD",
      "path": "46"
    },
    "6355": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6356": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9560,
        9570
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6357": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6358": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6359": {
      "fn": "yDelegatedVault.reserve",
      "offset": [
        9548,
        9591
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6360": {
      "op": "DUP1"
    },
    "6361": {
      "op": "ISZERO"
    },
    "6362": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "6365": {
      "op": "JUMPI"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6368": {
      "op": "DUP1"
    },
    "6369": {
      "op": "REVERT"
    },
    "6370": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2099,
        2201
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6371": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2138,
        2145
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6373": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2164,
        2194
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 67,
      "value": "0x1041"
    },
    "6376": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2187,
        2193
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18EF"
    },
    "6379": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2187,
        2191
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9FC"
    },
    "6382": {
      "fn": "yDelegatedVault.locked",
      "jump": "i",
      "offset": [
        2187,
        2193
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6383": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2187,
        2193
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6384": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2164,
        2182
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "6387": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2177,
        2181
      ],
      "op": "PUSH8",
      "path": "46",
      "value": "0xDE0B6B3A7640000"
    },
    "6396": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2164,
        2172
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF2A"
    },
    "6399": {
      "fn": "yDelegatedVault.locked",
      "offset": [
        2164,
        2170
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1510"
    },
    "6402": {
      "fn": "yDelegatedVault.locked",
      "jump": "i",
      "offset": [
        2164,
        2172
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6403": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6404": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8179,
        8195
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6406": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8198,
        8207
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x190D"
    },
    "6409": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8198,
        8205
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "6412": {
      "fn": "yDelegatedVault.earn",
      "jump": "i",
      "offset": [
        8198,
        8207
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6413": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8198,
        8207
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6414": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8179,
        8207
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6415": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8179,
        8207
      ],
      "op": "POP",
      "path": "46"
    },
    "6416": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8217,
        8232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6418": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8235,
        8261
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1919"
    },
    "6421": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8235,
        8259
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1377"
    },
    "6424": {
      "fn": "yDelegatedVault.earn",
      "jump": "i",
      "offset": [
        8235,
        8261
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6425": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8235,
        8261
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6426": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8217,
        8261
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6427": {
      "op": "POP"
    },
    "6428": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8275,
        8286
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6429": {
      "branch": 125,
      "fn": "yDelegatedVault.earn",
      "offset": [
        8275,
        8286
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6430": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8271,
        8360
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19A3"
    },
    "6433": {
      "branch": 125,
      "fn": "yDelegatedVault.earn",
      "offset": [
        8271,
        8360
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6434": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8307,
        8316
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 68,
      "value": "0x1929"
    },
    "6437": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8307,
        8314
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C2E"
    },
    "6440": {
      "fn": "yDelegatedVault.earn",
      "jump": "i",
      "offset": [
        8307,
        8316
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6441": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8307,
        8316
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6442": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6444": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6445": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6446": {
      "op": "PUSH4",
      "value": "0xC858F5F9"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6453": {
      "op": "SHL"
    },
    "6454": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6455": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6462": {
      "op": "SHL"
    },
    "6463": {
      "op": "SUB"
    },
    "6464": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6465": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6466": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "AND",
      "path": "46"
    },
    "6467": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6469": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6470": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6471": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6472": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6474": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6475": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6476": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6477": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6478": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6479": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8344,
        8345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x2"
    },
    "6481": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "6483": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6484": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6485": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6486": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8347,
        8348
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x7"
    },
    "6488": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "6490": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6491": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6492": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6493": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6494": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6495": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6496": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6497": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6498": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "AND",
      "path": "46"
    },
    "6499": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6500": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xC858F5F9"
    },
    "6505": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6506": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x84"
    },
    "6508": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6509": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6510": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6511": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6514": {
      "op": "SWAP3"
    },
    "6515": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6516": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6517": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6518": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6519": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6520": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "SUB",
      "path": "46"
    },
    "6521": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ADD",
      "path": "46"
    },
    "6522": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6523": {
      "op": "DUP4"
    },
    "6524": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6525": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6526": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6527": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6528": {
      "op": "DUP1"
    },
    "6529": {
      "op": "ISZERO"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "6533": {
      "op": "JUMPI"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "REVERT"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "POP",
      "path": "46"
    },
    "6540": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "GAS",
      "path": "46"
    },
    "6541": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "CALL",
      "path": "46"
    },
    "6542": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6543": {
      "op": "DUP1"
    },
    "6544": {
      "op": "ISZERO"
    },
    "6545": {
      "op": "PUSH2",
      "value": "0x199E"
    },
    "6548": {
      "op": "JUMPI"
    },
    "6549": {
      "op": "RETURNDATASIZE"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6552": {
      "op": "DUP1"
    },
    "6553": {
      "op": "RETURNDATACOPY"
    },
    "6554": {
      "op": "RETURNDATASIZE"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6557": {
      "op": "REVERT"
    },
    "6558": {
      "op": "JUMPDEST"
    },
    "6559": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "POP",
      "path": "46"
    },
    "6560": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "POP",
      "path": "46"
    },
    "6561": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "POP",
      "path": "46"
    },
    "6562": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8302,
        8349
      ],
      "op": "POP",
      "path": "46"
    },
    "6563": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8271,
        8360
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6564": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6566": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6567": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6568": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6575": {
      "op": "SHL"
    },
    "6576": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6577": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6578": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8448,
        8452
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "6579": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6581": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6582": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "ADD",
      "path": "46"
    },
    "6583": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6584": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6585": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6586": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8394,
        8410
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6588": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8394,
        8410
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6595": {
      "op": "SHL"
    },
    "6596": {
      "op": "SUB"
    },
    "6597": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6598": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "AND",
      "path": "46"
    },
    "6599": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6600": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "6605": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6606": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6608": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6609": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6610": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "ADD",
      "path": "46"
    },
    "6611": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6612": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6614": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6615": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6616": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6617": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6618": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6619": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6620": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SUB",
      "path": "46"
    },
    "6621": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "ADD",
      "path": "46"
    },
    "6622": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6623": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8439
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6624": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6625": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6626": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6627": {
      "op": "DUP1"
    },
    "6628": {
      "op": "ISZERO"
    },
    "6629": {
      "op": "PUSH2",
      "value": "0x19ED"
    },
    "6632": {
      "op": "JUMPI"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6635": {
      "op": "DUP1"
    },
    "6636": {
      "op": "REVERT"
    },
    "6637": {
      "op": "JUMPDEST"
    },
    "6638": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "POP",
      "path": "46"
    },
    "6639": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "GAS",
      "path": "46"
    },
    "6640": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "6641": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6642": {
      "op": "DUP1"
    },
    "6643": {
      "op": "ISZERO"
    },
    "6644": {
      "op": "PUSH2",
      "value": "0x1A01"
    },
    "6647": {
      "op": "JUMPI"
    },
    "6648": {
      "op": "RETURNDATASIZE"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6651": {
      "op": "DUP1"
    },
    "6652": {
      "op": "RETURNDATACOPY"
    },
    "6653": {
      "op": "RETURNDATASIZE"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6656": {
      "op": "REVERT"
    },
    "6657": {
      "op": "JUMPDEST"
    },
    "6658": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "POP",
      "path": "46"
    },
    "6659": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "POP",
      "path": "46"
    },
    "6660": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "POP",
      "path": "46"
    },
    "6661": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "POP",
      "path": "46"
    },
    "6662": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6664": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6665": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6668": {
      "op": "DUP2"
    },
    "6669": {
      "op": "LT"
    },
    "6670": {
      "op": "ISZERO"
    },
    "6671": {
      "op": "PUSH2",
      "value": "0x1A17"
    },
    "6674": {
      "op": "JUMPI"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6677": {
      "op": "DUP1"
    },
    "6678": {
      "op": "REVERT"
    },
    "6679": {
      "op": "JUMPDEST"
    },
    "6680": {
      "op": "POP"
    },
    "6681": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6682": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8413,
        8454
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6683": {
      "op": "POP"
    },
    "6684": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8468,
        8480
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6685": {
      "branch": 126,
      "fn": "yDelegatedVault.earn",
      "offset": [
        8468,
        8480
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6686": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8464,
        8625
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AAD"
    },
    "6689": {
      "branch": 126,
      "fn": "yDelegatedVault.earn",
      "offset": [
        8464,
        8625
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6690": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8526,
        8536
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 69,
      "value": "0x7"
    },
    "6692": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8526,
        8536
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6693": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8547
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A41"
    },
    "6696": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6703": {
      "op": "SHL"
    },
    "6704": {
      "op": "SUB"
    },
    "6705": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8525
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6706": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8525
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6707": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8525
      ],
      "op": "AND",
      "path": "46"
    },
    "6708": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8525
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6709": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8526,
        8536
      ],
      "op": "AND",
      "path": "46"
    },
    "6710": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8538,
        8546
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6711": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8547
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6716": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8525
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D6E"
    },
    "6719": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8547
      ],
      "op": "AND",
      "path": "46"
    },
    "6720": {
      "fn": "yDelegatedVault.earn",
      "jump": "i",
      "offset": [
        8496,
        8547
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6721": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8496,
        8547
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6722": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 70,
      "value": "0x7"
    },
    "6724": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6725": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6727": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6728": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6729": {
      "op": "PUSH4",
      "value": "0xB02BF4B9"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6736": {
      "op": "SHL"
    },
    "6737": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6738": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6739": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8598,
        8602
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "6740": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6742": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6743": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ADD",
      "path": "46"
    },
    "6744": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6745": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6747": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6748": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ADD",
      "path": "46"
    },
    "6749": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6750": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6751": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6752": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6753": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6760": {
      "op": "SHL"
    },
    "6761": {
      "op": "SUB"
    },
    "6762": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6763": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6764": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "AND",
      "path": "46"
    },
    "6765": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6766": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8589
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB02BF4B9"
    },
    "6771": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8589
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6772": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "6774": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6775": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6776": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ADD",
      "path": "46"
    },
    "6777": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6778": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6780": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6781": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6782": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6783": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6784": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6785": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6786": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "SUB",
      "path": "46"
    },
    "6787": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ADD",
      "path": "46"
    },
    "6788": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6789": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6790": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8573,
        8583
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6791": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6792": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6793": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6794": {
      "op": "DUP1"
    },
    "6795": {
      "op": "ISZERO"
    },
    "6796": {
      "op": "PUSH2",
      "value": "0x1A94"
    },
    "6799": {
      "op": "JUMPI"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6802": {
      "op": "DUP1"
    },
    "6803": {
      "op": "REVERT"
    },
    "6804": {
      "op": "JUMPDEST"
    },
    "6805": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "POP",
      "path": "46"
    },
    "6806": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "GAS",
      "path": "46"
    },
    "6807": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "CALL",
      "path": "46"
    },
    "6808": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6809": {
      "op": "DUP1"
    },
    "6810": {
      "op": "ISZERO"
    },
    "6811": {
      "op": "PUSH2",
      "value": "0x1AA8"
    },
    "6814": {
      "op": "JUMPI"
    },
    "6815": {
      "op": "RETURNDATASIZE"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6818": {
      "op": "DUP1"
    },
    "6819": {
      "op": "RETURNDATACOPY"
    },
    "6820": {
      "op": "RETURNDATASIZE"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6823": {
      "op": "REVERT"
    },
    "6824": {
      "op": "JUMPDEST"
    },
    "6825": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "POP",
      "path": "46"
    },
    "6826": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "POP",
      "path": "46"
    },
    "6827": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "POP",
      "path": "46"
    },
    "6828": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8561,
        8614
      ],
      "op": "POP",
      "path": "46"
    },
    "6829": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8464,
        8625
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6830": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "POP",
      "path": "46"
    },
    "6831": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "POP",
      "path": "46"
    },
    "6832": {
      "fn": "yDelegatedVault.earn",
      "offset": [
        8144,
        8631
      ],
      "op": "POP",
      "path": "46"
    },
    "6833": {
      "fn": "yDelegatedVault.earn",
      "jump": "o",
      "offset": [
        8144,
        8631
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6834": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6841": {
      "op": "SHL"
    },
    "6842": {
      "op": "SUB"
    },
    "6843": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 71
    },
    "6844": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6845": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "AND",
      "path": "3"
    },
    "6846": {
      "fn": "ERC20.allowance",
      "offset": [
        2302,
        2309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6848": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6849": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6850": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6851": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6853": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6855": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6856": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6857": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6858": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6860": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6861": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6862": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6863": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6864": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6865": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6866": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "AND",
      "path": "3"
    },
    "6867": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6868": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6869": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6870": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6871": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6872": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6873": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6874": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6875": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6876": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6877": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4673,
        4980
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6878": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4742,
        4749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6880": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4771,
        4863
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 72,
      "value": "0x1B6D"
    },
    "6883": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "6885": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "6887": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6888": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "6889": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6890": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "6893": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "EXP",
      "path": "46"
    },
    "6894": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6895": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "DIV",
      "path": "46"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6902": {
      "op": "SHL"
    },
    "6903": {
      "op": "SUB"
    },
    "6904": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4844,
        4849
      ],
      "op": "AND",
      "path": "46"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6911": {
      "op": "SHL"
    },
    "6912": {
      "op": "SUB"
    },
    "6913": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4860
      ],
      "op": "AND",
      "path": "46"
    },
    "6914": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4860
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x313CE567"
    },
    "6919": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6921": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6922": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6923": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "6928": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "AND",
      "path": "46"
    },
    "6929": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "6931": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "SHL",
      "path": "46"
    },
    "6932": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6933": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6934": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6936": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "ADD",
      "path": "46"
    },
    "6937": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6939": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6941": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6942": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6943": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6944": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "SUB",
      "path": "46"
    },
    "6945": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6946": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6947": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6948": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6949": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6950": {
      "op": "DUP1"
    },
    "6951": {
      "op": "ISZERO"
    },
    "6952": {
      "op": "PUSH2",
      "value": "0x1B30"
    },
    "6955": {
      "op": "JUMPI"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6958": {
      "op": "DUP1"
    },
    "6959": {
      "op": "REVERT"
    },
    "6960": {
      "op": "JUMPDEST"
    },
    "6961": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "POP",
      "path": "46"
    },
    "6962": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "GAS",
      "path": "46"
    },
    "6963": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "6964": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6965": {
      "op": "DUP1"
    },
    "6966": {
      "op": "ISZERO"
    },
    "6967": {
      "op": "PUSH2",
      "value": "0x1B44"
    },
    "6970": {
      "op": "JUMPI"
    },
    "6971": {
      "op": "RETURNDATASIZE"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6974": {
      "op": "DUP1"
    },
    "6975": {
      "op": "RETURNDATACOPY"
    },
    "6976": {
      "op": "RETURNDATASIZE"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6979": {
      "op": "REVERT"
    },
    "6980": {
      "op": "JUMPDEST"
    },
    "6981": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "POP",
      "path": "46"
    },
    "6982": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "POP",
      "path": "46"
    },
    "6983": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "POP",
      "path": "46"
    },
    "6984": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "POP",
      "path": "46"
    },
    "6985": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6987": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6988": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6991": {
      "op": "DUP2"
    },
    "6992": {
      "op": "LT"
    },
    "6993": {
      "op": "ISZERO"
    },
    "6994": {
      "op": "PUSH2",
      "value": "0x1B5A"
    },
    "6997": {
      "op": "JUMPI"
    },
    "6998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7000": {
      "op": "DUP1"
    },
    "7001": {
      "op": "REVERT"
    },
    "7002": {
      "op": "JUMPDEST"
    },
    "7003": {
      "op": "POP"
    },
    "7004": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4822,
        4862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7005": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4809,
        4862
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xFF"
    },
    "7007": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4809,
        4862
      ],
      "op": "AND",
      "path": "46"
    },
    "7008": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4817,
        4819
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xA"
    },
    "7010": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4809,
        4862
      ],
      "op": "EXP",
      "path": "46"
    },
    "7011": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4771,
        4804
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "7014": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4783,
        4803
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE9B"
    },
    "7017": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4783,
        4801
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x102F"
    },
    "7020": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "jump": "i",
      "offset": [
        4783,
        4803
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7021": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4771,
        4863
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7022": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4761,
        4863
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7023": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4761,
        4863
      ],
      "op": "POP",
      "path": "46"
    },
    "7024": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4973
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 73,
      "value": "0x9F6"
    },
    "7027": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4960,
        4972
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x9"
    },
    "7029": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4960,
        4972
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7030": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4955
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "7033": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4951,
        4954
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xB"
    },
    "7035": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4951,
        4954
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7036": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4946
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA8"
    },
    "7039": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4942,
        4945
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xA"
    },
    "7041": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4942,
        4945
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7042": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4937
      ],
      "op": "DUP8",
      "path": "46"
    },
    "7043": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4941
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20A3"
    },
    "7046": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4941
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7047": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4946
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7048": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4946
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7049": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4946
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "7054": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "offset": [
        4930,
        4946
      ],
      "op": "AND",
      "path": "46"
    },
    "7055": {
      "fn": "yDelegatedVault.getUnderlyingPriceETH",
      "jump": "i",
      "offset": [
        4930,
        4946
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7056": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8637,
        8721
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7057": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 74,
      "value": "0x5"
    },
    "7059": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7060": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7062": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7063": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7064": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7071": {
      "op": "SHL"
    },
    "7072": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7073": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7074": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8702,
        8712
      ],
      "op": "CALLER",
      "path": "46"
    },
    "7075": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "7077": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7078": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "ADD",
      "path": "46"
    },
    "7079": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7080": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7081": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7082": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8678,
        8714
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x132A"
    },
    "7085": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8678,
        8714
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7086": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "7089": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7090": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "DIV",
      "path": "46"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7097": {
      "op": "SHL"
    },
    "7098": {
      "op": "SUB"
    },
    "7099": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "AND",
      "path": "46"
    },
    "7100": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7101": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8701
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "7106": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8701
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7107": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "7109": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7110": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP4",
      "path": "46"
    },
    "7111": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "ADD",
      "path": "46"
    },
    "7112": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7113": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "7115": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7116": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7117": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7118": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7119": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7120": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "SUB",
      "path": "46"
    },
    "7121": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "ADD",
      "path": "46"
    },
    "7122": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7123": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8691
      ],
      "op": "DUP7",
      "path": "46"
    },
    "7124": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7125": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "7126": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7127": {
      "op": "DUP1"
    },
    "7128": {
      "op": "ISZERO"
    },
    "7129": {
      "op": "PUSH2",
      "value": "0x1BE1"
    },
    "7132": {
      "op": "JUMPI"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7135": {
      "op": "DUP1"
    },
    "7136": {
      "op": "REVERT"
    },
    "7137": {
      "op": "JUMPDEST"
    },
    "7138": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "POP",
      "path": "46"
    },
    "7139": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "GAS",
      "path": "46"
    },
    "7140": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "7141": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7142": {
      "op": "DUP1"
    },
    "7143": {
      "op": "ISZERO"
    },
    "7144": {
      "op": "PUSH2",
      "value": "0x1BF5"
    },
    "7147": {
      "op": "JUMPI"
    },
    "7148": {
      "op": "RETURNDATASIZE"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7151": {
      "op": "DUP1"
    },
    "7152": {
      "op": "RETURNDATACOPY"
    },
    "7153": {
      "op": "RETURNDATASIZE"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7156": {
      "op": "REVERT"
    },
    "7157": {
      "op": "JUMPDEST"
    },
    "7158": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "POP",
      "path": "46"
    },
    "7159": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "POP",
      "path": "46"
    },
    "7160": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "POP",
      "path": "46"
    },
    "7161": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "POP",
      "path": "46"
    },
    "7162": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7164": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7165": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "7166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7168": {
      "op": "DUP2"
    },
    "7169": {
      "op": "LT"
    },
    "7170": {
      "op": "ISZERO"
    },
    "7171": {
      "op": "PUSH2",
      "value": "0x1C0B"
    },
    "7174": {
      "op": "JUMPI"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7177": {
      "op": "DUP1"
    },
    "7178": {
      "op": "REVERT"
    },
    "7179": {
      "op": "JUMPDEST"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8686,
        8713
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7182": {
      "fn": "yDelegatedVault.depositAll",
      "offset": [
        8678,
        8685
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17EB"
    },
    "7185": {
      "fn": "yDelegatedVault.depositAll",
      "jump": "i",
      "offset": [
        8678,
        8714
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7186": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7906,
        8016
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7187": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7954,
        7961
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "7189": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7980,
        8009
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 75,
      "value": "0x1041"
    },
    "7192": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7999,
        8008
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x103C"
    },
    "7195": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        7999,
        8006
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "7198": {
      "fn": "yDelegatedVault.getReservePrice",
      "jump": "i",
      "offset": [
        7999,
        8008
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7199": {
      "offset": [
        891,
        916
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7200": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        891,
        916
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x7"
    },
    "7202": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        891,
        916
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7209": {
      "op": "SHL"
    },
    "7210": {
      "op": "SUB"
    },
    "7211": {
      "offset": [
        891,
        916
      ],
      "op": "AND",
      "path": "46"
    },
    "7212": {
      "fn": "yDelegatedVault.getReservePrice",
      "offset": [
        891,
        916
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7213": {
      "fn": "yDelegatedVault.getReservePrice",
      "jump": "o",
      "offset": [
        891,
        916
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7214": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2344,
        2468
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7215": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2384,
        2391
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "7217": {
      "offset": [
        1089,
        1131
      ],
      "op": "PUSH20",
      "path": "46",
      "value": "0x24A42FD28C976A61DF5D00D0599C34C4F90748C8"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7244": {
      "op": "SHL"
    },
    "7245": {
      "op": "SUB"
    },
    "7246": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2459
      ],
      "op": "AND",
      "path": "46",
      "statement": 76
    },
    "7247": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2459
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x261BF8B"
    },
    "7252": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7254": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7255": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7256": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "7261": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "AND",
      "path": "46"
    },
    "7262": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "7264": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "SHL",
      "path": "46"
    },
    "7265": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7266": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7267": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "7269": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "ADD",
      "path": "46"
    },
    "7270": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "7272": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7274": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7275": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7276": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP4",
      "path": "46"
    },
    "7277": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "SUB",
      "path": "46"
    },
    "7278": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7279": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP7",
      "path": "46"
    },
    "7280": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7281": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "7282": {
      "fn": "yDelegatedVault.getAave",
      "offset": [
        2410,
        2461
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7283": {
      "op": "DUP1"
    },
    "7284": {
      "op": "ISZERO"
    },
    "7285": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "7288": {
      "op": "JUMPI"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7291": {
      "op": "DUP1"
    },
    "7292": {
      "op": "REVERT"
    },
    "7293": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2474,
        2606
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7294": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2518,
        2525
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "7296": {
      "offset": [
        1089,
        1131
      ],
      "op": "PUSH20",
      "path": "46",
      "value": "0x24A42FD28C976A61DF5D00D0599C34C4F90748C8"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7323": {
      "op": "SHL"
    },
    "7324": {
      "op": "SUB"
    },
    "7325": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2597
      ],
      "op": "AND",
      "path": "46",
      "statement": 77
    },
    "7326": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2597
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xED6FF760"
    },
    "7331": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7333": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7334": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7335": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "7340": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "AND",
      "path": "46"
    },
    "7341": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "7343": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "SHL",
      "path": "46"
    },
    "7344": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7345": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7346": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "7348": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "ADD",
      "path": "46"
    },
    "7349": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "7351": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7353": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7354": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7355": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP4",
      "path": "46"
    },
    "7356": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "SUB",
      "path": "46"
    },
    "7357": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7358": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP7",
      "path": "46"
    },
    "7359": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7360": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "7361": {
      "fn": "yDelegatedVault.getAaveCore",
      "offset": [
        2544,
        2599
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7362": {
      "op": "DUP1"
    },
    "7363": {
      "op": "ISZERO"
    },
    "7364": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "7367": {
      "op": "JUMPI"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7370": {
      "op": "DUP1"
    },
    "7371": {
      "op": "REVERT"
    },
    "7372": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3211,
        3386
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7373": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3248,
        3264
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "7375": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3267,
        3276
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CD6"
    },
    "7378": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3267,
        3274
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "7381": {
      "fn": "yDelegatedVault.repayAll",
      "jump": "i",
      "offset": [
        3267,
        3276
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7382": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3267,
        3276
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7383": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7385": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7386": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7387": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7396": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7397": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3339,
        3343
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "7398": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "7400": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7401": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "ADD",
      "path": "46"
    },
    "7402": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "7403": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7404": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7405": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3248,
        3276
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7406": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3248,
        3276
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7407": {
      "op": "POP"
    },
    "7408": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3286,
        3301
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "7410": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3286,
        3301
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7417": {
      "op": "SHL"
    },
    "7418": {
      "op": "SUB"
    },
    "7419": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "DUP5",
      "path": "46"
    },
    "7420": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "AND",
      "path": "46"
    },
    "7421": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7422": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70A08231"
    },
    "7427": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7428": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "7430": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7431": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP4",
      "path": "46"
    },
    "7432": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "ADD",
      "path": "46"
    },
    "7433": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7434": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "7436": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "7437": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "7438": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7439": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7440": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7441": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SUB",
      "path": "46"
    },
    "7442": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "ADD",
      "path": "46"
    },
    "7443": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7444": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3330
      ],
      "op": "DUP7",
      "path": "46"
    },
    "7445": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7446": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "7447": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7448": {
      "op": "DUP1"
    },
    "7449": {
      "op": "ISZERO"
    },
    "7450": {
      "op": "PUSH2",
      "value": "0x1D22"
    },
    "7453": {
      "op": "JUMPI"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7456": {
      "op": "DUP1"
    },
    "7457": {
      "op": "REVERT"
    },
    "7458": {
      "op": "JUMPDEST"
    },
    "7459": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "POP",
      "path": "46"
    },
    "7460": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "GAS",
      "path": "46"
    },
    "7461": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "7462": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "7463": {
      "op": "DUP1"
    },
    "7464": {
      "op": "ISZERO"
    },
    "7465": {
      "op": "PUSH2",
      "value": "0x1D36"
    },
    "7468": {
      "op": "JUMPI"
    },
    "7469": {
      "op": "RETURNDATASIZE"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7472": {
      "op": "DUP1"
    },
    "7473": {
      "op": "RETURNDATACOPY"
    },
    "7474": {
      "op": "RETURNDATASIZE"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7477": {
      "op": "REVERT"
    },
    "7478": {
      "op": "JUMPDEST"
    },
    "7479": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "POP",
      "path": "46"
    },
    "7480": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "POP",
      "path": "46"
    },
    "7481": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "POP",
      "path": "46"
    },
    "7482": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "POP",
      "path": "46"
    },
    "7483": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "7485": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7486": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7489": {
      "op": "DUP2"
    },
    "7490": {
      "op": "LT"
    },
    "7491": {
      "op": "ISZERO"
    },
    "7492": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "7495": {
      "op": "JUMPI"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7498": {
      "op": "DUP1"
    },
    "7499": {
      "op": "REVERT"
    },
    "7500": {
      "op": "JUMPDEST"
    },
    "7501": {
      "op": "POP"
    },
    "7502": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "7503": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7504": {
      "op": "POP"
    },
    "7505": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3355,
        3379
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 78,
      "value": "0x943"
    },
    "7508": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3361,
        3369
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7509": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3304,
        3345
      ],
      "op": "DUP3",
      "path": "46"
    },
    "7510": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        3355,
        3360
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC42"
    },
    "7513": {
      "fn": "yDelegatedVault.repayAll",
      "jump": "i",
      "offset": [
        3355,
        3379
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7514": {
      "offset": [
        834,
        853
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "7515": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x5"
    },
    "7517": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "7518": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "7521": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "7522": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "DIV",
      "path": "46"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7529": {
      "op": "SHL"
    },
    "7530": {
      "op": "SUB"
    },
    "7531": {
      "offset": [
        834,
        853
      ],
      "op": "AND",
      "path": "46"
    },
    "7532": {
      "fn": "yDelegatedVault.repayAll",
      "offset": [
        834,
        853
      ],
      "op": "DUP2",
      "path": "46"
    },
    "7533": {
      "fn": "yDelegatedVault.repayAll",
      "jump": "o",
      "offset": [
        834,
        853
      ],
      "op": "JUMP",
      "path": "46"
    },
    "7534": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7535": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 79,
      "value": "0x40"
    },
    "7537": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7538": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7545": {
      "op": "SHL"
    },
    "7546": {
      "op": "SUB"
    },
    "7547": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7548": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7549": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7551": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7552": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7553": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7554": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7556": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7557": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7558": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7559": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7560": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7561": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7562": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7564": {
      "op": "DUP1"
    },
    "7565": {
      "op": "DUP4"
    },
    "7566": {
      "op": "SUB"
    },
    "7567": {
      "op": "SWAP1"
    },
    "7568": {
      "op": "SWAP2"
    },
    "7569": {
      "op": "ADD"
    },
    "7570": {
      "op": "DUP2"
    },
    "7571": {
      "op": "MSTORE"
    },
    "7572": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7574": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7575": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7576": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7577": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7578": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7579": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7580": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7582": {
      "op": "DUP2"
    },
    "7583": {
      "op": "ADD"
    },
    "7584": {
      "op": "DUP1"
    },
    "7585": {
      "op": "MLOAD"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7592": {
      "op": "SHL"
    },
    "7593": {
      "op": "SUB"
    },
    "7594": {
      "op": "AND"
    },
    "7595": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7602": {
      "op": "SHL"
    },
    "7603": {
      "op": "OR"
    },
    "7604": {
      "op": "SWAP1"
    },
    "7605": {
      "op": "MSTORE"
    },
    "7606": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AAD"
    },
    "7609": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7610": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7611": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7612": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24CD"
    },
    "7615": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7616": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7617": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 80
    },
    "7618": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7619": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7620": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7627": {
      "op": "SHL"
    },
    "7628": {
      "op": "SUB"
    },
    "7629": {
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 81
    },
    "7630": {
      "branch": 130,
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "AND",
      "path": "3"
    },
    "7631": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E09"
    },
    "7634": {
      "branch": 130,
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7635": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7637": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7644": {
      "op": "SHL"
    },
    "7645": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7646": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7647": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7649": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "7650": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7651": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7652": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7654": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "7655": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7656": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7657": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "7658": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7659": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7660": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "7662": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7663": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7664": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7666": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "7667": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7668": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2843"
    },
    "7671": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "7673": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7674": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7675": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7677": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "7678": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7679": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "7680": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "7681": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7683": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7684": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7685": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7686": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "7687": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7688": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7689": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7696": {
      "op": "SHL"
    },
    "7697": {
      "op": "SUB"
    },
    "7698": {
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 82
    },
    "7699": {
      "branch": 131,
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "AND",
      "path": "3"
    },
    "7700": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4E"
    },
    "7703": {
      "branch": 131,
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7704": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7706": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7713": {
      "op": "SHL"
    },
    "7714": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7715": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7716": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7718": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "7719": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7720": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7721": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7723": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "7724": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7725": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7726": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "7727": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7728": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7729": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "7731": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7732": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7733": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7735": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "7736": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7737": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x276C"
    },
    "7740": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "7742": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7743": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7744": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7746": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "7747": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7748": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "7749": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "7750": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7752": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7753": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7754": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7755": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "7756": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7757": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7758": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7765": {
      "op": "SHL"
    },
    "7766": {
      "op": "SUB"
    },
    "7767": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 83
    },
    "7768": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7769": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "AND",
      "path": "3"
    },
    "7770": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7772": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7773": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7774": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7775": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7777": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7779": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7780": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7781": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7782": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7784": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7785": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7786": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7787": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7788": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7789": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "AND",
      "path": "3"
    },
    "7790": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7791": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7792": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7793": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7794": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7795": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7796": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7797": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7798": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7799": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7800": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7801": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7802": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7803": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 84
    },
    "7804": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7805": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7806": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7807": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7808": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7809": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7810": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7843": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7844": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7845": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7846": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SUB",
      "path": "3"
    },
    "7847": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7848": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7849": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "ADD",
      "path": "3"
    },
    "7850": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7851": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "LOG3",
      "path": "3"
    },
    "7852": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "7853": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "7854": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "7855": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7856": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7863": {
      "op": "SHL"
    },
    "7864": {
      "op": "SUB"
    },
    "7865": {
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 85
    },
    "7866": {
      "branch": 132,
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "AND",
      "path": "3"
    },
    "7867": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF5"
    },
    "7870": {
      "branch": 132,
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7871": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7873": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7880": {
      "op": "SHL"
    },
    "7881": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7882": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7883": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7885": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "7886": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7887": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7888": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7890": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "7891": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7892": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7893": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "7894": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7895": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7896": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "7898": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7899": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7900": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7902": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "7903": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7904": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281E"
    },
    "7907": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "7909": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7910": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7911": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7913": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "7914": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7915": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "7916": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "7917": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7919": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7920": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7921": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7922": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "7923": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7924": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7925": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7932": {
      "op": "SHL"
    },
    "7933": {
      "op": "SUB"
    },
    "7934": {
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 86
    },
    "7935": {
      "branch": 133,
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "AND",
      "path": "3"
    },
    "7936": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F3A"
    },
    "7939": {
      "branch": 133,
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7940": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7942": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7949": {
      "op": "SHL"
    },
    "7950": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7951": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7952": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7954": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "7955": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7956": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7957": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7959": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "7960": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7961": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7962": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "7963": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7964": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7965": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "7967": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7968": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7969": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7971": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "7972": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7973": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2727"
    },
    "7976": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "7978": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7979": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "7980": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7982": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "7983": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7984": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "7985": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "7986": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7988": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7989": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7990": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7991": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "7992": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7993": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7994": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7995": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 87,
      "value": "0x1F7D"
    },
    "7998": {
      "fn": "ERC20._transfer",
      "offset": [
        5521,
        5527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7999": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8001": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8002": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8003": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8005": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "8006": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8008": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8009": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8010": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "8012": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8013": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8014": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8016": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "8017": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x278E"
    },
    "8020": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "8022": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8023": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8030": {
      "op": "SHL"
    },
    "8031": {
      "op": "SUB"
    },
    "8032": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8033": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "AND",
      "path": "3"
    },
    "8034": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5508
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8036": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8037": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8038": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8039": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8041": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8042": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8043": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8044": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8046": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8047": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8048": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8049": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8050": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8051": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8056": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200C"
    },
    "8059": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "AND",
      "path": "3"
    },
    "8060": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8061": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8068": {
      "op": "SHL"
    },
    "8069": {
      "op": "SUB"
    },
    "8070": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8071": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8072": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "AND",
      "path": "3"
    },
    "8073": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8075": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8076": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8077": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8078": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8080": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8081": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8082": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8083": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8085": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8086": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8087": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8088": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8089": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8090": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8091": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8092": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 88
    },
    "8093": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8094": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "AND",
      "path": "3"
    },
    "8095": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8096": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8097": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8098": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8099": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FB2"
    },
    "8102": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8103": {
      "fn": "ERC20._transfer",
      "offset": [
        5628,
        5634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8104": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8109": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2329"
    },
    "8112": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "AND",
      "path": "3"
    },
    "8113": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8114": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "op": "SUB"
    },
    "8123": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8124": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8125": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "AND",
      "path": "3"
    },
    "8126": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8128": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8129": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8130": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8131": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8133": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8134": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8135": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8136": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8138": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8139": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8140": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8141": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8142": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8143": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8144": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8145": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8146": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 89
    },
    "8147": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8148": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8149": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8150": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8151": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8152": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8153": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8154": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8155": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8156": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8157": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "AND",
      "path": "3"
    },
    "8158": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8159": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8192": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8193": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8194": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8195": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8196": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SUB",
      "path": "3"
    },
    "8197": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "ADD",
      "path": "3"
    },
    "8198": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8199": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "LOG3",
      "path": "3"
    },
    "8200": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "8201": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "8202": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "8203": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8204": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8205": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8207": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 90
    },
    "8208": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8209": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8210": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "8211": {
      "branch": 140,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8212": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209B"
    },
    "8215": {
      "branch": 140,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8216": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8218": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8225": {
      "op": "SHL"
    },
    "8226": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8227": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8228": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8230": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8231": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8232": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8233": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8235": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8236": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8237": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8238": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8239": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8240": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8241": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8242": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8243": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8244": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8245": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8246": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8247": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8249": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8250": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8251": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8252": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8253": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8254": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8255": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8257": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8258": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8259": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8260": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8261": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8264": {
      "op": "JUMPDEST"
    },
    "8265": {
      "op": "DUP4"
    },
    "8266": {
      "op": "DUP2"
    },
    "8267": {
      "op": "LT"
    },
    "8268": {
      "op": "ISZERO"
    },
    "8269": {
      "op": "PUSH2",
      "value": "0x2060"
    },
    "8272": {
      "op": "JUMPI"
    },
    "8273": {
      "op": "DUP2"
    },
    "8274": {
      "op": "DUP2"
    },
    "8275": {
      "op": "ADD"
    },
    "8276": {
      "op": "MLOAD"
    },
    "8277": {
      "op": "DUP4"
    },
    "8278": {
      "op": "DUP3"
    },
    "8279": {
      "op": "ADD"
    },
    "8280": {
      "op": "MSTORE"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8283": {
      "op": "ADD"
    },
    "8284": {
      "op": "PUSH2",
      "value": "0x2048"
    },
    "8287": {
      "op": "JUMP"
    },
    "8288": {
      "op": "JUMPDEST"
    },
    "8289": {
      "op": "POP"
    },
    "8290": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8291": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8292": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8293": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8294": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8295": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8296": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8297": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8298": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8299": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8301": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8302": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8303": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8304": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x208D"
    },
    "8307": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8308": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8309": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8310": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8311": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8312": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8313": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8315": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8316": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8318": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8319": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8322": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "8323": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8324": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "8325": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "8326": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8327": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8328": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8330": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "8331": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8332": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8333": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8334": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8335": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8336": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8337": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8338": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "8339": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8341": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8342": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8343": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8344": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "8345": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8346": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8347": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8348": {
      "op": "POP"
    },
    "8349": {
      "op": "POP"
    },
    "8350": {
      "op": "POP"
    },
    "8351": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8352": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "8353": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8354": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8355": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8356": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8358": {
      "branch": 141,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8359": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B2"
    },
    "8362": {
      "branch": 141,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8363": {
      "op": "POP"
    },
    "8364": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0x0"
    },
    "8366": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F6"
    },
    "8369": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8370": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8371": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8372": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8373": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "8374": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8375": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8376": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8377": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8378": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 92,
      "value": "0x20BF"
    },
    "8381": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8382": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "8383": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8384": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "8385": {
      "branch": 142,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "8386": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FC"
    },
    "8389": {
      "branch": 142,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8390": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8392": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8399": {
      "op": "SHL"
    },
    "8400": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8401": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8402": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8404": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "8405": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8406": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8407": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8409": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "8410": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8411": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8412": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "8413": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8414": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8415": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "8417": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8418": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8419": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8421": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "8422": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8423": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27B4"
    },
    "8426": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "8428": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8429": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "8430": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8432": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "8433": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8434": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "8435": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "8436": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8438": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8439": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8440": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8441": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "8442": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8443": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8444": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8445": {
      "fn": "SafeMath.mul",
      "offset": [
        2610,
        2611
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 93
    },
    "8446": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8447": {
      "op": "POP"
    },
    "8448": {
      "op": "POP"
    },
    "8449": {
      "op": "POP"
    },
    "8450": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8451": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8452": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8454": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 94,
      "value": "0x20FC"
    },
    "8457": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8458": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8459": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8461": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8462": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8463": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8465": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "8466": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8468": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8469": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8470": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "8472": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8473": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8474": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8476": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "8477": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "8510": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8511": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8512": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "8513": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2685"
    },
    "8516": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8517": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8518": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8520": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 95,
      "value": "0x20FC"
    },
    "8523": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8524": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8525": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8527": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8528": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8529": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8531": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "8532": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8534": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8535": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8536": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "8538": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8539": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8540": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8542": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "8543": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8576": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8577": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8578": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "8579": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x200C"
    },
    "8582": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8583": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8590": {
      "op": "SHL"
    },
    "8591": {
      "op": "SUB"
    },
    "8592": {
      "fn": "ERC20._burn",
      "offset": [
        6658,
        6679
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 96
    },
    "8593": {
      "branch": 134,
      "fn": "ERC20._burn",
      "offset": [
        6658,
        6679
      ],
      "op": "AND",
      "path": "3"
    },
    "8594": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "8597": {
      "branch": 134,
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8598": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8600": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8607": {
      "op": "SHL"
    },
    "8608": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8609": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8610": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8612": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "8613": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8614": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8615": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8617": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "8618": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8619": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8620": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SUB",
      "path": "3"
    },
    "8621": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8622": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8623": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "8625": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8626": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8627": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8629": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "8630": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8631": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27FD"
    },
    "8634": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "8636": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8637": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "8638": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8640": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "ADD",
      "path": "3"
    },
    "8641": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8642": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "POP",
      "path": "3"
    },
    "8643": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "POP",
      "path": "3"
    },
    "8644": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8646": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8647": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8648": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8649": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SUB",
      "path": "3"
    },
    "8650": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8651": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8652": {
      "fn": "ERC20._burn",
      "offset": [
        6650,
        6717
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8653": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 97,
      "value": "0x220F"
    },
    "8656": {
      "fn": "ERC20._burn",
      "offset": [
        6772,
        6778
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8657": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8659": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8660": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8661": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8663": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "ADD",
      "path": "3"
    },
    "8664": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8666": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8667": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8668": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "8670": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8671": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8672": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8674": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "ADD",
      "path": "3"
    },
    "8675": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274A"
    },
    "8678": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "8680": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8681": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8688": {
      "op": "SHL"
    },
    "8689": {
      "op": "SUB"
    },
    "8690": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8691": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "AND",
      "path": "3"
    },
    "8692": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8694": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8695": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8696": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8697": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8699": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8700": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8701": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8702": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8704": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8705": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8706": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8707": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6767
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8708": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8709": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8714": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6771
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200C"
    },
    "8717": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "AND",
      "path": "3"
    },
    "8718": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6749,
        6817
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8719": {
      "fn": "ERC20._burn",
      "offset": [
        6749,
        6817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8726": {
      "op": "SHL"
    },
    "8727": {
      "op": "SUB"
    },
    "8728": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8729": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "AND",
      "path": "3"
    },
    "8730": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8732": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8733": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8734": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8735": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8737": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8738": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8739": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8740": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8742": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8743": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6746
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8744": {
      "fn": "ERC20._burn",
      "offset": [
        6728,
        6817
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8745": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6854
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 98,
      "value": "0x2"
    },
    "8747": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8748": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x223B"
    },
    "8751": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8752": {
      "fn": "ERC20._burn",
      "offset": [
        6859,
        6865
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8753": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8758": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6858
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2145"
    },
    "8761": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "AND",
      "path": "3"
    },
    "8762": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6842,
        6866
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8763": {
      "fn": "ERC20._burn",
      "offset": [
        6842,
        6866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8764": {
      "fn": "ERC20._burn",
      "offset": [
        6827,
        6839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8766": {
      "fn": "ERC20._burn",
      "offset": [
        6827,
        6866
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8767": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 99,
      "value": "0x40"
    },
    "8769": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8770": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8771": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8772": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8773": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8774": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8775": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8776": {
      "fn": "ERC20._burn",
      "offset": [
        6907,
        6908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8778": {
      "fn": "ERC20._burn",
      "offset": [
        6907,
        6908
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8785": {
      "op": "SHL"
    },
    "8786": {
      "op": "SUB"
    },
    "8787": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP6",
      "path": "3"
    },
    "8788": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "AND",
      "path": "3"
    },
    "8789": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8790": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8823": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8824": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8825": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8826": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SUB",
      "path": "3"
    },
    "8827": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8829": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "ADD",
      "path": "3"
    },
    "8830": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8831": {
      "fn": "ERC20._burn",
      "offset": [
        6881,
        6918
      ],
      "op": "LOG3",
      "path": "3"
    },
    "8832": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "POP",
      "path": "3"
    },
    "8833": {
      "fn": "ERC20._burn",
      "offset": [
        6583,
        6925
      ],
      "op": "POP",
      "path": "3"
    },
    "8834": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        6583,
        6925
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8835": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5839,
        6193
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "8836": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5895,
        5908
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "8838": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5911,
        5924
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x228E"
    },
    "8841": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5916,
        5923
      ],
      "op": "DUP3",
      "path": "46"
    },
    "8842": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5911,
        5915
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1133"
    },
    "8845": {
      "fn": "yDelegatedVault._rebalance",
      "jump": "i",
      "offset": [
        5911,
        5924
      ],
      "op": "JUMP",
      "path": "46"
    },
    "8846": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5911,
        5924
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "8847": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5895,
        5924
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8848": {
      "op": "POP"
    },
    "8849": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5938,
        5947
      ],
      "op": "DUP1",
      "path": "46"
    },
    "8850": {
      "branch": 127,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5938,
        5947
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8851": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5934,
        6187
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x943"
    },
    "8854": {
      "branch": 127,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5934,
        6187
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "8855": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5975,
        5983
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x229E"
    },
    "8858": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5975,
        5981
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1510"
    },
    "8861": {
      "fn": "yDelegatedVault._rebalance",
      "jump": "i",
      "offset": [
        5975,
        5983
      ],
      "op": "JUMP",
      "path": "46"
    },
    "8862": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5975,
        5983
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "8863": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5967,
        5972
      ],
      "op": "DUP2",
      "path": "46"
    },
    "8864": {
      "branch": 128,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5967,
        5983
      ],
      "op": "GT",
      "path": "46"
    },
    "8865": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5963,
        6034
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8866": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5963,
        6034
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x22B0"
    },
    "8869": {
      "branch": 128,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5963,
        6034
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "8870": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6011,
        6019
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 100,
      "value": "0x22AD"
    },
    "8873": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6011,
        6017
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1510"
    },
    "8876": {
      "fn": "yDelegatedVault._rebalance",
      "jump": "i",
      "offset": [
        6011,
        6019
      ],
      "op": "JUMP",
      "path": "46"
    },
    "8877": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6011,
        6019
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "8878": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6003,
        6019
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8879": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6003,
        6019
      ],
      "op": "POP",
      "path": "46"
    },
    "8880": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        5963,
        6034
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "8881": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6051,
        6060
      ],
      "op": "DUP1",
      "path": "46"
    },
    "8882": {
      "branch": 129,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6051,
        6060
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8883": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6047,
        6177
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x943"
    },
    "8886": {
      "branch": 129,
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6047,
        6177
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "8887": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 101,
      "value": "0x7"
    },
    "8889": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "SLOAD",
      "path": "46"
    },
    "8890": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "8892": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP1",
      "path": "46"
    },
    "8893": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "8894": {
      "op": "PUSH4",
      "value": "0xF3FEF3A3"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8901": {
      "op": "SHL"
    },
    "8902": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP2",
      "path": "46"
    },
    "8903": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "8904": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6121,
        6125
      ],
      "op": "ADDRESS",
      "path": "46"
    },
    "8905": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "8907": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP3",
      "path": "46"
    },
    "8908": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ADD",
      "path": "46"
    },
    "8909": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "8910": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "8912": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP2",
      "path": "46"
    },
    "8913": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ADD",
      "path": "46"
    },
    "8914": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP5",
      "path": "46"
    },
    "8915": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8916": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "8917": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8918": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8925": {
      "op": "SHL"
    },
    "8926": {
      "op": "SUB"
    },
    "8927": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8928": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "8929": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "AND",
      "path": "46"
    },
    "8930": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "8931": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6112
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF3FEF3A3"
    },
    "8936": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6112
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "8937": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "8939": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP1",
      "path": "46"
    },
    "8940": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP3",
      "path": "46"
    },
    "8941": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ADD",
      "path": "46"
    },
    "8942": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "8943": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "8945": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "8946": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8947": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "8948": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8949": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP3",
      "path": "46"
    },
    "8950": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "8951": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "SUB",
      "path": "46"
    },
    "8952": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ADD",
      "path": "46"
    },
    "8953": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP2",
      "path": "46"
    },
    "8954": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "DUP4",
      "path": "46"
    },
    "8955": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6092,
        6102
      ],
      "op": "DUP8",
      "path": "46"
    },
    "8956": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "DUP1",
      "path": "46"
    },
    "8957": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "8958": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8959": {
      "op": "DUP1"
    },
    "8960": {
      "op": "ISZERO"
    },
    "8961": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "8964": {
      "op": "JUMPI"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8967": {
      "op": "DUP1"
    },
    "8968": {
      "op": "REVERT"
    },
    "8969": {
      "op": "JUMPDEST"
    },
    "8970": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "POP",
      "path": "46"
    },
    "8971": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "GAS",
      "path": "46"
    },
    "8972": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "CALL",
      "path": "46"
    },
    "8973": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8974": {
      "op": "DUP1"
    },
    "8975": {
      "op": "ISZERO"
    },
    "8976": {
      "op": "PUSH2",
      "value": "0x231D"
    },
    "8979": {
      "op": "JUMPI"
    },
    "8980": {
      "op": "RETURNDATASIZE"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8983": {
      "op": "DUP1"
    },
    "8984": {
      "op": "RETURNDATACOPY"
    },
    "8985": {
      "op": "RETURNDATASIZE"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8988": {
      "op": "REVERT"
    },
    "8989": {
      "op": "JUMPDEST"
    },
    "8990": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "POP",
      "path": "46"
    },
    "8991": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "POP",
      "path": "46"
    },
    "8992": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "POP",
      "path": "46"
    },
    "8993": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6080,
        6134
      ],
      "op": "POP",
      "path": "46"
    },
    "8994": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6152,
        6162
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 102,
      "value": "0x943"
    },
    "8997": {
      "fn": "yDelegatedVault._rebalance",
      "offset": [
        6152,
        6160
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CCC"
    },
    "9000": {
      "fn": "yDelegatedVault._rebalance",
      "jump": "i",
      "offset": [
        6152,
        6162
      ],
      "op": "JUMP",
      "path": "46"
    },
    "9001": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9002": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9004": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9005": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9006": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "9007": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 103
    },
    "9008": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9009": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "9010": {
      "branch": 143,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9011": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FC"
    },
    "9014": {
      "branch": 143,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9015": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9017": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9018": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9025": {
      "op": "SHL"
    },
    "9026": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9027": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9028": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9030": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9032": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9033": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9034": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9035": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "9037": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "9039": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9040": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9041": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9042": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "9075": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "9077": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9078": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9079": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9080": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9081": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9082": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9083": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9084": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9085": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "9086": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "9088": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "9089": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9090": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9091": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        842,
        1044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9092": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 104,
      "value": "0x40"
    },
    "9094": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9095": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9102": {
      "op": "SHL"
    },
    "9103": {
      "op": "SUB"
    },
    "9104": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9105": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9106": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "AND",
      "path": "6"
    },
    "9107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "9111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "AND",
      "path": "6"
    },
    "9114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9116": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9117": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "9118": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9119": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "9121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9122": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9123": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "9124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9125": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9126": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9127": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9128": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9129": {
      "op": "DUP1"
    },
    "9130": {
      "op": "DUP4"
    },
    "9131": {
      "op": "SUB"
    },
    "9132": {
      "op": "SWAP1"
    },
    "9133": {
      "op": "SWAP2"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "op": "DUP2"
    },
    "9136": {
      "op": "MSTORE"
    },
    "9137": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x84"
    },
    "9139": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9140": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "ADD",
      "path": "6"
    },
    "9142": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9144": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9145": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        968,
        1036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9147": {
      "op": "DUP2"
    },
    "9148": {
      "op": "ADD"
    },
    "9149": {
      "op": "DUP1"
    },
    "9150": {
      "op": "MLOAD"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9157": {
      "op": "SHL"
    },
    "9158": {
      "op": "SUB"
    },
    "9159": {
      "op": "AND"
    },
    "9160": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9167": {
      "op": "SHL"
    },
    "9168": {
      "op": "OR"
    },
    "9169": {
      "op": "SWAP1"
    },
    "9170": {
      "op": "MSTORE"
    },
    "9171": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8C"
    },
    "9174": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        1037
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9175": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        961,
        966
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9176": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        961,
        966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9177": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        942,
        960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24CD"
    },
    "9180": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        942,
        1037
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9181": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9188": {
      "op": "SHL"
    },
    "9189": {
      "op": "SUB"
    },
    "9190": {
      "fn": "ERC20._mint",
      "offset": [
        6037,
        6058
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 105
    },
    "9191": {
      "branch": 135,
      "fn": "ERC20._mint",
      "offset": [
        6037,
        6058
      ],
      "op": "AND",
      "path": "3"
    },
    "9192": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2438"
    },
    "9195": {
      "branch": 135,
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9196": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9198": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9199": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9206": {
      "op": "SHL"
    },
    "9207": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9208": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9209": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9211": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9213": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9214": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "9215": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9216": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "9218": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "9220": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9221": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "9222": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9223": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9256": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "9258": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9259": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "9260": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9261": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9262": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9263": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9264": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9265": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9266": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SUB",
      "path": "3"
    },
    "9267": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "9269": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "ADD",
      "path": "3"
    },
    "9270": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9271": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "REVERT",
      "path": "3"
    },
    "9272": {
      "fn": "ERC20._mint",
      "offset": [
        6029,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9273": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6132
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 106,
      "value": "0x2"
    },
    "9275": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6132
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9276": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244B"
    },
    "9279": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9280": {
      "fn": "ERC20._mint",
      "offset": [
        6137,
        6143
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9281": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "9286": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2329"
    },
    "9289": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "AND",
      "path": "3"
    },
    "9290": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6120,
        6144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9291": {
      "fn": "ERC20._mint",
      "offset": [
        6120,
        6144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9292": {
      "fn": "ERC20._mint",
      "offset": [
        6105,
        6117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9294": {
      "fn": "ERC20._mint",
      "offset": [
        6105,
        6144
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9301": {
      "op": "SHL"
    },
    "9302": {
      "op": "SUB"
    },
    "9303": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 107
    },
    "9304": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "AND",
      "path": "3"
    },
    "9305": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9307": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9308": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9309": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9310": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9312": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9313": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9314": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9315": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9317": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9318": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9319": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6193
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9320": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2477"
    },
    "9323": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9324": {
      "fn": "ERC20._mint",
      "offset": [
        6198,
        6204
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9325": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "9330": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2329"
    },
    "9333": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "AND",
      "path": "3"
    },
    "9334": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6175,
        6205
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9335": {
      "fn": "ERC20._mint",
      "offset": [
        6175,
        6205
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9342": {
      "op": "SHL"
    },
    "9343": {
      "op": "SUB"
    },
    "9344": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9345": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "AND",
      "path": "3"
    },
    "9346": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9348": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9349": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9350": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9351": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9353": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9354": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9355": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9356": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9358": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9359": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9360": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9361": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9362": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9363": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9364": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6205
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9365": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 108
    },
    "9366": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9367": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP6",
      "path": "3"
    },
    "9368": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9369": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9370": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9371": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9372": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9373": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6172
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9374": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9375": {
      "fn": "ERC20._mint",
      "offset": [
        6154,
        6163
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9376": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9409": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9410": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9411": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9412": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SUB",
      "path": "3"
    },
    "9413": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9414": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9415": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "ADD",
      "path": "3"
    },
    "9416": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9417": {
      "fn": "ERC20._mint",
      "offset": [
        6220,
        6257
      ],
      "op": "LOG3",
      "path": "3"
    },
    "9418": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "POP",
      "path": "3"
    },
    "9419": {
      "fn": "ERC20._mint",
      "offset": [
        5962,
        6264
      ],
      "op": "POP",
      "path": "3"
    },
    "9420": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        5962,
        6264
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9421": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9422": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 109,
      "value": "0x24DF"
    },
    "9425": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9432": {
      "op": "SHL"
    },
    "9433": {
      "op": "SUB"
    },
    "9434": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "9435": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26EA"
    },
    "9438": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9439": {
      "branch": 136,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9440": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2530"
    },
    "9443": {
      "branch": 136,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9444": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9446": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9447": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9454": {
      "op": "SHL"
    },
    "9455": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9456": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9457": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9459": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9461": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9462": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "9463": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9464": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "9466": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9468": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9469": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "9470": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9471": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "9504": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9506": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9507": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "9508": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9509": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9510": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9511": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9512": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9513": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9514": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "9515": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "9517": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "9518": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9519": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9520": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9521": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9523": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "9525": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9532": {
      "op": "SHL"
    },
    "9533": {
      "op": "SUB"
    },
    "9534": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "9535": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9536": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9538": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9539": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9540": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9541": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9542": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9543": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9544": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9546": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "9547": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9548": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9549": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9550": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9551": {
      "op": "JUMPDEST"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9554": {
      "op": "DUP4"
    },
    "9555": {
      "op": "LT"
    },
    "9556": {
      "op": "PUSH2",
      "value": "0x256E"
    },
    "9559": {
      "op": "JUMPI"
    },
    "9560": {
      "op": "DUP1"
    },
    "9561": {
      "op": "MLOAD"
    },
    "9562": {
      "op": "DUP3"
    },
    "9563": {
      "op": "MSTORE"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9566": {
      "op": "NOT"
    },
    "9567": {
      "op": "SWAP1"
    },
    "9568": {
      "op": "SWAP3"
    },
    "9569": {
      "op": "ADD"
    },
    "9570": {
      "op": "SWAP2"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9573": {
      "op": "SWAP2"
    },
    "9574": {
      "op": "DUP3"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "op": "SWAP2"
    },
    "9577": {
      "op": "ADD"
    },
    "9578": {
      "op": "PUSH2",
      "value": "0x254F"
    },
    "9581": {
      "op": "JUMP"
    },
    "9582": {
      "op": "JUMPDEST"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9585": {
      "op": "DUP4"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9588": {
      "op": "SUB"
    },
    "9589": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9592": {
      "op": "EXP"
    },
    "9593": {
      "op": "SUB"
    },
    "9594": {
      "op": "DUP1"
    },
    "9595": {
      "op": "NOT"
    },
    "9596": {
      "op": "DUP3"
    },
    "9597": {
      "op": "MLOAD"
    },
    "9598": {
      "op": "AND"
    },
    "9599": {
      "op": "DUP2"
    },
    "9600": {
      "op": "DUP5"
    },
    "9601": {
      "op": "MLOAD"
    },
    "9602": {
      "op": "AND"
    },
    "9603": {
      "op": "DUP1"
    },
    "9604": {
      "op": "DUP3"
    },
    "9605": {
      "op": "OR"
    },
    "9606": {
      "op": "DUP6"
    },
    "9607": {
      "op": "MSTORE"
    },
    "9608": {
      "op": "POP"
    },
    "9609": {
      "op": "POP"
    },
    "9610": {
      "op": "POP"
    },
    "9611": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9612": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9613": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9614": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9615": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9616": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "9617": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9618": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9619": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9620": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9622": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9624": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9625": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9626": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9627": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "9628": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9629": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9631": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "9632": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "9633": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "9634": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9635": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9636": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9637": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9638": {
      "op": "DUP1"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9641": {
      "op": "DUP2"
    },
    "9642": {
      "op": "EQ"
    },
    "9643": {
      "op": "PUSH2",
      "value": "0x25D0"
    },
    "9646": {
      "op": "JUMPI"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9649": {
      "op": "MLOAD"
    },
    "9650": {
      "op": "SWAP2"
    },
    "9651": {
      "op": "POP"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9654": {
      "op": "NOT"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9657": {
      "op": "RETURNDATASIZE"
    },
    "9658": {
      "op": "ADD"
    },
    "9659": {
      "op": "AND"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9664": {
      "op": "MSTORE"
    },
    "9665": {
      "op": "RETURNDATASIZE"
    },
    "9666": {
      "op": "DUP3"
    },
    "9667": {
      "op": "MSTORE"
    },
    "9668": {
      "op": "RETURNDATASIZE"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9673": {
      "op": "DUP5"
    },
    "9674": {
      "op": "ADD"
    },
    "9675": {
      "op": "RETURNDATACOPY"
    },
    "9676": {
      "op": "PUSH2",
      "value": "0x25D5"
    },
    "9679": {
      "op": "JUMP"
    },
    "9680": {
      "op": "JUMPDEST"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9683": {
      "op": "SWAP2"
    },
    "9684": {
      "op": "POP"
    },
    "9685": {
      "op": "JUMPDEST"
    },
    "9686": {
      "op": "POP"
    },
    "9687": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9688": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9689": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9690": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "9691": {
      "branch": 137,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 110
    },
    "9692": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x262C"
    },
    "9695": {
      "branch": 137,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9696": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9698": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9699": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9706": {
      "op": "SHL"
    },
    "9707": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9708": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9709": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9711": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9713": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9714": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "9715": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9716": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9717": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9718": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "9720": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9721": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "9722": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9723": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "9756": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "9758": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9759": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "9760": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9761": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9762": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9763": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9764": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9765": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9766": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "9767": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "9769": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "9770": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9771": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9772": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9773": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9774": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9775": {
      "branch": 138,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9776": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8C"
    },
    "9779": {
      "branch": 138,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9780": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 111
    },
    "9781": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9782": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9784": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "9785": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9786": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9789": {
      "op": "DUP2"
    },
    "9790": {
      "op": "LT"
    },
    "9791": {
      "op": "ISZERO"
    },
    "9792": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "9795": {
      "op": "JUMPI"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9798": {
      "op": "DUP1"
    },
    "9799": {
      "op": "REVERT"
    },
    "9800": {
      "op": "JUMPDEST"
    },
    "9801": {
      "op": "POP"
    },
    "9802": {
      "branch": 139,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9803": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8C"
    },
    "9806": {
      "branch": 139,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9807": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9809": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9816": {
      "op": "SHL"
    },
    "9817": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9818": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9819": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9821": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "9822": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9823": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9824": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9826": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "9827": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9828": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9829": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "9830": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9831": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9832": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "9834": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9835": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9836": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9838": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "9839": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9840": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2867"
    },
    "9843": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "9845": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9846": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "9847": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9849": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "9850": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9851": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "9852": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "9853": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9855": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9856": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9857": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9858": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "9859": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9860": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9861": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9862": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9864": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 112
    },
    "9865": {
      "branch": 144,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9866": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D4"
    },
    "9869": {
      "branch": 144,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9870": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9872": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9879": {
      "op": "SHL"
    },
    "9880": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9881": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9882": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9884": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9886": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9887": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9888": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9889": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9890": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9891": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9892": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9893": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "9895": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9896": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9897": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9898": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9899": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9900": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9901": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9902": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9903": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9904": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "9906": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9907": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9908": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9909": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9910": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9911": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9912": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "9913": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9914": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9915": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9916": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9917": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9919": {
      "op": "DUP4"
    },
    "9920": {
      "op": "ISZERO"
    },
    "9921": {
      "op": "PUSH2",
      "value": "0x2060"
    },
    "9924": {
      "op": "JUMPI"
    },
    "9925": {
      "op": "DUP2"
    },
    "9926": {
      "op": "DUP2"
    },
    "9927": {
      "op": "ADD"
    },
    "9928": {
      "op": "MLOAD"
    },
    "9929": {
      "op": "DUP4"
    },
    "9930": {
      "op": "DUP3"
    },
    "9931": {
      "op": "ADD"
    },
    "9932": {
      "op": "MSTORE"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9935": {
      "op": "ADD"
    },
    "9936": {
      "op": "PUSH2",
      "value": "0x2048"
    },
    "9939": {
      "op": "JUMP"
    },
    "9940": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9941": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "9942": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9944": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9945": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9946": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9947": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26E0"
    },
    "9950": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9951": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "9952": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9953": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "9954": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "9955": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "9956": {
      "op": "POP"
    },
    "9957": {
      "op": "POP"
    },
    "9958": {
      "op": "POP"
    },
    "9959": {
      "op": "POP"
    },
    "9960": {
      "op": "POP"
    },
    "9961": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9962": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9963": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9965": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9966": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "9967": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "10000": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 113
    },
    "10001": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10002": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "10003": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10004": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10005": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10006": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x271E"
    },
    "10009": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10010": {
      "op": "POP"
    },
    "10011": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10012": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10013": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10014": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10015": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10016": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10017": {
      "op": "POP"
    },
    "10018": {
      "op": "POP"
    },
    "10019": {
      "op": "POP"
    },
    "10020": {
      "op": "POP"
    },
    "10021": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "5cda541067d72b177c3c554ba975488131de65f3",
  "source": "pragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelinV2/contracts/ownership/Ownable.sol\";\n\nimport \"../../interfaces/aave/Aave.sol\";\nimport \"../../interfaces/aave/AaveToken.sol\";\nimport \"../../interfaces/aave/Oracle.sol\";\nimport \"../../interfaces/aave/LendingPoolAddressesProvider.sol\";\nimport \"../../interfaces/yearn/IController.sol\";\n\ncontract yDelegatedVault is ERC20, ERC20Detailed {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    IERC20 public token;\n\n    address public governance;\n    address public controller;\n    uint256 public insurance;\n    uint256 public healthFactor = 4;\n\n    uint256 public ltv = 65;\n    uint256 public max = 100;\n\n    address public constant aave = address(0x24a42fD28C976A61Df5D00D0599C34c4f90748c8);\n\n    constructor(address _token, address _controller)\n        public\n        ERC20Detailed(\n            string(abi.encodePacked(\"yearn \", ERC20Detailed(_token).name())),\n            string(abi.encodePacked(\"y\", ERC20Detailed(_token).symbol())),\n            ERC20Detailed(_token).decimals()\n        )\n    {\n        token = IERC20(_token);\n        governance = msg.sender;\n        controller = _controller;\n    }\n\n    function debt() public view returns (uint256) {\n        address _reserve = IController(controller).want(address(this));\n        (, uint256 currentBorrowBalance, , , , , , , , ) = Aave(getAave()).getUserReserveData(_reserve, address(this));\n        return currentBorrowBalance;\n    }\n\n    function credit() public view returns (uint256) {\n        return IController(controller).balanceOf(address(this));\n    }\n\n    // % of tokens locked and cannot be withdrawn per user\n    // this is impermanent locked, unless the debt out accrues the strategy\n    function locked() public view returns (uint256) {\n        return credit().mul(1e18).div(debt());\n    }\n\n    function debtShare(address _lp) public view returns (uint256) {\n        return debt().mul(balanceOf(_lp)).mul(totalSupply());\n    }\n\n    function getAave() public view returns (address) {\n        return LendingPoolAddressesProvider(aave).getLendingPool();\n    }\n\n    function getAaveCore() public view returns (address) {\n        return LendingPoolAddressesProvider(aave).getLendingPoolCore();\n    }\n\n    function setHealthFactor(uint256 _hf) external {\n        require(msg.sender == governance, \"!governance\");\n        healthFactor = _hf;\n    }\n\n    function activate() public {\n        Aave(getAave()).setUserUseReserveAsCollateral(underlying(), true);\n    }\n\n    function repay(address reserve, uint256 amount) public {\n        // Required for certain stable coins (USDT for example)\n        IERC20(reserve).approve(address(getAaveCore()), 0);\n        IERC20(reserve).approve(address(getAaveCore()), amount);\n        Aave(getAave()).repay(reserve, amount, address(uint160(address(this))));\n    }\n\n    function repayAll() public {\n        address _reserve = reserve();\n        uint256 _amount = IERC20(_reserve).balanceOf(address(this));\n        repay(_reserve, _amount);\n    }\n\n    // Used to swap any borrowed reserve over the debt limit to liquidate to 'token'\n    function harvest(address reserve, uint256 amount) external {\n        require(msg.sender == controller, \"!controller\");\n        require(reserve != address(token), \"token\");\n        IERC20(reserve).safeTransfer(controller, amount);\n    }\n\n    // Ignore insurance fund for balance calculations\n    function balance() public view returns (uint256) {\n        return token.balanceOf(address(this)).sub(insurance);\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n\n    function getAaveOracle() public view returns (address) {\n        return LendingPoolAddressesProvider(aave).getPriceOracle();\n    }\n\n    function getReservePriceETH(address reserve) public view returns (uint256) {\n        return Oracle(getAaveOracle()).getAssetPrice(reserve);\n    }\n\n    function shouldRebalance() external view returns (bool) {\n        return (over() > 0);\n    }\n\n    function over() public view returns (uint256) {\n        over(0);\n    }\n\n    function getUnderlyingPriceETH(uint256 _amount) public view returns (uint256) {\n        _amount = _amount.mul(getUnderlyingPrice()).div(uint256(10)**ERC20Detailed(address(token)).decimals()); // Calculate the amount we are withdrawing in ETH\n        return _amount.mul(ltv).div(max).div(healthFactor);\n    }\n\n    function over(uint256 _amount) public view returns (uint256) {\n        address _reserve = reserve();\n        uint256 _eth = getUnderlyingPriceETH(_amount);\n        (uint256 _maxSafeETH, uint256 _totalBorrowsETH, ) = maxSafeETH();\n        _maxSafeETH = _maxSafeETH.mul(105).div(100); // 5% buffer so we don't go into a earn/rebalance loop\n        if (_eth > _maxSafeETH) {\n            _maxSafeETH = 0;\n        } else {\n            _maxSafeETH = _maxSafeETH.sub(_eth); // Add the ETH we are withdrawing\n        }\n        if (_maxSafeETH < _totalBorrowsETH) {\n            uint256 _over = _totalBorrowsETH.mul(_totalBorrowsETH.sub(_maxSafeETH)).div(_totalBorrowsETH);\n            _over = _over.mul(uint256(10)**ERC20Detailed(_reserve).decimals()).div(getReservePrice());\n            return _over;\n        } else {\n            return 0;\n        }\n    }\n\n    function _rebalance(uint256 _amount) internal {\n        uint256 _over = over(_amount);\n        if (_over > 0) {\n            if (_over > credit()) {\n                _over = credit();\n            }\n            if (_over > 0) {\n                IController(controller).withdraw(address(this), _over);\n                repayAll();\n            }\n        }\n    }\n\n    function rebalance() external {\n        _rebalance(0);\n    }\n\n    function claimInsurance() external {\n        require(msg.sender == controller, \"!controller\");\n        token.safeTransfer(controller, insurance);\n        insurance = 0;\n    }\n\n    function maxSafeETH()\n        public\n        view\n        returns (\n            uint256 maxBorrowsETH,\n            uint256 totalBorrowsETH,\n            uint256 availableBorrowsETH\n        )\n    {\n        (, , uint256 _totalBorrowsETH, , uint256 _availableBorrowsETH, , , ) = Aave(getAave()).getUserAccountData(address(this));\n        uint256 _maxBorrowETH = (_totalBorrowsETH.add(_availableBorrowsETH));\n        return (_maxBorrowETH.div(healthFactor), _totalBorrowsETH, _availableBorrowsETH);\n    }\n\n    function shouldBorrow() external view returns (bool) {\n        return (availableToBorrowReserve() > 0);\n    }\n\n    function availableToBorrowETH() public view returns (uint256) {\n        (uint256 _maxSafeETH, uint256 _totalBorrowsETH, uint256 _availableBorrowsETH) = maxSafeETH();\n        _maxSafeETH = _maxSafeETH.mul(95).div(100); // 5% buffer so we don't go into a earn/rebalance loop\n        if (_maxSafeETH > _totalBorrowsETH) {\n            return _availableBorrowsETH.mul(_maxSafeETH.sub(_totalBorrowsETH)).div(_availableBorrowsETH);\n        } else {\n            return 0;\n        }\n    }\n\n    function availableToBorrowReserve() public view returns (uint256) {\n        address _reserve = reserve();\n        uint256 _available = availableToBorrowETH();\n        if (_available > 0) {\n            return _available.mul(uint256(10)**ERC20Detailed(_reserve).decimals()).div(getReservePrice());\n        } else {\n            return 0;\n        }\n    }\n\n    function getReservePrice() public view returns (uint256) {\n        return getReservePriceETH(reserve());\n    }\n\n    function getUnderlyingPrice() public view returns (uint256) {\n        return getReservePriceETH(underlying());\n    }\n\n    function earn() external {\n        address _reserve = reserve();\n        uint256 _borrow = availableToBorrowReserve();\n        if (_borrow > 0) {\n            Aave(getAave()).borrow(_reserve, _borrow, 2, 7);\n        }\n        //rebalance here\n        uint256 _balance = IERC20(_reserve).balanceOf(address(this));\n        if (_balance > 0) {\n            IERC20(_reserve).safeTransfer(controller, _balance);\n            IController(controller).earn(address(this), _balance);\n        }\n    }\n\n    function depositAll() external {\n        deposit(token.balanceOf(msg.sender));\n    }\n\n    function deposit(uint256 _amount) public {\n        uint256 _pool = balance();\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n\n        // 0.5% of deposits go into an insurance fund incase of negative profits to protect withdrawals\n        // At a 4 health factor, this is a -2% position\n        uint256 _insurance = _amount.mul(50).div(10000);\n        _amount = _amount.sub(_insurance);\n        insurance = insurance.add(_insurance);\n\n        //Controller can claim insurance to liquidate to cover interest\n\n        uint256 shares = 0;\n        if (totalSupply() == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount.mul(totalSupply())).div(_pool);\n        }\n        _mint(msg.sender, shares);\n    }\n\n    function reserve() public view returns (address) {\n        return IController(controller).want(address(this));\n    }\n\n    function underlying() public view returns (address) {\n        return AaveToken(address(token)).underlyingAssetAddress();\n    }\n\n    function withdrawAll() public {\n        withdraw(balanceOf(msg.sender));\n    }\n\n    // Calculates in impermanent lock due to debt\n    function maxWithdrawal(address account) public view returns (uint256) {\n        uint256 _balance = balanceOf(account);\n        uint256 _safeWithdraw = _balance.mul(locked()).div(1e18);\n        if (_safeWithdraw > _balance) {\n            return _balance;\n        } else {\n            uint256 _diff = _balance.sub(_safeWithdraw);\n            return _balance.sub(_diff.mul(healthFactor)); // technically 150%, not 200%, but adding buffer\n        }\n    }\n\n    function safeWithdraw() external {\n        withdraw(maxWithdrawal(msg.sender));\n    }\n\n    // No rebalance implementation for lower fees and faster swaps\n    function withdraw(uint256 _shares) public {\n        uint256 r = (balance().mul(_shares)).div(totalSupply());\n        _burn(msg.sender, _shares);\n        _rebalance(r);\n        token.safeTransfer(msg.sender, r);\n    }\n\n    function getPricePerFullShare() external view returns (uint256) {\n        return balance().mul(1e18).div(totalSupply());\n    }\n}\n",
  "sourceMap": "683:10151:46:-;;;982:1;952:31;;1011:2;990:23;;1040:3;1019:24;;1139:405;8:9:-1;5:2;;;30:1;27;20:12;5:2;1139:405:46;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1139:405:46;;;;;;;;1272:28;;-1:-1:-1;;;1272:28:46;;;;-1:-1:-1;;;;;1272:26:46;;;;;:28;;;;;;;;;;;;;;:26;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1272:28:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1272:28:46;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1272:28:46;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1272:28:46;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1272:28:46;;420:4:-1;411:14;;;;1272:28:46;;;;;411:14:-1;1272:28:46;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1272:28:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:56;;;;;;-1:-1:-1;;;1245:56:46;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1245:56:46;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1245:56:46;;;1359:6;-1:-1:-1;;;;;1345:28:46;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:30:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1345:30:46;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1345:30:46;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1345:30:46;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1345:30:46;;420:4:-1;411:14;;;;1345:30:46;;;;;411:14:-1;1345:30:46;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1345:30:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:53;;;;;;-1:-1:-1;;;1323:53:46;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1323:53:46;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1323:53:46;;;1405:6;-1:-1:-1;;;;;1391:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1391:32:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1391:32:46;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1391:32:46;504:12:4;;;;:5;;1391:32:46;504:12:4;;;;:::i;:::-;-1:-1:-1;526:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:4;:20;;-1:-1:-1;;552:20:4;;;;;;;;;;-1:-1:-1;;;;;;1448:22:46;552:20:4;-1:-1:-1;;;;;1448:22:46;;;;;;;-1:-1:-1;;1480:10:46;:23;;1493:10;-1:-1:-1;;;;;;1480:23:46;;;;;;;1513:10;:24;;;;;;;;;;;;683:10151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;683:10151:46;;;-1:-1:-1;683:10151:46;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/vaults/yDelegatedVault.sol",
  "type": "contract"
}