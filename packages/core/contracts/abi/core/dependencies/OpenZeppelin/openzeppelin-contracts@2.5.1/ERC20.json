{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/GSN/Context.sol",
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "3": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        37644
      ]
    },
    "id": 37645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37241,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 37242,
        "nodeType": "ImportDirective",
        "scope": 37645,
        "sourceUnit": 37918,
        "src": "25:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 37243,
        "nodeType": "ImportDirective",
        "scope": 37645,
        "sourceUnit": 35493,
        "src": "57:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 37244,
        "nodeType": "ImportDirective",
        "scope": 37645,
        "sourceUnit": 35424,
        "src": "80:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37245,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37917,
              "src": "1286:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$37917",
                "typeString": "contract Context"
              }
            },
            "id": 37246,
            "nodeType": "InheritanceSpecifier",
            "src": "1286:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37247,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "1295:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            },
            "id": 37248,
            "nodeType": "InheritanceSpecifier",
            "src": "1295:6:3"
          }
        ],
        "contractDependencies": [
          35492,
          37917
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20Mintable}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
        "fullyImplemented": true,
        "id": 37644,
        "linearizedBaseContracts": [
          37644,
          35492,
          37917
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 37251,
            "libraryName": {
              "contractScope": null,
              "id": 37249,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "1314:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1308:27:3",
            "typeName": {
              "id": 37250,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1327:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 37255,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 37644,
            "src": "1341:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 37254,
              "keyType": {
                "id": 37252,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1350:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1341:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 37253,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1361:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 37261,
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 37644,
            "src": "1394:69:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 37260,
              "keyType": {
                "id": 37256,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1403:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1394:49:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 37259,
                "keyType": {
                  "id": 37257,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1414:28:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 37258,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1434:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 37263,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 37644,
            "src": "1470:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37262,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1470:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 37270,
              "nodeType": "Block",
              "src": "1612:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37268,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37263,
                    "src": "1629:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37267,
                  "id": 37269,
                  "nodeType": "Return",
                  "src": "1622:19:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-totalSupply}.",
            "id": 37271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:2:3"
            },
            "returnParameters": {
              "id": 37267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37266,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37271,
                  "src": "1603:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1602:9:3"
            },
            "scope": 37644,
            "src": "1559:89:3",
            "stateMutability": "view",
            "superFunction": 35430,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37282,
              "nodeType": "Block",
              "src": "1772:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37278,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37255,
                      "src": "1789:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 37280,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37279,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37273,
                      "src": "1799:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1789:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37277,
                  "id": 37281,
                  "nodeType": "Return",
                  "src": "1782:25:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-balanceOf}.",
            "id": 37283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37273,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37283,
                  "src": "1725:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1724:17:3"
            },
            "returnParameters": {
              "id": 37277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37276,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37283,
                  "src": "1763:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1762:9:3"
            },
            "scope": 37644,
            "src": "1706:108:3",
            "stateMutability": "view",
            "superFunction": 35437,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37301,
              "nodeType": "Block",
              "src": "2092:80:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37293,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "2112:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2112:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37295,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37285,
                        "src": "2126:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37296,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37287,
                        "src": "2137:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37292,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37485,
                      "src": "2102:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37298,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2161:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37291,
                  "id": 37300,
                  "nodeType": "Return",
                  "src": "2154:11:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 37302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37285,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 37302,
                  "src": "2035:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37287,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37302,
                  "src": "2054:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2034:35:3"
            },
            "returnParameters": {
              "id": 37291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37302,
                  "src": "2086:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37289,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2085:6:3"
            },
            "scope": 37644,
            "src": "2017:155:3",
            "stateMutability": "nonpayable",
            "superFunction": 35446,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37317,
              "nodeType": "Block",
              "src": "2311:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37311,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37261,
                        "src": "2328:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 37313,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37312,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37304,
                        "src": "2340:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2328:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 37315,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37314,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37306,
                      "src": "2347:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2328:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37310,
                  "id": 37316,
                  "nodeType": "Return",
                  "src": "2321:34:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-allowance}.",
            "id": 37318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37304,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 37318,
                  "src": "2249:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37306,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37318,
                  "src": "2264:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2248:32:3"
            },
            "returnParameters": {
              "id": 37310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37309,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37318,
                  "src": "2302:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2301:9:3"
            },
            "scope": 37644,
            "src": "2230:132:3",
            "stateMutability": "view",
            "superFunction": 35455,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37336,
              "nodeType": "Block",
              "src": "2572:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37328,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "2591:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2591:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37330,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37320,
                        "src": "2605:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37331,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37322,
                        "src": "2614:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37327,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37614,
                      "src": "2582:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37333,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2638:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37326,
                  "id": 37335,
                  "nodeType": "Return",
                  "src": "2631:11:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
            "id": 37337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37320,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37337,
                  "src": "2517:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37322,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37337,
                  "src": "2534:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2534:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2516:33:3"
            },
            "returnParameters": {
              "id": 37326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37325,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37337,
                  "src": "2566:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2565:6:3"
            },
            "scope": 37644,
            "src": "2500:149:3",
            "stateMutability": "nonpayable",
            "superFunction": 35464,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37372,
              "nodeType": "Block",
              "src": "3202:205:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37349,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37339,
                        "src": "3222:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37350,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37341,
                        "src": "3230:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37343,
                        "src": "3241:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37348,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37485,
                      "src": "3212:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3212:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37353,
                  "nodeType": "ExpressionStatement",
                  "src": "3212:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37355,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37339,
                        "src": "3267:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37356,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "3275:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3275:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37365,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37343,
                            "src": "3327:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 37366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3335:42:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 37358,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37261,
                                "src": "3289:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 37360,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 37359,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37339,
                                "src": "3301:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3289:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37363,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 37361,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37905,
                                "src": "3309:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 37362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3309:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3289:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 37364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35306,
                          "src": "3289:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 37367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3289:89:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37354,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37614,
                      "src": "3258:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:121:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37369,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:121:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3396:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37347,
                  "id": 37371,
                  "nodeType": "Return",
                  "src": "3389:11:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
            "id": 37373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37339,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37373,
                  "src": "3129:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37341,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 37373,
                  "src": "3145:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37343,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37373,
                  "src": "3164:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3128:51:3"
            },
            "returnParameters": {
              "id": 37347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37346,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37373,
                  "src": "3196:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3195:6:3"
            },
            "scope": 37644,
            "src": "3107:300:3",
            "stateMutability": "nonpayable",
            "superFunction": 35475,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37399,
              "nodeType": "Block",
              "src": "3888:121:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37383,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "3907:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3907:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37385,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37375,
                        "src": "3921:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37393,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37377,
                            "src": "3969:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 37386,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37261,
                                "src": "3930:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 37389,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 37387,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37905,
                                  "src": "3942:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 37388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3942:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3930:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37391,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 37390,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37375,
                              "src": "3956:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3930:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 37392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35263,
                          "src": "3930:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 37394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3930:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37382,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37614,
                      "src": "3898:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37396,
                  "nodeType": "ExpressionStatement",
                  "src": "3898:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3998:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37381,
                  "id": 37398,
                  "nodeType": "Return",
                  "src": "3991:11:3"
                }
              ]
            },
            "documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
            "id": 37400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37375,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37400,
                  "src": "3829:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37377,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 37400,
                  "src": "3846:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3828:37:3"
            },
            "returnParameters": {
              "id": 37381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37380,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37400,
                  "src": "3882:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37379,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3882:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3881:6:3"
            },
            "scope": 37644,
            "src": "3802:207:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37427,
              "nodeType": "Block",
              "src": "4587:167:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37410,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "4606:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4606:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37412,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37402,
                        "src": "4620:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37420,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37404,
                            "src": "4668:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 37421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4685:39:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 37413,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37261,
                                "src": "4629:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 37416,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 37414,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37905,
                                  "src": "4641:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 37415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4641:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4629:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37418,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 37417,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37402,
                              "src": "4655:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4629:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 37419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35306,
                          "src": "4629:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 37422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:96:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37409,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37614,
                      "src": "4597:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:129:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37424,
                  "nodeType": "ExpressionStatement",
                  "src": "4597:129:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 37425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4743:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37408,
                  "id": 37426,
                  "nodeType": "Return",
                  "src": "4736:11:3"
                }
              ]
            },
            "documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
            "id": 37428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37402,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37428,
                  "src": "4523:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37404,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 37428,
                  "src": "4540:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4522:42:3"
            },
            "returnParameters": {
              "id": 37408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37428,
                  "src": "4581:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37406,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4580:6:3"
            },
            "scope": 37644,
            "src": "4496:258:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37484,
              "nodeType": "Block",
              "src": "5307:385:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37438,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37430,
                          "src": "5325:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5343:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5335:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5335:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5325:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 37443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5347:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 37437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5317:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5317:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37445,
                  "nodeType": "ExpressionStatement",
                  "src": "5317:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37447,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37432,
                          "src": "5405:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5426:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5418:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5418:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5405:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 37452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5430:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 37446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5397:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37454,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37455,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37255,
                        "src": "5479:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37457,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37456,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37430,
                        "src": "5489:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5479:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37462,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37434,
                          "src": "5521:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 37463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5529:40:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 37458,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37255,
                            "src": "5499:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 37460,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 37459,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37430,
                            "src": "5509:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5499:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35306,
                        "src": "5499:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 37464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5499:71:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5479:91:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37466,
                  "nodeType": "ExpressionStatement",
                  "src": "5479:91:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37467,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37255,
                        "src": "5580:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37469,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37468,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37432,
                        "src": "5590:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5580:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37474,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37434,
                          "src": "5628:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 37470,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37255,
                            "src": "5603:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 37472,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 37471,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37432,
                            "src": "5613:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5603:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "5603:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 37475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5603:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5580:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37477,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:55:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37479,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37430,
                        "src": "5659:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37480,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37432,
                        "src": "5667:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37481,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37434,
                        "src": "5678:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37478,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35483,
                      "src": "5650:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5650:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37483,
                  "nodeType": "EmitStatement",
                  "src": "5645:40:3"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 37485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37430,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37485,
                  "src": "5247:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37432,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 37485,
                  "src": "5263:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37434,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37485,
                  "src": "5282:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5282:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5246:51:3"
            },
            "returnParameters": {
              "id": 37436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5307:0:3"
            },
            "scope": 37644,
            "src": "5228:464:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37527,
              "nodeType": "Block",
              "src": "6019:245:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37493,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37487,
                          "src": "6037:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6056:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6048:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6048:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6037:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 37498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6060:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 37492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6029:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6029:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37500,
                  "nodeType": "ExpressionStatement",
                  "src": "6029:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37501,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37263,
                      "src": "6105:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37504,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37489,
                          "src": "6137:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 37502,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37263,
                          "src": "6120:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "6120:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 37505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6120:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6105:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37507,
                  "nodeType": "ExpressionStatement",
                  "src": "6105:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37508,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37255,
                        "src": "6154:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37509,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37487,
                        "src": "6164:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6154:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37515,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37489,
                          "src": "6198:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 37511,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37255,
                            "src": "6175:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 37513,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 37512,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37487,
                            "src": "6185:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6175:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "6175:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 37516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6175:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6154:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37518,
                  "nodeType": "ExpressionStatement",
                  "src": "6154:51:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 37521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6237:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6229:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 37522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6229:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37523,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37487,
                        "src": "6241:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37524,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37489,
                        "src": "6250:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37519,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35483,
                      "src": "6220:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6220:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37526,
                  "nodeType": "EmitStatement",
                  "src": "6215:42:3"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 37528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37487,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37528,
                  "src": "5977:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37489,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37528,
                  "src": "5994:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5976:33:3"
            },
            "returnParameters": {
              "id": 37491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6019:0:3"
            },
            "scope": 37644,
            "src": "5962:302:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37571,
              "nodeType": "Block",
              "src": "6640:285:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37536,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37530,
                          "src": "6658:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6677:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6669:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6669:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6658:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 37541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6681:35:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 37535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "6650:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6650:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37543,
                  "nodeType": "ExpressionStatement",
                  "src": "6650:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 37544,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37255,
                        "src": "6728:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37546,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37545,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37530,
                        "src": "6738:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6728:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37551,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37532,
                          "src": "6772:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 37552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6780:36:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 37547,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37255,
                            "src": "6749:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 37549,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 37548,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37530,
                            "src": "6759:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6749:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35306,
                        "src": "6749:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 37553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6749:68:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6728:89:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37555,
                  "nodeType": "ExpressionStatement",
                  "src": "6728:89:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37556,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37263,
                      "src": "6827:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37559,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37532,
                          "src": "6859:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 37557,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37263,
                          "src": "6842:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35279,
                        "src": "6842:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 37560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6842:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6827:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37562,
                  "nodeType": "ExpressionStatement",
                  "src": "6827:39:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37564,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37530,
                        "src": "6890:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 37566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6907:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6899:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 37567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6899:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37568,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37532,
                        "src": "6911:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37563,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35483,
                      "src": "6881:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6881:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37570,
                  "nodeType": "EmitStatement",
                  "src": "6876:42:3"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
            "id": 37572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37530,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37572,
                  "src": "6598:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37532,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37572,
                  "src": "6615:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6615:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6597:33:3"
            },
            "returnParameters": {
              "id": 37534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6640:0:3"
            },
            "scope": 37644,
            "src": "6583:342:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37613,
              "nodeType": "Block",
              "src": "7425:257:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37582,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37574,
                          "src": "7443:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7460:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7452:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7452:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7443:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 37587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7464:38:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 37581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7435:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7435:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37589,
                  "nodeType": "ExpressionStatement",
                  "src": "7435:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 37591,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37576,
                          "src": "7521:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 37593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7540:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7532:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 37594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7532:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7521:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 37596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7544:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 37590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7513:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37598,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 37599,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37261,
                          "src": "7592:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 37602,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 37600,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37574,
                          "src": "7604:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7592:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 37603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 37601,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37576,
                        "src": "7611:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7592:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 37604,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37578,
                      "src": "7622:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7592:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37606,
                  "nodeType": "ExpressionStatement",
                  "src": "7592:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37608,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37574,
                        "src": "7652:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37609,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37576,
                        "src": "7659:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37610,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37578,
                        "src": "7668:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37607,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35491,
                      "src": "7643:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7643:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37612,
                  "nodeType": "EmitStatement",
                  "src": "7638:37:3"
                }
              ]
            },
            "documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
            "id": 37614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37574,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 37614,
                  "src": "7368:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7368:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37576,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 37614,
                  "src": "7383:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37578,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37614,
                  "src": "7400:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7400:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7367:48:3"
            },
            "returnParameters": {
              "id": 37580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7425:0:3"
            },
            "scope": 37644,
            "src": "7350:332:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37642,
              "nodeType": "Block",
              "src": "7921:168:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37622,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37616,
                        "src": "7937:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37623,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37618,
                        "src": "7946:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37621,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37572,
                      "src": "7931:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7931:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37625,
                  "nodeType": "ExpressionStatement",
                  "src": "7931:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37627,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37616,
                        "src": "7972:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37628,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37905,
                          "src": "7981:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 37629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7981:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37637,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37618,
                            "src": "8034:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 37638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8042:38:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                              "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                            },
                            "value": "ERC20: burn amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                              "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 37630,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37261,
                                "src": "7995:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 37632,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 37631,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37616,
                                "src": "8007:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7995:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37635,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 37633,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37905,
                                "src": "8016:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 37634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8016:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7995:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 37636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35306,
                          "src": "7995:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 37639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7995:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37626,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37614,
                      "src": "7963:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 37640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7963:119:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37641,
                  "nodeType": "ExpressionStatement",
                  "src": "7963:119:3"
                }
              ]
            },
            "documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See {_burn} and {_approve}.",
            "id": 37643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37616,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 37643,
                  "src": "7879:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7879:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37618,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37643,
                  "src": "7896:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7896:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7878:33:3"
            },
            "returnParameters": {
              "id": 37620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7921:0:3"
            },
            "scope": 37644,
            "src": "7860:229:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 37645,
        "src": "1268:6823:3"
      }
    ],
    "src": "0:8092:3"
  },
  "bytecode": "608060405261083b806100136000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d5610212565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610218565b6100b96004803603604081101561013357600080fd5b506001600160a01b0381351690602001356102a5565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102f9565b6100b96004803603604081101561018557600080fd5b506001600160a01b038135169060200135610314565b6100b9600480360360408110156101b157600080fd5b506001600160a01b038135169060200135610382565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610396565b60006102096102026103c1565b84846103c5565b50600192915050565b60025490565b60006102258484846104b1565b61029b846102316103c1565b61029685604051806060016040528060288152602001610771602891396001600160a01b038a1660009081526001602052604081209061026f6103c1565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61060d16565b6103c5565b5060019392505050565b60006102096102b26103c1565b8461029685600160006102c36103c1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6106a416565b6001600160a01b031660009081526020819052604090205490565b60006102096103216103c1565b84610296856040518060600160405280602581526020016107e2602591396001600061034b6103c1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61060d16565b600061020961038f6103c1565b84846104b1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661040a5760405162461bcd60e51b81526004018080602001828103825260248152602001806107be6024913960400191505060405180910390fd5b6001600160a01b03821661044f5760405162461bcd60e51b81526004018080602001828103825260228152602001806107296022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166104f65760405162461bcd60e51b81526004018080602001828103825260258152602001806107996025913960400191505060405180910390fd5b6001600160a01b03821661053b5760405162461bcd60e51b81526004018080602001828103825260238152602001806107066023913960400191505060405180910390fd5b61057e8160405180606001604052806026815260200161074b602691396001600160a01b038616600090815260208190526040902054919063ffffffff61060d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546105b3908263ffffffff6106a416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561069c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610661578181015183820152602001610649565b50505050905090810190601f16801561068e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156106fe576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820caeadfaf01253ca6f2057545b20477f7ffd48bf78631c0b9ba85affe8ba2670664736f6c63430005110032",
  "bytecodeSha1": "aa4d8ad11d52b004cd3301d52c04abc786758673",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "SafeMath.add": {
          "29": [
            946,
            952,
            true
          ]
        },
        "SafeMath.sub": {
          "28": [
            1845,
            1851,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "24": [
            7443,
            7462,
            true
          ],
          "25": [
            7521,
            7542,
            true
          ]
        },
        "ERC20._transfer": {
          "26": [
            5325,
            5345,
            true
          ],
          "27": [
            5405,
            5428,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "11": [
            860,
            877
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "22": [
            938,
            984
          ],
          "23": [
            995,
            1003
          ]
        },
        "SafeMath.sub": {
          "21": [
            1837,
            1866
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "12": [
            7435,
            7503
          ],
          "13": [
            7513,
            7581
          ],
          "14": [
            7592,
            7628
          ],
          "15": [
            7638,
            7675
          ]
        },
        "ERC20._transfer": {
          "16": [
            5317,
            5387
          ],
          "17": [
            5397,
            5468
          ],
          "18": [
            5479,
            5570
          ],
          "19": [
            5580,
            5635
          ],
          "20": [
            5645,
            5685
          ]
        },
        "ERC20.allowance": {
          "10": [
            2321,
            2355
          ]
        },
        "ERC20.approve": {
          "0": [
            2582,
            2621
          ],
          "1": [
            2631,
            2642
          ]
        },
        "ERC20.balanceOf": {
          "7": [
            1782,
            1807
          ]
        },
        "ERC20.decreaseAllowance": {
          "8": [
            4597,
            4726
          ]
        },
        "ERC20.increaseAllowance": {
          "6": [
            3898,
            3981
          ]
        },
        "ERC20.totalSupply": {
          "2": [
            1622,
            1641
          ]
        },
        "ERC20.transfer": {
          "9": [
            2102,
            2144
          ]
        },
        "ERC20.transferFrom": {
          "3": [
            3212,
            3248
          ],
          "4": [
            3258,
            3379
          ],
          "5": [
            3389,
            3400
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Context",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a0823114610149578063a457c2d71461016f578063a9059cbb1461019b578063dd62ed3e146101c757610088565b8063095ea7b31461008d57806318160ddd146100cd57806323b872dd146100e7578063395093511461011d575b600080fd5b6100b9600480360360408110156100a357600080fd5b506001600160a01b0381351690602001356101f5565b604080519115158252519081900360200190f35b6100d5610212565b60408051918252519081900360200190f35b6100b9600480360360608110156100fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610218565b6100b96004803603604081101561013357600080fd5b506001600160a01b0381351690602001356102a5565b6100d56004803603602081101561015f57600080fd5b50356001600160a01b03166102f9565b6100b96004803603604081101561018557600080fd5b506001600160a01b038135169060200135610314565b6100b9600480360360408110156101b157600080fd5b506001600160a01b038135169060200135610382565b6100d5600480360360408110156101dd57600080fd5b506001600160a01b0381358116916020013516610396565b60006102096102026103c1565b84846103c5565b50600192915050565b60025490565b60006102258484846104b1565b61029b846102316103c1565b61029685604051806060016040528060288152602001610771602891396001600160a01b038a1660009081526001602052604081209061026f6103c1565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61060d16565b6103c5565b5060019392505050565b60006102096102b26103c1565b8461029685600160006102c36103c1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6106a416565b6001600160a01b031660009081526020819052604090205490565b60006102096103216103c1565b84610296856040518060600160405280602581526020016107e2602591396001600061034b6103c1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61060d16565b600061020961038f6103c1565b84846104b1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661040a5760405162461bcd60e51b81526004018080602001828103825260248152602001806107be6024913960400191505060405180910390fd5b6001600160a01b03821661044f5760405162461bcd60e51b81526004018080602001828103825260228152602001806107296022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166104f65760405162461bcd60e51b81526004018080602001828103825260258152602001806107996025913960400191505060405180910390fd5b6001600160a01b03821661053b5760405162461bcd60e51b81526004018080602001828103825260238152602001806107066023913960400191505060405180910390fd5b61057e8160405180606001604052806026815260200161074b602691396001600160a01b038616600090815260208190526040902054919063ffffffff61060d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546105b3908263ffffffff6106a416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561069c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610661578181015183820152602001610649565b50505050905090810190601f16801561068e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156106fe576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820caeadfaf01253ca6f2057545b20477f7ffd48bf78631c0b9ba85affe8ba2670664736f6c63430005110032",
  "deployedSourceMap": "1268:6823:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1268:6823:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2500:149:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3107:300:3;;;;;;;;;;;;;;;;;:::i;3802:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:3;;;;;;;;:::i;1706:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:3;-1:-1:-1;;;;;1706:108:3;;:::i;4496:258::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:3;;;;;;;;:::i;2017:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2017:155:3;;;;;;;;:::i;2230:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:3;;;;;;;;;;:::i;2500:149::-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:3;2500:149;;;;:::o;1559:89::-;1629:12;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:3;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:3;;;;;;;;;;;;-1:-1:-1;3289:33:3;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:3;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:3;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1706:108::-;-1:-1:-1;;;;;1789:18:3;1763:7;1789:18;;;;;;;;;;;;1706:108::o;4496:258::-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:3;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;-1:-1:-1;;;;;2328:18:3;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;788:96:0:-;867:10;788:96;:::o;7350:332:3:-;-1:-1:-1;;;;;7443:19:3;;7435:68;;;;-1:-1:-1;;;7435:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7521:21:3;;7513:68;;;;-1:-1:-1;;;7513:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7592:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7643:32;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:3;;5317:70;;;;-1:-1:-1;;;5317:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:3;;5397:71;;;;-1:-1:-1;;;5397:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:3;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:3;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:1:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "offset": [
    1268,
    8091
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x218 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x314 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x382 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 PUSH2 0x202 PUSH2 0x3C1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x3C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225 DUP5 DUP5 DUP5 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x29B DUP5 PUSH2 0x231 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x296 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x771 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x26F PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x60D AND JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 PUSH2 0x2B2 PUSH2 0x3C1 JUMP JUMPDEST DUP5 PUSH2 0x296 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x2C3 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x6A4 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 PUSH2 0x321 PUSH2 0x3C1 JUMP JUMPDEST DUP5 PUSH2 0x296 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7E2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x34B PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x60D AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 PUSH2 0x38F PUSH2 0x3C1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x7BE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x729 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x799 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x706 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x74B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x60D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5B3 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6A4 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x661 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x649 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x68E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x72315820CAEADFAF01253CA6F2057545B20477F7FFD48BF78631C0 0xB9 0xBA DUP6 0xAF INVALID DUP12 LOG2 PUSH8 0x664736F6C634300 SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        1268,
        8091
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x149"
    },
    "53": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16F"
    },
    "64": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "75": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C7"
    },
    "86": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88"
    },
    "90": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMP",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "93": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "98": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "109": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD"
    },
    "113": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "120": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "124": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x39509351"
    },
    "131": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D"
    },
    "135": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "DUP1",
      "path": "3"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1268,
        8091
      ],
      "op": "REVERT",
      "path": "3"
    },
    "141": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "142": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "145": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "147": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "149": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "152": {
      "op": "DUP2"
    },
    "153": {
      "op": "LT"
    },
    "154": {
      "op": "ISZERO"
    },
    "155": {
      "op": "PUSH2",
      "value": "0xA3"
    },
    "158": {
      "op": "JUMPI"
    },
    "159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "161": {
      "op": "DUP1"
    },
    "162": {
      "op": "REVERT"
    },
    "163": {
      "op": "JUMPDEST"
    },
    "164": {
      "op": "POP"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "174": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "175": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "AND",
      "path": "3"
    },
    "176": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "177": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "179": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "180": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "181": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F5"
    },
    "184": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "185": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "186": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "188": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "189": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "190": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "191": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "192": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "193": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP3",
      "path": "3"
    },
    "194": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "195": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "196": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "197": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "198": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "199": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SUB",
      "path": "3"
    },
    "200": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "202": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "ADD",
      "path": "3"
    },
    "203": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "RETURN",
      "path": "3"
    },
    "205": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "206": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "209": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "212": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "213": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "216": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "217": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "218": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "219": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "220": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "221": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "222": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "223": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "224": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "225": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SUB",
      "path": "3"
    },
    "226": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "228": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "ADD",
      "path": "3"
    },
    "229": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "230": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "RETURN",
      "path": "3"
    },
    "231": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SUB",
      "path": "3"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "242": {
      "op": "DUP2"
    },
    "243": {
      "op": "LT"
    },
    "244": {
      "op": "ISZERO"
    },
    "245": {
      "op": "PUSH2",
      "value": "0xFD"
    },
    "248": {
      "op": "JUMPI"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "251": {
      "op": "DUP1"
    },
    "252": {
      "op": "REVERT"
    },
    "253": {
      "op": "JUMPDEST"
    },
    "254": {
      "op": "POP"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "261": {
      "op": "SHL"
    },
    "262": {
      "op": "SUB"
    },
    "263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "266": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "AND",
      "path": "3"
    },
    "276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "ADD",
      "path": "3"
    },
    "280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x218"
    },
    "284": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "285": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "286": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "289": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SUB",
      "path": "3"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "296": {
      "op": "DUP2"
    },
    "297": {
      "op": "LT"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "302": {
      "op": "JUMPI"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "305": {
      "op": "DUP1"
    },
    "306": {
      "op": "REVERT"
    },
    "307": {
      "op": "JUMPDEST"
    },
    "308": {
      "op": "POP"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "318": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "319": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "AND",
      "path": "3"
    },
    "320": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "ADD",
      "path": "3"
    },
    "324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5"
    },
    "328": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "329": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "335": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "DUP1",
      "path": "3"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "SUB",
      "path": "3"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "LT"
    },
    "342": {
      "op": "ISZERO"
    },
    "343": {
      "op": "PUSH2",
      "value": "0x15F"
    },
    "346": {
      "op": "JUMPI"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "349": {
      "op": "DUP1"
    },
    "350": {
      "op": "REVERT"
    },
    "351": {
      "op": "JUMPDEST"
    },
    "352": {
      "op": "POP"
    },
    "353": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "op": "SUB"
    },
    "362": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "AND",
      "path": "3"
    },
    "363": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F9"
    },
    "366": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "368": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SUB",
      "path": "3"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "LT"
    },
    "380": {
      "op": "ISZERO"
    },
    "381": {
      "op": "PUSH2",
      "value": "0x185"
    },
    "384": {
      "op": "JUMPI"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "387": {
      "op": "DUP1"
    },
    "388": {
      "op": "REVERT"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "400": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "401": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "AND",
      "path": "3"
    },
    "402": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "403": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "405": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "ADD",
      "path": "3"
    },
    "406": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "407": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x314"
    },
    "410": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMP",
      "path": "3"
    },
    "411": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "412": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9"
    },
    "415": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "417": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "418": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "419": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SUB",
      "path": "3"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "422": {
      "op": "DUP2"
    },
    "423": {
      "op": "LT"
    },
    "424": {
      "op": "ISZERO"
    },
    "425": {
      "op": "PUSH2",
      "value": "0x1B1"
    },
    "428": {
      "op": "JUMPI"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "431": {
      "op": "DUP1"
    },
    "432": {
      "op": "REVERT"
    },
    "433": {
      "op": "JUMPDEST"
    },
    "434": {
      "op": "POP"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "op": "SUB"
    },
    "443": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "DUP2",
      "path": "3"
    },
    "444": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "445": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "AND",
      "path": "3"
    },
    "446": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "447": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "449": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "ADD",
      "path": "3"
    },
    "450": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "451": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "454": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMP",
      "path": "3"
    },
    "455": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "456": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "459": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "461": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP1",
      "path": "3"
    },
    "462": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "463": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SUB",
      "path": "3"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "466": {
      "op": "DUP2"
    },
    "467": {
      "op": "LT"
    },
    "468": {
      "op": "ISZERO"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1DD"
    },
    "472": {
      "op": "JUMPI"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "REVERT"
    },
    "477": {
      "op": "JUMPDEST"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "485": {
      "op": "SHL"
    },
    "486": {
      "op": "SUB"
    },
    "487": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "488": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "489": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "490": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "491": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "492": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "494": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "ADD",
      "path": "3"
    },
    "495": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "496": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "AND",
      "path": "3"
    },
    "497": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x396"
    },
    "500": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        2566,
        2570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "504": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 0,
      "value": "0x209"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x202"
    },
    "510": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "513": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMP",
      "path": "3"
    },
    "514": {
      "fn": "ERC20.approve",
      "offset": [
        2591,
        2603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "515": {
      "fn": "ERC20.approve",
      "offset": [
        2605,
        2612
      ],
      "op": "DUP5",
      "path": "3"
    },
    "516": {
      "fn": "ERC20.approve",
      "offset": [
        2614,
        2620
      ],
      "op": "DUP5",
      "path": "3"
    },
    "517": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2590
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C5"
    },
    "520": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMP",
      "path": "3"
    },
    "521": {
      "fn": "ERC20.approve",
      "offset": [
        2582,
        2621
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "fn": "ERC20.approve",
      "offset": [
        2638,
        2642
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "525": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "526": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "527": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "528": {
      "fn": "ERC20.approve",
      "offset": [
        2500,
        2649
      ],
      "op": "POP",
      "path": "3"
    },
    "529": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2500,
        2649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "530": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "531": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x2"
    },
    "533": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "534": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1559,
        1648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "535": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1559,
        1648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "536": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "537": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3196,
        3200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "539": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 3,
      "value": "0x225"
    },
    "542": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3222,
        3228
      ],
      "op": "DUP5",
      "path": "3"
    },
    "543": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3230,
        3239
      ],
      "op": "DUP5",
      "path": "3"
    },
    "544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3241,
        3247
      ],
      "op": "DUP5",
      "path": "3"
    },
    "545": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B1"
    },
    "548": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMP",
      "path": "3"
    },
    "549": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3212,
        3248
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "550": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 4,
      "value": "0x29B"
    },
    "553": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3267,
        3273
      ],
      "op": "DUP5",
      "path": "3"
    },
    "554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x231"
    },
    "557": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "560": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMP",
      "path": "3"
    },
    "561": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3275,
        3287
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "562": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "565": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3327,
        3333
      ],
      "op": "DUP6",
      "path": "3"
    },
    "566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "568": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "569": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "570": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "572": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "575": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "579": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "580": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "583": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "ADD",
      "path": "3"
    },
    "584": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x771"
    },
    "587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP11",
      "path": "3"
    },
    "600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "AND",
      "path": "3"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "DUP2",
      "path": "3"
    },
    "614": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26F"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3319
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMP",
      "path": "3"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3309,
        3321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "AND",
      "path": "3"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "DUP2",
      "path": "3"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "ADD",
      "path": "3"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "AND",
      "path": "3"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMP",
      "path": "3"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3289,
        3378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C5"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3258,
        3379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "668": {
      "op": "POP"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3396,
        3400
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x1"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3107,
        3407
      ],
      "op": "POP",
      "path": "3"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3107,
        3407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "677": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3802,
        4009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "678": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3882,
        3886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "680": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3898,
        3981
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x209"
    },
    "683": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "686": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3907,
        3919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3921,
        3928
      ],
      "op": "DUP5",
      "path": "3"
    },
    "692": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3969,
        3979
      ],
      "op": "DUP6",
      "path": "3"
    },
    "696": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "698": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C3"
    },
    "703": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "706": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMP",
      "path": "3"
    },
    "707": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3942,
        3954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "SUB"
    },
    "716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "AND",
      "path": "3"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "724": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP4",
      "path": "3"
    },
    "725": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "726": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "727": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "728": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "729": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "730": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "734": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "ADD",
      "path": "3"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "738": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "DUP2",
      "path": "3"
    },
    "739": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3955
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "740": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "741": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP13",
      "path": "3"
    },
    "742": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "AND",
      "path": "3"
    },
    "743": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "DUP2",
      "path": "3"
    },
    "744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "745": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "746": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "747": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "749": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "750": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3964
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "751": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "756": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3968
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A4"
    },
    "759": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3930,
        3980
      ],
      "op": "AND",
      "path": "3"
    },
    "760": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3930,
        3980
      ],
      "op": "JUMP",
      "path": "3"
    },
    "761": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "AND",
      "path": "3",
      "statement": 7
    },
    "771": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1763,
        1770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "773": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "774": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "775": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "776": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "778": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "779": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "780": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "781": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "783": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "784": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "785": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "786": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1789,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "787": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1706,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4496,
        4754
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4581,
        4585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4597,
        4726
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x209"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x321"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "800": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMP",
      "path": "3"
    },
    "801": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4606,
        4618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "802": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4620,
        4627
      ],
      "op": "DUP5",
      "path": "3"
    },
    "803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4668,
        4683
      ],
      "op": "DUP6",
      "path": "3"
    },
    "807": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "809": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "810": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "811": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "813": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "814": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "816": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "817": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP1",
      "path": "3"
    },
    "818": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "821": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "822": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "824": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "ADD",
      "path": "3"
    },
    "825": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E2"
    },
    "828": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "830": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "831": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "832": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "834": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "836": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34B"
    },
    "839": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4651
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "842": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "843": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4641,
        4653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "853": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "854": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "AND",
      "path": "3"
    },
    "855": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "856": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "857": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "860": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP4",
      "path": "3"
    },
    "861": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "862": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "863": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "864": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "865": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "866": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "868": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "ADD",
      "path": "3"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4654
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP14",
      "path": "3"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "AND",
      "path": "3"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "DUP2",
      "path": "3"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4629,
        4725
      ],
      "op": "AND",
      "path": "3"
    },
    "897": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4629,
        4725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "898": {
      "fn": "ERC20.transfer",
      "offset": [
        2017,
        2172
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "899": {
      "fn": "ERC20.transfer",
      "offset": [
        2086,
        2090
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2144
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x209"
    },
    "904": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38F"
    },
    "907": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2122
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C1"
    },
    "910": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "911": {
      "fn": "ERC20.transfer",
      "offset": [
        2112,
        2124
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "912": {
      "fn": "ERC20.transfer",
      "offset": [
        2126,
        2135
      ],
      "op": "DUP5",
      "path": "3"
    },
    "913": {
      "fn": "ERC20.transfer",
      "offset": [
        2137,
        2143
      ],
      "op": "DUP5",
      "path": "3"
    },
    "914": {
      "fn": "ERC20.transfer",
      "offset": [
        2102,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B1"
    },
    "917": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2102,
        2144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "918": {
      "fn": "ERC20.allowance",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "op": "SUB"
    },
    "927": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 10
    },
    "928": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP3",
      "path": "3"
    },
    "929": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "AND",
      "path": "3"
    },
    "930": {
      "fn": "ERC20.allowance",
      "offset": [
        2302,
        2309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "932": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "933": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "934": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "935": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "937": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "939": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "940": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP2",
      "path": "3"
    },
    "941": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "942": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "944": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP1",
      "path": "3"
    },
    "945": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "DUP4",
      "path": "3"
    },
    "946": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2346
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "947": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "948": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "949": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "950": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "AND",
      "path": "3"
    },
    "951": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "DUP3",
      "path": "3"
    },
    "952": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "953": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "954": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "955": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "956": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "957": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "958": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "959": {
      "fn": "ERC20.allowance",
      "offset": [
        2328,
        2355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "960": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2230,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "961": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "962": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "963": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "965": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "op": "SUB"
    },
    "974": {
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 12
    },
    "975": {
      "branch": 24,
      "fn": "ERC20._approve",
      "offset": [
        7443,
        7462
      ],
      "op": "AND",
      "path": "3"
    },
    "976": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40A"
    },
    "979": {
      "branch": 24,
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "980": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "982": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "991": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "992": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "994": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "995": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "996": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "997": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "999": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "1000": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1001": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1002": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "1003": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1004": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1005": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1007": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1008": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1009": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1011": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "1012": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1013": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BE"
    },
    "1016": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1018": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1019": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1020": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1022": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "ADD",
      "path": "3"
    },
    "1023": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1024": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "1025": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "POP",
      "path": "3"
    },
    "1026": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1028": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1029": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1030": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1031": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SUB",
      "path": "3"
    },
    "1032": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1033": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1034": {
      "fn": "ERC20._approve",
      "offset": [
        7435,
        7503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "SUB"
    },
    "1043": {
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 13
    },
    "1044": {
      "branch": 25,
      "fn": "ERC20._approve",
      "offset": [
        7521,
        7542
      ],
      "op": "AND",
      "path": "3"
    },
    "1045": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44F"
    },
    "1048": {
      "branch": 25,
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1049": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1060": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1061": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "1064": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1065": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1071": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1073": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1076": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1077": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1078": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1080": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "1081": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x729"
    },
    "1085": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "1087": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1088": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1091": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "ADD",
      "path": "3"
    },
    "1092": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1093": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "1094": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "POP",
      "path": "3"
    },
    "1095": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1097": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1098": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1099": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1100": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SUB",
      "path": "3"
    },
    "1101": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1102": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1103": {
      "fn": "ERC20._approve",
      "offset": [
        7513,
        7581
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 14
    },
    "1113": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1114": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "AND",
      "path": "3"
    },
    "1115": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1117": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1118": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1119": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1120": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1122": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1124": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1125": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1126": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1127": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1129": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1130": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1131": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7610
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1132": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1133": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1134": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "AND",
      "path": "3"
    },
    "1135": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1139": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7619
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        7592,
        7628
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 15
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1153": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1155": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1188": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1189": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1190": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1191": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SUB",
      "path": "3"
    },
    "1192": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1193": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1194": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "ADD",
      "path": "3"
    },
    "1195": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1196": {
      "fn": "ERC20._approve",
      "offset": [
        7643,
        7675
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1197": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "1198": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        7350,
        7682
      ],
      "op": "POP",
      "path": "3"
    },
    "1200": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7350,
        7682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1201": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "SUB"
    },
    "1210": {
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 16
    },
    "1211": {
      "branch": 26,
      "fn": "ERC20._transfer",
      "offset": [
        5325,
        5345
      ],
      "op": "AND",
      "path": "3"
    },
    "1212": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F6"
    },
    "1215": {
      "branch": 26,
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1216": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1218": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1227": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1228": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1230": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "1231": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1232": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1233": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1235": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "1236": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1237": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1238": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "1239": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1240": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1241": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "1243": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1244": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1245": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1247": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "1248": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1249": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x799"
    },
    "1252": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "1254": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1255": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1256": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1258": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "ADD",
      "path": "3"
    },
    "1259": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1260": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "1261": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "POP",
      "path": "3"
    },
    "1262": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1264": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1265": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1266": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1267": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SUB",
      "path": "3"
    },
    "1268": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1269": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1270": {
      "fn": "ERC20._transfer",
      "offset": [
        5317,
        5387
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 17
    },
    "1280": {
      "branch": 27,
      "fn": "ERC20._transfer",
      "offset": [
        5405,
        5428
      ],
      "op": "AND",
      "path": "3"
    },
    "1281": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53B"
    },
    "1284": {
      "branch": 27,
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1285": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1296": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1297": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1299": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "1300": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1301": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1302": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1304": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "1305": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1306": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1307": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "1308": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1309": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1310": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "1312": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1313": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1314": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1316": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "1317": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1318": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x706"
    },
    "1321": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "1323": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1324": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1325": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1327": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "ADD",
      "path": "3"
    },
    "1328": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1329": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "1330": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "POP",
      "path": "3"
    },
    "1331": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1333": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1335": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1336": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SUB",
      "path": "3"
    },
    "1337": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1338": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1339": {
      "fn": "ERC20._transfer",
      "offset": [
        5397,
        5468
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0x57E"
    },
    "1343": {
      "fn": "ERC20._transfer",
      "offset": [
        5521,
        5527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1344": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1350": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "1351": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1353": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1354": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "1357": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1358": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1359": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "ADD",
      "path": "3"
    },
    "1362": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74B"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1378": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "AND",
      "path": "3"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5508
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1382": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1386": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1387": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1388": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1389": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1391": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1392": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1393": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1394": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5516
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1395": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60D"
    },
    "1404": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "AND",
      "path": "3"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        5499,
        5570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1416": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1417": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "AND",
      "path": "3"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1420": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1421": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1422": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1423": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1425": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1426": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1427": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1428": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1432": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5496
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1433": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1434": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1436": {
      "fn": "ERC20._transfer",
      "offset": [
        5479,
        5570
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1437": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 19
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "AND",
      "path": "3"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1442": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5623
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B3"
    },
    "1447": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        5628,
        5634
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1449": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A4"
    },
    "1457": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "AND",
      "path": "3"
    },
    "1458": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1459": {
      "fn": "ERC20._transfer",
      "offset": [
        5603,
        5635
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1470": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "AND",
      "path": "3"
    },
    "1471": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1473": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1474": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1475": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1476": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1478": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1479": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1480": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1483": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1484": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1485": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1486": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1488": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1490": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5635
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 20
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1495": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1499": {
      "fn": "ERC20._transfer",
      "offset": [
        5580,
        5600
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1500": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1501": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "AND",
      "path": "3"
    },
    "1503": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1539": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SUB",
      "path": "3"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "ADD",
      "path": "3"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        5650,
        5685
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1545": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        5228,
        5692
      ],
      "op": "POP",
      "path": "3"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5228,
        5692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1549": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1550": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1552": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 21
    },
    "1553": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1554": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1555": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "1556": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1557": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69C"
    },
    "1560": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1561": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1563": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1572": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1573": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1575": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1576": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1577": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1578": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1580": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1581": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1582": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1583": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "1584": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1585": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1586": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1587": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1588": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1589": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1590": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1591": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1592": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1594": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1595": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1596": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1597": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1598": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1599": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1600": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1602": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1603": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1604": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1605": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1606": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "JUMPDEST"
    },
    "1610": {
      "op": "DUP4"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "LT"
    },
    "1613": {
      "op": "ISZERO"
    },
    "1614": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "1617": {
      "op": "JUMPI"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "DUP2"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MLOAD"
    },
    "1622": {
      "op": "DUP4"
    },
    "1623": {
      "op": "DUP3"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "PUSH2",
      "value": "0x649"
    },
    "1632": {
      "op": "JUMP"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1636": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1637": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1638": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1639": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1640": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1641": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1642": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1643": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1644": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1646": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "1647": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1648": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1649": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x68E"
    },
    "1652": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1653": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1654": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1655": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "1656": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1657": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1658": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1660": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1661": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1663": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "1664": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1667": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "1668": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "1669": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "1670": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "1671": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1672": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1673": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1675": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "1676": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1677": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1678": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1679": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1680": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1681": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1682": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1683": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "1684": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1686": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1687": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1688": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1689": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "1690": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1691": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1692": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1697": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "1698": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1699": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1700": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1701": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1703": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1704": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1705": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "1706": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 22
    },
    "1707": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1708": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "1709": {
      "branch": 29,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1710": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FE"
    },
    "1713": {
      "branch": 29,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1714": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1716": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1717": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1726": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1727": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1729": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1731": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1732": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "1733": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1734": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "1736": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1738": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1739": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "1740": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1741": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1774": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1776": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1777": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "1778": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1779": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1780": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1781": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1782": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1783": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1784": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "1785": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1787": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "1788": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1789": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1790": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1791": {
      "fn": "SafeMath.add",
      "offset": [
        1002,
        1003
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 23
    },
    "1792": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        834,
        1010
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "b66d0d71fa17f3dc866c15b4d6d705d425aa4ab0",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n}\n",
  "sourceMap": "1268:6823:3:-;;;;;;;;;",
  "sourcePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}