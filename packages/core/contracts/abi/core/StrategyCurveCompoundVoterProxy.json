{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantEarned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lifetimeEarned",
          "type": "uint256"
        }
      ],
      "name": "Harvested",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_strategistReward",
          "type": "uint256"
        }
      ],
      "name": "setStrategistReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategistReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uni",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "19": "contracts/strategies/StrategyCurveCompoundVoterProxy.sol",
    "5": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
    "55": "interfaces/curve/Curve.sol",
    "6": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "64": "interfaces/uniswap/Uni.sol",
    "66": "interfaces/yearn/IController.sol",
    "7": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "75": "interfaces/yearn/IVoterProxy.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveCompoundVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveCompoundVoterProxy": [
        7849
      ]
    },
    "id": 7850,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:19"
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 7014,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 35493,
        "src": "26:58:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 7015,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 35424,
        "src": "85:53:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 7016,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 35788,
        "src": "139:53:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sbacha/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 7017,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 35713,
        "src": "193:61:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 7018,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36182,
        "src": "256:48:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 7019,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36428,
        "src": "305:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 7020,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36436,
        "src": "348:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 7021,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36471,
        "src": "391:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 7022,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36391,
        "src": "434:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IToken.sol",
        "file": "../../interfaces/yearn/IToken.sol",
        "id": 7023,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36489,
        "src": "477:43:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVoterProxy.sol",
        "file": "../../interfaces/yearn/IVoterProxy.sol",
        "id": 7024,
        "nodeType": "ImportDirective",
        "scope": 7850,
        "sourceUnit": 36604,
        "src": "521:48:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7849,
        "linearizedBaseContracts": [
          7849
        ],
        "name": "StrategyCurveCompoundVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7027,
            "libraryName": {
              "contractScope": null,
              "id": 7025,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35712,
              "src": "624:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$35712",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "618:27:19",
            "typeName": {
              "contractScope": null,
              "id": 7026,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35492,
              "src": "638:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$35492",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 7030,
            "libraryName": {
              "contractScope": null,
              "id": 7028,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35787,
              "src": "656:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$35787",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "650:26:19",
            "typeName": {
              "id": 7029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 7033,
            "libraryName": {
              "contractScope": null,
              "id": 7031,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35423,
              "src": "687:8:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$35423",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "681:27:19",
            "typeName": {
              "id": 7032,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 7038,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "714:82:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7034,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307838343538333844463236354463643263343132413144633965393539633764303835333766386132",
                  "id": 7036,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "753:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7035,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "745:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7037,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "745:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7043,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "802:81:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7039,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "802:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 7041,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "840:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7040,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "832:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7042,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "832:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7048,
            "name": "uni",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "889:81:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7044,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "889:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 7046,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "927:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7045,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "919:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7047,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "919:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7053,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "976:82:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7049,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "976:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 7051,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1015:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7050,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1007:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7052,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1007:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7058,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1102:81:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7054,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1102:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "id": 7056,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1140:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7055,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1132:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7057,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1132:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7063,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1189:83:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7059,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1189:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307841324234374533443563343438373763636137393832323642374238313138463942466237413536",
                  "id": 7061,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1229:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xA2B47E3D5c44877cca798226B7B8118F9BFb7A56"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7060,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1221:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7062,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1221:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7068,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1279:83:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7064,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1279:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837636135623061323931304233336539373539444337644442303431333934393037314437353735",
                  "id": 7066,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1319:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7ca5b0a2910B33e9759DC7dDB0413949071D7575"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7065,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1311:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7067,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1311:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7073,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1368:83:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7069,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1368:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 7071,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1408:42:19",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 7070,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1400:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 7072,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1400:51:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7076,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1458:29:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7074,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1458:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31353030",
              "id": 7075,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1483:4:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1500_by_1",
                "typeString": "int_const 1500"
              },
              "value": "1500"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7079,
            "name": "performanceFee",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1493:35:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7077,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1493:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "343530",
              "id": 7078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1525:3:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_450_by_1",
                "typeString": "int_const 450"
              },
              "value": "450"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7082,
            "name": "strategistReward",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1534:36:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7080,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1534:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 7081,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1568:2:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7085,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1576:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7083,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1576:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7084,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1607:1:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 7088,
            "name": "FEE_DENOMINATOR",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1614:47:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7086,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 7087,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1656:5:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7090,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1668:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7089,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1668:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7092,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1695:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7091,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1695:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7094,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1726:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7093,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1726:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7096,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1757:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7095,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1757:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7098,
            "name": "earned",
            "nodeType": "VariableDeclaration",
            "scope": 7849,
            "src": "1789:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7097,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1789:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7104,
            "name": "Harvested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7100,
                  "indexed": false,
                  "name": "wantEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7104,
                  "src": "1891:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7102,
                  "indexed": false,
                  "name": "lifetimeEarned",
                  "nodeType": "VariableDeclaration",
                  "scope": 7104,
                  "src": "1911:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1890:44:19"
            },
            "src": "1875:60:19"
          },
          {
            "body": {
              "id": 7123,
              "nodeType": "Block",
              "src": "1981:107:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7109,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "1991:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2004:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2004:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1991:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7113,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:23:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7114,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7096,
                      "src": "2024:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7115,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "2037:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 7116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2037:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2024:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7118,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:23:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7119,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7094,
                      "src": "2057:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7120,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7106,
                      "src": "2070:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2057:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7122,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:24:19"
                }
              ]
            },
            "documentation": null,
            "id": 7124,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7106,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7124,
                  "src": "1953:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1952:21:19"
            },
            "returnParameters": {
              "id": 7108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:19"
            },
            "scope": 7849,
            "src": "1941:147:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7131,
              "nodeType": "Block",
              "src": "2151:57:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "53747261746567794375727665436f6d706f756e64566f74657250726f7879",
                    "id": 7129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2168:33:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8c58bf7cfb57064a33e8156955d05d2f6118675bd98b56ca5d2d7d7d124ded2f",
                      "typeString": "literal_string \"StrategyCurveCompoundVoterProxy\""
                    },
                    "value": "StrategyCurveCompoundVoterProxy"
                  },
                  "functionReturnParameters": 7128,
                  "id": 7130,
                  "nodeType": "Return",
                  "src": "2161:40:19"
                }
              ]
            },
            "documentation": null,
            "id": 7132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:2:19"
            },
            "returnParameters": {
              "id": 7128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7132,
                  "src": "2136:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7126,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2135:15:19"
            },
            "scope": 7849,
            "src": "2094:114:19",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7154,
              "nodeType": "Block",
              "src": "2267:127:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2285:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2285:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7140,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7092,
                            "src": "2299:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2285:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "2313:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2313:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7144,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7096,
                            "src": "2327:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2313:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2285:52:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 7147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 7137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2277:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:76:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7149,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:76:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7150,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7096,
                      "src": "2363:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7151,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7134,
                      "src": "2376:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2363:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7153,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:24:19"
                }
              ]
            },
            "documentation": null,
            "id": 7155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7134,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 7155,
                  "src": "2237:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2236:21:19"
            },
            "returnParameters": {
              "id": 7136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2267:0:19"
            },
            "scope": 7849,
            "src": "2214:180:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7172,
              "nodeType": "Block",
              "src": "2447:93:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2465:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2465:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7163,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "2479:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2465:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2491:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2457:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7167,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7168,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7076,
                      "src": "2515:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7169,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7157,
                      "src": "2525:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2515:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7171,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:18:19"
                }
              ]
            },
            "documentation": null,
            "id": 7173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7157,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 7173,
                  "src": "2420:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2419:18:19"
            },
            "returnParameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:0:19"
            },
            "scope": 7849,
            "src": "2400:140:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7190,
              "nodeType": "Block",
              "src": "2605:105:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7179,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2623:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2623:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7181,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "2637:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2623:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2649:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2615:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7185,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7186,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7085,
                      "src": "2673:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7187,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7175,
                      "src": "2689:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2673:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7189,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:30:19"
                }
              ]
            },
            "documentation": null,
            "id": 7191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7175,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 7191,
                  "src": "2572:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2572:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2571:24:19"
            },
            "returnParameters": {
              "id": 7177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:19"
            },
            "scope": 7849,
            "src": "2546:164:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7208,
              "nodeType": "Block",
              "src": "2777:107:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2795:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2795:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7199,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "2809:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2795:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2787:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7203,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7204,
                      "name": "performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7079,
                      "src": "2845:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7205,
                      "name": "_performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7193,
                      "src": "2862:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2845:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7207,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:32:19"
                }
              ]
            },
            "documentation": null,
            "id": 7209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPerformanceFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7193,
                  "name": "_performanceFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 7209,
                  "src": "2743:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2742:25:19"
            },
            "returnParameters": {
              "id": 7195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:0:19"
            },
            "scope": 7849,
            "src": "2716:168:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7226,
              "nodeType": "Block",
              "src": "2955:111:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7215,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "2973:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2973:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7217,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "2987:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2973:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2999:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "2965:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7221,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7222,
                      "name": "strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "3023:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7223,
                      "name": "_strategistReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7211,
                      "src": "3042:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3023:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7225,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:36:19"
                }
              ]
            },
            "documentation": null,
            "id": 7227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategistReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7211,
                  "name": "_strategistReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 7227,
                  "src": "2919:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2919:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2918:27:19"
            },
            "returnParameters": {
              "id": 7213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2955:0:19"
            },
            "scope": 7849,
            "src": "2890:176:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7244,
              "nodeType": "Block",
              "src": "3115:89:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3133:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3133:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7235,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "3147:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3133:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3159:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3125:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7239,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7240,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7090,
                      "src": "3183:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7241,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7229,
                      "src": "3191:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3183:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7243,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:14:19"
                }
              ]
            },
            "documentation": null,
            "id": 7245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7229,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "3090:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3090:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3089:16:19"
            },
            "returnParameters": {
              "id": 7231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3115:0:19"
            },
            "scope": 7849,
            "src": "3072:132:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7280,
              "nodeType": "Block",
              "src": "3236:211:19",
              "statements": [
                {
                  "assignments": [
                    7249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7249,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 7280,
                      "src": "3246:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3246:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7258,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7255,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "3293:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3285:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3285:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7251,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "3269:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7250,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "3262:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3262:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "3262:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3246:53:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7259,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7249,
                      "src": "3313:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3321:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3313:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7279,
                  "nodeType": "IfStatement",
                  "src": "3309:132:19",
                  "trueBody": {
                    "id": 7278,
                    "nodeType": "Block",
                    "src": "3324:117:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7266,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7090,
                              "src": "3364:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7267,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7249,
                              "src": "3371:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7263,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7038,
                                  "src": "3345:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7262,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "3338:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3338:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "3338:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7269,
                        "nodeType": "ExpressionStatement",
                        "src": "3338:39:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7274,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7068,
                              "src": "3418:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7275,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7038,
                              "src": "3425:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7271,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7090,
                                  "src": "3403:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7270,
                                "name": "IVoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36603,
                                "src": "3391:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                                  "typeString": "type(contract IVoterProxy)"
                                }
                              },
                              "id": 7272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3391:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                                "typeString": "contract IVoterProxy"
                              }
                            },
                            "id": 7273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36587,
                            "src": "3391:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 7276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3391:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7277,
                        "nodeType": "ExpressionStatement",
                        "src": "3391:39:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 7281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3226:2:19"
            },
            "returnParameters": {
              "id": 7247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:19"
            },
            "scope": 7849,
            "src": "3210:237:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7339,
              "nodeType": "Block",
              "src": "3595:312:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "3613:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3613:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7291,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7094,
                          "src": "3627:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3613:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 7293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3639:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 7288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3605:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7295,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7297,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7038,
                          "src": "3671:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7299,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7283,
                              "src": "3687:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 7298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3679:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3679:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3671:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 7302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3696:6:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 7296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3663:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3663:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7304,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:40:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7306,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7043,
                          "src": "3721:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7308,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7283,
                              "src": "3736:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 7307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3728:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3728:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3721:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 7311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3745:5:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 7305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3713:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3713:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7313,
                  "nodeType": "ExpressionStatement",
                  "src": "3713:38:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7315,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7058,
                          "src": "3769:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7317,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7283,
                              "src": "3784:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 7316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3776:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3776:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3769:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646169",
                        "id": 7320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:5:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        },
                        "value": "dai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        }
                      ],
                      "id": 7314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "3761:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7322,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:38:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7323,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7286,
                      "src": "3809:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7327,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38018,
                              "src": "3844:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                "typeString": "contract StrategyCurveCompoundVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                "typeString": "contract StrategyCurveCompoundVoterProxy"
                              }
                            ],
                            "id": 7326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3836:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3836:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7324,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7283,
                          "src": "3819:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 7325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "3819:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 7329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3819:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3809:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7331,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:41:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7335,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7094,
                        "src": "3880:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7336,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7286,
                        "src": "3892:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7332,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7283,
                        "src": "3860:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "3860:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7338,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:40:19"
                }
              ]
            },
            "documentation": null,
            "id": 7340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7283,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 7340,
                  "src": "3545:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$35492",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7282,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 35492,
                    "src": "3545:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$35492",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3544:15:19"
            },
            "returnParameters": {
              "id": 7287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7286,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 7340,
                  "src": "3578:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3578:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3577:17:19"
            },
            "scope": 7849,
            "src": "3527:380:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7438,
              "nodeType": "Block",
              "src": "4026:665:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4044:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4044:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7348,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7094,
                          "src": "4058:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4044:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 7350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4070:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 7345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4036:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4036:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7352,
                  "nodeType": "ExpressionStatement",
                  "src": "4036:48:19"
                },
                {
                  "assignments": [
                    7354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7354,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 7438,
                      "src": "4094:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4094:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7363,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7360,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "4144:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4136:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4136:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7356,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "4120:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7355,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4113:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4113:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "4113:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4094:56:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7364,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7354,
                      "src": "4164:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7365,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7342,
                      "src": "4175:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4164:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7384,
                  "nodeType": "IfStatement",
                  "src": "4160:140:19",
                  "trueBody": {
                    "id": 7383,
                    "nodeType": "Block",
                    "src": "4184:116:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7367,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7342,
                            "src": "4198:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7371,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7354,
                                    "src": "4234:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7369,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7342,
                                    "src": "4222:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 7370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35279,
                                  "src": "4222:11:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 7372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4222:21:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 7368,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7456,
                              "src": "4208:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 7373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4208:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4198:46:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7375,
                        "nodeType": "ExpressionStatement",
                        "src": "4198:46:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7376,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7342,
                            "src": "4258:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7379,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7354,
                                "src": "4280:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 7377,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7342,
                                "src": "4268:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35263,
                              "src": "4268:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 7380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4268:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4258:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7382,
                        "nodeType": "ExpressionStatement",
                        "src": "4258:31:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7386,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 7438,
                      "src": "4310:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4310:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7394,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7392,
                        "name": "FEE_DENOMINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7088,
                        "src": "4356:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7389,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7085,
                            "src": "4337:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7387,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7342,
                            "src": "4325:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35340,
                          "src": "4325:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4325:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35356,
                      "src": "4325:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4310:62:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7400,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7094,
                                "src": "4421:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7399,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36181,
                              "src": "4409:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 7401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4409:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$36181",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 7402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36157,
                          "src": "4409:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 7403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4409:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7404,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7386,
                        "src": "4444:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7396,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "4390:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7395,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4383:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4383:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4383:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:66:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7406,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:66:19"
                },
                {
                  "assignments": [
                    7408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7408,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 7438,
                      "src": "4459:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7407,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4459:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7417,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7414,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "4515:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4507:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4507:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7410,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7094,
                            "src": "4488:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7409,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "4476:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 7411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4476:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 7412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "4476:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 7416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4459:62:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7419,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7408,
                          "src": "4539:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4557:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4549:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4549:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4539:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 7424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4561:8:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 7418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4531:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4531:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7426,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7431,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7408,
                        "src": "4658:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7434,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7386,
                            "src": "4678:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7432,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7342,
                            "src": "4666:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35279,
                          "src": "4666:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4666:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7428,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "4639:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7427,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "4632:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4632:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "4632:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7437,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:52:19"
                }
              ]
            },
            "documentation": null,
            "id": 7439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7342,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7439,
                  "src": "4000:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3999:17:19"
            },
            "returnParameters": {
              "id": 7344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4026:0:19"
            },
            "scope": 7849,
            "src": "3982:709:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7455,
              "nodeType": "Block",
              "src": "4764:73:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7450,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7068,
                        "src": "4809:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7451,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7038,
                        "src": "4816:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7452,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7441,
                        "src": "4822:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7447,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "4793:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7446,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "4781:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 7448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4781:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 7449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36564,
                      "src": "4781:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4781:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7445,
                  "id": 7454,
                  "nodeType": "Return",
                  "src": "4774:56:19"
                }
              ]
            },
            "documentation": null,
            "id": 7456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7441,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7456,
                  "src": "4720:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4719:17:19"
            },
            "returnParameters": {
              "id": 7445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7444,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7456,
                  "src": "4755:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4755:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4754:9:19"
            },
            "scope": 7849,
            "src": "4697:140:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7511,
              "nodeType": "Block",
              "src": "4968:373:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7462,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "4986:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4986:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7464,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7094,
                          "src": "5000:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4986:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 7466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5012:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 7461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "4978:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7468,
                  "nodeType": "ExpressionStatement",
                  "src": "4978:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7469,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "5036:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5036:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7471,
                  "nodeType": "ExpressionStatement",
                  "src": "5036:14:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7472,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7459,
                      "src": "5061:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7478,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38018,
                              "src": "5102:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                "typeString": "contract StrategyCurveCompoundVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                "typeString": "contract StrategyCurveCompoundVoterProxy"
                              }
                            ],
                            "id": 7477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5094:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5094:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7474,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7038,
                              "src": "5078:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7473,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35492,
                            "src": "5071:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 7475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5071:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$35492",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 7476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35437,
                        "src": "5071:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 7480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5071:37:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5061:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:47:19"
                },
                {
                  "assignments": [
                    7484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7484,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 7511,
                      "src": "5119:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7483,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5119:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7493,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7490,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "5175:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5167:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5167:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7486,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7094,
                            "src": "5148:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7485,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36181,
                          "src": "5136:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 7487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5136:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$36181",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 7488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36164,
                      "src": "5136:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 7492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:45:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5119:62:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7495,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7484,
                          "src": "5199:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5217:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5209:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5209:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5199:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 7500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5221:8:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 7494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5191:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5191:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7502,
                  "nodeType": "ExpressionStatement",
                  "src": "5191:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7507,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "5318:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7508,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7459,
                        "src": "5326:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7504,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "5299:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7503,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5292:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5292:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35525,
                      "src": "5292:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5292:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7510,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:42:19"
                }
              ]
            },
            "documentation": null,
            "id": 7512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4930:2:19"
            },
            "returnParameters": {
              "id": 7460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7459,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 7512,
                  "src": "4951:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4951:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4950:17:19"
            },
            "scope": 7849,
            "src": "4910:431:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7523,
              "nodeType": "Block",
              "src": "5380:60:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7519,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7068,
                        "src": "5421:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7520,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7038,
                        "src": "5428:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7516,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "5402:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7515,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "5390:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 7517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5390:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 7518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36580,
                      "src": "5390:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 7521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5390:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7522,
                  "nodeType": "ExpressionStatement",
                  "src": "5390:43:19"
                }
              ]
            },
            "documentation": null,
            "id": 7524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5368:2:19"
            },
            "returnParameters": {
              "id": 7514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5380:0:19"
            },
            "scope": 7849,
            "src": "5347:93:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7770,
              "nodeType": "Block",
              "src": "5472:1507:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7528,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "5490:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5490:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7530,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7096,
                            "src": "5504:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5490:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7532,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37932,
                              "src": "5518:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5518:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7534,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7092,
                            "src": "5532:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5518:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5490:52:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 7537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5544:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 7527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "5482:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:76:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7539,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:76:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7068,
                        "src": "5595:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7541,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "5580:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7540,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "5568:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 7542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5568:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 7543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36592,
                      "src": "5568:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7546,
                  "nodeType": "ExpressionStatement",
                  "src": "5568:33:19"
                },
                {
                  "assignments": [
                    7548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7548,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 7770,
                      "src": "5611:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7547,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5611:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7557,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7554,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "5656:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5648:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5648:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7550,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7043,
                            "src": "5633:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7549,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "5626:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5626:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "5626:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5611:51:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7558,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7548,
                      "src": "5676:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5683:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5676:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7649,
                  "nodeType": "IfStatement",
                  "src": "5672:523:19",
                  "trueBody": {
                    "id": 7648,
                    "nodeType": "Block",
                    "src": "5686:509:19",
                    "statements": [
                      {
                        "assignments": [
                          7562
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7562,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 7648,
                            "src": "5700:16:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7561,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5700:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7570,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7568,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7088,
                              "src": "5741:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7565,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7076,
                                  "src": "5728:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7563,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7548,
                                  "src": "5719:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "5719:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5719:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "5719:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5719:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5700:57:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7575,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7073,
                              "src": "5796:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7576,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7562,
                              "src": "5803:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7572,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7043,
                                  "src": "5778:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7571,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "5771:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5771:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "5771:24:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:41:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7578,
                        "nodeType": "ExpressionStatement",
                        "src": "5771:41:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 7579,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7548,
                            "src": "5826:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7582,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7562,
                                "src": "5842:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 7580,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7548,
                                "src": "5833:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35279,
                              "src": "5833:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 7583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5833:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5826:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7585,
                        "nodeType": "ExpressionStatement",
                        "src": "5826:25:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7590,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7048,
                              "src": "5890:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5895:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7587,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7043,
                                  "src": "5873:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7586,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "5866:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5866:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "5866:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5866:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7593,
                        "nodeType": "ExpressionStatement",
                        "src": "5866:31:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7598,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7048,
                              "src": "5935:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7599,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7548,
                              "src": "5940:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7595,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7043,
                                  "src": "5918:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7594,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "5911:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5911:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "5911:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:34:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7601,
                        "nodeType": "ExpressionStatement",
                        "src": "5911:34:19"
                      },
                      {
                        "assignments": [
                          7605
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7605,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 7648,
                            "src": "5960:21:19",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 7603,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5960:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 7604,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5960:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7611,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 7609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5998:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 7608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5984:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 7606,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5988:7:19",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 7607,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5988:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 7610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5984:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5960:40:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7612,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7605,
                              "src": "6014:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 7614,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6019:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6014:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 7615,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7043,
                            "src": "6024:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6014:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7617,
                        "nodeType": "ExpressionStatement",
                        "src": "6014:13:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7618,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7605,
                              "src": "6041:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 7620,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 7619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6046:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6041:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 7621,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7053,
                            "src": "6051:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6041:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7623,
                        "nodeType": "ExpressionStatement",
                        "src": "6041:14:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7624,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7605,
                              "src": "6069:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 7626,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 7625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6074:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6069:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 7627,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7058,
                            "src": "6079:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6069:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7629,
                        "nodeType": "ExpressionStatement",
                        "src": "6069:13:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7634,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7548,
                              "src": "6131:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 7636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6145:1:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6137:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 7637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6137:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7638,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7605,
                              "src": "6149:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7640,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38018,
                                  "src": "6163:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                    "typeString": "contract StrategyCurveCompoundVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                                    "typeString": "contract StrategyCurveCompoundVoterProxy"
                                  }
                                ],
                                "id": 7639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6155:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 7641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6155:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 7644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6178:4:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7642,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37934,
                                  "src": "6170:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35263,
                                "src": "6170:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6170:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7631,
                                  "name": "uni",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7048,
                                  "src": "6101:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7630,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36470,
                                "src": "6097:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$36470_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 7632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6097:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$36470",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 7633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36469,
                            "src": "6097:33:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 7646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6097:87:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7647,
                        "nodeType": "ExpressionStatement",
                        "src": "6097:87:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7651,
                      "name": "_dai",
                      "nodeType": "VariableDeclaration",
                      "scope": 7770,
                      "src": "6204:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6204:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7660,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7657,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "6249:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6241:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6241:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7653,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7058,
                            "src": "6226:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7652,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6219:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6219:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "6219:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6219:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6204:51:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7661,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7651,
                      "src": "6269:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6276:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6269:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7692,
                  "nodeType": "IfStatement",
                  "src": "6265:182:19",
                  "trueBody": {
                    "id": 7691,
                    "nodeType": "Block",
                    "src": "6279:168:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7668,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7063,
                              "src": "6317:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6324:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7665,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7058,
                                  "src": "6300:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7664,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6293:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6293:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6293:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6293:33:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7671,
                        "nodeType": "ExpressionStatement",
                        "src": "6293:33:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7676,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7063,
                              "src": "6364:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7677,
                              "name": "_dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7651,
                              "src": "6371:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7673,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7058,
                                  "src": "6347:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7672,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6340:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6340:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35591,
                            "src": "6340:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:36:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7679,
                        "nodeType": "ExpressionStatement",
                        "src": "6340:36:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 7684,
                                  "name": "_dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7651,
                                  "src": "6421:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 7685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6427:1:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 7686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6430:1:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 7687,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6420:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6434:1:19",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                "typeString": "uint256[3] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7681,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7063,
                                  "src": "6399:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7680,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36380,
                                "src": "6390:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$36380_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 7682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6390:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$36380",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 7683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36303,
                            "src": "6390:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[3] memory,uint256) external"
                            }
                          },
                          "id": 7689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:46:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7690,
                        "nodeType": "ExpressionStatement",
                        "src": "6390:46:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7694,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 7770,
                      "src": "6456:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7693,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6456:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7703,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7700,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "6503:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6495:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7696,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "6479:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7695,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "6472:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6472:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "6472:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6472:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6456:53:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7704,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7694,
                      "src": "6523:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6531:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6523:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7751,
                  "nodeType": "IfStatement",
                  "src": "6519:344:19",
                  "trueBody": {
                    "id": 7750,
                    "nodeType": "Block",
                    "src": "6534:329:19",
                    "statements": [
                      {
                        "assignments": [
                          7708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7708,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 7750,
                            "src": "6548:12:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7707,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6548:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7716,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7714,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7088,
                              "src": "6593:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7711,
                                  "name": "performanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7079,
                                  "src": "6573:14:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7709,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7694,
                                  "src": "6563:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "6563:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6563:25:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "6563:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6563:46:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6548:61:19"
                      },
                      {
                        "assignments": [
                          7718
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7718,
                            "name": "_reward",
                            "nodeType": "VariableDeclaration",
                            "scope": 7750,
                            "src": "6623:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7717,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6623:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7726,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7724,
                              "name": "FEE_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7088,
                              "src": "6673:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7721,
                                  "name": "strategistReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7082,
                                  "src": "6651:16:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7719,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7694,
                                  "src": "6641:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35340,
                                "src": "6641:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6641:27:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35356,
                            "src": "6641:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6641:48:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6623:66:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 7732,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7094,
                                      "src": "6741:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7731,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36181,
                                    "src": "6729:11:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$36181_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 7733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6729:23:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$36181",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 7734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36157,
                                "src": "6729:31:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 7735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6729:33:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7736,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7708,
                              "src": "6764:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7728,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7038,
                                  "src": "6710:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7727,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6703:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6703:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "6703:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6703:66:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7738,
                        "nodeType": "ExpressionStatement",
                        "src": "6703:66:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7743,
                              "name": "strategist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7096,
                              "src": "6809:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7744,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7718,
                              "src": "6821:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 7740,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7038,
                                  "src": "6790:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7739,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35492,
                                "src": "6783:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 7741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6783:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$35492",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 7742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35525,
                            "src": "6783:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$35492_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$35492_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 7745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6783:46:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7746,
                        "nodeType": "ExpressionStatement",
                        "src": "6783:46:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7747,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7281,
                            "src": "6843:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 7748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6843:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7749,
                        "nodeType": "ExpressionStatement",
                        "src": "6843:9:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7753,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "6884:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7752,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "6872:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6872:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 7755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36595,
                      "src": "6872:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6872:25:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7757,
                  "nodeType": "ExpressionStatement",
                  "src": "6872:25:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7758,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7098,
                      "src": "6907:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7761,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7694,
                          "src": "6927:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7759,
                          "name": "earned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7098,
                          "src": "6916:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35263,
                        "src": "6916:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6916:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6907:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7764,
                  "nodeType": "ExpressionStatement",
                  "src": "6907:26:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7766,
                        "name": "_want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7694,
                        "src": "6958:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7767,
                        "name": "earned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7098,
                        "src": "6965:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7765,
                      "name": "Harvested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7104,
                      "src": "6948:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6948:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7769,
                  "nodeType": "EmitStatement",
                  "src": "6943:29:19"
                }
              ]
            },
            "documentation": null,
            "id": 7771,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5462:2:19"
            },
            "returnParameters": {
              "id": 7526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:0:19"
            },
            "scope": 7849,
            "src": "5446:1533:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7785,
              "nodeType": "Block",
              "src": "7040:61:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7781,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38018,
                            "src": "7088:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveCompoundVoterProxy_$7849",
                              "typeString": "contract StrategyCurveCompoundVoterProxy"
                            }
                          ],
                          "id": 7780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7080:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7080:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7777,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7038,
                            "src": "7064:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7776,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35492,
                          "src": "7057:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$35492_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7057:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$35492",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35437,
                      "src": "7057:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7057:37:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7775,
                  "id": 7784,
                  "nodeType": "Return",
                  "src": "7050:44:19"
                }
              ]
            },
            "documentation": null,
            "id": 7786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7007:2:19"
            },
            "returnParameters": {
              "id": 7775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7774,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7786,
                  "src": "7031:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7031:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7030:9:19"
            },
            "scope": 7849,
            "src": "6985:116:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7798,
              "nodeType": "Block",
              "src": "7162:59:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7795,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7068,
                        "src": "7208:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7792,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "7191:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7791,
                          "name": "IVoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36603,
                          "src": "7179:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoterProxy_$36603_$",
                            "typeString": "type(contract IVoterProxy)"
                          }
                        },
                        "id": 7793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7179:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoterProxy_$36603",
                          "typeString": "contract IVoterProxy"
                        }
                      },
                      "id": 7794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36571,
                      "src": "7179:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7790,
                  "id": 7797,
                  "nodeType": "Return",
                  "src": "7172:42:19"
                }
              ]
            },
            "documentation": null,
            "id": 7799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7129:2:19"
            },
            "returnParameters": {
              "id": 7790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7799,
                  "src": "7153:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7153:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7152:9:19"
            },
            "scope": 7849,
            "src": "7107:114:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7811,
              "nodeType": "Block",
              "src": "7278:60:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7807,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7799,
                          "src": "7315:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7315:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7804,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7786,
                          "src": "7295:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7295:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35263,
                      "src": "7295:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7295:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7803,
                  "id": 7810,
                  "nodeType": "Return",
                  "src": "7288:43:19"
                }
              ]
            },
            "documentation": null,
            "id": 7812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7245:2:19"
            },
            "returnParameters": {
              "id": 7803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7802,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7812,
                  "src": "7269:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7268:9:19"
            },
            "scope": 7849,
            "src": "7227:111:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7829,
              "nodeType": "Block",
              "src": "7397:99:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7818,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "7415:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7415:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7820,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "7429:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7415:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7441:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7817,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7407:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7407:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7824,
                  "nodeType": "ExpressionStatement",
                  "src": "7407:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7825,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "7465:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7826,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7814,
                      "src": "7478:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7465:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7828,
                  "nodeType": "ExpressionStatement",
                  "src": "7465:24:19"
                }
              ]
            },
            "documentation": null,
            "id": 7830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7814,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "7367:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7367:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7366:21:19"
            },
            "returnParameters": {
              "id": 7816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7397:0:19"
            },
            "scope": 7849,
            "src": "7344:152:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7847,
              "nodeType": "Block",
              "src": "7555:99:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7836,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37932,
                            "src": "7573:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7573:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7838,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7092,
                          "src": "7587:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7573:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 7840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7599:13:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 7835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37936
                      ],
                      "referencedDeclaration": 37936,
                      "src": "7565:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7565:48:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7842,
                  "nodeType": "ExpressionStatement",
                  "src": "7565:48:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7843,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7094,
                      "src": "7623:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7844,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7832,
                      "src": "7636:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7623:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7846,
                  "nodeType": "ExpressionStatement",
                  "src": "7623:24:19"
                }
              ]
            },
            "documentation": null,
            "id": 7848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7832,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7848,
                  "src": "7525:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7525:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7524:21:19"
            },
            "returnParameters": {
              "id": 7834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7555:0:19"
            },
            "scope": 7849,
            "src": "7502:152:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7850,
        "src": "571:7085:19"
      }
    ],
    "src": "0:7657:19"
  },
  "bytecode": "60806040526105dc6000556101c26001556032600255600060035534801561002657600080fd5b506040516122613803806122618339818101604052602081101561004957600080fd5b505160058054336001600160a01b03199182168117909255600780548216909217909155600680549091166001600160a01b039092169190911790556121cd806100946000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063853828b611610125578063c1a3d44c116100ad578063d73792a91161007c578063d73792a9146104aa578063ec556889146104b2578063edc9af95146104ba578063f4b9fa75146104c2578063f77c4791146104ca57610211565b8063c1a3d44c1461046c578063c7b9d53014610474578063d0e30db01461049a578063d6f19262146104a257610211565b8063955383bd116100f4578063955383bd146103de57806397107d6d146103fb578063a6f19c8414610421578063ab033ea914610429578063ac1e50251461044f57610211565b8063853828b6146103a057806387788782146103a85780638bc7e8c4146103b057806392eefe9b146103b857610211565b806346c96aac116101a857806370897b231161017757806370897b23146103635780637165485d14610380578063722713f7146103885780637fef901a146103905780638158676e1461039857610211565b806346c96aac1461032557806351cff8d91461032d5780635aa6e675146103535780636a4874a11461035b57610211565b80631fe4a686116101e45780631fe4a686146102f05780632e1a7d4d146102f85780633fc8cef3146103155780634641257d1461031d57610211565b80630d596cdf14610216578063115880861461023557806317d7de7c1461024f5780631f1fcd51146102cc575b600080fd5b6102336004803603602081101561022c57600080fd5b50356104d2565b005b61023d610524565b60408051918252519081900360200190f35b6102576105b8565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610291578181015183820152602001610279565b50505050905090810190601f1680156102be5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d46105ef565b604080516001600160a01b039092168252519081900360200190f35b6102d4610601565b6102336004803603602081101561030e57600080fd5b5035610610565b6102d46108d4565b6102336108ec565b6102d46110f9565b61023d6004803603602081101561034357600080fd5b50356001600160a01b0316611111565b6102d4611300565b6102d461130f565b6102336004803603602081101561037957600080fd5b5035611327565b6102d4611379565b61023d611391565b61023d6113b7565b61023d6113bd565b61023d6113c3565b61023d611586565b61023d61158c565b610233600480360360208110156103ce57600080fd5b50356001600160a01b0316611592565b610233600480360360208110156103f457600080fd5b5035611601565b6102336004803603602081101561041157600080fd5b50356001600160a01b0316611653565b6102d46116c2565b6102336004803603602081101561043f57600080fd5b50356001600160a01b03166116da565b6102336004803603602081101561046557600080fd5b5035611749565b61023d61179b565b6102336004803603602081101561048a57600080fd5b50356001600160a01b03166117ea565b61023361186e565b61023d6119ae565b61023d6119b4565b6102d46119ba565b6102d46119c9565b6102d46119e1565b6102d46119f9565b6005546001600160a01b0316331461051f576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b60048054604080516370a0823160e01b8152737ca5b0a2910b33e9759dc7ddb0413949071d757593810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d60208110156105b157600080fd5b5051905090565b60408051808201909152601f81527f53747261746567794375727665436f6d706f756e64566f74657250726f787900602082015290565b6000805160206120f883398151915281565b6007546001600160a01b031681565b6006546001600160a01b0316331461065d576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d60208110156106d657600080fd5b505190508181101561070f576106fa6106f5838363ffffffff611a0816565b611a53565b915061070c828263ffffffff611b0416565b91505b600061073861271061072c60035486611b5e90919063ffffffff16565b9063ffffffff611bb716565b90506107d3600660009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b50516000805160206120f8833981519152908363ffffffff611bf916565b60065460408051632988bb9f60e21b81526000805160206120f8833981519152600482015290516000926001600160a01b03169163a622ee7c916024808301926020929190829003018186803b15801561082c57600080fd5b505afa158015610840573d6000803e3d6000fd5b505050506040513d602081101561085657600080fd5b505190506001600160a01b03811661089e576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6108ce816108b2868563ffffffff611a0816565b6000805160206120f8833981519152919063ffffffff611bf916565b50505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6007546001600160a01b031633148061090f57506005546001600160a01b031633145b61094e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600480546040805163072e008f60e11b8152737ca5b0a2910b33e9759dc7ddb0413949071d757593810193909352516001600160a01b0390911691630e5c011e91602480830192600092919082900301818387803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b158015610a1c57600080fd5b505afa158015610a30573d6000803e3d6000fd5b505050506040513d6020811015610a4657600080fd5b505190508015610cfb576000610a6d61271061072c60005485611b5e90919063ffffffff16565b9050610aa873d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611bf916565b610ab8828263ffffffff611a0816565b9150610af473d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d600063ffffffff611c5016565b610b2d73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d8463ffffffff611c5016565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610b7157fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610bb357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610bf557fe5b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610c3e4261070863ffffffff611b0416565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610cb7578181015183820152602001610c9f565b505050509050019650505050505050600060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091736b175474e89094c44da98b954eedeac495271d0f916370a0823191602480820192602092909190829003018186803b158015610d5057600080fd5b505afa158015610d64573d6000803e3d6000fd5b505050506040513d6020811015610d7a57600080fd5b505190508015610eb457610dbe736b175474e89094c44da98b954eedeac495271d0f73a2b47e3d5c44877cca798226b7b8118f9bfb7a56600063ffffffff611c5016565b610df7736b175474e89094c44da98b954eedeac495271d0f73a2b47e3d5c44877cca798226b7b8118f9bfb7a568363ffffffff611c5016565b73a2b47e3d5c44877cca798226b7b8118f9bfb7a566001600160a01b0316634515cef3604051806060016040528084815260200160008152602001600081525060006040518363ffffffff1660e01b81526004018083600360200280838360005b83811015610e70578181015183820152602001610e58565b5050505090500182815260200192505050600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b505190508015611045576000610f5461271061072c60015485611b5e90919063ffffffff16565b90506000610f7361271061072c60025486611b5e90919063ffffffff16565b905061100e600660009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b158015610fc657600080fd5b505afa158015610fda573d6000803e3d6000fd5b505050506040513d6020811015610ff057600080fd5b50516000805160206120f8833981519152908463ffffffff611bf916565b60075461103a906000805160206120f8833981519152906001600160a01b03168363ffffffff611bf916565b61104261186e565b50505b6004805460408051637c1e845d60e11b815290516001600160a01b039092169263f83d08ba92828201926000929082900301818387803b15801561108857600080fd5b505af115801561109c573d6000803e3d6000fd5b50506008546110b4925090508263ffffffff611b0416565b600881905560408051838152602081019290925280517ffa07446fad45314351eb89109a154880278451332bb87f1824d435fe58da59399281900390910190a1505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6006546000906001600160a01b03163314611161576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206120f88339815191526001600160a01b03831614156111b6576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b038316141561120e576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b0383161415611266576040805162461bcd60e51b815260206004820152600360248201526264616960e81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d60208110156112d657600080fd5b50516006549091506112fb906001600160a01b0384811691168363ffffffff611bf916565b919050565b6005546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6005546001600160a01b03163314611374576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b73a2b47e3d5c44877cca798226b7b8118f9bfb7a5681565b60006113b261139e610524565b6113a661179b565b9063ffffffff611b0416565b905090565b60005481565b60025481565b6006546000906001600160a01b03163314611413576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b61141b611d63565b604080516370a0823160e01b815230600482015290516000805160206120f8833981519152916370a08231916024808301926020929190829003018186803b15801561146657600080fd5b505afa15801561147a573d6000803e3d6000fd5b505050506040513d602081101561149057600080fd5b505160065460408051632988bb9f60e21b81526000805160206120f8833981519152600482015290519293506000926001600160a01b039092169163a622ee7c91602480820192602092909190829003018186803b1580156114f157600080fd5b505afa158015611505573d6000803e3d6000fd5b505050506040513d602081101561151b57600080fd5b505190506001600160a01b038116611563576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6115826000805160206120f8833981519152828463ffffffff611bf916565b5090565b60015481565b60035481565b6005546001600160a01b031633146115df576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316331461164e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b6005546001600160a01b031633146116a0576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b737ca5b0a2910b33e9759dc7ddb0413949071d757581565b6005546001600160a01b03163314611727576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314611796576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600355565b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b15801561058757600080fd5b6005546001600160a01b031633148061180d57506007546001600160a01b031633145b61184c576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b1580156118bd57600080fd5b505afa1580156118d1573d6000803e3d6000fd5b505050506040513d60208110156118e757600080fd5b5051905080156119ab5760045461191d906000805160206120f8833981519152906001600160a01b03168363ffffffff611bf916565b6004805460408051631f2c13e160e31b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f88339815191526024840152516001600160a01b039091169163f9609f0891604480830192600092919082900301818387803b15801561199257600080fd5b505af11580156119a6573d6000803e3d6000fd5b505050505b50565b60085481565b61271081565b6004546001600160a01b031681565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b736b175474e89094c44da98b954eedeac495271d0f81565b6006546001600160a01b031681565b6000611a4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611e07565b90505b92915050565b6004805460408051636ce5768960e11b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f8833981519152602484015260448301849052516000926001600160a01b039092169163d9caed1291606480830192602092919082900301818787803b158015611ad257600080fd5b505af1158015611ae6573d6000803e3d6000fd5b505050506040513d6020811015611afc57600080fd5b505192915050565b600082820183811015611a4a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b6d57506000611a4d565b82820282848281611b7a57fe5b0414611a4a5760405162461bcd60e51b81526004018080602001828103825260218152602001806121186021913960400191505060405180910390fd5b6000611a4a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e9e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611c4b908490611f03565b505050565b801580611cd6575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611ca857600080fd5b505afa158015611cbc573d6000803e3d6000fd5b505050506040513d6020811015611cd257600080fd5b5051155b611d115760405162461bcd60e51b81526004018080602001828103825260368152602001806121636036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611c4b908490611f03565b60048054604080516301395c5960e31b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f88339815191526024840152516001600160a01b03909116916309cae2c89160448083019260209291908290030181600087803b158015611dd957600080fd5b505af1158015611ded573d6000803e3d6000fd5b505050506040513d6020811015611e0357600080fd5b5050565b60008184841115611e965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e5b578181015183820152602001611e43565b50505050905090810190601f168015611e885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611eed5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e5b578181015183820152602001611e43565b506000838581611ef957fe5b0495945050505050565b611f15826001600160a01b03166120bb565b611f66576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611fa45780518252601f199092019160209182019101611f85565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612006576040519150601f19603f3d011682016040523d82523d6000602084013e61200b565b606091505b509150915081612062576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156108ce5780806020019051602081101561207e57600080fd5b50516108ce5760405162461bcd60e51b815260040180806020018281038252602a815260200180612139602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906120ef57508115155b94935050505056fe000000000000000000000000845838df265dcd2c412a1dc9e959c7d08537f8a2536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582095fe427a79fc729c31791d92d9339c4852bf9f312706cf2ad1184898b89808fa64736f6c63430005110032",
  "bytecodeSha1": "2f1e90198c66fc893fbe83c93cda8bdb12fe4149",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "StrategyCurveCompoundVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "102": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "106": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "103": [
            2458,
            2464,
            false
          ],
          "104": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "105": [
            1845,
            1851,
            true
          ]
        }
      },
      "19": {
        "StrategyCurveCompoundVoterProxy.deposit": {
          "97": [
            3313,
            3322,
            false
          ]
        },
        "StrategyCurveCompoundVoterProxy.harvest": {
          "78": [
            5490,
            5514,
            true
          ],
          "79": [
            5518,
            5542,
            true
          ],
          "80": [
            5676,
            5684,
            false
          ],
          "81": [
            6269,
            6277,
            false
          ],
          "82": [
            6523,
            6532,
            false
          ]
        },
        "StrategyCurveCompoundVoterProxy.setController": {
          "90": [
            7573,
            7597,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setGovernance": {
          "93": [
            7415,
            7439,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setKeepCRV": {
          "91": [
            2465,
            2489,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setPerformanceFee": {
          "87": [
            2795,
            2819,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setProxy": {
          "92": [
            3133,
            3157,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setStrategist": {
          "95": [
            2285,
            2309,
            true
          ],
          "96": [
            2313,
            2337,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setStrategistReward": {
          "74": [
            2973,
            2997,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.setWithdrawalFee": {
          "94": [
            2623,
            2647,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.withdraw": {
          "75": [
            4044,
            4068,
            true
          ],
          "76": [
            4164,
            4182,
            false
          ],
          "77": [
            4539,
            4559,
            true
          ],
          "83": [
            3613,
            3637,
            true
          ],
          "84": [
            3671,
            3694,
            true
          ],
          "85": [
            3721,
            3743,
            true
          ],
          "86": [
            3769,
            3791,
            true
          ]
        },
        "StrategyCurveCompoundVoterProxy.withdrawAll": {
          "88": [
            4986,
            5010,
            true
          ],
          "89": [
            5199,
            5219,
            true
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "98": [
            3261,
            3288,
            true
          ],
          "99": [
            3479,
            3486,
            true
          ],
          "100": [
            3538,
            3559,
            false
          ],
          "101": [
            3667,
            3697,
            true
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {},
      "75": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "60": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "63": [
            3150,
            3196
          ],
          "69": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "61": [
            2480,
            2488
          ],
          "62": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "58": [
            1351,
            1401
          ],
          "68": [
            1837,
            1866
          ]
        }
      },
      "19": {
        "StrategyCurveCompoundVoterProxy._withdrawAll": {
          "67": [
            5390,
            5433
          ]
        },
        "StrategyCurveCompoundVoterProxy._withdrawSome": {
          "59": [
            4774,
            4830
          ]
        },
        "StrategyCurveCompoundVoterProxy.balanceOf": {
          "37": [
            7288,
            7331
          ]
        },
        "StrategyCurveCompoundVoterProxy.balanceOfPool": {
          "2": [
            7172,
            7214
          ]
        },
        "StrategyCurveCompoundVoterProxy.balanceOfWant": {
          "53": [
            7050,
            7094
          ]
        },
        "StrategyCurveCompoundVoterProxy.deposit": {
          "56": [
            3338,
            3377
          ],
          "57": [
            3391,
            3430
          ]
        },
        "StrategyCurveCompoundVoterProxy.getName": {
          "3": [
            2161,
            2201
          ]
        },
        "StrategyCurveCompoundVoterProxy.harvest": {
          "10": [
            5482,
            5558
          ],
          "11": [
            5568,
            5601
          ],
          "12": [
            5771,
            5812
          ],
          "13": [
            5826,
            5851
          ],
          "14": [
            5866,
            5897
          ],
          "15": [
            5911,
            5945
          ],
          "16": [
            6014,
            6027
          ],
          "17": [
            6041,
            6055
          ],
          "18": [
            6069,
            6082
          ],
          "19": [
            6097,
            6184
          ],
          "20": [
            6293,
            6326
          ],
          "21": [
            6340,
            6376
          ],
          "22": [
            6390,
            6436
          ],
          "23": [
            6703,
            6769
          ],
          "24": [
            6783,
            6829
          ],
          "25": [
            6843,
            6852
          ],
          "26": [
            6872,
            6897
          ],
          "27": [
            6907,
            6933
          ],
          "28": [
            6943,
            6972
          ]
        },
        "StrategyCurveCompoundVoterProxy.setController": {
          "43": [
            7565,
            7613
          ],
          "44": [
            7623,
            7647
          ]
        },
        "StrategyCurveCompoundVoterProxy.setGovernance": {
          "49": [
            7407,
            7455
          ],
          "50": [
            7465,
            7489
          ]
        },
        "StrategyCurveCompoundVoterProxy.setKeepCRV": {
          "45": [
            2457,
            2505
          ],
          "46": [
            2515,
            2533
          ]
        },
        "StrategyCurveCompoundVoterProxy.setPerformanceFee": {
          "35": [
            2787,
            2835
          ],
          "36": [
            2845,
            2877
          ]
        },
        "StrategyCurveCompoundVoterProxy.setProxy": {
          "47": [
            3125,
            3173
          ],
          "48": [
            3183,
            3197
          ]
        },
        "StrategyCurveCompoundVoterProxy.setStrategist": {
          "54": [
            2277,
            2353
          ],
          "55": [
            2363,
            2387
          ]
        },
        "StrategyCurveCompoundVoterProxy.setStrategistReward": {
          "0": [
            2965,
            3013
          ],
          "1": [
            3023,
            3059
          ]
        },
        "StrategyCurveCompoundVoterProxy.setWithdrawalFee": {
          "51": [
            2615,
            2663
          ],
          "52": [
            2673,
            2703
          ]
        },
        "StrategyCurveCompoundVoterProxy.withdraw": {
          "4": [
            4036,
            4084
          ],
          "5": [
            4198,
            4244
          ],
          "6": [
            4258,
            4289
          ],
          "7": [
            4383,
            4449
          ],
          "8": [
            4531,
            4570
          ],
          "9": [
            4632,
            4684
          ],
          "29": [
            3605,
            3653
          ],
          "30": [
            3663,
            3703
          ],
          "31": [
            3713,
            3751
          ],
          "32": [
            3761,
            3799
          ],
          "33": [
            3809,
            3850
          ],
          "34": [
            3860,
            3900
          ]
        },
        "StrategyCurveCompoundVoterProxy.withdrawAll": {
          "38": [
            4978,
            5026
          ],
          "39": [
            5036,
            5050
          ],
          "40": [
            5061,
            5108
          ],
          "41": [
            5191,
            5230
          ],
          "42": [
            5292,
            5334
          ]
        }
      },
      "5": {},
      "55": {},
      "6": {
        "SafeERC20.callOptionalReturn": {
          "70": [
            3253,
            3324
          ],
          "71": [
            3471,
            3523
          ],
          "72": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "65": [
            1406,
            1556
          ],
          "66": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "64": [
            744,
            829
          ]
        }
      },
      "64": {},
      "66": {},
      "7": {
        "Address.isContract": {
          "73": [
            1238,
            1289
          ]
        }
      },
      "75": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Address",
    "IController",
    "ICurveFi",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/IERC20",
    "IVoterProxy",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/SafeMath",
    "Uni"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102115760003560e01c8063853828b611610125578063c1a3d44c116100ad578063d73792a91161007c578063d73792a9146104aa578063ec556889146104b2578063edc9af95146104ba578063f4b9fa75146104c2578063f77c4791146104ca57610211565b8063c1a3d44c1461046c578063c7b9d53014610474578063d0e30db01461049a578063d6f19262146104a257610211565b8063955383bd116100f4578063955383bd146103de57806397107d6d146103fb578063a6f19c8414610421578063ab033ea914610429578063ac1e50251461044f57610211565b8063853828b6146103a057806387788782146103a85780638bc7e8c4146103b057806392eefe9b146103b857610211565b806346c96aac116101a857806370897b231161017757806370897b23146103635780637165485d14610380578063722713f7146103885780637fef901a146103905780638158676e1461039857610211565b806346c96aac1461032557806351cff8d91461032d5780635aa6e675146103535780636a4874a11461035b57610211565b80631fe4a686116101e45780631fe4a686146102f05780632e1a7d4d146102f85780633fc8cef3146103155780634641257d1461031d57610211565b80630d596cdf14610216578063115880861461023557806317d7de7c1461024f5780631f1fcd51146102cc575b600080fd5b6102336004803603602081101561022c57600080fd5b50356104d2565b005b61023d610524565b60408051918252519081900360200190f35b6102576105b8565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610291578181015183820152602001610279565b50505050905090810190601f1680156102be5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d46105ef565b604080516001600160a01b039092168252519081900360200190f35b6102d4610601565b6102336004803603602081101561030e57600080fd5b5035610610565b6102d46108d4565b6102336108ec565b6102d46110f9565b61023d6004803603602081101561034357600080fd5b50356001600160a01b0316611111565b6102d4611300565b6102d461130f565b6102336004803603602081101561037957600080fd5b5035611327565b6102d4611379565b61023d611391565b61023d6113b7565b61023d6113bd565b61023d6113c3565b61023d611586565b61023d61158c565b610233600480360360208110156103ce57600080fd5b50356001600160a01b0316611592565b610233600480360360208110156103f457600080fd5b5035611601565b6102336004803603602081101561041157600080fd5b50356001600160a01b0316611653565b6102d46116c2565b6102336004803603602081101561043f57600080fd5b50356001600160a01b03166116da565b6102336004803603602081101561046557600080fd5b5035611749565b61023d61179b565b6102336004803603602081101561048a57600080fd5b50356001600160a01b03166117ea565b61023361186e565b61023d6119ae565b61023d6119b4565b6102d46119ba565b6102d46119c9565b6102d46119e1565b6102d46119f9565b6005546001600160a01b0316331461051f576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b60048054604080516370a0823160e01b8152737ca5b0a2910b33e9759dc7ddb0413949071d757593810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d60208110156105b157600080fd5b5051905090565b60408051808201909152601f81527f53747261746567794375727665436f6d706f756e64566f74657250726f787900602082015290565b6000805160206120f883398151915281565b6007546001600160a01b031681565b6006546001600160a01b0316331461065d576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d60208110156106d657600080fd5b505190508181101561070f576106fa6106f5838363ffffffff611a0816565b611a53565b915061070c828263ffffffff611b0416565b91505b600061073861271061072c60035486611b5e90919063ffffffff16565b9063ffffffff611bb716565b90506107d3600660009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b50516000805160206120f8833981519152908363ffffffff611bf916565b60065460408051632988bb9f60e21b81526000805160206120f8833981519152600482015290516000926001600160a01b03169163a622ee7c916024808301926020929190829003018186803b15801561082c57600080fd5b505afa158015610840573d6000803e3d6000fd5b505050506040513d602081101561085657600080fd5b505190506001600160a01b03811661089e576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6108ce816108b2868563ffffffff611a0816565b6000805160206120f8833981519152919063ffffffff611bf916565b50505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6007546001600160a01b031633148061090f57506005546001600160a01b031633145b61094e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600480546040805163072e008f60e11b8152737ca5b0a2910b33e9759dc7ddb0413949071d757593810193909352516001600160a01b0390911691630e5c011e91602480830192600092919082900301818387803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b158015610a1c57600080fd5b505afa158015610a30573d6000803e3d6000fd5b505050506040513d6020811015610a4657600080fd5b505190508015610cfb576000610a6d61271061072c60005485611b5e90919063ffffffff16565b9050610aa873d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611bf916565b610ab8828263ffffffff611a0816565b9150610af473d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d600063ffffffff611c5016565b610b2d73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d8463ffffffff611c5016565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610b7157fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610bb357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610bf557fe5b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610c3e4261070863ffffffff611b0416565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610cb7578181015183820152602001610c9f565b505050509050019650505050505050600060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091736b175474e89094c44da98b954eedeac495271d0f916370a0823191602480820192602092909190829003018186803b158015610d5057600080fd5b505afa158015610d64573d6000803e3d6000fd5b505050506040513d6020811015610d7a57600080fd5b505190508015610eb457610dbe736b175474e89094c44da98b954eedeac495271d0f73a2b47e3d5c44877cca798226b7b8118f9bfb7a56600063ffffffff611c5016565b610df7736b175474e89094c44da98b954eedeac495271d0f73a2b47e3d5c44877cca798226b7b8118f9bfb7a568363ffffffff611c5016565b73a2b47e3d5c44877cca798226b7b8118f9bfb7a566001600160a01b0316634515cef3604051806060016040528084815260200160008152602001600081525060006040518363ffffffff1660e01b81526004018083600360200280838360005b83811015610e70578181015183820152602001610e58565b5050505090500182815260200192505050600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b505190508015611045576000610f5461271061072c60015485611b5e90919063ffffffff16565b90506000610f7361271061072c60025486611b5e90919063ffffffff16565b905061100e600660009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b158015610fc657600080fd5b505afa158015610fda573d6000803e3d6000fd5b505050506040513d6020811015610ff057600080fd5b50516000805160206120f8833981519152908463ffffffff611bf916565b60075461103a906000805160206120f8833981519152906001600160a01b03168363ffffffff611bf916565b61104261186e565b50505b6004805460408051637c1e845d60e11b815290516001600160a01b039092169263f83d08ba92828201926000929082900301818387803b15801561108857600080fd5b505af115801561109c573d6000803e3d6000fd5b50506008546110b4925090508263ffffffff611b0416565b600881905560408051838152602081019290925280517ffa07446fad45314351eb89109a154880278451332bb87f1824d435fe58da59399281900390910190a1505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6006546000906001600160a01b03163314611161576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206120f88339815191526001600160a01b03831614156111b6576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b038316141561120e576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b0383161415611266576040805162461bcd60e51b815260206004820152600360248201526264616960e81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156112ac57600080fd5b505afa1580156112c0573d6000803e3d6000fd5b505050506040513d60208110156112d657600080fd5b50516006549091506112fb906001600160a01b0384811691168363ffffffff611bf916565b919050565b6005546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6005546001600160a01b03163314611374576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b73a2b47e3d5c44877cca798226b7b8118f9bfb7a5681565b60006113b261139e610524565b6113a661179b565b9063ffffffff611b0416565b905090565b60005481565b60025481565b6006546000906001600160a01b03163314611413576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b61141b611d63565b604080516370a0823160e01b815230600482015290516000805160206120f8833981519152916370a08231916024808301926020929190829003018186803b15801561146657600080fd5b505afa15801561147a573d6000803e3d6000fd5b505050506040513d602081101561149057600080fd5b505160065460408051632988bb9f60e21b81526000805160206120f8833981519152600482015290519293506000926001600160a01b039092169163a622ee7c91602480820192602092909190829003018186803b1580156114f157600080fd5b505afa158015611505573d6000803e3d6000fd5b505050506040513d602081101561151b57600080fd5b505190506001600160a01b038116611563576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6115826000805160206120f8833981519152828463ffffffff611bf916565b5090565b60015481565b60035481565b6005546001600160a01b031633146115df576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316331461164e576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b6005546001600160a01b031633146116a0576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b737ca5b0a2910b33e9759dc7ddb0413949071d757581565b6005546001600160a01b03163314611727576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314611796576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600355565b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b15801561058757600080fd5b6005546001600160a01b031633148061180d57506007546001600160a01b031633145b61184c576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b815230600482015290516000916000805160206120f8833981519152916370a0823191602480820192602092909190829003018186803b1580156118bd57600080fd5b505afa1580156118d1573d6000803e3d6000fd5b505050506040513d60208110156118e757600080fd5b5051905080156119ab5760045461191d906000805160206120f8833981519152906001600160a01b03168363ffffffff611bf916565b6004805460408051631f2c13e160e31b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f88339815191526024840152516001600160a01b039091169163f9609f0891604480830192600092919082900301818387803b15801561199257600080fd5b505af11580156119a6573d6000803e3d6000fd5b505050505b50565b60085481565b61271081565b6004546001600160a01b031681565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b736b175474e89094c44da98b954eedeac495271d0f81565b6006546001600160a01b031681565b6000611a4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611e07565b90505b92915050565b6004805460408051636ce5768960e11b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f8833981519152602484015260448301849052516000926001600160a01b039092169163d9caed1291606480830192602092919082900301818787803b158015611ad257600080fd5b505af1158015611ae6573d6000803e3d6000fd5b505050506040513d6020811015611afc57600080fd5b505192915050565b600082820183811015611a4a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b6d57506000611a4d565b82820282848281611b7a57fe5b0414611a4a5760405162461bcd60e51b81526004018080602001828103825260218152602001806121186021913960400191505060405180910390fd5b6000611a4a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e9e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611c4b908490611f03565b505050565b801580611cd6575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611ca857600080fd5b505afa158015611cbc573d6000803e3d6000fd5b505050506040513d6020811015611cd257600080fd5b5051155b611d115760405162461bcd60e51b81526004018080602001828103825260368152602001806121636036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611c4b908490611f03565b60048054604080516301395c5960e31b8152737ca5b0a2910b33e9759dc7ddb0413949071d7575938101939093526000805160206120f88339815191526024840152516001600160a01b03909116916309cae2c89160448083019260209291908290030181600087803b158015611dd957600080fd5b505af1158015611ded573d6000803e3d6000fd5b505050506040513d6020811015611e0357600080fd5b5050565b60008184841115611e965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e5b578181015183820152602001611e43565b50505050905090810190601f168015611e885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611eed5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611e5b578181015183820152602001611e43565b506000838581611ef957fe5b0495945050505050565b611f15826001600160a01b03166120bb565b611f66576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611fa45780518252601f199092019160209182019101611f85565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612006576040519150601f19603f3d011682016040523d82523d6000602084013e61200b565b606091505b509150915081612062576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156108ce5780806020019051602081101561207e57600080fd5b50516108ce5760405162461bcd60e51b815260040180806020018281038252602a815260200180612139602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906120ef57508115155b94935050505056fe000000000000000000000000845838df265dcd2c412a1dc9e959c7d08537f8a2536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582095fe427a79fc729c31791d92d9339c4852bf9f312706cf2ad1184898b89808fa64736f6c63430005110032",
  "deployedSourceMap": "571:7085:19:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:7085:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2890:176;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2890:176:19;;:::i;:::-;;7107:114;;;:::i;:::-;;;;;;;;;;;;;;;;2094;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2094:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:82;;;:::i;:::-;;;;-1:-1:-1;;;;;714:82:19;;;;;;;;;;;;;;1757:25;;;:::i;3982:709::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3982:709:19;;:::i;976:82::-;;;:::i;5446:1533::-;;;:::i;1368:83::-;;;:::i;3527:380::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3527:380:19;-1:-1:-1;;;;;3527:380:19;;:::i;1695:25::-;;;:::i;802:81::-;;;:::i;2716:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2716:168:19;;:::i;1189:83::-;;;:::i;7227:111::-;;;:::i;1458:29::-;;;:::i;1534:36::-;;;:::i;4910:431::-;;;:::i;1493:35::-;;;:::i;1576:32::-;;;:::i;7502:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7502:152:19;-1:-1:-1;;;;;7502:152:19;;:::i;2400:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2400:140:19;;:::i;3072:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3072:132:19;-1:-1:-1;;;;;3072:132:19;;:::i;1279:83::-;;;:::i;7344:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7344:152:19;-1:-1:-1;;;;;7344:152:19;;:::i;2546:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2546:164:19;;:::i;6985:116::-;;;:::i;2214:180::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2214:180:19;-1:-1:-1;;;;;2214:180:19;;:::i;3210:237::-;;;:::i;1789:21::-;;;:::i;1614:47::-;;;:::i;1668:20::-;;;:::i;889:81::-;;;:::i;1102:::-;;;:::i;1726:25::-;;;:::i;2890:176::-;2987:10;;-1:-1:-1;;;;;2987:10:19;2973;:24;2965:48;;;;;-1:-1:-1;;;2965:48:19;;;;;;;;;;;;-1:-1:-1;;;2965:48:19;;;;;;;;;;;;;;;3023:16;:36;2890:176::o;7107:114::-;7191:5;;;7179:35;;;-1:-1:-1;;;7179:35:19;;1319:42;7179:35;;;;;;;;7153:7;;-1:-1:-1;;;;;7191:5:19;;;;7179:28;;:35;;;;;;;;;;;;;;7191:5;7179:35;;;5:2:-1;;;;30:1;27;20:12;5:2;7179:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7179:35:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7179:35:19;;-1:-1:-1;7107:114:19;:::o;2094:::-;2161:40;;;;;;;;;;;;;;;;;2094:114;:::o;714:82::-;-1:-1:-1;;;;;;;;;;;714:82:19;:::o;1757:25::-;;;-1:-1:-1;;;;;1757:25:19;;:::o;3982:709::-;4058:10;;-1:-1:-1;;;;;4058:10:19;4044;:24;4036:48;;;;;-1:-1:-1;;;4036:48:19;;;;;;;;;;;;-1:-1:-1;;;4036:48:19;;;;;;;;;;;;;;;4113:37;;;-1:-1:-1;;;4113:37:19;;4144:4;4113:37;;;;;;4094:16;;-1:-1:-1;;;;;;;;;;;753:42:19;4113:22;;:37;;;;;;;;;;;;;;;753:42;4113:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4113:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4113:37:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4113:37:19;;-1:-1:-1;4164:18:19;;;4160:140;;;4208:36;4222:21;:7;4234:8;4222:21;:11;:21;:::i;:::-;4208:13;:36::i;:::-;4198:46;-1:-1:-1;4268:21:19;4198:46;4280:8;4268:21;:11;:21;:::i;:::-;4258:31;;4160:140;4310:12;4325:47;1656:5;4325:26;4337:13;;4325:7;:11;;:26;;;;:::i;:::-;:30;:47;:30;:47;:::i;:::-;4310:62;;4383:66;4421:10;;;;;;;;;-1:-1:-1;;;;;4421:10:19;-1:-1:-1;;;;;4409:31:19;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4409:33:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4409:33:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4409:33:19;-1:-1:-1;;;;;;;;;;;753:42:19;4444:4;4383:66;:25;:66;:::i;:::-;4488:10;;4476:45;;;-1:-1:-1;;;4476:45:19;;-1:-1:-1;;;;;;;;;;;4476:45:19;;;;;;4459:14;;-1:-1:-1;;;;;4488:10:19;;4476:30;;:45;;;;;;;;;;;;;;4488:10;4476:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4476:45:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4476:45:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4476:45:19;;-1:-1:-1;;;;;;4539:20:19;;4531:39;;;;;-1:-1:-1;;;4531:39:19;;;;;;;;;;;;-1:-1:-1;;;4531:39:19;;;;;;;;;;;;;;;4632:52;4658:6;4666:17;:7;4678:4;4666:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;753:42:19;4632:52;;:25;:52;:::i;:::-;3982:709;;;;:::o;976:82::-;1015:42;976:82;:::o;5446:1533::-;5504:10;;-1:-1:-1;;;;;5504:10:19;5490;:24;;:52;;-1:-1:-1;5532:10:19;;-1:-1:-1;;;;;5532:10:19;5518;:24;5490:52;5482:76;;;;;-1:-1:-1;;;5482:76:19;;;;;;;;;;;;-1:-1:-1;;;5482:76:19;;;;;;;;;;;;;;;5580:5;;;5568:33;;;-1:-1:-1;;;5568:33:19;;1319:42;5568:33;;;;;;;;-1:-1:-1;;;;;5580:5:19;;;;5568:26;;:33;;;;;5580:5;;5568:33;;;;;;;5580:5;;5568:33;;;5:2:-1;;;;30:1;27;20:12;5:2;5568:33:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5626:36:19;;;-1:-1:-1;;;5626:36:19;;5656:4;5626:36;;;;;;5611:12;;-1:-1:-1;840:42:19;;-1:-1:-1;5626:21:19;;:36;;;;;;;;;;;;;;;840:42;5626:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5626:36:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5626:36:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5626:36:19;;-1:-1:-1;5676:8:19;;5672:523;;5700:16;5719:38;1656:5;5719:17;5728:7;;5719:4;:8;;:17;;;;:::i;:38::-;5700:57;-1:-1:-1;5771:41:19;840:42;1408;5700:57;5771:41;:24;:41;:::i;:::-;5833:18;:4;5842:8;5833:18;:8;:18;:::i;:::-;5826:25;-1:-1:-1;5866:31:19;840:42;927;5895:1;5866:31;:23;:31;:::i;:::-;5911:34;840:42;927;5940:4;5911:34;:23;:34;:::i;:::-;5984:16;;;5998:1;5984:16;;;;;;;;;5960:21;;5984:16;;;5960:21;;105:10:-1;5984:16:19;88:34:-1;136:17;;-1:-1;5984:16:19;5960:40;;840:42;6014:4;6019:1;6014:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;6014:13:19;;;-1:-1:-1;;;;;6014:13:19;;;;;1015:42;6041:4;6046:1;6041:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;6041:14:19;;;-1:-1:-1;;;;;6041:14:19;;;;;1140:42;6069:4;6074:1;6069:7;;;;;;;;-1:-1:-1;;;;;6069:13:19;;;:7;;;;;;;;;;;:13;927:42;6097:33;6131:4;6145:1;6149:4;6163;6170:13;:3;6178:4;6170:13;:7;:13;:::i;:::-;6097:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6097:87:19;-1:-1:-1;;;;;6097:87:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6097:87:19;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6097:87:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6097:87:19;;;;5672:523;;;6219:36;;;-1:-1:-1;;;6219:36:19;;6249:4;6219:36;;;;;;6204:12;;1140:42;;6219:21;;:36;;;;;;;;;;;;;;;1140:42;6219:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6219:36:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6219:36:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6219:36:19;;-1:-1:-1;6269:8:19;;6265:182;;6293:33;1140:42;1229;6324:1;6293:33;:23;:33;:::i;:::-;6340:36;1140:42;1229;6371:4;6340:36;:23;:36;:::i;:::-;1229:42;-1:-1:-1;;;;;6390:29:19;;:46;;;;;;;;6421:4;6390:46;;;;6427:1;6390:46;;;;6430:1;6390:46;;;6434:1;6390:46;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6390:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6390:46:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6390:46:19;;;;6265:182;6472:37;;;-1:-1:-1;;;6472:37:19;;6503:4;6472:37;;;;;;6456:13;;-1:-1:-1;;;;;;;;;;;753:42:19;6472:22;;:37;;;;;;;;;;;;;;;753:42;6472:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6472:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6472:37:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6472:37:19;;-1:-1:-1;6523:9:19;;6519:344;;6548:12;6563:46;1656:5;6563:25;6573:14;;6563:5;:9;;:25;;;;:::i;:46::-;6548:61;;6623:15;6641:48;1656:5;6641:27;6651:16;;6641:5;:9;;:27;;;;:::i;:48::-;6623:66;;6703;6741:10;;;;;;;;;-1:-1:-1;;;;;6741:10:19;-1:-1:-1;;;;;6729:31:19;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6729:33:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6729:33:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6729:33:19;-1:-1:-1;;;;;;;;;;;753:42:19;6764:4;6703:66;:25;:66;:::i;:::-;6809:10;;6783:46;;-1:-1:-1;;;;;;;;;;;753:42:19;-1:-1:-1;;;;;6809:10:19;6821:7;6783:46;:25;:46;:::i;:::-;6843:9;:7;:9::i;:::-;6519:344;;;6884:5;;;6872:25;;;-1:-1:-1;;;6872:25:19;;;;-1:-1:-1;;;;;6884:5:19;;;;6872:23;;:25;;;;6884:5;;6872:25;;;;;;6884:5;;6872:25;;;5:2:-1;;;;30:1;27;20:12;5:2;6872:25:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6916:6:19;;:17;;-1:-1:-1;6916:6:19;-1:-1:-1;6927:5:19;6916:17;:10;:17;:::i;:::-;6907:6;:26;;;6948:24;;;;;;;;;;;;;;;;;;;;;;;;;5446:1533;;;:::o;1368:83::-;1408:42;1368:83;:::o;3527:380::-;3627:10;;3578:15;;-1:-1:-1;;;;;3627:10:19;3613;:24;3605:48;;;;;-1:-1:-1;;;3605:48:19;;;;;;;;;;;;-1:-1:-1;;;3605:48:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;3671:23:19;;;;3663:40;;;;;-1:-1:-1;;;3663:40:19;;;;;;;;;;;;;;;-1:-1:-1;;;3663:40:19;;;;;;;;;;;;;;;840:42;-1:-1:-1;;;;;3721:22:19;;;;3713:38;;;;;-1:-1:-1;;;3713:38:19;;;;;;;;;;;;-1:-1:-1;;;3713:38:19;;;;;;;;;;;;;;;1140:42;-1:-1:-1;;;;;3769:22:19;;;;3761:38;;;;;-1:-1:-1;;;3761:38:19;;;;;;;;;;;;-1:-1:-1;;;3761:38:19;;;;;;;;;;;;;;;3819:31;;;-1:-1:-1;;;3819:31:19;;3844:4;3819:31;;;;;;-1:-1:-1;;;;;3819:16:19;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3819:31:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3819:31:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3819:31:19;3880:10;;3819:31;;-1:-1:-1;3860:40:19;;-1:-1:-1;;;;;3860:19:19;;;;3880:10;3819:31;3860:40;:19;:40;:::i;:::-;3527:380;;;:::o;1695:25::-;;;-1:-1:-1;;;;;1695:25:19;;:::o;802:81::-;840:42;802:81;:::o;2716:168::-;2809:10;;-1:-1:-1;;;;;2809:10:19;2795;:24;2787:48;;;;;-1:-1:-1;;;2787:48:19;;;;;;;;;;;;-1:-1:-1;;;2787:48:19;;;;;;;;;;;;;;;2845:14;:32;2716:168::o;1189:83::-;1229:42;1189:83;:::o;7227:111::-;7269:7;7295:36;7315:15;:13;:15::i;:::-;7295;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;7288:43;;7227:111;:::o;1458:29::-;;;;:::o;1534:36::-;;;;:::o;4910:431::-;5000:10;;4951:15;;-1:-1:-1;;;;;5000:10:19;4986;:24;4978:48;;;;;-1:-1:-1;;;4978:48:19;;;;;;;;;;;;-1:-1:-1;;;4978:48:19;;;;;;;;;;;;;;;5036:14;:12;:14::i;:::-;5071:37;;;-1:-1:-1;;;5071:37:19;;5102:4;5071:37;;;;;;-1:-1:-1;;;;;;;;;;;753:42:19;5071:22;;:37;;;;;;;;;;;;;;753:42;5071:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5071:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5071:37:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5071:37:19;5148:10;;5136:45;;;-1:-1:-1;;;5136:45:19;;-1:-1:-1;;;;;;;;;;;5136:45:19;;;;;;5071:37;;-1:-1:-1;5119:14:19;;-1:-1:-1;;;;;5148:10:19;;;;5136:30;;:45;;;;;5071:37;;5136:45;;;;;;;;5148:10;5136:45;;;5:2:-1;;;;30:1;27;20:12;5:2;5136:45:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5136:45:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5136:45:19;;-1:-1:-1;;;;;;5199:20:19;;5191:39;;;;;-1:-1:-1;;;5191:39:19;;;;;;;;;;;;-1:-1:-1;;;5191:39:19;;;;;;;;;;;;;;;5292:42;-1:-1:-1;;;;;;;;;;;5318:6:19;5326:7;5292:42;:25;:42;:::i;:::-;4910:431;;:::o;1493:35::-;;;;:::o;1576:32::-;;;;:::o;7502:152::-;7587:10;;-1:-1:-1;;;;;7587:10:19;7573;:24;7565:48;;;;;-1:-1:-1;;;7565:48:19;;;;;;;;;;;;-1:-1:-1;;;7565:48:19;;;;;;;;;;;;;;;7623:10;:24;;-1:-1:-1;;;;;;7623:24:19;-1:-1:-1;;;;;7623:24:19;;;;;;;;;;7502:152::o;2400:140::-;2479:10;;-1:-1:-1;;;;;2479:10:19;2465;:24;2457:48;;;;;-1:-1:-1;;;2457:48:19;;;;;;;;;;;;-1:-1:-1;;;2457:48:19;;;;;;;;;;;;;;;2515:7;:18;2400:140::o;3072:132::-;3147:10;;-1:-1:-1;;;;;3147:10:19;3133;:24;3125:48;;;;;-1:-1:-1;;;3125:48:19;;;;;;;;;;;;-1:-1:-1;;;3125:48:19;;;;;;;;;;;;;;;3183:5;:14;;-1:-1:-1;;;;;;3183:14:19;-1:-1:-1;;;;;3183:14:19;;;;;;;;;;3072:132::o;1279:83::-;1319:42;1279:83;:::o;7344:152::-;7429:10;;-1:-1:-1;;;;;7429:10:19;7415;:24;7407:48;;;;;-1:-1:-1;;;7407:48:19;;;;;;;;;;;;-1:-1:-1;;;7407:48:19;;;;;;;;;;;;;;;7465:10;:24;;-1:-1:-1;;;;;;7465:24:19;-1:-1:-1;;;;;7465:24:19;;;;;;;;;;7344:152::o;2546:164::-;2637:10;;-1:-1:-1;;;;;2637:10:19;2623;:24;2615:48;;;;;-1:-1:-1;;;2615:48:19;;;;;;;;;;;;-1:-1:-1;;;2615:48:19;;;;;;;;;;;;;;;2673:13;:30;2546:164::o;6985:116::-;7057:37;;;-1:-1:-1;;;7057:37:19;;7088:4;7057:37;;;;;;7031:7;;-1:-1:-1;;;;;;;;;;;753:42:19;7057:22;;:37;;;;;;;;;;;;;;;753:42;7057:37;;;5:2:-1;;;;30:1;27;20:12;2214:180:19;2299:10;;-1:-1:-1;;;;;2299:10:19;2285;:24;;:52;;-1:-1:-1;2327:10:19;;-1:-1:-1;;;;;2327:10:19;2313;:24;2285:52;2277:76;;;;;-1:-1:-1;;;2277:76:19;;;;;;;;;;;;-1:-1:-1;;;2277:76:19;;;;;;;;;;;;;;;2363:10;:24;;-1:-1:-1;;;;;;2363:24:19;-1:-1:-1;;;;;2363:24:19;;;;;;;;;;2214:180::o;3210:237::-;3262:37;;;-1:-1:-1;;;3262:37:19;;3293:4;3262:37;;;;;;3246:13;;-1:-1:-1;;;;;;;;;;;753:42:19;3262:22;;:37;;;;;;;;;;;;;;;753:42;3262:37;;;5:2:-1;;;;30:1;27;20:12;5:2;3262:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3262:37:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3262:37:19;;-1:-1:-1;3313:9:19;;3309:132;;3364:5;;3338:39;;-1:-1:-1;;;;;;;;;;;753:42:19;-1:-1:-1;;;;;3364:5:19;3371;3338:39;:25;:39;:::i;:::-;3403:5;;;3391:39;;;-1:-1:-1;;;3391:39:19;;1319:42;3391:39;;;;;;;-1:-1:-1;;;;;;;;;;;3391:39:19;;;;;-1:-1:-1;;;;;3403:5:19;;;;3391:26;;:39;;;;;3403:5;;3391:39;;;;;;;3403:5;;3391:39;;;5:2:-1;;;;30:1;27;20:12;5:2;3391:39:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3391:39:19;;;;3309:132;3210:237;:::o;1789:21::-;;;;:::o;1614:47::-;1656:5;1614:47;:::o;1668:20::-;;;-1:-1:-1;;;;;1668:20:19;;:::o;889:81::-;927:42;889:81;:::o;1102:::-;1140:42;1102:81;:::o;1726:25::-;;;-1:-1:-1;;;;;1726:25:19;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;4697:140:19:-;4793:5;;;4781:49;;;-1:-1:-1;;;4781:49:19;;1319:42;4781:49;;;;;;;-1:-1:-1;;;;;;;;;;;4781:49:19;;;;;;;;;;;4755:7;;-1:-1:-1;;;;;4793:5:19;;;;4781:27;;:49;;;;;;;;;;;;;;4755:7;4793:5;4781:49;;;5:2:-1;;;;30:1;27;20:12;5:2;4781:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4781:49:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4781:49:19;;4697:140;-1:-1:-1;;4697:140:19:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;5347:93:19:-;5402:5;;;5390:43;;;-1:-1:-1;;;5390:43:19;;1319:42;5390:43;;;;;;;-1:-1:-1;;;;;;;;;;;5390:43:19;;;;;-1:-1:-1;;;;;5402:5:19;;;;5390:30;;:43;;;;;;;;;;;;;;5402:5;;5390:43;;;5:2:-1;;;;30:1;27;20:12;5:2;5390:43:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5390:43:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;5347:93:19:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    571,
    7656
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC1A3D44C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD73792A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD73792A9 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xEDC9AF95 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xF4B9FA75 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x4CA JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x4A2 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x955383BD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x97107D6D EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x44F JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x87788782 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x3B8 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70897B23 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x8158676E EQ PUSH2 0x398 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x35B JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1FE4A686 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x31D JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0xD596CDF EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x11588086 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2CC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x291 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x610 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1327 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x23D PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x158C JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x179B JUMP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x233 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x23D PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH32 0x53747261746567794375727665436F6D706F756E64566F74657250726F787900 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x70F JUMPI PUSH2 0x6FA PUSH2 0x6F5 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1A08 AND JUMP JUMPDEST PUSH2 0x1A53 JUMP JUMPDEST SWAP2 POP PUSH2 0x70C DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1B04 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x738 PUSH2 0x2710 PUSH2 0x72C PUSH1 0x3 SLOAD DUP7 PUSH2 0x1B5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1BB7 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x7D3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8CE DUP2 PUSH2 0x8B2 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1A08 AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x90F JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x94E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 PUSH2 0xA6D PUSH2 0x2710 PUSH2 0x72C PUSH1 0x0 SLOAD DUP6 PUSH2 0x1B5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA8 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST PUSH2 0xAB8 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1A08 AND JUMP JUMPDEST SWAP2 POP PUSH2 0xAF4 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1C50 AND JUMP JUMPDEST PUSH2 0xB2D PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1C50 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB71 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xBB3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xBF5 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xC3E TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x1B04 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xDBE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1C50 AND JUMP JUMPDEST PUSH2 0xDF7 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1C50 AND JUMP JUMPDEST PUSH20 0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4515CEF3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x3 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE70 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE58 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 PUSH2 0xF54 PUSH2 0x2710 PUSH2 0x72C PUSH1 0x1 SLOAD DUP6 PUSH2 0x1B5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF73 PUSH2 0x2710 PUSH2 0x72C PUSH1 0x2 SLOAD DUP7 PUSH2 0x1B5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x100E PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x103A SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x186E JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7C1E845D PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xF83D08BA SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x109C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH2 0x10B4 SWAP3 POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1B04 AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1161 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x11B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x120E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1266 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x646169 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x12FB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1374 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH20 0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B2 PUSH2 0x139E PUSH2 0x524 JUMP JUMPDEST PUSH2 0x13A6 PUSH2 0x179B JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B04 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1413 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x141B PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1563 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1582 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1727 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1796 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x180D JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x184C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x19AB JUMPI PUSH1 0x4 SLOAD PUSH2 0x191D SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BF9 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1E07 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B6D JUMPI POP PUSH1 0x0 PUSH2 0x1A4D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B7A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2118 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A4A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1C4B SWAP1 DUP5 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1CD6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1D11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2163 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1C4B SWAP1 DUP5 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0x7CA5B0A2910B33E9759DC7DDB0413949071D7575 SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x20F8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E43 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E88 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1EED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E5B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E43 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1EF9 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F15 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x1F66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1FA4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2006 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x200B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2062 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8CE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2139 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x20EF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP DUP5 PC CODESIZE 0xDF 0x26 0x5D 0xCD 0x2C COINBASE 0x2A SAR 0xC9 0xE9 MSIZE 0xC7 0xD0 DUP6 CALLDATACOPY 0xF8 LOG2 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A7231582095FE427A PUSH26 0xFC729C31791D92D9339C4852BF9F312706CF2AD1184898B89808 STATICCALL PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        571,
        7656
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x853828B6"
    },
    "38": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC1A3D44C"
    },
    "49": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD73792A9"
    },
    "60": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD73792A9"
    },
    "71": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4AA"
    },
    "75": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEC556889"
    },
    "82": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4B2"
    },
    "86": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEDC9AF95"
    },
    "93": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4BA"
    },
    "97": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "99": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF4B9FA75"
    },
    "104": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "105": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4C2"
    },
    "108": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "109": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF77C4791"
    },
    "115": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "116": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CA"
    },
    "119": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "120": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "123": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC1A3D44C"
    },
    "131": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x46C"
    },
    "135": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC7B9D530"
    },
    "142": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x474"
    },
    "146": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "148": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD0E30DB0"
    },
    "153": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "154": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49A"
    },
    "157": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "158": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD6F19262"
    },
    "164": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "165": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A2"
    },
    "168": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "169": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "172": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "173": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "175": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x955383BD"
    },
    "180": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "185": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "186": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x955383BD"
    },
    "191": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "192": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DE"
    },
    "195": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "196": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "197": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x97107D6D"
    },
    "202": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "203": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FB"
    },
    "206": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "207": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "208": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA6F19C84"
    },
    "213": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "214": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x421"
    },
    "217": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "218": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAB033EA9"
    },
    "224": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "225": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x429"
    },
    "228": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "229": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "230": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xAC1E5025"
    },
    "235": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "236": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x44F"
    },
    "239": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "240": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "243": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "244": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "246": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x853828B6"
    },
    "251": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "252": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A0"
    },
    "255": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "256": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "257": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x87788782"
    },
    "262": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "263": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A8"
    },
    "266": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "267": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "268": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8BC7E8C4"
    },
    "273": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "274": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B0"
    },
    "277": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "278": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "279": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x92EEFE9B"
    },
    "284": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "285": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B8"
    },
    "288": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "289": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "292": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "293": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "295": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x46C96AAC"
    },
    "300": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "301": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "306": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70897B23"
    },
    "311": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "312": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "316": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "317": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70897B23"
    },
    "322": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "323": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x363"
    },
    "326": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "327": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "328": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7165485D"
    },
    "333": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "334": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x380"
    },
    "337": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "338": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "339": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x722713F7"
    },
    "344": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "345": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x388"
    },
    "348": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "349": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "350": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7FEF901A"
    },
    "355": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "356": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x390"
    },
    "359": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "360": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "361": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8158676E"
    },
    "366": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "367": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x398"
    },
    "370": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "371": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "374": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "375": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "376": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "377": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x46C96AAC"
    },
    "382": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "383": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x325"
    },
    "386": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "387": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "388": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x51CFF8D9"
    },
    "393": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "394": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32D"
    },
    "397": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "398": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "399": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5AA6E675"
    },
    "404": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "405": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x353"
    },
    "408": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "409": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "410": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6A4874A1"
    },
    "415": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "416": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35B"
    },
    "419": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "420": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "423": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "424": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FE4A686"
    },
    "431": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "GT",
      "path": "19"
    },
    "432": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "437": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1FE4A686"
    },
    "442": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "443": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F0"
    },
    "446": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "447": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "448": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2E1A7D4D"
    },
    "453": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "454": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F8"
    },
    "457": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "458": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "459": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x3FC8CEF3"
    },
    "464": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "465": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x315"
    },
    "468": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "469": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "470": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4641257D"
    },
    "475": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "476": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31D"
    },
    "479": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "480": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x211"
    },
    "483": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMP",
      "path": "19"
    },
    "484": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "485": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "486": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD596CDF"
    },
    "491": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "492": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "496": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "497": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x11588086"
    },
    "502": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "503": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x235"
    },
    "506": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "507": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "508": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17D7DE7C"
    },
    "513": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "514": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24F"
    },
    "517": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "518": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "519": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1F1FCD51"
    },
    "524": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "EQ",
      "path": "19"
    },
    "525": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CC"
    },
    "528": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "529": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "530": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "DUP1",
      "path": "19"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        571,
        7656
      ],
      "op": "REVERT",
      "path": "19"
    },
    "534": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "535": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "538": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "540": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "DUP1",
      "path": "19"
    },
    "541": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "542": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "SUB",
      "path": "19"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "545": {
      "op": "DUP2"
    },
    "546": {
      "op": "LT"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x22C"
    },
    "551": {
      "op": "JUMPI"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "554": {
      "op": "DUP1"
    },
    "555": {
      "op": "REVERT"
    },
    "556": {
      "op": "JUMPDEST"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "559": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4D2"
    },
    "562": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "jump": "i",
      "offset": [
        2890,
        3066
      ],
      "op": "JUMP",
      "path": "19"
    },
    "563": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "564": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "STOP",
      "path": "19"
    },
    "565": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "566": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "569": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x524"
    },
    "572": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        7107,
        7221
      ],
      "op": "JUMP",
      "path": "19"
    },
    "573": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "574": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "576": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "DUP1",
      "path": "19"
    },
    "577": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "578": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "579": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "DUP3",
      "path": "19"
    },
    "580": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "581": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "582": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "583": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "DUP2",
      "path": "19"
    },
    "584": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "585": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SUB",
      "path": "19"
    },
    "586": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "588": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "ADD",
      "path": "19"
    },
    "589": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "590": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "RETURN",
      "path": "19"
    },
    "591": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "592": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x257"
    },
    "595": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B8"
    },
    "598": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "i",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "599": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "600": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "602": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "603": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "604": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "606": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "607": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP3",
      "path": "19"
    },
    "608": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "609": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "610": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "611": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP2",
      "path": "19"
    },
    "612": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "613": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ADD",
      "path": "19"
    },
    "614": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "615": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "616": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "617": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "618": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "619": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "620": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "621": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "622": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "623": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ADD",
      "path": "19"
    },
    "624": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "625": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP6",
      "path": "19"
    },
    "626": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ADD",
      "path": "19"
    },
    "627": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "628": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "629": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "630": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "631": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "633": {
      "op": "JUMPDEST"
    },
    "634": {
      "op": "DUP4"
    },
    "635": {
      "op": "DUP2"
    },
    "636": {
      "op": "LT"
    },
    "637": {
      "op": "ISZERO"
    },
    "638": {
      "op": "PUSH2",
      "value": "0x291"
    },
    "641": {
      "op": "JUMPI"
    },
    "642": {
      "op": "DUP2"
    },
    "643": {
      "op": "DUP2"
    },
    "644": {
      "op": "ADD"
    },
    "645": {
      "op": "MLOAD"
    },
    "646": {
      "op": "DUP4"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "op": "PUSH2",
      "value": "0x279"
    },
    "656": {
      "op": "JUMP"
    },
    "657": {
      "op": "JUMPDEST"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "660": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "661": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "662": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "663": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "664": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "665": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP2",
      "path": "19"
    },
    "666": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ADD",
      "path": "19"
    },
    "667": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "668": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "670": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "AND",
      "path": "19"
    },
    "671": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "672": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "673": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BE"
    },
    "676": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "677": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "678": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP3",
      "path": "19"
    },
    "679": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SUB",
      "path": "19"
    },
    "680": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "681": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "682": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "684": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP4",
      "path": "19"
    },
    "685": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "687": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SUB",
      "path": "19"
    },
    "688": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "691": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "EXP",
      "path": "19"
    },
    "692": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SUB",
      "path": "19"
    },
    "693": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "NOT",
      "path": "19"
    },
    "694": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "AND",
      "path": "19"
    },
    "695": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP2",
      "path": "19"
    },
    "696": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "697": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "699": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "ADD",
      "path": "19"
    },
    "700": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "701": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "702": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "703": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "704": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "705": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "706": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "707": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "POP",
      "path": "19"
    },
    "708": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "710": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "711": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "DUP1",
      "path": "19"
    },
    "712": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "713": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SUB",
      "path": "19"
    },
    "714": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "715": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "RETURN",
      "path": "19"
    },
    "716": {
      "offset": [
        714,
        796
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "717": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "720": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5EF"
    },
    "723": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "i",
      "offset": [
        714,
        796
      ],
      "op": "JUMP",
      "path": "19"
    },
    "724": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "725": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "727": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "DUP1",
      "path": "19"
    },
    "728": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "offset": [
        714,
        796
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "738": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "739": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "AND",
      "path": "19"
    },
    "740": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "DUP3",
      "path": "19"
    },
    "741": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "742": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "743": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "744": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "DUP2",
      "path": "19"
    },
    "745": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "746": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "SUB",
      "path": "19"
    },
    "747": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "749": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "ADD",
      "path": "19"
    },
    "750": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "751": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        714,
        796
      ],
      "op": "RETURN",
      "path": "19"
    },
    "752": {
      "offset": [
        1757,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "753": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        1757,
        1782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "756": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        1757,
        1782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x601"
    },
    "759": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "i",
      "offset": [
        1757,
        1782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "760": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "761": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "764": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "766": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "DUP1",
      "path": "19"
    },
    "767": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "768": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "SUB",
      "path": "19"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "op": "DUP2"
    },
    "772": {
      "op": "LT"
    },
    "773": {
      "op": "ISZERO"
    },
    "774": {
      "op": "PUSH2",
      "value": "0x30E"
    },
    "777": {
      "op": "JUMPI"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "780": {
      "op": "DUP1"
    },
    "781": {
      "op": "REVERT"
    },
    "782": {
      "op": "JUMPDEST"
    },
    "783": {
      "op": "POP"
    },
    "784": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "785": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x610"
    },
    "788": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3982,
        4691
      ],
      "op": "JUMP",
      "path": "19"
    },
    "789": {
      "offset": [
        976,
        1058
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "790": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        976,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "793": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        976,
        1058
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8D4"
    },
    "796": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        976,
        1058
      ],
      "op": "JUMP",
      "path": "19"
    },
    "797": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "798": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "801": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8EC"
    },
    "804": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5446,
        6979
      ],
      "op": "JUMP",
      "path": "19"
    },
    "805": {
      "offset": [
        1368,
        1451
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "806": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        1368,
        1451
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "809": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        1368,
        1451
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F9"
    },
    "812": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1368,
        1451
      ],
      "op": "JUMP",
      "path": "19"
    },
    "813": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "814": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "817": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "819": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "DUP1",
      "path": "19"
    },
    "820": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "821": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "SUB",
      "path": "19"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "op": "DUP2"
    },
    "825": {
      "op": "LT"
    },
    "826": {
      "op": "ISZERO"
    },
    "827": {
      "op": "PUSH2",
      "value": "0x343"
    },
    "830": {
      "op": "JUMPI"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "op": "REVERT"
    },
    "835": {
      "op": "JUMPDEST"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "AND",
      "path": "19"
    },
    "847": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1111"
    },
    "850": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3527,
        3907
      ],
      "op": "JUMP",
      "path": "19"
    },
    "851": {
      "offset": [
        1695,
        1720
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "852": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        1695,
        1720
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "855": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        1695,
        1720
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1300"
    },
    "858": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1695,
        1720
      ],
      "op": "JUMP",
      "path": "19"
    },
    "859": {
      "offset": [
        802,
        883
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "860": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        802,
        883
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "863": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        802,
        883
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x130F"
    },
    "866": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        802,
        883
      ],
      "op": "JUMP",
      "path": "19"
    },
    "867": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "868": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "871": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "873": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "DUP1",
      "path": "19"
    },
    "874": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "875": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "SUB",
      "path": "19"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "878": {
      "op": "DUP2"
    },
    "879": {
      "op": "LT"
    },
    "880": {
      "op": "ISZERO"
    },
    "881": {
      "op": "PUSH2",
      "value": "0x379"
    },
    "884": {
      "op": "JUMPI"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "887": {
      "op": "DUP1"
    },
    "888": {
      "op": "REVERT"
    },
    "889": {
      "op": "JUMPDEST"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "892": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1327"
    },
    "895": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        2716,
        2884
      ],
      "op": "JUMP",
      "path": "19"
    },
    "896": {
      "offset": [
        1189,
        1272
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "897": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        1189,
        1272
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "900": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        1189,
        1272
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1379"
    },
    "903": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        1189,
        1272
      ],
      "op": "JUMP",
      "path": "19"
    },
    "904": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7227,
        7338
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "905": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7227,
        7338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "908": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7227,
        7338
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1391"
    },
    "911": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7227,
        7338
      ],
      "op": "JUMP",
      "path": "19"
    },
    "912": {
      "offset": [
        1458,
        1487
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "913": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1458,
        1487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "916": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1458,
        1487
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13B7"
    },
    "919": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1458,
        1487
      ],
      "op": "JUMP",
      "path": "19"
    },
    "920": {
      "offset": [
        1534,
        1570
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "921": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1534,
        1570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "924": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1534,
        1570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13BD"
    },
    "927": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1534,
        1570
      ],
      "op": "JUMP",
      "path": "19"
    },
    "928": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "929": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "932": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13C3"
    },
    "935": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4910,
        5341
      ],
      "op": "JUMP",
      "path": "19"
    },
    "936": {
      "offset": [
        1493,
        1528
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "937": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1493,
        1528
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "940": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1493,
        1528
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1586"
    },
    "943": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1493,
        1528
      ],
      "op": "JUMP",
      "path": "19"
    },
    "944": {
      "offset": [
        1576,
        1608
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "945": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1576,
        1608
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "948": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1576,
        1608
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x158C"
    },
    "951": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1576,
        1608
      ],
      "op": "JUMP",
      "path": "19"
    },
    "952": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "953": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "956": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "958": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "DUP1",
      "path": "19"
    },
    "959": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "960": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "SUB",
      "path": "19"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "LT"
    },
    "965": {
      "op": "ISZERO"
    },
    "966": {
      "op": "PUSH2",
      "value": "0x3CE"
    },
    "969": {
      "op": "JUMPI"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "REVERT"
    },
    "974": {
      "op": "JUMPDEST"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "op": "SUB"
    },
    "985": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "AND",
      "path": "19"
    },
    "986": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1592"
    },
    "989": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "jump": "i",
      "offset": [
        7502,
        7654
      ],
      "op": "JUMP",
      "path": "19"
    },
    "990": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "991": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "994": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "996": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "DUP1",
      "path": "19"
    },
    "997": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "998": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "SUB",
      "path": "19"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1001": {
      "op": "DUP2"
    },
    "1002": {
      "op": "LT"
    },
    "1003": {
      "op": "ISZERO"
    },
    "1004": {
      "op": "PUSH2",
      "value": "0x3F4"
    },
    "1007": {
      "op": "JUMPI"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1010": {
      "op": "DUP1"
    },
    "1011": {
      "op": "REVERT"
    },
    "1012": {
      "op": "JUMPDEST"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1015": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1601"
    },
    "1018": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        2400,
        2540
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1019": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1020": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1023": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1025": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1026": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1027": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "SUB",
      "path": "19"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "op": "DUP2"
    },
    "1031": {
      "op": "LT"
    },
    "1032": {
      "op": "ISZERO"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x411"
    },
    "1036": {
      "op": "JUMPI"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1039": {
      "op": "DUP1"
    },
    "1040": {
      "op": "REVERT"
    },
    "1041": {
      "op": "JUMPDEST"
    },
    "1042": {
      "op": "POP"
    },
    "1043": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "AND",
      "path": "19"
    },
    "1053": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1653"
    },
    "1056": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        3072,
        3204
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1057": {
      "offset": [
        1279,
        1362
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1058": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        1279,
        1362
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "1061": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        1279,
        1362
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16C2"
    },
    "1064": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "jump": "i",
      "offset": [
        1279,
        1362
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1065": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1066": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1069": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1071": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1072": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1073": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "SUB",
      "path": "19"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1076": {
      "op": "DUP2"
    },
    "1077": {
      "op": "LT"
    },
    "1078": {
      "op": "ISZERO"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x43F"
    },
    "1082": {
      "op": "JUMPI"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "DUP1"
    },
    "1086": {
      "op": "REVERT"
    },
    "1087": {
      "op": "JUMPDEST"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "AND",
      "path": "19"
    },
    "1099": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16DA"
    },
    "1102": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        7344,
        7496
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1103": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1104": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1107": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1109": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1110": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1111": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "SUB",
      "path": "19"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1114": {
      "op": "DUP2"
    },
    "1115": {
      "op": "LT"
    },
    "1116": {
      "op": "ISZERO"
    },
    "1117": {
      "op": "PUSH2",
      "value": "0x465"
    },
    "1120": {
      "op": "JUMPI"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1123": {
      "op": "DUP1"
    },
    "1124": {
      "op": "REVERT"
    },
    "1125": {
      "op": "JUMPDEST"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1128": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1749"
    },
    "1131": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        2546,
        2710
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1132": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        6985,
        7101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1133": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        6985,
        7101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "1136": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        6985,
        7101
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x179B"
    },
    "1139": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        6985,
        7101
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1140": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1141": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1144": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1146": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1147": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1148": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "SUB",
      "path": "19"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1151": {
      "op": "DUP2"
    },
    "1152": {
      "op": "LT"
    },
    "1153": {
      "op": "ISZERO"
    },
    "1154": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1157": {
      "op": "JUMPI"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1160": {
      "op": "DUP1"
    },
    "1161": {
      "op": "REVERT"
    },
    "1162": {
      "op": "JUMPDEST"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "op": "SUB"
    },
    "1173": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "AND",
      "path": "19"
    },
    "1174": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17EA"
    },
    "1177": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2214,
        2394
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1178": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3210,
        3447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1179": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3210,
        3447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1182": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3210,
        3447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x186E"
    },
    "1185": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3210,
        3447
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1186": {
      "offset": [
        1789,
        1810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1187": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1789,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "1190": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1789,
        1810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19AE"
    },
    "1193": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1789,
        1810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1194": {
      "offset": [
        1614,
        1661
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1195": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1614,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23D"
    },
    "1198": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1614,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19B4"
    },
    "1201": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1614,
        1661
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1202": {
      "offset": [
        1668,
        1688
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1203": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1668,
        1688
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "1206": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1668,
        1688
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19BA"
    },
    "1209": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1668,
        1688
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1210": {
      "offset": [
        889,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1211": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        889,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "1214": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        889,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19C9"
    },
    "1217": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        889,
        970
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1218": {
      "offset": [
        1102,
        1183
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1219": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1102,
        1183
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "1222": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1102,
        1183
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19E1"
    },
    "1225": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1102,
        1183
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1226": {
      "offset": [
        1726,
        1751
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1227": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1726,
        1751
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D4"
    },
    "1230": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1726,
        1751
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19F9"
    },
    "1233": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1726,
        1751
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1234": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2890,
        3066
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1235": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2987,
        2997
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 0,
      "value": "0x5"
    },
    "1237": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2987,
        2997
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2987,
        2997
      ],
      "op": "AND",
      "path": "19"
    },
    "1247": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2973,
        2983
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1248": {
      "branch": 74,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2973,
        2997
      ],
      "op": "EQ",
      "path": "19"
    },
    "1249": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51F"
    },
    "1252": {
      "branch": 74,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1253": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1255": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1256": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1265": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1266": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1268": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1270": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1271": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "ADD",
      "path": "19"
    },
    "1272": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1273": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1275": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1277": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1278": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "ADD",
      "path": "19"
    },
    "1279": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1280": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1297": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1298": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "ADD",
      "path": "19"
    },
    "1299": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1300": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1301": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1302": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1303": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1304": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1305": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "SUB",
      "path": "19"
    },
    "1306": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1308": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "ADD",
      "path": "19"
    },
    "1309": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1310": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1311": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        2965,
        3013
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1312": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        3023,
        3039
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 1,
      "value": "0x2"
    },
    "1314": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "offset": [
        3023,
        3059
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1315": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategistReward",
      "jump": "o",
      "offset": [
        2890,
        3066
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1316": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1317": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 2,
      "value": "0x4"
    },
    "1319": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1320": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1321": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1323": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1324": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1325": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1334": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1335": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "1356": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1357": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1358": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "ADD",
      "path": "19"
    },
    "1359": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1360": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1361": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1362": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1363": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1364": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7153,
        7160
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1366": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7153,
        7160
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "op": "SUB"
    },
    "1375": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1376": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1377": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "AND",
      "path": "19"
    },
    "1378": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1379": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7207
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "1384": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7207
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1385": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1387": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1388": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1389": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "ADD",
      "path": "19"
    },
    "1390": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1391": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1393": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1394": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1395": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1396": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1397": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1398": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SUB",
      "path": "19"
    },
    "1399": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "ADD",
      "path": "19"
    },
    "1400": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1401": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7191,
        7196
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1402": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1403": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1404": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1405": {
      "op": "DUP1"
    },
    "1406": {
      "op": "ISZERO"
    },
    "1407": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "1410": {
      "op": "JUMPI"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1413": {
      "op": "DUP1"
    },
    "1414": {
      "op": "REVERT"
    },
    "1415": {
      "op": "JUMPDEST"
    },
    "1416": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "POP",
      "path": "19"
    },
    "1417": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "GAS",
      "path": "19"
    },
    "1418": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1419": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1420": {
      "op": "DUP1"
    },
    "1421": {
      "op": "ISZERO"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x59B"
    },
    "1425": {
      "op": "JUMPI"
    },
    "1426": {
      "op": "RETURNDATASIZE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "DUP1"
    },
    "1430": {
      "op": "RETURNDATACOPY"
    },
    "1431": {
      "op": "RETURNDATASIZE"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1434": {
      "op": "REVERT"
    },
    "1435": {
      "op": "JUMPDEST"
    },
    "1436": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "POP",
      "path": "19"
    },
    "1437": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "POP",
      "path": "19"
    },
    "1438": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "POP",
      "path": "19"
    },
    "1439": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "POP",
      "path": "19"
    },
    "1440": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1442": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1443": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1446": {
      "op": "DUP2"
    },
    "1447": {
      "op": "LT"
    },
    "1448": {
      "op": "ISZERO"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B1"
    },
    "1452": {
      "op": "JUMPI"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1455": {
      "op": "DUP1"
    },
    "1456": {
      "op": "REVERT"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1460": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7179,
        7214
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "offset": [
        7107,
        7221
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1463": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        7107,
        7221
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1464": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1465": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 3,
      "value": "0x40"
    },
    "1467": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1468": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1469": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1470": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1471": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "ADD",
      "path": "19"
    },
    "1472": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1473": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1474": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1475": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1477": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1478": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1479": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x53747261746567794375727665436F6D706F756E64566F74657250726F787900"
    },
    "1512": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1514": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1515": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "ADD",
      "path": "19"
    },
    "1516": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2161,
        2201
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1517": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        2094,
        2208
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1518": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "o",
      "offset": [
        2094,
        2208
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1519": {
      "offset": [
        714,
        796
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1522": {
      "op": "DUP1"
    },
    "1523": {
      "op": "MLOAD"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1526": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "1529": {
      "op": "DUP4"
    },
    "1530": {
      "op": "CODECOPY"
    },
    "1531": {
      "op": "DUP2"
    },
    "1532": {
      "op": "MLOAD"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "offset": [
        714,
        796
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1536": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "o",
      "offset": [
        714,
        796
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1537": {
      "offset": [
        1757,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1538": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        1757,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1540": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        1757,
        1782
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "op": "SUB"
    },
    "1549": {
      "offset": [
        1757,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "1550": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "offset": [
        1757,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1551": {
      "fn": "StrategyCurveCompoundVoterProxy.getName",
      "jump": "o",
      "offset": [
        1757,
        1782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1552": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1553": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4058,
        4068
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 4,
      "value": "0x6"
    },
    "1555": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4058,
        4068
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1562": {
      "op": "SHL"
    },
    "1563": {
      "op": "SUB"
    },
    "1564": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4058,
        4068
      ],
      "op": "AND",
      "path": "19"
    },
    "1565": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4044,
        4054
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1566": {
      "branch": 75,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4044,
        4068
      ],
      "op": "EQ",
      "path": "19"
    },
    "1567": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x65D"
    },
    "1570": {
      "branch": 75,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1571": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1573": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1574": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1583": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1584": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1586": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1588": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1589": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "ADD",
      "path": "19"
    },
    "1590": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1591": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "1593": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1595": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1596": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "ADD",
      "path": "19"
    },
    "1597": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1598": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1615": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1616": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "ADD",
      "path": "19"
    },
    "1617": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1618": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1619": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1620": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1621": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1622": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1623": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "SUB",
      "path": "19"
    },
    "1624": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1626": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "ADD",
      "path": "19"
    },
    "1627": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1628": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1629": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4036,
        4084
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1630": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1632": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1633": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1634": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1643": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1644": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4144,
        4148
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "1645": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1647": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1648": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "ADD",
      "path": "19"
    },
    "1649": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1650": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1651": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1652": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4094,
        4110
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1654": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4094,
        4110
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1657": {
      "op": "DUP1"
    },
    "1658": {
      "op": "MLOAD"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1661": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "1664": {
      "op": "DUP4"
    },
    "1665": {
      "op": "CODECOPY"
    },
    "1666": {
      "op": "DUP2"
    },
    "1667": {
      "op": "MLOAD"
    },
    "1668": {
      "op": "SWAP2"
    },
    "1669": {
      "op": "MSTORE"
    },
    "1670": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1671": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4135
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "1676": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4135
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1677": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1679": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1680": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1681": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "ADD",
      "path": "19"
    },
    "1682": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1683": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1685": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1686": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1687": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1688": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1689": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1690": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1691": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SUB",
      "path": "19"
    },
    "1692": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "ADD",
      "path": "19"
    },
    "1693": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1694": {
      "offset": [
        753,
        795
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1695": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1696": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1697": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1698": {
      "op": "DUP1"
    },
    "1699": {
      "op": "ISZERO"
    },
    "1700": {
      "op": "PUSH2",
      "value": "0x6AC"
    },
    "1703": {
      "op": "JUMPI"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1706": {
      "op": "DUP1"
    },
    "1707": {
      "op": "REVERT"
    },
    "1708": {
      "op": "JUMPDEST"
    },
    "1709": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "POP",
      "path": "19"
    },
    "1710": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "GAS",
      "path": "19"
    },
    "1711": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1712": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1713": {
      "op": "DUP1"
    },
    "1714": {
      "op": "ISZERO"
    },
    "1715": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "1718": {
      "op": "JUMPI"
    },
    "1719": {
      "op": "RETURNDATASIZE"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1722": {
      "op": "DUP1"
    },
    "1723": {
      "op": "RETURNDATACOPY"
    },
    "1724": {
      "op": "RETURNDATASIZE"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1727": {
      "op": "REVERT"
    },
    "1728": {
      "op": "JUMPDEST"
    },
    "1729": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "POP",
      "path": "19"
    },
    "1730": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "POP",
      "path": "19"
    },
    "1731": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "POP",
      "path": "19"
    },
    "1732": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "POP",
      "path": "19"
    },
    "1733": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1735": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1736": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1739": {
      "op": "DUP2"
    },
    "1740": {
      "op": "LT"
    },
    "1741": {
      "op": "ISZERO"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x6D6"
    },
    "1745": {
      "op": "JUMPI"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1748": {
      "op": "DUP1"
    },
    "1749": {
      "op": "REVERT"
    },
    "1750": {
      "op": "JUMPDEST"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1753": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4113,
        4150
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4164,
        4182
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1756": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4164,
        4182
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1757": {
      "branch": 76,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4164,
        4182
      ],
      "op": "LT",
      "path": "19"
    },
    "1758": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4160,
        4300
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1759": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4160,
        4300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x70F"
    },
    "1762": {
      "branch": 76,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4160,
        4300
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1763": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4208,
        4244
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 5,
      "value": "0x6FA"
    },
    "1766": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4243
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F5"
    },
    "1769": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4229
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1770": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4234,
        4242
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1771": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4243
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1776": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4233
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A08"
    },
    "1779": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4243
      ],
      "op": "AND",
      "path": "19"
    },
    "1780": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4222,
        4243
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1781": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4222,
        4243
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1782": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4208,
        4221
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A53"
    },
    "1785": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4208,
        4244
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1786": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4208,
        4244
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1787": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4198,
        4244
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4268,
        4289
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 6,
      "value": "0x70C"
    },
    "1792": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4198,
        4244
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1793": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4280,
        4288
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1794": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4268,
        4289
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1799": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4268,
        4279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B04"
    },
    "1802": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4268,
        4289
      ],
      "op": "AND",
      "path": "19"
    },
    "1803": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4268,
        4289
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1804": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4268,
        4289
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1805": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4258,
        4289
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1806": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4258,
        4289
      ],
      "op": "POP",
      "path": "19"
    },
    "1807": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4160,
        4300
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1808": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4310,
        4322
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1810": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4372
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x738"
    },
    "1813": {
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "1816": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72C"
    },
    "1819": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4337,
        4350
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "1821": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4337,
        4350
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1822": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4332
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1823": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4336
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B5E"
    },
    "1826": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4336
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1827": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1828": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1829": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1834": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "AND",
      "path": "19"
    },
    "1835": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4325,
        4351
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1836": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4351
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1837": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4355
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1838": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4372
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1843": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4355
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BB7"
    },
    "1846": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4372
      ],
      "op": "AND",
      "path": "19"
    },
    "1847": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4325,
        4372
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1848": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4325,
        4372
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1849": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4310,
        4372
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1850": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4310,
        4372
      ],
      "op": "POP",
      "path": "19"
    },
    "1851": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4383,
        4449
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 7,
      "value": "0x7D3"
    },
    "1854": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "1856": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1858": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1859": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1860": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1861": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "1864": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "EXP",
      "path": "19"
    },
    "1865": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1866": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "DIV",
      "path": "19"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "op": "SUB"
    },
    "1875": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4421,
        4431
      ],
      "op": "AND",
      "path": "19"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4440
      ],
      "op": "AND",
      "path": "19"
    },
    "1885": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4440
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EC5A894"
    },
    "1890": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1892": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1893": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1894": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1899": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "AND",
      "path": "19"
    },
    "1900": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "1902": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "SHL",
      "path": "19"
    },
    "1903": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1904": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1905": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1907": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "ADD",
      "path": "19"
    },
    "1908": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1910": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1912": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1913": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1914": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1915": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "SUB",
      "path": "19"
    },
    "1916": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1917": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1918": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1919": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1920": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "ISZERO"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1926": {
      "op": "JUMPI"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1929": {
      "op": "DUP1"
    },
    "1930": {
      "op": "REVERT"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "POP",
      "path": "19"
    },
    "1933": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "GAS",
      "path": "19"
    },
    "1934": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1935": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1936": {
      "op": "DUP1"
    },
    "1937": {
      "op": "ISZERO"
    },
    "1938": {
      "op": "PUSH2",
      "value": "0x79F"
    },
    "1941": {
      "op": "JUMPI"
    },
    "1942": {
      "op": "RETURNDATASIZE"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "DUP1"
    },
    "1946": {
      "op": "RETURNDATACOPY"
    },
    "1947": {
      "op": "RETURNDATASIZE"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "REVERT"
    },
    "1951": {
      "op": "JUMPDEST"
    },
    "1952": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "POP",
      "path": "19"
    },
    "1953": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "POP",
      "path": "19"
    },
    "1954": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "POP",
      "path": "19"
    },
    "1955": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "POP",
      "path": "19"
    },
    "1956": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1958": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1959": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1962": {
      "op": "DUP2"
    },
    "1963": {
      "op": "LT"
    },
    "1964": {
      "op": "ISZERO"
    },
    "1965": {
      "op": "PUSH2",
      "value": "0x7B5"
    },
    "1968": {
      "op": "JUMPI"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1971": {
      "op": "DUP1"
    },
    "1972": {
      "op": "REVERT"
    },
    "1973": {
      "op": "JUMPDEST"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4409,
        4442
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1978": {
      "op": "DUP1"
    },
    "1979": {
      "op": "MLOAD"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "1985": {
      "op": "DUP4"
    },
    "1986": {
      "op": "CODECOPY"
    },
    "1987": {
      "op": "DUP2"
    },
    "1988": {
      "op": "MLOAD"
    },
    "1989": {
      "op": "SWAP2"
    },
    "1990": {
      "op": "MSTORE"
    },
    "1991": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1992": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4444,
        4448
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1993": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4383,
        4449
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1998": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4383,
        4408
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "2001": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4383,
        4449
      ],
      "op": "AND",
      "path": "19"
    },
    "2002": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4383,
        4449
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2003": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4383,
        4449
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2004": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4488,
        4498
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "2006": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4488,
        4498
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2007": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2009": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2010": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2011": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2020": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2023": {
      "op": "DUP1"
    },
    "2024": {
      "op": "MLOAD"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2027": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "2030": {
      "op": "DUP4"
    },
    "2031": {
      "op": "CODECOPY"
    },
    "2032": {
      "op": "DUP2"
    },
    "2033": {
      "op": "MLOAD"
    },
    "2034": {
      "op": "SWAP2"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2038": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2039": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "ADD",
      "path": "19"
    },
    "2040": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2041": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2042": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2043": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4459,
        4473
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2045": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4459,
        4473
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "op": "SUB"
    },
    "2054": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4488,
        4498
      ],
      "op": "AND",
      "path": "19"
    },
    "2055": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4488,
        4498
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2056": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4506
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA622EE7C"
    },
    "2061": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4506
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2062": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2064": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2065": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2066": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "ADD",
      "path": "19"
    },
    "2067": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2068": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2070": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2071": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2072": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2073": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2074": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2075": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SUB",
      "path": "19"
    },
    "2076": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "ADD",
      "path": "19"
    },
    "2077": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2078": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4488,
        4498
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2079": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2080": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2081": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2082": {
      "op": "DUP1"
    },
    "2083": {
      "op": "ISZERO"
    },
    "2084": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2087": {
      "op": "JUMPI"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2090": {
      "op": "DUP1"
    },
    "2091": {
      "op": "REVERT"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "POP",
      "path": "19"
    },
    "2094": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "GAS",
      "path": "19"
    },
    "2095": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "2096": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2097": {
      "op": "DUP1"
    },
    "2098": {
      "op": "ISZERO"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x840"
    },
    "2102": {
      "op": "JUMPI"
    },
    "2103": {
      "op": "RETURNDATASIZE"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2106": {
      "op": "DUP1"
    },
    "2107": {
      "op": "RETURNDATACOPY"
    },
    "2108": {
      "op": "RETURNDATASIZE"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2111": {
      "op": "REVERT"
    },
    "2112": {
      "op": "JUMPDEST"
    },
    "2113": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "POP",
      "path": "19"
    },
    "2114": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "POP",
      "path": "19"
    },
    "2115": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "POP",
      "path": "19"
    },
    "2116": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "POP",
      "path": "19"
    },
    "2117": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2119": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2120": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2123": {
      "op": "DUP2"
    },
    "2124": {
      "op": "LT"
    },
    "2125": {
      "op": "ISZERO"
    },
    "2126": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "2129": {
      "op": "JUMPI"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2132": {
      "op": "DUP1"
    },
    "2133": {
      "op": "REVERT"
    },
    "2134": {
      "op": "JUMPDEST"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2137": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4476,
        4521
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4539,
        4559
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 8
    },
    "2148": {
      "branch": 77,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4539,
        4559
      ],
      "op": "AND",
      "path": "19"
    },
    "2149": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x89E"
    },
    "2152": {
      "branch": 77,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2153": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2155": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2156": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2165": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2166": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2168": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2170": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2171": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "ADD",
      "path": "19"
    },
    "2172": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2173": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "2175": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2177": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2178": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "ADD",
      "path": "19"
    },
    "2179": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2180": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2192": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2193": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "ADD",
      "path": "19"
    },
    "2194": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2195": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2196": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2197": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2198": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2199": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2200": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "SUB",
      "path": "19"
    },
    "2201": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2203": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "ADD",
      "path": "19"
    },
    "2204": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2205": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2206": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4531,
        4570
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2207": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4684
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 9,
      "value": "0x8CE"
    },
    "2210": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4658,
        4664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2211": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4683
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8B2"
    },
    "2214": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4673
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2215": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4678,
        4682
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2216": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4683
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2221": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4677
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A08"
    },
    "2224": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4683
      ],
      "op": "AND",
      "path": "19"
    },
    "2225": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4666,
        4683
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2226": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4666,
        4683
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2229": {
      "op": "DUP1"
    },
    "2230": {
      "op": "MLOAD"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2233": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "2236": {
      "op": "DUP4"
    },
    "2237": {
      "op": "CODECOPY"
    },
    "2238": {
      "op": "DUP2"
    },
    "2239": {
      "op": "MLOAD"
    },
    "2240": {
      "op": "SWAP2"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2243": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2244": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4684
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2249": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4657
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "2252": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4684
      ],
      "op": "AND",
      "path": "19"
    },
    "2253": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4632,
        4684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2254": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        4632,
        4684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2255": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "POP",
      "path": "19"
    },
    "2256": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "POP",
      "path": "19"
    },
    "2257": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "POP",
      "path": "19"
    },
    "2258": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3982,
        4691
      ],
      "op": "POP",
      "path": "19"
    },
    "2259": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3982,
        4691
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2260": {
      "offset": [
        976,
        1058
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2261": {
      "offset": [
        1015,
        1057
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2282": {
      "offset": [
        976,
        1058
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2283": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        976,
        1058
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2284": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2285": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5504,
        5514
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 10,
      "value": "0x7"
    },
    "2287": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5504,
        5514
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5504,
        5514
      ],
      "op": "AND",
      "path": "19"
    },
    "2297": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5500
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2298": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5514
      ],
      "op": "EQ",
      "path": "19"
    },
    "2299": {
      "branch": 78,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5514
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2300": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5542
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x90F"
    },
    "2303": {
      "branch": 78,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5542
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5532,
        5542
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2307": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5532,
        5542
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "SUB"
    },
    "2316": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5532,
        5542
      ],
      "op": "AND",
      "path": "19"
    },
    "2317": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5518,
        5528
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2318": {
      "branch": 79,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5518,
        5542
      ],
      "op": "EQ",
      "path": "19"
    },
    "2319": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5490,
        5542
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2320": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x94E"
    },
    "2323": {
      "branch": 79,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2324": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2326": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2327": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2336": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2337": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2339": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2341": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2342": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "ADD",
      "path": "19"
    },
    "2343": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2344": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2346": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2348": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2349": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "ADD",
      "path": "19"
    },
    "2350": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2351": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2368": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2369": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "ADD",
      "path": "19"
    },
    "2370": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2371": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2372": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2373": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2374": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2375": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2376": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "SUB",
      "path": "19"
    },
    "2377": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2379": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "ADD",
      "path": "19"
    },
    "2380": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2381": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2382": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5482,
        5558
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2383": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 11,
      "value": "0x4"
    },
    "2385": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2386": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2387": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2389": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2390": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2391": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2400": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2401": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "2422": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2423": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2424": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "ADD",
      "path": "19"
    },
    "2425": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2426": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2427": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2428": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2429": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "SUB"
    },
    "2438": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2439": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2440": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "AND",
      "path": "19"
    },
    "2441": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2442": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5594
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE5C011E"
    },
    "2447": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5594
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2448": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2450": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2451": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2452": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "ADD",
      "path": "19"
    },
    "2453": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2454": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2456": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2457": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2458": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2459": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2460": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2461": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "SUB",
      "path": "19"
    },
    "2462": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "ADD",
      "path": "19"
    },
    "2463": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2464": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2465": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5580,
        5585
      ],
      "op": "DUP8",
      "path": "19"
    },
    "2466": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2467": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2468": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2469": {
      "op": "DUP1"
    },
    "2470": {
      "op": "ISZERO"
    },
    "2471": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2474": {
      "op": "JUMPI"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2477": {
      "op": "DUP1"
    },
    "2478": {
      "op": "REVERT"
    },
    "2479": {
      "op": "JUMPDEST"
    },
    "2480": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "POP",
      "path": "19"
    },
    "2481": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "GAS",
      "path": "19"
    },
    "2482": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "CALL",
      "path": "19"
    },
    "2483": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5568,
        5601
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2484": {
      "op": "DUP1"
    },
    "2485": {
      "op": "ISZERO"
    },
    "2486": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2489": {
      "op": "JUMPI"
    },
    "2490": {
      "op": "RETURNDATASIZE"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2493": {
      "op": "DUP1"
    },
    "2494": {
      "op": "RETURNDATACOPY"
    },
    "2495": {
      "op": "RETURNDATASIZE"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2498": {
      "op": "REVERT"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "POP"
    },
    "2501": {
      "op": "POP"
    },
    "2502": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2504": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2505": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2506": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2515": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2516": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5656,
        5660
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "2517": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2519": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2520": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "ADD",
      "path": "19"
    },
    "2521": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2522": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2523": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2524": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5611,
        5623
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2526": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5611,
        5623
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2549": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        840,
        882
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5647
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "2556": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5647
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2557": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2559": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2560": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2561": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "ADD",
      "path": "19"
    },
    "2562": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2563": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2565": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2566": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2567": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2568": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2569": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2570": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2571": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SUB",
      "path": "19"
    },
    "2572": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "ADD",
      "path": "19"
    },
    "2573": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2574": {
      "offset": [
        840,
        882
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2575": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2576": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2577": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2578": {
      "op": "DUP1"
    },
    "2579": {
      "op": "ISZERO"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2583": {
      "op": "JUMPI"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2586": {
      "op": "DUP1"
    },
    "2587": {
      "op": "REVERT"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "POP",
      "path": "19"
    },
    "2590": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "GAS",
      "path": "19"
    },
    "2591": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "2592": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2593": {
      "op": "DUP1"
    },
    "2594": {
      "op": "ISZERO"
    },
    "2595": {
      "op": "PUSH2",
      "value": "0xA30"
    },
    "2598": {
      "op": "JUMPI"
    },
    "2599": {
      "op": "RETURNDATASIZE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2602": {
      "op": "DUP1"
    },
    "2603": {
      "op": "RETURNDATACOPY"
    },
    "2604": {
      "op": "RETURNDATASIZE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2607": {
      "op": "REVERT"
    },
    "2608": {
      "op": "JUMPDEST"
    },
    "2609": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "POP",
      "path": "19"
    },
    "2610": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "POP",
      "path": "19"
    },
    "2611": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "POP",
      "path": "19"
    },
    "2612": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "POP",
      "path": "19"
    },
    "2613": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2615": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2616": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2619": {
      "op": "DUP2"
    },
    "2620": {
      "op": "LT"
    },
    "2621": {
      "op": "ISZERO"
    },
    "2622": {
      "op": "PUSH2",
      "value": "0xA46"
    },
    "2625": {
      "op": "JUMPI"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2628": {
      "op": "DUP1"
    },
    "2629": {
      "op": "REVERT"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2633": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5626,
        5662
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2634": {
      "op": "POP"
    },
    "2635": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5676,
        5684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2636": {
      "branch": 80,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5676,
        5684
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2637": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5672,
        6195
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCFB"
    },
    "2640": {
      "branch": 80,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5672,
        6195
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2641": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5700,
        5716
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2643": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5757
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA6D"
    },
    "2646": {
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "2649": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5736
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72C"
    },
    "2652": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5728,
        5735
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2654": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5728,
        5735
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2655": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5723
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2656": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5727
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B5E"
    },
    "2659": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5727
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2660": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5736
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2661": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5736
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2662": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5736
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2667": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5736
      ],
      "op": "AND",
      "path": "19"
    },
    "2668": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5719,
        5736
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2669": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5719,
        5757
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2670": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5700,
        5757
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5771,
        5812
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 12,
      "value": "0xAA8"
    },
    "2675": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2696": {
      "offset": [
        1408,
        1450
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2717": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5700,
        5757
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2718": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5771,
        5812
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2723": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5771,
        5795
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "2726": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5771,
        5812
      ],
      "op": "AND",
      "path": "19"
    },
    "2727": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5771,
        5812
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2728": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5771,
        5812
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2729": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5851
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 13,
      "value": "0xAB8"
    },
    "2732": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5837
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2733": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5842,
        5850
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2734": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5851
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2739": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A08"
    },
    "2742": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5851
      ],
      "op": "AND",
      "path": "19"
    },
    "2743": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5833,
        5851
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2744": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5833,
        5851
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2745": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5826,
        5851
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5866,
        5897
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 14,
      "value": "0xAF4"
    },
    "2750": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2771": {
      "offset": [
        927,
        969
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2792": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5895,
        5896
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2794": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5866,
        5897
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2799": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5866,
        5889
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C50"
    },
    "2802": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5866,
        5897
      ],
      "op": "AND",
      "path": "19"
    },
    "2803": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5866,
        5897
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2804": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5866,
        5897
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2805": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5911,
        5945
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 15,
      "value": "0xB2D"
    },
    "2808": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2829": {
      "offset": [
        927,
        969
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2850": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5940,
        5944
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2851": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5911,
        5945
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2856": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5911,
        5934
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C50"
    },
    "2859": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5911,
        5945
      ],
      "op": "AND",
      "path": "19"
    },
    "2860": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5911,
        5945
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2861": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5911,
        5945
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2862": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2864": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2865": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2866": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5998,
        5999
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2868": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2869": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2870": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2871": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2873": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2874": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "ADD",
      "path": "19"
    },
    "2875": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2876": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2877": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2878": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        5981
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "2880": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        5981
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2881": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2883": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2884": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "ADD",
      "path": "19"
    },
    "2885": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        5981
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2886": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        5981
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2887": {
      "op": "CODESIZE"
    },
    "2888": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2889": {
      "op": "CODECOPY"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "SWAP1"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5984,
        6000
      ],
      "op": "POP",
      "path": "19"
    },
    "2894": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        6000
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2895": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5960,
        6000
      ],
      "op": "POP",
      "path": "19"
    },
    "2896": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2917": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6018
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 16
    },
    "2918": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6019,
        6020
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2920": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2921": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2922": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2923": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "LT",
      "path": "19"
    },
    "2924": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB71"
    },
    "2927": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2928": {
      "dev": "Index out of range",
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2929": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2930": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2932": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "MUL",
      "path": "19"
    },
    "2933": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2935": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "ADD",
      "path": "19"
    },
    "2936": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6021
      ],
      "op": "ADD",
      "path": "19"
    },
    "2937": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "AND",
      "path": "19"
    },
    "2947": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2948": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2955": {
      "op": "SHL"
    },
    "2956": {
      "op": "SUB"
    },
    "2957": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "AND",
      "path": "19"
    },
    "2958": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2959": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2960": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "POP",
      "path": "19"
    },
    "2961": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6014,
        6027
      ],
      "op": "POP",
      "path": "19"
    },
    "2962": {
      "offset": [
        1015,
        1057
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2983": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6045
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 17
    },
    "2984": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6046,
        6047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2986": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2987": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2988": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2989": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "LT",
      "path": "19"
    },
    "2990": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBB3"
    },
    "2993": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2994": {
      "dev": "Index out of range",
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2995": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2996": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2998": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "MUL",
      "path": "19"
    },
    "2999": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3001": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "ADD",
      "path": "19"
    },
    "3002": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6048
      ],
      "op": "ADD",
      "path": "19"
    },
    "3003": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "op": "SUB"
    },
    "3012": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "AND",
      "path": "19"
    },
    "3013": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3014": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3021": {
      "op": "SHL"
    },
    "3022": {
      "op": "SUB"
    },
    "3023": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "AND",
      "path": "19"
    },
    "3024": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3025": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3026": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "POP",
      "path": "19"
    },
    "3027": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6041,
        6055
      ],
      "op": "POP",
      "path": "19"
    },
    "3028": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3049": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6073
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 18
    },
    "3050": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6074,
        6075
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3052": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3053": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3054": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3055": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "LT",
      "path": "19"
    },
    "3056": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBF5"
    },
    "3059": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3060": {
      "dev": "Index out of range",
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "INVALID",
      "path": "19"
    },
    "3061": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "op": "SUB"
    },
    "3070": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6082
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3071": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6082
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3072": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6082
      ],
      "op": "AND",
      "path": "19"
    },
    "3073": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3075": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3076": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3077": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "MUL",
      "path": "19"
    },
    "3078": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3079": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3080": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3081": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "ADD",
      "path": "19"
    },
    "3082": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3083": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3084": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6076
      ],
      "op": "ADD",
      "path": "19"
    },
    "3085": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6069,
        6082
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3086": {
      "offset": [
        927,
        969
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "3107": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6130
      ],
      "op": "PUSH4",
      "path": "19",
      "statement": 19,
      "value": "0x38ED1739"
    },
    "3112": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6131,
        6135
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3113": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6145,
        6146
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3115": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6149,
        6153
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3116": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6163,
        6167
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3117": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6183
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC3E"
    },
    "3120": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6173
      ],
      "op": "TIMESTAMP",
      "path": "19"
    },
    "3121": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6178,
        6182
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x708"
    },
    "3124": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6183
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3129": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6177
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B04"
    },
    "3132": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6183
      ],
      "op": "AND",
      "path": "19"
    },
    "3133": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6170,
        6183
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3134": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6170,
        6183
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3135": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3137": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3138": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3139": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3144": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "AND",
      "path": "19"
    },
    "3145": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3147": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SHL",
      "path": "19"
    },
    "3148": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3149": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3150": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3152": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3153": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3154": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3155": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3156": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3157": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3159": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3160": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3161": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3162": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3163": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3165": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3166": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3167": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3169": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3170": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "op": "SUB"
    },
    "3179": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "AND",
      "path": "19"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "SUB"
    },
    "3188": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "AND",
      "path": "19"
    },
    "3189": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3190": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3191": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3193": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3194": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3195": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3196": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3197": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3199": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3200": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3201": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3202": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SUB",
      "path": "19"
    },
    "3203": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3204": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3205": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3206": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3207": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3208": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3209": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3210": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3211": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3213": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3214": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3215": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3216": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3217": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3218": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3219": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3221": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3222": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3223": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3225": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MUL",
      "path": "19"
    },
    "3226": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3227": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3228": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3231": {
      "op": "JUMPDEST"
    },
    "3232": {
      "op": "DUP4"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "LT"
    },
    "3235": {
      "op": "ISZERO"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "DUP2"
    },
    "3241": {
      "op": "DUP2"
    },
    "3242": {
      "op": "ADD"
    },
    "3243": {
      "op": "MLOAD"
    },
    "3244": {
      "op": "DUP4"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3254": {
      "op": "JUMP"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3258": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3259": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3260": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3261": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3262": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ADD",
      "path": "19"
    },
    "3263": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "3264": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3265": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3266": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3267": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3268": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3269": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3270": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3271": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3273": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3275": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3276": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3277": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3278": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "SUB",
      "path": "19"
    },
    "3279": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3280": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3282": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3283": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3284": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3285": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3286": {
      "op": "DUP1"
    },
    "3287": {
      "op": "ISZERO"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "REVERT"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3298": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "GAS",
      "path": "19"
    },
    "3299": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "CALL",
      "path": "19"
    },
    "3300": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3301": {
      "op": "DUP1"
    },
    "3302": {
      "op": "ISZERO"
    },
    "3303": {
      "op": "PUSH2",
      "value": "0xCF4"
    },
    "3306": {
      "op": "JUMPI"
    },
    "3307": {
      "op": "RETURNDATASIZE"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3310": {
      "op": "DUP1"
    },
    "3311": {
      "op": "RETURNDATACOPY"
    },
    "3312": {
      "op": "RETURNDATASIZE"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "REVERT"
    },
    "3316": {
      "op": "JUMPDEST"
    },
    "3317": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3318": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3319": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3320": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6097,
        6184
      ],
      "op": "POP",
      "path": "19"
    },
    "3321": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5672,
        6195
      ],
      "op": "POP",
      "path": "19"
    },
    "3322": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5672,
        6195
      ],
      "op": "POP",
      "path": "19"
    },
    "3323": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5672,
        6195
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3324": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3326": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3327": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3328": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3335": {
      "op": "SHL"
    },
    "3336": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3337": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3338": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6249,
        6253
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3339": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3341": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3342": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "ADD",
      "path": "19"
    },
    "3343": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3344": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3345": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3346": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6204,
        6216
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3348": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6204,
        6216
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3349": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3370": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        1140,
        1182
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3371": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6240
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3376": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6240
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3377": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3379": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3380": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3381": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "ADD",
      "path": "19"
    },
    "3382": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3383": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3385": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3386": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3387": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3388": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3389": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3390": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3391": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SUB",
      "path": "19"
    },
    "3392": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "ADD",
      "path": "19"
    },
    "3393": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3394": {
      "offset": [
        1140,
        1182
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3395": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3396": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3397": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3398": {
      "op": "DUP1"
    },
    "3399": {
      "op": "ISZERO"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3403": {
      "op": "JUMPI"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3406": {
      "op": "DUP1"
    },
    "3407": {
      "op": "REVERT"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "POP",
      "path": "19"
    },
    "3410": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "GAS",
      "path": "19"
    },
    "3411": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3412": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3413": {
      "op": "DUP1"
    },
    "3414": {
      "op": "ISZERO"
    },
    "3415": {
      "op": "PUSH2",
      "value": "0xD64"
    },
    "3418": {
      "op": "JUMPI"
    },
    "3419": {
      "op": "RETURNDATASIZE"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3422": {
      "op": "DUP1"
    },
    "3423": {
      "op": "RETURNDATACOPY"
    },
    "3424": {
      "op": "RETURNDATASIZE"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "REVERT"
    },
    "3428": {
      "op": "JUMPDEST"
    },
    "3429": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "POP",
      "path": "19"
    },
    "3430": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "POP",
      "path": "19"
    },
    "3431": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "POP",
      "path": "19"
    },
    "3432": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "POP",
      "path": "19"
    },
    "3433": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3435": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3436": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3439": {
      "op": "DUP2"
    },
    "3440": {
      "op": "LT"
    },
    "3441": {
      "op": "ISZERO"
    },
    "3442": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3445": {
      "op": "JUMPI"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3448": {
      "op": "DUP1"
    },
    "3449": {
      "op": "REVERT"
    },
    "3450": {
      "op": "JUMPDEST"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3453": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6219,
        6255
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6269,
        6277
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3456": {
      "branch": 81,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6269,
        6277
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3457": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6265,
        6447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEB4"
    },
    "3460": {
      "branch": 81,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6265,
        6447
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3461": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6293,
        6326
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 20,
      "value": "0xDBE"
    },
    "3464": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3485": {
      "offset": [
        1229,
        1271
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56"
    },
    "3506": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6324,
        6325
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3508": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6293,
        6326
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3513": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6293,
        6316
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C50"
    },
    "3516": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6293,
        6326
      ],
      "op": "AND",
      "path": "19"
    },
    "3517": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6293,
        6326
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3518": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6293,
        6326
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3519": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6340,
        6376
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 21,
      "value": "0xDF7"
    },
    "3522": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3543": {
      "offset": [
        1229,
        1271
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56"
    },
    "3564": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6371,
        6375
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3565": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6340,
        6376
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3570": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6340,
        6363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C50"
    },
    "3573": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6340,
        6376
      ],
      "op": "AND",
      "path": "19"
    },
    "3574": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6340,
        6376
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3575": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6340,
        6376
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3576": {
      "offset": [
        1229,
        1271
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "op": "SUB"
    },
    "3605": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6419
      ],
      "op": "AND",
      "path": "19",
      "statement": 22
    },
    "3606": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6419
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4515CEF3"
    },
    "3611": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3613": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3614": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3615": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3617": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3618": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3620": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3621": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3622": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6421,
        6425
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3623": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3624": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3625": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3627": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3628": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6427,
        6428
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3630": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3631": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3632": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3634": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3635": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6430,
        6431
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3637": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3638": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3639": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3640": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6434,
        6435
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3642": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3644": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3645": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3646": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3651": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "AND",
      "path": "19"
    },
    "3652": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3654": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "SHL",
      "path": "19"
    },
    "3655": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3656": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3657": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3659": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3660": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3661": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3662": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "3664": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3666": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MUL",
      "path": "19"
    },
    "3667": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3668": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3669": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3672": {
      "op": "JUMPDEST"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "DUP2"
    },
    "3675": {
      "op": "LT"
    },
    "3676": {
      "op": "ISZERO"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE70"
    },
    "3680": {
      "op": "JUMPI"
    },
    "3681": {
      "op": "DUP2"
    },
    "3682": {
      "op": "DUP2"
    },
    "3683": {
      "op": "ADD"
    },
    "3684": {
      "op": "MLOAD"
    },
    "3685": {
      "op": "DUP4"
    },
    "3686": {
      "op": "DUP3"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "MSTORE"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE58"
    },
    "3695": {
      "op": "JUMP"
    },
    "3696": {
      "op": "JUMPDEST"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3699": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3700": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3701": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3702": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3703": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3704": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3705": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3706": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3707": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3709": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ADD",
      "path": "19"
    },
    "3710": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3711": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3712": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3713": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3714": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3716": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3718": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3719": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3720": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3721": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "SUB",
      "path": "19"
    },
    "3722": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3723": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3725": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3726": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3727": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3728": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3729": {
      "op": "DUP1"
    },
    "3730": {
      "op": "ISZERO"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3734": {
      "op": "JUMPI"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "DUP1"
    },
    "3738": {
      "op": "REVERT"
    },
    "3739": {
      "op": "JUMPDEST"
    },
    "3740": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3741": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "GAS",
      "path": "19"
    },
    "3742": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "CALL",
      "path": "19"
    },
    "3743": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3744": {
      "op": "DUP1"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0xEAF"
    },
    "3749": {
      "op": "JUMPI"
    },
    "3750": {
      "op": "RETURNDATASIZE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "DUP1"
    },
    "3754": {
      "op": "RETURNDATACOPY"
    },
    "3755": {
      "op": "RETURNDATASIZE"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3758": {
      "op": "REVERT"
    },
    "3759": {
      "op": "JUMPDEST"
    },
    "3760": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3761": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3762": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3763": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6390,
        6436
      ],
      "op": "POP",
      "path": "19"
    },
    "3764": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6265,
        6447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3765": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3767": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3768": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3769": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3776": {
      "op": "SHL"
    },
    "3777": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3778": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3779": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6503,
        6507
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "3780": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3782": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3783": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "ADD",
      "path": "19"
    },
    "3784": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3785": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3786": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3787": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6456,
        6469
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3789": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6456,
        6469
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "MLOAD"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "3799": {
      "op": "DUP4"
    },
    "3800": {
      "op": "CODECOPY"
    },
    "3801": {
      "op": "DUP2"
    },
    "3802": {
      "op": "MLOAD"
    },
    "3803": {
      "op": "SWAP2"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3806": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6494
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "3811": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6494
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3812": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3814": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3815": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3816": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "ADD",
      "path": "19"
    },
    "3817": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3818": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3820": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3821": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3822": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3823": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3824": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3825": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3826": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SUB",
      "path": "19"
    },
    "3827": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "ADD",
      "path": "19"
    },
    "3828": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3829": {
      "offset": [
        753,
        795
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3830": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3831": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3832": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "ISZERO"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xF03"
    },
    "3838": {
      "op": "JUMPI"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3841": {
      "op": "DUP1"
    },
    "3842": {
      "op": "REVERT"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "POP",
      "path": "19"
    },
    "3845": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "GAS",
      "path": "19"
    },
    "3846": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3847": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "ISZERO"
    },
    "3850": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "3853": {
      "op": "JUMPI"
    },
    "3854": {
      "op": "RETURNDATASIZE"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3857": {
      "op": "DUP1"
    },
    "3858": {
      "op": "RETURNDATACOPY"
    },
    "3859": {
      "op": "RETURNDATASIZE"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "REVERT"
    },
    "3863": {
      "op": "JUMPDEST"
    },
    "3864": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "POP",
      "path": "19"
    },
    "3865": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "POP",
      "path": "19"
    },
    "3866": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "POP",
      "path": "19"
    },
    "3867": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "POP",
      "path": "19"
    },
    "3868": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3870": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3871": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "LT"
    },
    "3876": {
      "op": "ISZERO"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xF2D"
    },
    "3880": {
      "op": "JUMPI"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3883": {
      "op": "DUP1"
    },
    "3884": {
      "op": "REVERT"
    },
    "3885": {
      "op": "JUMPDEST"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3888": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6472,
        6509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6523,
        6532
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3891": {
      "branch": 82,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6523,
        6532
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3892": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6519,
        6863
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1045"
    },
    "3895": {
      "branch": 82,
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6519,
        6863
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3896": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6548,
        6560
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3898": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6609
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF54"
    },
    "3901": {
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "3904": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6588
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72C"
    },
    "3907": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6573,
        6587
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3909": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6573,
        6587
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3910": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6568
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3911": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6572
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B5E"
    },
    "3914": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6572
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3915": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6588
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3916": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6588
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3917": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6588
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3922": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6588
      ],
      "op": "AND",
      "path": "19"
    },
    "3923": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6563,
        6588
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3924": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6563,
        6609
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3925": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6548,
        6609
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3926": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6548,
        6609
      ],
      "op": "POP",
      "path": "19"
    },
    "3927": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6623,
        6638
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3929": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6689
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF73"
    },
    "3932": {
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "3935": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6668
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72C"
    },
    "3938": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6651,
        6667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3940": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6651,
        6667
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3941": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6646
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3942": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6650
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B5E"
    },
    "3945": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6650
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3946": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6668
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3947": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6668
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3948": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6668
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3953": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6668
      ],
      "op": "AND",
      "path": "19"
    },
    "3954": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6641,
        6668
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3955": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6641,
        6689
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3956": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6623,
        6689
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3957": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6623,
        6689
      ],
      "op": "POP",
      "path": "19"
    },
    "3958": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6703,
        6769
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 23,
      "value": "0x100E"
    },
    "3961": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3963": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3965": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3966": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3967": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3968": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "3971": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "EXP",
      "path": "19"
    },
    "3972": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3973": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "DIV",
      "path": "19"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "op": "SUB"
    },
    "3982": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6741,
        6751
      ],
      "op": "AND",
      "path": "19"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3989": {
      "op": "SHL"
    },
    "3990": {
      "op": "SUB"
    },
    "3991": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6760
      ],
      "op": "AND",
      "path": "19"
    },
    "3992": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6760
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EC5A894"
    },
    "3997": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3999": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4000": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4001": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4006": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "AND",
      "path": "19"
    },
    "4007": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "4009": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "SHL",
      "path": "19"
    },
    "4010": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4011": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4012": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4014": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "ADD",
      "path": "19"
    },
    "4015": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4017": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4019": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4020": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4021": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4022": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "SUB",
      "path": "19"
    },
    "4023": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4024": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4025": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4026": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4027": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "ISZERO"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xFC6"
    },
    "4033": {
      "op": "JUMPI"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4036": {
      "op": "DUP1"
    },
    "4037": {
      "op": "REVERT"
    },
    "4038": {
      "op": "JUMPDEST"
    },
    "4039": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "POP",
      "path": "19"
    },
    "4040": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "GAS",
      "path": "19"
    },
    "4041": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4042": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4043": {
      "op": "DUP1"
    },
    "4044": {
      "op": "ISZERO"
    },
    "4045": {
      "op": "PUSH2",
      "value": "0xFDA"
    },
    "4048": {
      "op": "JUMPI"
    },
    "4049": {
      "op": "RETURNDATASIZE"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4052": {
      "op": "DUP1"
    },
    "4053": {
      "op": "RETURNDATACOPY"
    },
    "4054": {
      "op": "RETURNDATASIZE"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4057": {
      "op": "REVERT"
    },
    "4058": {
      "op": "JUMPDEST"
    },
    "4059": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "POP",
      "path": "19"
    },
    "4060": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "POP",
      "path": "19"
    },
    "4061": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "POP",
      "path": "19"
    },
    "4062": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "POP",
      "path": "19"
    },
    "4063": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4065": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4066": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "DUP2"
    },
    "4070": {
      "op": "LT"
    },
    "4071": {
      "op": "ISZERO"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4075": {
      "op": "JUMPI"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4078": {
      "op": "DUP1"
    },
    "4079": {
      "op": "REVERT"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6729,
        6762
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4085": {
      "op": "DUP1"
    },
    "4086": {
      "op": "MLOAD"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "4092": {
      "op": "DUP4"
    },
    "4093": {
      "op": "CODECOPY"
    },
    "4094": {
      "op": "DUP2"
    },
    "4095": {
      "op": "MLOAD"
    },
    "4096": {
      "op": "SWAP2"
    },
    "4097": {
      "op": "MSTORE"
    },
    "4098": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4099": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6764,
        6768
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4100": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6703,
        6769
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4105": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6703,
        6728
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "4108": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6703,
        6769
      ],
      "op": "AND",
      "path": "19"
    },
    "4109": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6703,
        6769
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4110": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6703,
        6769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4111": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6809,
        6819
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 24,
      "value": "0x7"
    },
    "4113": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6809,
        6819
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4114": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6829
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x103A"
    },
    "4117": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6829
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4120": {
      "op": "DUP1"
    },
    "4121": {
      "op": "MLOAD"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "4127": {
      "op": "DUP4"
    },
    "4128": {
      "op": "CODECOPY"
    },
    "4129": {
      "op": "DUP2"
    },
    "4130": {
      "op": "MLOAD"
    },
    "4131": {
      "op": "SWAP2"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6809,
        6819
      ],
      "op": "AND",
      "path": "19"
    },
    "4143": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6821,
        6828
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4144": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6829
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4149": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "4152": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6829
      ],
      "op": "AND",
      "path": "19"
    },
    "4153": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6783,
        6829
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4154": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6783,
        6829
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4155": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6843,
        6852
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 25,
      "value": "0x1042"
    },
    "4158": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x186E"
    },
    "4161": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6843,
        6852
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4162": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6843,
        6852
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4163": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6519,
        6863
      ],
      "op": "POP",
      "path": "19"
    },
    "4164": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6519,
        6863
      ],
      "op": "POP",
      "path": "19"
    },
    "4165": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6519,
        6863
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4166": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 26,
      "value": "0x4"
    },
    "4168": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4169": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4170": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4172": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4173": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4174": {
      "op": "PUSH4",
      "value": "0x7C1E845D"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4181": {
      "op": "SHL"
    },
    "4182": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4183": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4184": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4185": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "op": "SUB"
    },
    "4194": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4195": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4196": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "AND",
      "path": "19"
    },
    "4197": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4198": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6895
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF83D08BA"
    },
    "4203": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6895
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4204": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4205": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4206": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "ADD",
      "path": "19"
    },
    "4207": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4208": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4210": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4211": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4212": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4213": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4214": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "SUB",
      "path": "19"
    },
    "4215": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "ADD",
      "path": "19"
    },
    "4216": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4217": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4218": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6884,
        6889
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4219": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4220": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4221": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4222": {
      "op": "DUP1"
    },
    "4223": {
      "op": "ISZERO"
    },
    "4224": {
      "op": "PUSH2",
      "value": "0x1088"
    },
    "4227": {
      "op": "JUMPI"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4230": {
      "op": "DUP1"
    },
    "4231": {
      "op": "REVERT"
    },
    "4232": {
      "op": "JUMPDEST"
    },
    "4233": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "POP",
      "path": "19"
    },
    "4234": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "GAS",
      "path": "19"
    },
    "4235": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "CALL",
      "path": "19"
    },
    "4236": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6872,
        6897
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4237": {
      "op": "DUP1"
    },
    "4238": {
      "op": "ISZERO"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4242": {
      "op": "JUMPI"
    },
    "4243": {
      "op": "RETURNDATASIZE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4246": {
      "op": "DUP1"
    },
    "4247": {
      "op": "RETURNDATACOPY"
    },
    "4248": {
      "op": "RETURNDATASIZE"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "REVERT"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6922
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 27,
      "value": "0x8"
    },
    "4257": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6922
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4258": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6933
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10B4"
    },
    "4261": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6933
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6922
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6927,
        6932
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4266": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6933
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4271": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6926
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B04"
    },
    "4274": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6933
      ],
      "op": "AND",
      "path": "19"
    },
    "4275": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6916,
        6933
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4276": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6916,
        6933
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4277": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6907,
        6913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "4279": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6907,
        6933
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4280": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6907,
        6933
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4281": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6907,
        6933
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4282": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x40"
    },
    "4284": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4285": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4286": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4287": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4288": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4289": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4291": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4292": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "ADD",
      "path": "19"
    },
    "4293": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4294": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4295": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4296": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4297": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4298": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4299": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xFA07446FAD45314351EB89109A154880278451332BB87F1824D435FE58DA5939"
    },
    "4332": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4333": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4334": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4335": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SUB",
      "path": "19"
    },
    "4336": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4337": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4338": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "ADD",
      "path": "19"
    },
    "4339": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4340": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        6948,
        6972
      ],
      "op": "LOG1",
      "path": "19"
    },
    "4341": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "POP",
      "path": "19"
    },
    "4342": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "POP",
      "path": "19"
    },
    "4343": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "offset": [
        5446,
        6979
      ],
      "op": "POP",
      "path": "19"
    },
    "4344": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "o",
      "offset": [
        5446,
        6979
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4345": {
      "offset": [
        1368,
        1451
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4346": {
      "offset": [
        1408,
        1450
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "4367": {
      "offset": [
        1368,
        1451
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4368": {
      "fn": "StrategyCurveCompoundVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1368,
        1451
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4369": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4370": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3627,
        3637
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 29,
      "value": "0x6"
    },
    "4372": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3627,
        3637
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4373": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3578,
        3593
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4375": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3578,
        3593
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3627,
        3637
      ],
      "op": "AND",
      "path": "19"
    },
    "4385": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3613,
        3623
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4386": {
      "branch": 83,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3613,
        3637
      ],
      "op": "EQ",
      "path": "19"
    },
    "4387": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1161"
    },
    "4390": {
      "branch": 83,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4391": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4393": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4394": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4401": {
      "op": "SHL"
    },
    "4402": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4403": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4404": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4406": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4408": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4409": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "ADD",
      "path": "19"
    },
    "4410": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4411": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4413": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4415": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4416": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "ADD",
      "path": "19"
    },
    "4417": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4418": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4432": {
      "op": "SHL"
    },
    "4433": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4435": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4436": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "ADD",
      "path": "19"
    },
    "4437": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4438": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4439": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4440": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4441": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4442": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4443": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "SUB",
      "path": "19"
    },
    "4444": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4446": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "ADD",
      "path": "19"
    },
    "4447": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4448": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4449": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3605,
        3653
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "DUP1"
    },
    "4453": {
      "op": "MLOAD"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "4459": {
      "op": "DUP4"
    },
    "4460": {
      "op": "CODECOPY"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "MLOAD"
    },
    "4463": {
      "op": "SWAP2"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "SUB"
    },
    "4473": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3671,
        3694
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 30
    },
    "4474": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3671,
        3694
      ],
      "op": "AND",
      "path": "19"
    },
    "4475": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3671,
        3694
      ],
      "op": "EQ",
      "path": "19"
    },
    "4476": {
      "branch": 84,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3671,
        3694
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4477": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11B6"
    },
    "4480": {
      "branch": 84,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4481": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4483": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4484": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4493": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4494": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4496": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4498": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4499": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4500": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "ADD",
      "path": "19"
    },
    "4501": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4502": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4503": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4504": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4505": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4507": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4508": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "ADD",
      "path": "19"
    },
    "4509": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4510": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4520": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4521": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "ADD",
      "path": "19"
    },
    "4522": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4523": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4524": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4525": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4526": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4527": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4528": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SUB",
      "path": "19"
    },
    "4529": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4531": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "ADD",
      "path": "19"
    },
    "4532": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4533": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4534": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3663,
        3703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4535": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4562": {
      "op": "SHL"
    },
    "4563": {
      "op": "SUB"
    },
    "4564": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3721,
        3743
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 31
    },
    "4565": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3721,
        3743
      ],
      "op": "AND",
      "path": "19"
    },
    "4566": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3721,
        3743
      ],
      "op": "EQ",
      "path": "19"
    },
    "4567": {
      "branch": 85,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3721,
        3743
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4568": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x120E"
    },
    "4571": {
      "branch": 85,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4572": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4574": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4575": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4584": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4585": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4587": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4589": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4590": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "ADD",
      "path": "19"
    },
    "4591": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4592": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4594": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4596": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4597": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "ADD",
      "path": "19"
    },
    "4598": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4599": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4605": {
      "op": "SHL"
    },
    "4606": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4608": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4609": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "ADD",
      "path": "19"
    },
    "4610": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4611": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4612": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4613": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4614": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4615": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4616": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "SUB",
      "path": "19"
    },
    "4617": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4619": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "ADD",
      "path": "19"
    },
    "4620": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4621": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4622": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3713,
        3751
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4623": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4650": {
      "op": "SHL"
    },
    "4651": {
      "op": "SUB"
    },
    "4652": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3769,
        3791
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 32
    },
    "4653": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3769,
        3791
      ],
      "op": "AND",
      "path": "19"
    },
    "4654": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3769,
        3791
      ],
      "op": "EQ",
      "path": "19"
    },
    "4655": {
      "branch": 86,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3769,
        3791
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4656": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1266"
    },
    "4659": {
      "branch": 86,
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4660": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4662": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4663": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4670": {
      "op": "SHL"
    },
    "4671": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4672": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4673": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4675": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4677": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4678": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "ADD",
      "path": "19"
    },
    "4679": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4680": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4682": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4684": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4685": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "ADD",
      "path": "19"
    },
    "4686": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4687": {
      "op": "PUSH3",
      "value": "0x646169"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4693": {
      "op": "SHL"
    },
    "4694": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4696": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4697": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "ADD",
      "path": "19"
    },
    "4698": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4699": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4700": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4701": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4702": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4703": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4704": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "SUB",
      "path": "19"
    },
    "4705": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4707": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "ADD",
      "path": "19"
    },
    "4708": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4709": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4710": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3761,
        3799
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4711": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 33,
      "value": "0x40"
    },
    "4713": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4714": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4715": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4722": {
      "op": "SHL"
    },
    "4723": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4724": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4725": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3844,
        3848
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "4726": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4728": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4729": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "ADD",
      "path": "19"
    },
    "4730": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4731": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4732": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4739": {
      "op": "SHL"
    },
    "4740": {
      "op": "SUB"
    },
    "4741": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4742": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "AND",
      "path": "19"
    },
    "4743": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4744": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "4749": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4750": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4752": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4753": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4754": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "ADD",
      "path": "19"
    },
    "4755": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4756": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4758": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4759": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4760": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4761": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4762": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4763": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SUB",
      "path": "19"
    },
    "4764": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "ADD",
      "path": "19"
    },
    "4765": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4766": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3835
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4767": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4768": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4769": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4770": {
      "op": "DUP1"
    },
    "4771": {
      "op": "ISZERO"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12AC"
    },
    "4775": {
      "op": "JUMPI"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4778": {
      "op": "DUP1"
    },
    "4779": {
      "op": "REVERT"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "POP",
      "path": "19"
    },
    "4782": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "GAS",
      "path": "19"
    },
    "4783": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4784": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4785": {
      "op": "DUP1"
    },
    "4786": {
      "op": "ISZERO"
    },
    "4787": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "4790": {
      "op": "JUMPI"
    },
    "4791": {
      "op": "RETURNDATASIZE"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4794": {
      "op": "DUP1"
    },
    "4795": {
      "op": "RETURNDATACOPY"
    },
    "4796": {
      "op": "RETURNDATASIZE"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4799": {
      "op": "REVERT"
    },
    "4800": {
      "op": "JUMPDEST"
    },
    "4801": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "POP",
      "path": "19"
    },
    "4802": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "POP",
      "path": "19"
    },
    "4803": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "POP",
      "path": "19"
    },
    "4804": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "POP",
      "path": "19"
    },
    "4805": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4807": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4808": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4811": {
      "op": "DUP2"
    },
    "4812": {
      "op": "LT"
    },
    "4813": {
      "op": "ISZERO"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "4817": {
      "op": "JUMPI"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4820": {
      "op": "DUP1"
    },
    "4821": {
      "op": "REVERT"
    },
    "4822": {
      "op": "JUMPDEST"
    },
    "4823": {
      "op": "POP"
    },
    "4824": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4825": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3880,
        3890
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 34,
      "value": "0x6"
    },
    "4827": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3880,
        3890
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4828": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4829": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3900
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12FB"
    },
    "4834": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3900
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "SUB"
    },
    "4843": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3879
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4844": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3879
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4845": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3879
      ],
      "op": "AND",
      "path": "19"
    },
    "4846": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3879
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4847": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3880,
        3890
      ],
      "op": "AND",
      "path": "19"
    },
    "4848": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3819,
        3850
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4849": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3900
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4854": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3879
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "4857": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3900
      ],
      "op": "AND",
      "path": "19"
    },
    "4858": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3860,
        3900
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4859": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3860,
        3900
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4860": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4861": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4862": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        3527,
        3907
      ],
      "op": "POP",
      "path": "19"
    },
    "4863": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3527,
        3907
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4864": {
      "offset": [
        1695,
        1720
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4865": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        1695,
        1720
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "4867": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        1695,
        1720
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4874": {
      "op": "SHL"
    },
    "4875": {
      "op": "SUB"
    },
    "4876": {
      "offset": [
        1695,
        1720
      ],
      "op": "AND",
      "path": "19"
    },
    "4877": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "offset": [
        1695,
        1720
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4878": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1695,
        1720
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4879": {
      "offset": [
        802,
        883
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4880": {
      "offset": [
        840,
        882
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4901": {
      "offset": [
        802,
        883
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4902": {
      "fn": "StrategyCurveCompoundVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        802,
        883
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4903": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2716,
        2884
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4904": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2809,
        2819
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0x5"
    },
    "4906": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2809,
        2819
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4913": {
      "op": "SHL"
    },
    "4914": {
      "op": "SUB"
    },
    "4915": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2809,
        2819
      ],
      "op": "AND",
      "path": "19"
    },
    "4916": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2795,
        2805
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4917": {
      "branch": 87,
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2795,
        2819
      ],
      "op": "EQ",
      "path": "19"
    },
    "4918": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1374"
    },
    "4921": {
      "branch": 87,
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4922": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4924": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4925": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4934": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4935": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4937": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4939": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4940": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "ADD",
      "path": "19"
    },
    "4941": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4942": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4944": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4946": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4947": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "ADD",
      "path": "19"
    },
    "4948": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4949": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4966": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4967": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "ADD",
      "path": "19"
    },
    "4968": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4969": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4970": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4971": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4972": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4973": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4974": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "SUB",
      "path": "19"
    },
    "4975": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4977": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "ADD",
      "path": "19"
    },
    "4978": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4979": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4980": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2787,
        2835
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4981": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2845,
        2859
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 36,
      "value": "0x1"
    },
    "4983": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "offset": [
        2845,
        2877
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4984": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        2716,
        2884
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4985": {
      "offset": [
        1189,
        1272
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4986": {
      "offset": [
        1229,
        1271
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0xA2B47E3D5C44877CCA798226B7B8118F9BFB7A56"
    },
    "5007": {
      "offset": [
        1189,
        1272
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5008": {
      "fn": "StrategyCurveCompoundVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        1189,
        1272
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5009": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7227,
        7338
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5010": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7269,
        7276
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5012": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7331
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 37,
      "value": "0x13B2"
    },
    "5015": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7315,
        7330
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x139E"
    },
    "5018": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7315,
        7328
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x524"
    },
    "5021": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7315,
        7330
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5022": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7315,
        7330
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5023": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7310
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A6"
    },
    "5026": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7308
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x179B"
    },
    "5029": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7295,
        7310
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5030": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7310
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5031": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7314
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5032": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7331
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "5037": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7314
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B04"
    },
    "5040": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7331
      ],
      "op": "AND",
      "path": "19"
    },
    "5041": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7295,
        7331
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5042": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7295,
        7331
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5043": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7288,
        7331
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5044": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7288,
        7331
      ],
      "op": "POP",
      "path": "19"
    },
    "5045": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        7227,
        7338
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5046": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        7227,
        7338
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5047": {
      "offset": [
        1458,
        1487
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5048": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1458,
        1487
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5050": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1458,
        1487
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5051": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1458,
        1487
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5052": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1458,
        1487
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5053": {
      "offset": [
        1534,
        1570
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5054": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1534,
        1570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5056": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1534,
        1570
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5057": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "offset": [
        1534,
        1570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5058": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1534,
        1570
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5059": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5060": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5000,
        5010
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 38,
      "value": "0x6"
    },
    "5062": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5000,
        5010
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5063": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4951,
        4966
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5065": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4951,
        4966
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5072": {
      "op": "SHL"
    },
    "5073": {
      "op": "SUB"
    },
    "5074": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5000,
        5010
      ],
      "op": "AND",
      "path": "19"
    },
    "5075": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4986,
        4996
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5076": {
      "branch": 88,
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4986,
        5010
      ],
      "op": "EQ",
      "path": "19"
    },
    "5077": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1413"
    },
    "5080": {
      "branch": 88,
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5081": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5083": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5084": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5085": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5091": {
      "op": "SHL"
    },
    "5092": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5093": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5094": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5096": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5098": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5099": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "ADD",
      "path": "19"
    },
    "5100": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5101": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5103": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5105": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5106": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "ADD",
      "path": "19"
    },
    "5107": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5108": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5122": {
      "op": "SHL"
    },
    "5123": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5125": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5126": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "ADD",
      "path": "19"
    },
    "5127": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5128": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5129": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5130": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5131": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5132": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5133": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "SUB",
      "path": "19"
    },
    "5134": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5136": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "ADD",
      "path": "19"
    },
    "5137": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5138": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5139": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4978,
        5026
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5140": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5036,
        5050
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 39,
      "value": "0x141B"
    },
    "5143": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5036,
        5048
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D63"
    },
    "5146": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5036,
        5050
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5147": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5036,
        5050
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5148": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 40,
      "value": "0x40"
    },
    "5150": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5151": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5152": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5159": {
      "op": "SHL"
    },
    "5160": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5161": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5162": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5102,
        5106
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5163": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5165": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5166": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "ADD",
      "path": "19"
    },
    "5167": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5168": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5169": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5172": {
      "op": "DUP1"
    },
    "5173": {
      "op": "MLOAD"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5176": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "5179": {
      "op": "DUP4"
    },
    "5180": {
      "op": "CODECOPY"
    },
    "5181": {
      "op": "DUP2"
    },
    "5182": {
      "op": "MLOAD"
    },
    "5183": {
      "op": "SWAP2"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5186": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5093
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "5191": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5192": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5194": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5195": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5196": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "ADD",
      "path": "19"
    },
    "5197": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5198": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5200": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5201": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5202": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5203": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5204": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5205": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SUB",
      "path": "19"
    },
    "5206": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "ADD",
      "path": "19"
    },
    "5207": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5208": {
      "offset": [
        753,
        795
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5209": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5210": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5211": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5212": {
      "op": "DUP1"
    },
    "5213": {
      "op": "ISZERO"
    },
    "5214": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "5217": {
      "op": "JUMPI"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5220": {
      "op": "DUP1"
    },
    "5221": {
      "op": "REVERT"
    },
    "5222": {
      "op": "JUMPDEST"
    },
    "5223": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "POP",
      "path": "19"
    },
    "5224": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "GAS",
      "path": "19"
    },
    "5225": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5226": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5227": {
      "op": "DUP1"
    },
    "5228": {
      "op": "ISZERO"
    },
    "5229": {
      "op": "PUSH2",
      "value": "0x147A"
    },
    "5232": {
      "op": "JUMPI"
    },
    "5233": {
      "op": "RETURNDATASIZE"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5236": {
      "op": "DUP1"
    },
    "5237": {
      "op": "RETURNDATACOPY"
    },
    "5238": {
      "op": "RETURNDATASIZE"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5241": {
      "op": "REVERT"
    },
    "5242": {
      "op": "JUMPDEST"
    },
    "5243": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "POP",
      "path": "19"
    },
    "5244": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "POP",
      "path": "19"
    },
    "5245": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "POP",
      "path": "19"
    },
    "5246": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "POP",
      "path": "19"
    },
    "5247": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5249": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5250": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5253": {
      "op": "DUP2"
    },
    "5254": {
      "op": "LT"
    },
    "5255": {
      "op": "ISZERO"
    },
    "5256": {
      "op": "PUSH2",
      "value": "0x1490"
    },
    "5259": {
      "op": "JUMPI"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5262": {
      "op": "DUP1"
    },
    "5263": {
      "op": "REVERT"
    },
    "5264": {
      "op": "JUMPDEST"
    },
    "5265": {
      "op": "POP"
    },
    "5266": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5267": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "5269": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5270": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5272": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5273": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5274": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5283": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5286": {
      "op": "DUP1"
    },
    "5287": {
      "op": "MLOAD"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5290": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "5293": {
      "op": "DUP4"
    },
    "5294": {
      "op": "CODECOPY"
    },
    "5295": {
      "op": "DUP2"
    },
    "5296": {
      "op": "MLOAD"
    },
    "5297": {
      "op": "SWAP2"
    },
    "5298": {
      "op": "MSTORE"
    },
    "5299": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5301": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5302": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "ADD",
      "path": "19"
    },
    "5303": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5304": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5305": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5306": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5307": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5308": {
      "op": "POP"
    },
    "5309": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5119,
        5133
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5311": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5119,
        5133
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5318": {
      "op": "SHL"
    },
    "5319": {
      "op": "SUB"
    },
    "5320": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5321": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5322": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "AND",
      "path": "19"
    },
    "5323": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5324": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5166
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA622EE7C"
    },
    "5329": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5166
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5330": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5332": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5333": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5334": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "ADD",
      "path": "19"
    },
    "5335": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5336": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5338": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5071,
        5108
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5339": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5340": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5341": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5342": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5343": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5344": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SUB",
      "path": "19"
    },
    "5345": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "ADD",
      "path": "19"
    },
    "5346": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5347": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5148,
        5158
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5348": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5349": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5350": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5351": {
      "op": "DUP1"
    },
    "5352": {
      "op": "ISZERO"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5359": {
      "op": "DUP1"
    },
    "5360": {
      "op": "REVERT"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "POP",
      "path": "19"
    },
    "5363": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "GAS",
      "path": "19"
    },
    "5364": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5365": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5366": {
      "op": "DUP1"
    },
    "5367": {
      "op": "ISZERO"
    },
    "5368": {
      "op": "PUSH2",
      "value": "0x1505"
    },
    "5371": {
      "op": "JUMPI"
    },
    "5372": {
      "op": "RETURNDATASIZE"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5375": {
      "op": "DUP1"
    },
    "5376": {
      "op": "RETURNDATACOPY"
    },
    "5377": {
      "op": "RETURNDATASIZE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5380": {
      "op": "REVERT"
    },
    "5381": {
      "op": "JUMPDEST"
    },
    "5382": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "POP",
      "path": "19"
    },
    "5383": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "POP",
      "path": "19"
    },
    "5384": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "POP",
      "path": "19"
    },
    "5385": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "POP",
      "path": "19"
    },
    "5386": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5388": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5389": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5392": {
      "op": "DUP2"
    },
    "5393": {
      "op": "LT"
    },
    "5394": {
      "op": "ISZERO"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5398": {
      "op": "JUMPI"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5401": {
      "op": "DUP1"
    },
    "5402": {
      "op": "REVERT"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "POP"
    },
    "5405": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5406": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5136,
        5181
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5414": {
      "op": "SHL"
    },
    "5415": {
      "op": "SUB"
    },
    "5416": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5199,
        5219
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 41
    },
    "5417": {
      "branch": 89,
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5199,
        5219
      ],
      "op": "AND",
      "path": "19"
    },
    "5418": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1563"
    },
    "5421": {
      "branch": 89,
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5422": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5424": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5425": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5432": {
      "op": "SHL"
    },
    "5433": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5434": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5435": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5437": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5439": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5440": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "ADD",
      "path": "19"
    },
    "5441": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5442": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "5444": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5446": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5447": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "ADD",
      "path": "19"
    },
    "5448": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5449": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5461": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5462": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "ADD",
      "path": "19"
    },
    "5463": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5464": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5465": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5466": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5467": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5468": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5469": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "SUB",
      "path": "19"
    },
    "5470": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5472": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "ADD",
      "path": "19"
    },
    "5473": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5474": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5475": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5191,
        5230
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5476": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5292,
        5334
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 42,
      "value": "0x1582"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5481": {
      "op": "DUP1"
    },
    "5482": {
      "op": "MLOAD"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "5488": {
      "op": "DUP4"
    },
    "5489": {
      "op": "CODECOPY"
    },
    "5490": {
      "op": "DUP2"
    },
    "5491": {
      "op": "MLOAD"
    },
    "5492": {
      "op": "SWAP2"
    },
    "5493": {
      "op": "MSTORE"
    },
    "5494": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5318,
        5324
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5495": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5326,
        5333
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5496": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5292,
        5334
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "5501": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5292,
        5317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "5504": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5292,
        5334
      ],
      "op": "AND",
      "path": "19"
    },
    "5505": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        5292,
        5334
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5506": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        5292,
        5334
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5507": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "POP",
      "path": "19"
    },
    "5508": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        4910,
        5341
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5509": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        4910,
        5341
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5510": {
      "offset": [
        1493,
        1528
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5511": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1493,
        1528
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5513": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1493,
        1528
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5514": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1493,
        1528
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5515": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1493,
        1528
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5516": {
      "offset": [
        1576,
        1608
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5517": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1576,
        1608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "5519": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1576,
        1608
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5520": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "offset": [
        1576,
        1608
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5521": {
      "fn": "StrategyCurveCompoundVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1576,
        1608
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5522": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7502,
        7654
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5523": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7587,
        7597
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 43,
      "value": "0x5"
    },
    "5525": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7587,
        7597
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5532": {
      "op": "SHL"
    },
    "5533": {
      "op": "SUB"
    },
    "5534": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7587,
        7597
      ],
      "op": "AND",
      "path": "19"
    },
    "5535": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7573,
        7583
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5536": {
      "branch": 90,
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7573,
        7597
      ],
      "op": "EQ",
      "path": "19"
    },
    "5537": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15DF"
    },
    "5540": {
      "branch": 90,
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5541": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5543": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5544": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5551": {
      "op": "SHL"
    },
    "5552": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5553": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5554": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5556": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5558": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5559": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "ADD",
      "path": "19"
    },
    "5560": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5561": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5563": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5565": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5566": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "ADD",
      "path": "19"
    },
    "5567": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5568": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5582": {
      "op": "SHL"
    },
    "5583": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5585": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5586": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "ADD",
      "path": "19"
    },
    "5587": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5588": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5589": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5590": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5591": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5592": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5593": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "SUB",
      "path": "19"
    },
    "5594": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5596": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "ADD",
      "path": "19"
    },
    "5597": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5598": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5599": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7565,
        7613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5600": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7633
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 44,
      "value": "0x6"
    },
    "5602": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5603": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5610": {
      "op": "SHL"
    },
    "5611": {
      "op": "SUB"
    },
    "5612": {
      "op": "NOT"
    },
    "5613": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "AND",
      "path": "19"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5620": {
      "op": "SHL"
    },
    "5621": {
      "op": "SUB"
    },
    "5622": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5623": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5624": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5625": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "AND",
      "path": "19"
    },
    "5626": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5627": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5628": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5629": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "OR",
      "path": "19"
    },
    "5630": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5631": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "offset": [
        7623,
        7647
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5632": {
      "fn": "StrategyCurveCompoundVoterProxy.setController",
      "jump": "o",
      "offset": [
        7502,
        7654
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5633": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2400,
        2540
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5634": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2479,
        2489
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 45,
      "value": "0x5"
    },
    "5636": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2479,
        2489
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "SUB"
    },
    "5645": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2479,
        2489
      ],
      "op": "AND",
      "path": "19"
    },
    "5646": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2465,
        2475
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5647": {
      "branch": 91,
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2465,
        2489
      ],
      "op": "EQ",
      "path": "19"
    },
    "5648": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x164E"
    },
    "5651": {
      "branch": 91,
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5652": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5654": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5655": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5662": {
      "op": "SHL"
    },
    "5663": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5664": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5665": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5667": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5669": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5670": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "ADD",
      "path": "19"
    },
    "5671": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5672": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5674": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5676": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5677": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "ADD",
      "path": "19"
    },
    "5678": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5679": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5693": {
      "op": "SHL"
    },
    "5694": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5696": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5697": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "ADD",
      "path": "19"
    },
    "5698": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5699": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5700": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5701": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5702": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5703": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5704": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "SUB",
      "path": "19"
    },
    "5705": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5707": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "ADD",
      "path": "19"
    },
    "5708": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5709": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5710": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2457,
        2505
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5711": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2515,
        2522
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0x0"
    },
    "5713": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "offset": [
        2515,
        2533
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5714": {
      "fn": "StrategyCurveCompoundVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        2400,
        2540
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5715": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3072,
        3204
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5716": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3147,
        3157
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 47,
      "value": "0x5"
    },
    "5718": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3147,
        3157
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5725": {
      "op": "SHL"
    },
    "5726": {
      "op": "SUB"
    },
    "5727": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3147,
        3157
      ],
      "op": "AND",
      "path": "19"
    },
    "5728": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3133,
        3143
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5729": {
      "branch": 92,
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3133,
        3157
      ],
      "op": "EQ",
      "path": "19"
    },
    "5730": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A0"
    },
    "5733": {
      "branch": 92,
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5734": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5736": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5737": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5744": {
      "op": "SHL"
    },
    "5745": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5746": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5747": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5749": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5751": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5752": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "ADD",
      "path": "19"
    },
    "5753": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5754": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5756": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5758": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5759": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "ADD",
      "path": "19"
    },
    "5760": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5761": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5775": {
      "op": "SHL"
    },
    "5776": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5778": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5779": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "ADD",
      "path": "19"
    },
    "5780": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5781": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5782": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5783": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5784": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5785": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5786": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "SUB",
      "path": "19"
    },
    "5787": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5789": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "ADD",
      "path": "19"
    },
    "5790": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5791": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5792": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3125,
        3173
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5793": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3188
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 48,
      "value": "0x4"
    },
    "5795": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5796": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5803": {
      "op": "SHL"
    },
    "5804": {
      "op": "SUB"
    },
    "5805": {
      "op": "NOT"
    },
    "5806": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "AND",
      "path": "19"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5813": {
      "op": "SHL"
    },
    "5814": {
      "op": "SUB"
    },
    "5815": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5816": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5817": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5818": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "AND",
      "path": "19"
    },
    "5819": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5820": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5821": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5822": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "OR",
      "path": "19"
    },
    "5823": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5824": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "offset": [
        3183,
        3197
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5825": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        3072,
        3204
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5826": {
      "offset": [
        1279,
        1362
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5827": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "5848": {
      "offset": [
        1279,
        1362
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5849": {
      "fn": "StrategyCurveCompoundVoterProxy.setProxy",
      "jump": "o",
      "offset": [
        1279,
        1362
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5850": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7344,
        7496
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5851": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7429,
        7439
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 49,
      "value": "0x5"
    },
    "5853": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7429,
        7439
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7429,
        7439
      ],
      "op": "AND",
      "path": "19"
    },
    "5863": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7415,
        7425
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5864": {
      "branch": 93,
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7415,
        7439
      ],
      "op": "EQ",
      "path": "19"
    },
    "5865": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1727"
    },
    "5868": {
      "branch": 93,
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5869": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5871": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5872": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5881": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5882": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5884": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5886": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5887": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "ADD",
      "path": "19"
    },
    "5888": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5889": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5891": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5893": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5894": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "ADD",
      "path": "19"
    },
    "5895": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5896": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5910": {
      "op": "SHL"
    },
    "5911": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5913": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5914": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "ADD",
      "path": "19"
    },
    "5915": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5916": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5917": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5918": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5919": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5920": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5921": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "SUB",
      "path": "19"
    },
    "5922": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "5924": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "ADD",
      "path": "19"
    },
    "5925": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5926": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5927": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7407,
        7455
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5928": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7475
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0x5"
    },
    "5930": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5931": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5938": {
      "op": "SHL"
    },
    "5939": {
      "op": "SUB"
    },
    "5940": {
      "op": "NOT"
    },
    "5941": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "AND",
      "path": "19"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5951": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5952": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5953": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "AND",
      "path": "19"
    },
    "5954": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5955": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5956": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5957": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "OR",
      "path": "19"
    },
    "5958": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5959": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "offset": [
        7465,
        7489
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5960": {
      "fn": "StrategyCurveCompoundVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        7344,
        7496
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5961": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2546,
        2710
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5962": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2637,
        2647
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 51,
      "value": "0x5"
    },
    "5964": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2637,
        2647
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5971": {
      "op": "SHL"
    },
    "5972": {
      "op": "SUB"
    },
    "5973": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2637,
        2647
      ],
      "op": "AND",
      "path": "19"
    },
    "5974": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2623,
        2633
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5975": {
      "branch": 94,
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2623,
        2647
      ],
      "op": "EQ",
      "path": "19"
    },
    "5976": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1796"
    },
    "5979": {
      "branch": 94,
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5980": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5982": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5983": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5990": {
      "op": "SHL"
    },
    "5991": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5992": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5993": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5995": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5997": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5998": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "ADD",
      "path": "19"
    },
    "5999": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6000": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "6002": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6004": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6005": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "ADD",
      "path": "19"
    },
    "6006": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6007": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "6024": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6025": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "ADD",
      "path": "19"
    },
    "6026": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6027": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6028": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6029": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6030": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6031": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6032": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "SUB",
      "path": "19"
    },
    "6033": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "6035": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "ADD",
      "path": "19"
    },
    "6036": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6037": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6038": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2615,
        2663
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6039": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2673,
        2686
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0x3"
    },
    "6041": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "offset": [
        2673,
        2703
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6042": {
      "fn": "StrategyCurveCompoundVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        2546,
        2710
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6043": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        6985,
        7101
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6044": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0x40"
    },
    "6046": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6047": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6048": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6057": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6058": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7088,
        7092
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "6059": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6061": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6062": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "ADD",
      "path": "19"
    },
    "6063": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6064": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6065": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6066": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7031,
        7038
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6068": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7031,
        7038
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6071": {
      "op": "DUP1"
    },
    "6072": {
      "op": "MLOAD"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6075": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "6078": {
      "op": "DUP4"
    },
    "6079": {
      "op": "CODECOPY"
    },
    "6080": {
      "op": "DUP2"
    },
    "6081": {
      "op": "MLOAD"
    },
    "6082": {
      "op": "SWAP2"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6085": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7079
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "6090": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7079
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6091": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6093": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6094": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6095": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "ADD",
      "path": "19"
    },
    "6096": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6097": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6099": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6100": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6101": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6102": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6103": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6104": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6105": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "SUB",
      "path": "19"
    },
    "6106": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "ADD",
      "path": "19"
    },
    "6107": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6108": {
      "offset": [
        753,
        795
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6109": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6110": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6111": {
      "fn": "StrategyCurveCompoundVoterProxy.balanceOfWant",
      "offset": [
        7057,
        7094
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6112": {
      "op": "DUP1"
    },
    "6113": {
      "op": "ISZERO"
    },
    "6114": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "6117": {
      "op": "JUMPI"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6120": {
      "op": "DUP1"
    },
    "6121": {
      "op": "REVERT"
    },
    "6122": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2214,
        2394
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6123": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2299,
        2309
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 54,
      "value": "0x5"
    },
    "6125": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2299,
        2309
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "op": "SUB"
    },
    "6134": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2299,
        2309
      ],
      "op": "AND",
      "path": "19"
    },
    "6135": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2295
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6136": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2309
      ],
      "op": "EQ",
      "path": "19"
    },
    "6137": {
      "branch": 95,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2309
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6138": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x180D"
    },
    "6141": {
      "branch": 95,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2337
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6142": {
      "op": "POP"
    },
    "6143": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2327,
        2337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "6145": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2327,
        2337
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6152": {
      "op": "SHL"
    },
    "6153": {
      "op": "SUB"
    },
    "6154": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2327,
        2337
      ],
      "op": "AND",
      "path": "19"
    },
    "6155": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2313,
        2323
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6156": {
      "branch": 96,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2313,
        2337
      ],
      "op": "EQ",
      "path": "19"
    },
    "6157": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2285,
        2337
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6158": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x184C"
    },
    "6161": {
      "branch": 96,
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6162": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6164": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6165": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6172": {
      "op": "SHL"
    },
    "6173": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6174": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6175": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6177": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6179": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6180": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "ADD",
      "path": "19"
    },
    "6181": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6182": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "6184": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6186": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6187": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "ADD",
      "path": "19"
    },
    "6188": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6189": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6203": {
      "op": "SHL"
    },
    "6204": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "6206": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6207": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "ADD",
      "path": "19"
    },
    "6208": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6209": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6210": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6211": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6212": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6213": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6214": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "SUB",
      "path": "19"
    },
    "6215": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "6217": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "ADD",
      "path": "19"
    },
    "6218": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6219": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "REVERT",
      "path": "19"
    },
    "6220": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2277,
        2353
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6221": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2373
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 55,
      "value": "0x7"
    },
    "6223": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6224": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "op": "SUB"
    },
    "6233": {
      "op": "NOT"
    },
    "6234": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "AND",
      "path": "19"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6241": {
      "op": "SHL"
    },
    "6242": {
      "op": "SUB"
    },
    "6243": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6244": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6245": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6246": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "AND",
      "path": "19"
    },
    "6247": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6248": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6249": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6250": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "OR",
      "path": "19"
    },
    "6251": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6252": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "offset": [
        2363,
        2387
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "6253": {
      "fn": "StrategyCurveCompoundVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2214,
        2394
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6254": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3210,
        3447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6255": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6257": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6258": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6259": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6266": {
      "op": "SHL"
    },
    "6267": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6268": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6269": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3293,
        3297
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "6270": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6272": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6273": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "ADD",
      "path": "19"
    },
    "6274": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6275": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6276": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6277": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3246,
        3259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6279": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3246,
        3259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6282": {
      "op": "DUP1"
    },
    "6283": {
      "op": "MLOAD"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6286": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "6289": {
      "op": "DUP4"
    },
    "6290": {
      "op": "CODECOPY"
    },
    "6291": {
      "op": "DUP2"
    },
    "6292": {
      "op": "MLOAD"
    },
    "6293": {
      "op": "SWAP2"
    },
    "6294": {
      "op": "MSTORE"
    },
    "6295": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6296": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3284
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "6301": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3284
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6302": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6304": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6305": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6306": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "ADD",
      "path": "19"
    },
    "6307": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6308": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6310": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6311": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6312": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6313": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6314": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6315": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6316": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SUB",
      "path": "19"
    },
    "6317": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "ADD",
      "path": "19"
    },
    "6318": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6319": {
      "offset": [
        753,
        795
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6320": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6321": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6322": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6323": {
      "op": "DUP1"
    },
    "6324": {
      "op": "ISZERO"
    },
    "6325": {
      "op": "PUSH2",
      "value": "0x18BD"
    },
    "6328": {
      "op": "JUMPI"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6331": {
      "op": "DUP1"
    },
    "6332": {
      "op": "REVERT"
    },
    "6333": {
      "op": "JUMPDEST"
    },
    "6334": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "POP",
      "path": "19"
    },
    "6335": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "GAS",
      "path": "19"
    },
    "6336": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "6337": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6338": {
      "op": "DUP1"
    },
    "6339": {
      "op": "ISZERO"
    },
    "6340": {
      "op": "PUSH2",
      "value": "0x18D1"
    },
    "6343": {
      "op": "JUMPI"
    },
    "6344": {
      "op": "RETURNDATASIZE"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6347": {
      "op": "DUP1"
    },
    "6348": {
      "op": "RETURNDATACOPY"
    },
    "6349": {
      "op": "RETURNDATASIZE"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6352": {
      "op": "REVERT"
    },
    "6353": {
      "op": "JUMPDEST"
    },
    "6354": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "POP",
      "path": "19"
    },
    "6355": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "POP",
      "path": "19"
    },
    "6356": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "POP",
      "path": "19"
    },
    "6357": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "POP",
      "path": "19"
    },
    "6358": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6360": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6361": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6364": {
      "op": "DUP2"
    },
    "6365": {
      "op": "LT"
    },
    "6366": {
      "op": "ISZERO"
    },
    "6367": {
      "op": "PUSH2",
      "value": "0x18E7"
    },
    "6370": {
      "op": "JUMPI"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6373": {
      "op": "DUP1"
    },
    "6374": {
      "op": "REVERT"
    },
    "6375": {
      "op": "JUMPDEST"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6378": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3262,
        3299
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6379": {
      "op": "POP"
    },
    "6380": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3313,
        3322
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6381": {
      "branch": 97,
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3313,
        3322
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6382": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3309,
        3441
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x19AB"
    },
    "6385": {
      "branch": 97,
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3309,
        3441
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6386": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3364,
        3369
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 56,
      "value": "0x4"
    },
    "6388": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3364,
        3369
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6389": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3377
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x191D"
    },
    "6392": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3377
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6395": {
      "op": "DUP1"
    },
    "6396": {
      "op": "MLOAD"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6399": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "6402": {
      "op": "DUP4"
    },
    "6403": {
      "op": "CODECOPY"
    },
    "6404": {
      "op": "DUP2"
    },
    "6405": {
      "op": "MLOAD"
    },
    "6406": {
      "op": "SWAP2"
    },
    "6407": {
      "op": "MSTORE"
    },
    "6408": {
      "offset": [
        753,
        795
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6415": {
      "op": "SHL"
    },
    "6416": {
      "op": "SUB"
    },
    "6417": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3364,
        3369
      ],
      "op": "AND",
      "path": "19"
    },
    "6418": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3371,
        3376
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6419": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3377
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "6424": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3363
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BF9"
    },
    "6427": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3377
      ],
      "op": "AND",
      "path": "19"
    },
    "6428": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3338,
        3377
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6429": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3338,
        3377
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6430": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 57,
      "value": "0x4"
    },
    "6432": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6433": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6434": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6436": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6437": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6438": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6445": {
      "op": "SHL"
    },
    "6446": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6447": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6448": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "6469": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6470": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6471": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ADD",
      "path": "19"
    },
    "6472": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6473": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6474": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6475": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6478": {
      "op": "DUP1"
    },
    "6479": {
      "op": "MLOAD"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6482": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "6485": {
      "op": "DUP4"
    },
    "6486": {
      "op": "CODECOPY"
    },
    "6487": {
      "op": "DUP2"
    },
    "6488": {
      "op": "MLOAD"
    },
    "6489": {
      "op": "SWAP2"
    },
    "6490": {
      "op": "MSTORE"
    },
    "6491": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6493": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6494": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ADD",
      "path": "19"
    },
    "6495": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6496": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6503": {
      "op": "SHL"
    },
    "6504": {
      "op": "SUB"
    },
    "6505": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6506": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6507": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "AND",
      "path": "19"
    },
    "6508": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6509": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3417
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF9609F08"
    },
    "6514": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3417
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6515": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "6517": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6518": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6519": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ADD",
      "path": "19"
    },
    "6520": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6521": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6523": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6524": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6525": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6526": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6527": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6528": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "SUB",
      "path": "19"
    },
    "6529": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ADD",
      "path": "19"
    },
    "6530": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6531": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6532": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3403,
        3408
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6533": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6534": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6535": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "ISZERO"
    },
    "6538": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6541": {
      "op": "JUMPI"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6544": {
      "op": "DUP1"
    },
    "6545": {
      "op": "REVERT"
    },
    "6546": {
      "op": "JUMPDEST"
    },
    "6547": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "POP",
      "path": "19"
    },
    "6548": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "GAS",
      "path": "19"
    },
    "6549": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "CALL",
      "path": "19"
    },
    "6550": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6551": {
      "op": "DUP1"
    },
    "6552": {
      "op": "ISZERO"
    },
    "6553": {
      "op": "PUSH2",
      "value": "0x19A6"
    },
    "6556": {
      "op": "JUMPI"
    },
    "6557": {
      "op": "RETURNDATASIZE"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6560": {
      "op": "DUP1"
    },
    "6561": {
      "op": "RETURNDATACOPY"
    },
    "6562": {
      "op": "RETURNDATASIZE"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6565": {
      "op": "REVERT"
    },
    "6566": {
      "op": "JUMPDEST"
    },
    "6567": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "POP",
      "path": "19"
    },
    "6568": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "POP",
      "path": "19"
    },
    "6569": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "POP",
      "path": "19"
    },
    "6570": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3391,
        3430
      ],
      "op": "POP",
      "path": "19"
    },
    "6571": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3309,
        3441
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6572": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        3210,
        3447
      ],
      "op": "POP",
      "path": "19"
    },
    "6573": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        3210,
        3447
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6574": {
      "offset": [
        1789,
        1810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6575": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1789,
        1810
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "6577": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1789,
        1810
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6578": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1789,
        1810
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6579": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1789,
        1810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6580": {
      "offset": [
        1614,
        1661
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6581": {
      "offset": [
        1656,
        1661
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2710"
    },
    "6584": {
      "offset": [
        1614,
        1661
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6585": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1614,
        1661
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6586": {
      "offset": [
        1668,
        1688
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6587": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1668,
        1688
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6589": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1668,
        1688
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "op": "SUB"
    },
    "6598": {
      "offset": [
        1668,
        1688
      ],
      "op": "AND",
      "path": "19"
    },
    "6599": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1668,
        1688
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6600": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1668,
        1688
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6601": {
      "offset": [
        889,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6602": {
      "offset": [
        927,
        969
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "6623": {
      "offset": [
        889,
        970
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6624": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        889,
        970
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6625": {
      "offset": [
        1102,
        1183
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6626": {
      "offset": [
        1140,
        1182
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "6647": {
      "offset": [
        1102,
        1183
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6648": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1102,
        1183
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6649": {
      "offset": [
        1726,
        1751
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6650": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1726,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "6652": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1726,
        1751
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6659": {
      "op": "SHL"
    },
    "6660": {
      "op": "SUB"
    },
    "6661": {
      "offset": [
        1726,
        1751
      ],
      "op": "AND",
      "path": "19"
    },
    "6662": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "offset": [
        1726,
        1751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6663": {
      "fn": "StrategyCurveCompoundVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1726,
        1751
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6664": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6665": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6667": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 58,
      "value": "0x1A4A"
    },
    "6670": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6671": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6672": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6674": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6675": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6676": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6678": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6679": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6681": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6682": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6683": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "6685": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6686": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6687": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6689": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6690": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6723": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6724": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6725": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6726": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E07"
    },
    "6729": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6730": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6731": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6732": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6733": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6734": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6735": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6736": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6737": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6738": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6739": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4697,
        4837
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6740": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 59,
      "value": "0x4"
    },
    "6742": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6743": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6744": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6746": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6747": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6748": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6755": {
      "op": "SHL"
    },
    "6756": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6757": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6758": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "6779": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6780": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6781": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ADD",
      "path": "19"
    },
    "6782": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6783": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6784": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6785": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6788": {
      "op": "DUP1"
    },
    "6789": {
      "op": "MLOAD"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6792": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "6795": {
      "op": "DUP4"
    },
    "6796": {
      "op": "CODECOPY"
    },
    "6797": {
      "op": "DUP2"
    },
    "6798": {
      "op": "MLOAD"
    },
    "6799": {
      "op": "SWAP2"
    },
    "6800": {
      "op": "MSTORE"
    },
    "6801": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "6803": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6804": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ADD",
      "path": "19"
    },
    "6805": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6806": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "6808": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6809": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ADD",
      "path": "19"
    },
    "6810": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6811": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6812": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6813": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6814": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4755,
        4762
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6816": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4755,
        4762
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6823": {
      "op": "SHL"
    },
    "6824": {
      "op": "SUB"
    },
    "6825": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6826": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6827": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "AND",
      "path": "19"
    },
    "6828": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6829": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4808
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD9CAED12"
    },
    "6834": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4808
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6835": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "6837": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6838": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6839": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ADD",
      "path": "19"
    },
    "6840": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6841": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6843": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6844": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6845": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6846": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6847": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6848": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SUB",
      "path": "19"
    },
    "6849": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ADD",
      "path": "19"
    },
    "6850": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6851": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4755,
        4762
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6852": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4793,
        4798
      ],
      "op": "DUP8",
      "path": "19"
    },
    "6853": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6854": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "6855": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6856": {
      "op": "DUP1"
    },
    "6857": {
      "op": "ISZERO"
    },
    "6858": {
      "op": "PUSH2",
      "value": "0x1AD2"
    },
    "6861": {
      "op": "JUMPI"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6864": {
      "op": "DUP1"
    },
    "6865": {
      "op": "REVERT"
    },
    "6866": {
      "op": "JUMPDEST"
    },
    "6867": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "POP",
      "path": "19"
    },
    "6868": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "GAS",
      "path": "19"
    },
    "6869": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "CALL",
      "path": "19"
    },
    "6870": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6871": {
      "op": "DUP1"
    },
    "6872": {
      "op": "ISZERO"
    },
    "6873": {
      "op": "PUSH2",
      "value": "0x1AE6"
    },
    "6876": {
      "op": "JUMPI"
    },
    "6877": {
      "op": "RETURNDATASIZE"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6880": {
      "op": "DUP1"
    },
    "6881": {
      "op": "RETURNDATACOPY"
    },
    "6882": {
      "op": "RETURNDATASIZE"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6885": {
      "op": "REVERT"
    },
    "6886": {
      "op": "JUMPDEST"
    },
    "6887": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "POP",
      "path": "19"
    },
    "6888": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "POP",
      "path": "19"
    },
    "6889": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "POP",
      "path": "19"
    },
    "6890": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "POP",
      "path": "19"
    },
    "6891": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6893": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6894": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6897": {
      "op": "DUP2"
    },
    "6898": {
      "op": "LT"
    },
    "6899": {
      "op": "ISZERO"
    },
    "6900": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6903": {
      "op": "JUMPI"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6906": {
      "op": "DUP1"
    },
    "6907": {
      "op": "REVERT"
    },
    "6908": {
      "op": "JUMPDEST"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6911": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4781,
        4830
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6912": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "offset": [
        4697,
        4837
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6913": {
      "op": "POP"
    },
    "6914": {
      "op": "POP"
    },
    "6915": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        4697,
        4837
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6916": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6917": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6919": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6920": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6921": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "6922": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 60
    },
    "6923": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6924": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "6925": {
      "branch": 102,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6926": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A4A"
    },
    "6929": {
      "branch": 102,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6930": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6932": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6933": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6942": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6943": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6945": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6947": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6948": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6949": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6950": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "6952": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6954": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6955": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6956": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6957": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "6990": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6992": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6993": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6994": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6995": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6996": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6997": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6998": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6999": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7000": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "7001": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "7003": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "7004": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7005": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7006": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7007": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7009": {
      "branch": 103,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7010": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B6D"
    },
    "7013": {
      "branch": 103,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7014": {
      "op": "POP"
    },
    "7015": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 61,
      "value": "0x0"
    },
    "7017": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A4D"
    },
    "7020": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7021": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7022": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7023": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7024": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "7025": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7026": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7027": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7028": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7029": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 62,
      "value": "0x1B7A"
    },
    "7032": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7033": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7034": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7035": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "7036": {
      "branch": 104,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "7037": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A4A"
    },
    "7040": {
      "branch": 104,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7041": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7043": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7050": {
      "op": "SHL"
    },
    "7051": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7052": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7053": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7055": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7056": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7057": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7058": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7060": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7061": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7062": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7063": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7064": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7065": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7066": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7068": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7069": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7070": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7072": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7073": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7074": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2118"
    },
    "7077": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7079": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7080": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "7081": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7083": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7084": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7085": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7086": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7087": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7089": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7090": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7091": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7092": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7093": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7094": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7095": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7096": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7098": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 63,
      "value": "0x1A4A"
    },
    "7101": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7102": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7103": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7105": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7106": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7107": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7109": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7110": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7112": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7113": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7114": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7116": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7117": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7118": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7120": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7121": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7154": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7155": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7156": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7157": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9E"
    },
    "7160": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7161": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7162": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 64,
      "value": "0x40"
    },
    "7164": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7165": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7172": {
      "op": "SHL"
    },
    "7173": {
      "op": "SUB"
    },
    "7174": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7175": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7176": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7178": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7179": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7180": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7181": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7183": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7184": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7185": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7186": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7187": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7188": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7189": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7190": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7191": {
      "op": "DUP1"
    },
    "7192": {
      "op": "DUP4"
    },
    "7193": {
      "op": "SUB"
    },
    "7194": {
      "op": "SWAP1"
    },
    "7195": {
      "op": "SWAP2"
    },
    "7196": {
      "op": "ADD"
    },
    "7197": {
      "op": "DUP2"
    },
    "7198": {
      "op": "MSTORE"
    },
    "7199": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7201": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7202": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7203": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7204": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7205": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7206": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7207": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "op": "DUP1"
    },
    "7212": {
      "op": "MLOAD"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7219": {
      "op": "SHL"
    },
    "7220": {
      "op": "SUB"
    },
    "7221": {
      "op": "AND"
    },
    "7222": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7229": {
      "op": "SHL"
    },
    "7230": {
      "op": "OR"
    },
    "7231": {
      "op": "SWAP1"
    },
    "7232": {
      "op": "MSTORE"
    },
    "7233": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C4B"
    },
    "7236": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7237": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7238": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7239": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F03"
    },
    "7242": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7243": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7244": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7245": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7246": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7247": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7248": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7249": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 65
    },
    "7250": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7251": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7252": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CD6"
    },
    "7255": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7256": {
      "op": "POP"
    },
    "7257": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7259": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7260": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7261": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7268": {
      "op": "SHL"
    },
    "7269": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7270": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7271": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "7272": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7274": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7275": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7276": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7283": {
      "op": "SHL"
    },
    "7284": {
      "op": "SUB"
    },
    "7285": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7286": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7287": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "7288": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7290": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7291": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7292": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7293": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7294": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7295": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7296": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7297": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "7298": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7299": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "7304": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7305": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7307": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7308": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7309": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7310": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7311": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7313": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7314": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7315": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7316": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7317": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7318": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7319": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "7320": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7321": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7322": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7323": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7324": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7325": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7326": {
      "op": "DUP1"
    },
    "7327": {
      "op": "ISZERO"
    },
    "7328": {
      "op": "PUSH2",
      "value": "0x1CA8"
    },
    "7331": {
      "op": "JUMPI"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7334": {
      "op": "DUP1"
    },
    "7335": {
      "op": "REVERT"
    },
    "7336": {
      "op": "JUMPDEST"
    },
    "7337": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7338": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "7339": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "7340": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7341": {
      "op": "DUP1"
    },
    "7342": {
      "op": "ISZERO"
    },
    "7343": {
      "op": "PUSH2",
      "value": "0x1CBC"
    },
    "7346": {
      "op": "JUMPI"
    },
    "7347": {
      "op": "RETURNDATASIZE"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7350": {
      "op": "DUP1"
    },
    "7351": {
      "op": "RETURNDATACOPY"
    },
    "7352": {
      "op": "RETURNDATASIZE"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7355": {
      "op": "REVERT"
    },
    "7356": {
      "op": "JUMPDEST"
    },
    "7357": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7358": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7359": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7360": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7361": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7363": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7364": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7367": {
      "op": "DUP2"
    },
    "7368": {
      "op": "LT"
    },
    "7369": {
      "op": "ISZERO"
    },
    "7370": {
      "op": "PUSH2",
      "value": "0x1CD2"
    },
    "7373": {
      "op": "JUMPI"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7376": {
      "op": "DUP1"
    },
    "7377": {
      "op": "REVERT"
    },
    "7378": {
      "op": "JUMPDEST"
    },
    "7379": {
      "op": "POP"
    },
    "7380": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7381": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7382": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7383": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D11"
    },
    "7386": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7387": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7389": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7396": {
      "op": "SHL"
    },
    "7397": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7398": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7399": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7401": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7402": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7403": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7404": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7406": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7407": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7408": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7409": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7410": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7411": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7412": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7414": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7415": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7416": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7418": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7419": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7420": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2163"
    },
    "7423": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7425": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7426": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7427": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7429": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7430": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7431": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7432": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7433": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7435": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7436": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7437": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7438": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7439": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7440": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7441": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7442": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 66,
      "value": "0x40"
    },
    "7444": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7445": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7452": {
      "op": "SHL"
    },
    "7453": {
      "op": "SUB"
    },
    "7454": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7455": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7456": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7458": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7459": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7460": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7461": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7463": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7464": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7465": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7466": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7467": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7468": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7469": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7470": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7471": {
      "op": "DUP1"
    },
    "7472": {
      "op": "DUP4"
    },
    "7473": {
      "op": "SUB"
    },
    "7474": {
      "op": "SWAP1"
    },
    "7475": {
      "op": "SWAP2"
    },
    "7476": {
      "op": "ADD"
    },
    "7477": {
      "op": "DUP2"
    },
    "7478": {
      "op": "MSTORE"
    },
    "7479": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7481": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7482": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7483": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7484": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7485": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7486": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7487": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7489": {
      "op": "DUP2"
    },
    "7490": {
      "op": "ADD"
    },
    "7491": {
      "op": "DUP1"
    },
    "7492": {
      "op": "MLOAD"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "op": "AND"
    },
    "7502": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "op": "OR"
    },
    "7511": {
      "op": "SWAP1"
    },
    "7512": {
      "op": "MSTORE"
    },
    "7513": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C4B"
    },
    "7516": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7517": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7518": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7519": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F03"
    },
    "7522": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7523": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5347,
        5440
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "7524": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 67,
      "value": "0x4"
    },
    "7526": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7527": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "7528": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7530": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7531": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7532": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7541": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7542": {
      "offset": [
        1319,
        1361
      ],
      "op": "PUSH20",
      "path": "19",
      "value": "0x7CA5B0A2910B33E9759DC7DDB0413949071D7575"
    },
    "7563": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7564": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7565": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ADD",
      "path": "19"
    },
    "7566": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7567": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7568": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "7569": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7572": {
      "op": "DUP1"
    },
    "7573": {
      "op": "MLOAD"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7576": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "7579": {
      "op": "DUP4"
    },
    "7580": {
      "op": "CODECOPY"
    },
    "7581": {
      "op": "DUP2"
    },
    "7582": {
      "op": "MLOAD"
    },
    "7583": {
      "op": "SWAP2"
    },
    "7584": {
      "op": "MSTORE"
    },
    "7585": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "7587": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP5",
      "path": "19"
    },
    "7588": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ADD",
      "path": "19"
    },
    "7589": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "7590": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7597": {
      "op": "SHL"
    },
    "7598": {
      "op": "SUB"
    },
    "7599": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7600": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7601": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "AND",
      "path": "19"
    },
    "7602": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7603": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5420
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9CAE2C8"
    },
    "7608": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5420
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7609": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "7611": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7612": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP4",
      "path": "19"
    },
    "7613": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ADD",
      "path": "19"
    },
    "7614": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7615": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "7617": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "7618": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "7619": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7620": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP3",
      "path": "19"
    },
    "7621": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "7622": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "SUB",
      "path": "19"
    },
    "7623": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ADD",
      "path": "19"
    },
    "7624": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP2",
      "path": "19"
    },
    "7625": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "7627": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5402,
        5407
      ],
      "op": "DUP8",
      "path": "19"
    },
    "7628": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7629": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "7630": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7631": {
      "op": "DUP1"
    },
    "7632": {
      "op": "ISZERO"
    },
    "7633": {
      "op": "PUSH2",
      "value": "0x1DD9"
    },
    "7636": {
      "op": "JUMPI"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7639": {
      "op": "DUP1"
    },
    "7640": {
      "op": "REVERT"
    },
    "7641": {
      "op": "JUMPDEST"
    },
    "7642": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "POP",
      "path": "19"
    },
    "7643": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "GAS",
      "path": "19"
    },
    "7644": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "CALL",
      "path": "19"
    },
    "7645": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "7646": {
      "op": "DUP1"
    },
    "7647": {
      "op": "ISZERO"
    },
    "7648": {
      "op": "PUSH2",
      "value": "0x1DED"
    },
    "7651": {
      "op": "JUMPI"
    },
    "7652": {
      "op": "RETURNDATASIZE"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7655": {
      "op": "DUP1"
    },
    "7656": {
      "op": "RETURNDATACOPY"
    },
    "7657": {
      "op": "RETURNDATASIZE"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7660": {
      "op": "REVERT"
    },
    "7661": {
      "op": "JUMPDEST"
    },
    "7662": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "POP",
      "path": "19"
    },
    "7663": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "POP",
      "path": "19"
    },
    "7664": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "POP",
      "path": "19"
    },
    "7665": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "POP",
      "path": "19"
    },
    "7666": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "7668": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "7669": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "offset": [
        5390,
        5433
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7672": {
      "op": "DUP2"
    },
    "7673": {
      "op": "LT"
    },
    "7674": {
      "op": "ISZERO"
    },
    "7675": {
      "op": "PUSH2",
      "value": "0x1E03"
    },
    "7678": {
      "op": "JUMPI"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7681": {
      "op": "DUP1"
    },
    "7682": {
      "op": "REVERT"
    },
    "7683": {
      "op": "JUMPDEST"
    },
    "7684": {
      "op": "POP"
    },
    "7685": {
      "op": "POP"
    },
    "7686": {
      "fn": "StrategyCurveCompoundVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        5347,
        5440
      ],
      "op": "JUMP",
      "path": "19"
    },
    "7687": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7688": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7690": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 68
    },
    "7691": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7692": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7693": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7694": {
      "branch": 105,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7695": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E96"
    },
    "7698": {
      "branch": 105,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7699": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7701": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7702": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7708": {
      "op": "SHL"
    },
    "7709": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7710": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7711": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7713": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7714": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7715": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7716": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7718": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7719": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7720": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7721": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7722": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7723": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7724": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7725": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7726": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7727": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7728": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7729": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7730": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7732": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7733": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7734": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7735": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7736": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7737": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7738": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7740": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7741": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7742": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7743": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7744": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7747": {
      "op": "JUMPDEST"
    },
    "7748": {
      "op": "DUP4"
    },
    "7749": {
      "op": "DUP2"
    },
    "7750": {
      "op": "LT"
    },
    "7751": {
      "op": "ISZERO"
    },
    "7752": {
      "op": "PUSH2",
      "value": "0x1E5B"
    },
    "7755": {
      "op": "JUMPI"
    },
    "7756": {
      "op": "DUP2"
    },
    "7757": {
      "op": "DUP2"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "MLOAD"
    },
    "7760": {
      "op": "DUP4"
    },
    "7761": {
      "op": "DUP3"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "op": "MSTORE"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "PUSH2",
      "value": "0x1E43"
    },
    "7770": {
      "op": "JUMP"
    },
    "7771": {
      "op": "JUMPDEST"
    },
    "7772": {
      "op": "POP"
    },
    "7773": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7774": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7775": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7776": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7777": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7778": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7779": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7780": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7781": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7782": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7784": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7785": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7786": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7787": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E88"
    },
    "7790": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7791": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7792": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7793": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7794": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7795": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7796": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7798": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7799": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7801": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7802": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7805": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "7806": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7807": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "7808": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7809": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7810": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7811": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7813": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7814": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7815": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7816": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7817": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7818": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7819": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7820": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7821": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7822": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7824": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7825": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7826": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7827": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7828": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7829": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7830": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7831": {
      "op": "POP"
    },
    "7832": {
      "op": "POP"
    },
    "7833": {
      "op": "POP"
    },
    "7834": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7835": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "7836": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7837": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7838": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7839": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7841": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 69
    },
    "7842": {
      "branch": 106,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7843": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EED"
    },
    "7846": {
      "branch": 106,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7847": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7849": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7856": {
      "op": "SHL"
    },
    "7857": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7858": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7859": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7861": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7863": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7864": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7865": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7866": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7867": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7868": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7869": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7870": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7872": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7873": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7874": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7875": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7876": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7877": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7878": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7879": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7880": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7881": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7883": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7884": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7885": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7886": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7887": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7888": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7889": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7890": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7891": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7892": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7893": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7894": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7896": {
      "op": "DUP4"
    },
    "7897": {
      "op": "ISZERO"
    },
    "7898": {
      "op": "PUSH2",
      "value": "0x1E5B"
    },
    "7901": {
      "op": "JUMPI"
    },
    "7902": {
      "op": "DUP2"
    },
    "7903": {
      "op": "DUP2"
    },
    "7904": {
      "op": "ADD"
    },
    "7905": {
      "op": "MLOAD"
    },
    "7906": {
      "op": "DUP4"
    },
    "7907": {
      "op": "DUP3"
    },
    "7908": {
      "op": "ADD"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7912": {
      "op": "ADD"
    },
    "7913": {
      "op": "PUSH2",
      "value": "0x1E43"
    },
    "7916": {
      "op": "JUMP"
    },
    "7917": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7918": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "7919": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7921": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7922": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7923": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7924": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF9"
    },
    "7927": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7928": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7929": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7930": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "7931": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "7932": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7933": {
      "op": "POP"
    },
    "7934": {
      "op": "POP"
    },
    "7935": {
      "op": "POP"
    },
    "7936": {
      "op": "POP"
    },
    "7937": {
      "op": "POP"
    },
    "7938": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7939": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7940": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x1F15"
    },
    "7943": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "op": "SUB"
    },
    "7952": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "7953": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20BB"
    },
    "7956": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7957": {
      "branch": 98,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7958": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F66"
    },
    "7961": {
      "branch": 98,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7962": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7964": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7965": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7972": {
      "op": "SHL"
    },
    "7973": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7974": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7975": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7977": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7979": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7980": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7981": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7982": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7984": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7986": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7987": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7988": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7989": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "8022": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8024": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8025": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8026": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8027": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8028": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8029": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8030": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8031": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8032": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "8033": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8035": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "8036": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8037": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8038": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8039": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8041": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "8043": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8050": {
      "op": "SHL"
    },
    "8051": {
      "op": "SUB"
    },
    "8052": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "8053": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8054": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8056": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8057": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8058": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8059": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8060": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8061": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8062": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8064": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8065": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8066": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8067": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8068": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8069": {
      "op": "JUMPDEST"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8072": {
      "op": "DUP4"
    },
    "8073": {
      "op": "LT"
    },
    "8074": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8077": {
      "op": "JUMPI"
    },
    "8078": {
      "op": "DUP1"
    },
    "8079": {
      "op": "MLOAD"
    },
    "8080": {
      "op": "DUP3"
    },
    "8081": {
      "op": "MSTORE"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8084": {
      "op": "NOT"
    },
    "8085": {
      "op": "SWAP1"
    },
    "8086": {
      "op": "SWAP3"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "op": "SWAP2"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8091": {
      "op": "SWAP2"
    },
    "8092": {
      "op": "DUP3"
    },
    "8093": {
      "op": "ADD"
    },
    "8094": {
      "op": "SWAP2"
    },
    "8095": {
      "op": "ADD"
    },
    "8096": {
      "op": "PUSH2",
      "value": "0x1F85"
    },
    "8099": {
      "op": "JUMP"
    },
    "8100": {
      "op": "JUMPDEST"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8103": {
      "op": "DUP4"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8106": {
      "op": "SUB"
    },
    "8107": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8110": {
      "op": "EXP"
    },
    "8111": {
      "op": "SUB"
    },
    "8112": {
      "op": "DUP1"
    },
    "8113": {
      "op": "NOT"
    },
    "8114": {
      "op": "DUP3"
    },
    "8115": {
      "op": "MLOAD"
    },
    "8116": {
      "op": "AND"
    },
    "8117": {
      "op": "DUP2"
    },
    "8118": {
      "op": "DUP5"
    },
    "8119": {
      "op": "MLOAD"
    },
    "8120": {
      "op": "AND"
    },
    "8121": {
      "op": "DUP1"
    },
    "8122": {
      "op": "DUP3"
    },
    "8123": {
      "op": "OR"
    },
    "8124": {
      "op": "DUP6"
    },
    "8125": {
      "op": "MSTORE"
    },
    "8126": {
      "op": "POP"
    },
    "8127": {
      "op": "POP"
    },
    "8128": {
      "op": "POP"
    },
    "8129": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8130": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8131": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8132": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8133": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8134": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8135": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8136": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8137": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8138": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8140": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8142": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8143": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8144": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8145": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "8146": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8147": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8149": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8150": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "8151": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "8152": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8153": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8154": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8155": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8156": {
      "op": "DUP1"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8159": {
      "op": "DUP2"
    },
    "8160": {
      "op": "EQ"
    },
    "8161": {
      "op": "PUSH2",
      "value": "0x2006"
    },
    "8164": {
      "op": "JUMPI"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8167": {
      "op": "MLOAD"
    },
    "8168": {
      "op": "SWAP2"
    },
    "8169": {
      "op": "POP"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8172": {
      "op": "NOT"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8175": {
      "op": "RETURNDATASIZE"
    },
    "8176": {
      "op": "ADD"
    },
    "8177": {
      "op": "AND"
    },
    "8178": {
      "op": "DUP3"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8182": {
      "op": "MSTORE"
    },
    "8183": {
      "op": "RETURNDATASIZE"
    },
    "8184": {
      "op": "DUP3"
    },
    "8185": {
      "op": "MSTORE"
    },
    "8186": {
      "op": "RETURNDATASIZE"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8191": {
      "op": "DUP5"
    },
    "8192": {
      "op": "ADD"
    },
    "8193": {
      "op": "RETURNDATACOPY"
    },
    "8194": {
      "op": "PUSH2",
      "value": "0x200B"
    },
    "8197": {
      "op": "JUMP"
    },
    "8198": {
      "op": "JUMPDEST"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8201": {
      "op": "SWAP2"
    },
    "8202": {
      "op": "POP"
    },
    "8203": {
      "op": "JUMPDEST"
    },
    "8204": {
      "op": "POP"
    },
    "8205": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8206": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8207": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8208": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8209": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 71
    },
    "8210": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2062"
    },
    "8213": {
      "branch": 99,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8214": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8216": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8217": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8224": {
      "op": "SHL"
    },
    "8225": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8226": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8227": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8229": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8231": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8232": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8233": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8234": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8235": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8236": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8238": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8239": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8240": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8241": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8274": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8276": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8277": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8278": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8279": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8280": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8281": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8282": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8283": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8284": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8285": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8287": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8288": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8289": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8290": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8291": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8292": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8293": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8294": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8CE"
    },
    "8297": {
      "branch": 100,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8298": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 72
    },
    "8299": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8300": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8302": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8303": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8304": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8307": {
      "op": "DUP2"
    },
    "8308": {
      "op": "LT"
    },
    "8309": {
      "op": "ISZERO"
    },
    "8310": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "8313": {
      "op": "JUMPI"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8316": {
      "op": "DUP1"
    },
    "8317": {
      "op": "REVERT"
    },
    "8318": {
      "op": "JUMPDEST"
    },
    "8319": {
      "op": "POP"
    },
    "8320": {
      "branch": 101,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8321": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8CE"
    },
    "8324": {
      "branch": 101,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8325": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8327": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8334": {
      "op": "SHL"
    },
    "8335": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8336": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8337": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8339": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8340": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8341": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8342": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8344": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8345": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8346": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8347": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8348": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8349": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8350": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8352": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8353": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8354": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8356": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8357": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8358": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2139"
    },
    "8361": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8363": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8364": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8365": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8367": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8368": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8369": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8370": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8371": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8373": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8374": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8375": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8376": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8377": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8378": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8379": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8380": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8382": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8383": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8384": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8417": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 73
    },
    "8418": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8419": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8420": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8421": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8422": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8423": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20EF"
    },
    "8426": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8427": {
      "op": "POP"
    },
    "8428": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8429": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8430": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8431": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8432": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8433": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "op": "POP"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "op": "POP"
    },
    "8438": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "42a1708da8a8b25c2fbb86cafc39023e73005e2b",
  "source": "pragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/IToken.sol\";\nimport \"../../interfaces/yearn/IVoterProxy.sol\";\n\ncontract StrategyCurveCompoundVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n    address public constant uni = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> dai route\n\n    address public constant dai = address(0x6B175474E89094C44Da98b954EedeAC495271d0F);\n    address public constant curve = address(0xA2B47E3D5c44877cca798226B7B8118F9BFb7A56);\n\n    address public constant gauge = address(0x7ca5b0a2910B33e9759DC7dDB0413949071D7575);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    uint256 public keepCRV = 1500;\n    uint256 public performanceFee = 450;\n    uint256 public strategistReward = 50;\n    uint256 public withdrawalFee = 0;\n    uint256 public constant FEE_DENOMINATOR = 10000;\n\n    address public proxy;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n\n    uint256 public earned; // lifetime strategy earnings denominated in `want` token\n\n    event Harvested(uint256 wantEarned, uint256 lifetimeEarned);\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        controller = _controller;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveCompoundVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == governance || msg.sender == strategist, \"!authorized\");\n        strategist = _strategist;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setPerformanceFee(uint256 _performanceFee) external {\n        require(msg.sender == governance, \"!governance\");\n        performanceFee = _performanceFee;\n    }\n\n    function setStrategistReward(uint256 _strategistReward) external {\n        require(msg.sender == governance, \"!governance\");\n        strategistReward = _strategistReward;\n    }\n\n    function setProxy(address _proxy) external {\n        require(msg.sender == governance, \"!governance\");\n        proxy = _proxy;\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            IVoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(dai != address(_asset), \"dai\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(FEE_DENOMINATOR);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return IVoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        IVoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        IVoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(FEE_DENOMINATOR);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(uni, 0);\n            IERC20(crv).safeApprove(uni, _crv);\n\n            address[] memory path = new address[](3);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = dai;\n\n            Uni(uni).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _dai = IERC20(dai).balanceOf(address(this));\n        if (_dai > 0) {\n            IERC20(dai).safeApprove(curve, 0);\n            IERC20(dai).safeApprove(curve, _dai);\n            ICurveFi(curve).add_liquidity([_dai, 0, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(performanceFee).div(FEE_DENOMINATOR);\n            uint256 _reward = _want.mul(strategistReward).div(FEE_DENOMINATOR);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            IERC20(want).safeTransfer(strategist, _reward);\n            deposit();\n        }\n        IVoterProxy(proxy).lock();\n        earned = earned.add(_want);\n        emit Harvested(_want, earned);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return IVoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "571:7085:19:-;;;1483:4;1458:29;;1525:3;1493:35;;1568:2;1534:36;;1607:1;1576:32;;1941:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;1941:147:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1941:147:19;1991:10;:23;;2004:10;-1:-1:-1;;;;;;1991:23:19;;;;;;;;2024:10;:23;;;;;;;;;;2057:10;:24;;;;;-1:-1:-1;;;;;2057:24:19;;;;;;;;;571:7085;;;-1:-1:-1;571:7085:19;;",
  "sourcePath": "contracts/strategies/StrategyCurveCompoundVoterProxy.sol",
  "type": "contract"
}